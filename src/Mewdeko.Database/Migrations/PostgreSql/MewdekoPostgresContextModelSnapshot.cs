// <auto-generated />
using System;
using Mewdeko.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mewdeko.Database.Migrations.PostgreSql
{
    [DbContext(typeof(MewdekoPostgresContext))]
    partial class MewdekoPostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mewdeko.Database.Models.Afk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("WasTimed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("When")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("AFK");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiAltSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<int>("ActionDurationMinutes")
                        .HasColumnType("integer");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("MinAge")
                        .HasColumnType("text");

                    b.Property<decimal?>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("AntiAltSetting");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiRaidSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("PunishDuration")
                        .HasColumnType("integer");

                    b.Property<int>("Seconds")
                        .HasColumnType("integer");

                    b.Property<int>("UserThreshold")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("AntiRaidSetting");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiSpamIgnore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AntiSpamSettingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AntiSpamSettingId");

                    b.ToTable("AntiSpamIgnore");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiSpamSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("MessageThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("MuteTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("AntiSpamSetting");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AutoBanEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AutoBanWords");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AutoBanRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("AutoBanRoles");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AutoCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ChannelName")
                        .HasColumnType("text");

                    b.Property<string>("CommandText")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("text");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<decimal?>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("VoiceChannelName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AutoCommands");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AutoPublish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BlacklistedUsers")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("AutoPublish");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.BanTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("BanTemplates");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.BlacklistEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("ItemId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Blacklist");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ChatTriggers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowTarget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("ApplicationCommandDescription")
                        .HasColumnType("text");

                    b.Property<decimal>("ApplicationCommandId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ApplicationCommandName")
                        .HasColumnType("text");

                    b.Property<int>("ApplicationCommandType")
                        .HasColumnType("integer");

                    b.Property<bool>("AutoDeleteTrigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("ContainsAnywhere")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("CrosspostingChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("CrosspostingWebhookUrl")
                        .HasColumnType("text");

                    b.Property<string>("CustomPrefix")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("DmResponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("EphemeralResponse")
                        .HasColumnType("boolean");

                    b.Property<string>("GrantedRoles")
                        .HasColumnType("text");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsRegex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("NoRespond")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("OwnerOnly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("PrefixType")
                        .HasColumnType("integer");

                    b.Property<bool>("ReactToTrigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Reactions")
                        .HasColumnType("text");

                    b.Property<string>("RemovedRoles")
                        .HasColumnType("text");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.Property<int>("RoleGrantType")
                        .HasColumnType("integer");

                    b.Property<string>("Trigger")
                        .HasColumnType("text");

                    b.Property<decimal>("UseCount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("ValidTriggerTypes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ChatTriggers");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.CommandAlias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Mapping")
                        .HasColumnType("text");

                    b.Property<string>("Trigger")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("CommandAlias");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.CommandCooldown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CommandName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Seconds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("CommandCooldown");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.CommandStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsSlash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Module")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("");

                    b.Property<string>("NameOrId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Trigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("CommandStats");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Confessions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ConfessNumber")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Confession")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Confessions");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.DelMsgOnCmdChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("DelMsgOnCmdChannel");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.DiscordPermOverride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Command")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Perm")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "Command")
                        .IsUnique();

                    b.ToTable("DiscordPermOverrides");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.DiscordUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarId")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("BirthdayDisplayMode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .HasColumnType("text");

                    b.Property<bool>("IsClubAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDragon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastLevelUp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2017, 9, 21, 20, 53, 13, 305, DateTimeKind.Local));

                    b.Property<int>("NotifyOnLevelUp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<long?>("ProfileColor")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("text");

                    b.Property<int>("ProfilePrivacy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Pronouns")
                        .HasColumnType("text");

                    b.Property<string>("PronounsClearedReason")
                        .HasColumnType("text");

                    b.Property<bool>("PronounsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("StatsOptOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("SwitchFriendCode")
                        .HasColumnType("text");

                    b.Property<int>("TotalXp")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("ZodiacSign")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId");

                    b.HasIndex("TotalXp");

                    b.HasIndex("UserId");

                    b.ToTable("DiscordUser");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ExcludedItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("ItemId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<int>("XpSettingsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("XpSettingsId");

                    b.ToTable("ExcludedItem");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FeedSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("GuildConfigId", "Url");

                    b.ToTable("FeedSub");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterInvitesChannelIds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FilterInvitesChannelIds");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterLinksChannelId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FilterLinksChannelId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterWordsChannelIds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FilterWordsChannelIds");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilteredWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FilteredWord");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FollowedStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("FollowedStream");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Giveaways", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlacklistRoles")
                        .HasColumnType("text");

                    b.Property<string>("BlacklistUsers")
                        .HasColumnType("text");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Emote")
                        .HasColumnType("text");

                    b.Property<int>("Ended")
                        .HasColumnType("integer");

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RestrictTo")
                        .HasColumnType("text");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("When")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Winners")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Giveaways");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GlobalUserBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("GlobalUserBalance");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GroupName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId", "Number")
                        .IsUnique();

                    b.ToTable("GroupName");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GuildConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AcceptChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("AcceptMessage")
                        .HasColumnType("text");

                    b.Property<string>("AfkDel")
                        .HasColumnType("text");

                    b.Property<string>("AfkDisabledChannels")
                        .HasColumnType("text");

                    b.Property<int>("AfkLength")
                        .HasColumnType("integer");

                    b.Property<string>("AfkMessage")
                        .HasColumnType("text");

                    b.Property<int>("AfkTimeout")
                        .HasColumnType("integer");

                    b.Property<int>("AfkType")
                        .HasColumnType("integer");

                    b.Property<bool>("ArchiveOnAccept")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("ArchiveOnConsider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("ArchiveOnDeny")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("ArchiveOnImplement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("AutoAssignRoleId")
                        .HasColumnType("text");

                    b.Property<string>("AutoBotRoleIds")
                        .HasColumnType("text");

                    b.Property<bool>("AutoDeleteByeMessages")
                        .HasColumnType("boolean");

                    b.Property<int>("AutoDeleteByeMessagesTimer")
                        .HasColumnType("integer");

                    b.Property<bool>("AutoDeleteGreetMessages")
                        .HasColumnType("boolean");

                    b.Property<int>("AutoDeleteGreetMessagesTimer")
                        .HasColumnType("integer");

                    b.Property<bool>("AutoDeleteSelfAssignedRoleMessages")
                        .HasColumnType("boolean");

                    b.Property<string>("BoostMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("BoostMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("BoostMessageDeleteAfter")
                        .HasColumnType("integer");

                    b.Property<int>("ButtonRepostThreshold")
                        .HasColumnType("integer");

                    b.Property<decimal>("ByeMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ChannelByeMessageText")
                        .HasColumnType("text");

                    b.Property<string>("ChannelGreetMessageText")
                        .HasColumnType("text");

                    b.Property<decimal>("CleverbotChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("CommandLogChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ConfessionBlacklist")
                        .HasColumnType("text");

                    b.Property<decimal>("ConfessionChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ConfessionLogChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ConsiderChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ConsiderMessage")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyEmoji")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("DeleteMessageOnCommand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("DenyChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("DenyMessage")
                        .HasColumnType("text");

                    b.Property<string>("DmGreetMessageText")
                        .HasColumnType("text");

                    b.Property<bool>("DmOnGiveawayWin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("Emote1Style")
                        .HasColumnType("integer");

                    b.Property<int>("Emote2Style")
                        .HasColumnType("integer");

                    b.Property<int>("Emote3Style")
                        .HasColumnType("integer");

                    b.Property<int>("Emote4Style")
                        .HasColumnType("integer");

                    b.Property<int>("Emote5Style")
                        .HasColumnType("integer");

                    b.Property<int>("EmoteMode")
                        .HasColumnType("integer");

                    b.Property<bool>("ExclusiveSelfAssignedRoles")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterInvites")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterLinks")
                        .HasColumnType("boolean");

                    b.Property<bool>("FilterWords")
                        .HasColumnType("boolean");

                    b.Property<bool>("GBAction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("GBEnabled")
                        .HasColumnType("integer");

                    b.Property<string>("GEndMessage")
                        .HasColumnType("text");

                    b.Property<string>("GRolesBlacklist")
                        .HasColumnType("text");

                    b.Property<string>("GStartMessage")
                        .HasColumnType("text");

                    b.Property<string>("GUsersBlacklist")
                        .HasColumnType("text");

                    b.Property<string>("GWinMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("GameMasterRole")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("GameVoiceChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("GiveawayBanner")
                        .HasColumnType("text");

                    b.Property<string>("GiveawayEmbedColor")
                        .HasColumnType("text");

                    b.Property<string>("GiveawayEmote")
                        .HasColumnType("text");

                    b.Property<string>("GiveawayEndMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("GiveawayPingRole")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("GiveawayWinEmbedColor")
                        .HasColumnType("text");

                    b.Property<string>("GreetHook")
                        .HasColumnType("text");

                    b.Property<decimal>("GreetMessageChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ImplementChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ImplementMessage")
                        .HasColumnType("text");

                    b.Property<long>("JoinGraphColor")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Joins")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("LeaveGraphColor")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaveHook")
                        .HasColumnType("text");

                    b.Property<decimal>("Leaves")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<int?>("LogSettingId")
                        .HasColumnType("integer");

                    b.Property<int>("MaxSuggestLength")
                        .HasColumnType("integer");

                    b.Property<decimal>("MemberRole")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("MinSuggestLength")
                        .HasColumnType("integer");

                    b.Property<decimal>("MiniWarnlogChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("MultiGreetType")
                        .HasColumnType("integer");

                    b.Property<string>("MuteRoleName")
                        .HasColumnType("text");

                    b.Property<bool>("NotifyStreamOffline")
                        .HasColumnType("boolean");

                    b.Property<string>("PermissionRole")
                        .HasColumnType("text");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<int>("PreviewLinks")
                        .HasColumnType("integer");

                    b.Property<decimal>("ReactChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("RepostThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("RewardAmount")
                        .HasColumnType("integer");

                    b.Property<int>("RewardTimeoutSeconds")
                        .HasColumnType("integer");

                    b.Property<bool>("SendBoostMessage")
                        .HasColumnType("boolean");

                    b.Property<bool>("SendChannelByeMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("SendChannelGreetMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("SendDmGreetMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("StaffRole")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Star2")
                        .HasColumnType("text");

                    b.Property<bool>("StarboardAllowBots")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("StarboardChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("StarboardCheckChannels")
                        .HasColumnType("text");

                    b.Property<bool>("StarboardRemoveOnBelowThreshold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<bool>("StarboardRemoveOnDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("StarboardRemoveOnReactionsClear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<bool>("StatsOptOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("SuggestButtonChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SuggestButtonColor")
                        .HasColumnType("integer");

                    b.Property<string>("SuggestButtonEmote")
                        .HasColumnType("text");

                    b.Property<string>("SuggestButtonMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("SuggestButtonMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("SuggestButtonName")
                        .HasColumnType("text");

                    b.Property<int>("SuggestButtonRepostThreshold")
                        .HasColumnType("integer");

                    b.Property<int>("SuggestCommandsType")
                        .HasColumnType("integer");

                    b.Property<string>("SuggestEmotes")
                        .HasColumnType("text");

                    b.Property<string>("SuggestMessage")
                        .HasColumnType("text");

                    b.Property<int>("SuggestionThreadType")
                        .HasColumnType("integer");

                    b.Property<string>("TOpenMessage")
                        .HasColumnType("text");

                    b.Property<decimal>("TicketCategory")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("TicketChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("text");

                    b.Property<bool>("UseStarboardBlacklist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<bool>("VerboseErrors")
                        .HasColumnType("boolean");

                    b.Property<bool>("VerbosePermissions")
                        .HasColumnType("boolean");

                    b.Property<string>("VoteEmbed")
                        .HasColumnType("text");

                    b.Property<decimal>("VotesChannel")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("VotesPassword")
                        .HasColumnType("text");

                    b.Property<int>("WarnExpireAction")
                        .HasColumnType("integer");

                    b.Property<int>("WarnExpireHours")
                        .HasColumnType("integer");

                    b.Property<string>("WarnMessage")
                        .HasColumnType("text");

                    b.Property<bool>("WarningsInitialized")
                        .HasColumnType("boolean");

                    b.Property<decimal>("WarnlogChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("XpImgUrl")
                        .HasColumnType("text");

                    b.Property<int>("XpTxtRate")
                        .HasColumnType("integer");

                    b.Property<int>("XpTxtTimeout")
                        .HasColumnType("integer");

                    b.Property<int>("XpVoiceRate")
                        .HasColumnType("integer");

                    b.Property<int>("XpVoiceTimeout")
                        .HasColumnType("integer");

                    b.Property<int>("fwarn")
                        .HasColumnType("integer");

                    b.Property<int>("invwarn")
                        .HasColumnType("integer");

                    b.Property<int>("removeroles")
                        .HasColumnType("integer");

                    b.Property<bool>("snipeset")
                        .HasColumnType("boolean");

                    b.Property<decimal>("sugchan")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("sugnum")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.HasIndex("LogSettingId");

                    b.HasIndex("WarnExpireHours");

                    b.ToTable("GuildConfigs");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GuildUserBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("GuildUserBalance");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.HighlightSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("HighlightsOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IgnoredChannels")
                        .HasColumnType("text");

                    b.Property<string>("IgnoredUsers")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("HighlightSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Highlights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Highlights");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.IgnoredLogChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LogSettingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogSettingId");

                    b.ToTable("IgnoredLogChannels");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.JoinLeaveLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IsJoin")
                        .HasColumnType("boolean");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("JoinLeaveLogs");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AvatarUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("ChannelCreated")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ChannelCreatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("ChannelDestroyed")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ChannelDestroyedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("ChannelUpdated")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("ChannelUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("EventCreatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("IsLogging")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("LogOtherId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("LogUserPresence")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("LogUserPresenceId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("LogVoicePresence")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("LogVoicePresenceId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("LogVoicePresenceTTSId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("MessageDeleted")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MessageDeletedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("MessageUpdated")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("MessageUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("NicknameUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("RoleCreatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("RoleDeletedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("RoleUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ServerUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ThreadCreatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ThreadDeletedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("ThreadUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("UserBanned")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserBannedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("UserJoined")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserJoinedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("UserLeft")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserLeftId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserMutedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserPresenceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserRoleAddedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserRoleRemovedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("UserUnbanned")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserUnbannedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<long>("UserUpdated")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("UserUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UsernameUpdatedId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoicePresenceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("LogSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MultiGreet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeleteTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<bool>("Disabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("GreetBots")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WebhookUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MultiGreets");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MusicPlayerSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AutoDisconnect")
                        .HasColumnType("integer");

                    b.Property<int>("AutoPlay")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("MusicChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("PlayerRepeat")
                        .HasColumnType("integer");

                    b.Property<int>("Volume")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(100);

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("MusicPlayerSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MusicPlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<decimal>("AuthorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MusicPlaylists");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MutedUserId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("roles")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("MutedUserId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.NsfwBlacklitedTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("NsfwBlacklitedTag");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.OwnerOnly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyEmote")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GptTokensUsed")
                        .HasColumnType("integer");

                    b.Property<string>("Owners")
                        .HasColumnType("text");

                    b.Property<int>("RewardAmount")
                        .HasColumnType("integer");

                    b.Property<int>("RewardTimeoutSeconds")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OwnerOnly");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("NextId")
                        .HasColumnType("integer");

                    b.Property<int>("PrimaryTarget")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrimaryTargetId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SecondaryTarget")
                        .HasColumnType("integer");

                    b.Property<string>("SecondaryTargetName")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("NextId")
                        .IsUnique();

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Permissionv2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCustomCommand")
                        .HasColumnType("boolean");

                    b.Property<int>("PrimaryTarget")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrimaryTargetId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SecondaryTarget")
                        .HasColumnType("integer");

                    b.Property<string>("SecondaryTargetName")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("Permissionv2");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MusicPlaylistId")
                        .HasColumnType("integer");

                    b.Property<string>("Provider")
                        .HasColumnType("text");

                    b.Property<int>("ProviderType")
                        .HasColumnType("integer");

                    b.Property<string>("Query")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Uri")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MusicPlaylistId");

                    b.ToTable("PlaylistSong");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("PollType")
                        .HasColumnType("integer");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("Poll");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PollAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int?>("PollId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollAnswer");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PollVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PollId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("VoteIndex")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollVote");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PublishUserBlacklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("PublishUserBlacklist");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PublishWordBlacklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Word")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PublishWordBlacklist");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AuthorId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("UseCount")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("Keyword");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ReactionRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmoteName")
                        .HasColumnType("text");

                    b.Property<int>("ReactionRoleMessageId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("ReactionRoleMessageId");

                    b.ToTable("ReactionRole");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ReactionRoleMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Exclusive")
                        .HasColumnType("boolean");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("ReactionRoleMessage");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("boolean");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<decimal>("ServerId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("When")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("When");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Repeater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Interval")
                        .HasColumnType("text");

                    b.Property<decimal?>("LastMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<bool>("NoRedundant")
                        .HasColumnType("boolean");

                    b.Property<string>("StartTimeOfDay")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("GuildRepeater");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.RoleConnectionAuthStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Scopes")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("AuthCodes");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.RoleGreet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DeleteTime")
                        .HasColumnType("integer");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("GreetBots")
                        .HasColumnType("boolean");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("WebhookUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoleGreets");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.RoleStateSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ClearOnBan")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeniedRoles")
                        .HasColumnType("text");

                    b.Property<string>("DeniedUsers")
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("IgnoreBots")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("RoleStateSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.RotatingPlayingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RotatingStatus");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.SelfAssignedRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Group")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("LevelRequirement")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "RoleId")
                        .IsUnique();

                    b.ToTable("SelfAssignableRoles");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ServerRecoveryStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("RecoveryKey")
                        .HasColumnType("text");

                    b.Property<string>("TwoFactorKey")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServerRecoveryStore");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StarboardPosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("PostId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Starboard");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StatusRolesTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<bool>("ReaddRemoved")
                        .HasColumnType("boolean");

                    b.Property<bool>("RemoveAdded")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<decimal>("StatusChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("StatusEmbed")
                        .HasColumnType("text");

                    b.Property<string>("ToAdd")
                        .HasColumnType("text");

                    b.Property<string>("ToRemove")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StatusRoles");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleBlacklistedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StreamRoleSettingsId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StreamRoleSettingsId");

                    b.ToTable("StreamRoleBlacklistedUser");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AddRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<decimal>("FromRoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("Keyword")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("StreamRoleSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleWhitelistedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StreamRoleSettingsId")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StreamRoleSettingsId");

                    b.ToTable("StreamRoleWhitelistedUser");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.SuggestThreads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("ThreadChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("SuggestThreads");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.SuggestVotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EmotePicked")
                        .HasColumnType("integer");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("SuggestVotes");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.SuggestionsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentState")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EmoteCount1")
                        .HasColumnType("integer");

                    b.Property<int>("EmoteCount2")
                        .HasColumnType("integer");

                    b.Property<int>("EmoteCount3")
                        .HasColumnType("integer");

                    b.Property<int>("EmoteCount4")
                        .HasColumnType("integer");

                    b.Property<int>("EmoteCount5")
                        .HasColumnType("integer");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("MessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("StateChangeCount")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("StateChangeMessageId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("StateChangeUser")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Suggestion")
                        .HasColumnType("text");

                    b.Property<decimal>("SuggestionId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AwardedColor")
                        .HasColumnType("text");

                    b.Property<int>("AwardedFontSize")
                        .HasColumnType("integer");

                    b.Property<int>("AwardedX")
                        .HasColumnType("integer");

                    b.Property<int>("AwardedY")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("OutputSizeX")
                        .HasColumnType("integer");

                    b.Property<int>("OutputSizeY")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowAwarded")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowTimeOnLevel")
                        .HasColumnType("boolean");

                    b.Property<int?>("TemplateBarId")
                        .HasColumnType("integer");

                    b.Property<int?>("TemplateClubId")
                        .HasColumnType("integer");

                    b.Property<int?>("TemplateGuildId")
                        .HasColumnType("integer");

                    b.Property<int?>("TemplateUserId")
                        .HasColumnType("integer");

                    b.Property<string>("TimeOnLevelColor")
                        .HasColumnType("text");

                    b.Property<int>("TimeOnLevelFontSize")
                        .HasColumnType("integer");

                    b.Property<string>("TimeOnLevelFormat")
                        .HasColumnType("text");

                    b.Property<int>("TimeOnLevelX")
                        .HasColumnType("integer");

                    b.Property<int>("TimeOnLevelY")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TemplateBarId");

                    b.HasIndex("TemplateClubId");

                    b.HasIndex("TemplateGuildId");

                    b.HasIndex("TemplateUserId");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.TemplateBar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BarColor")
                        .HasColumnType("text");

                    b.Property<int>("BarDirection")
                        .HasColumnType("integer");

                    b.Property<int>("BarLength")
                        .HasColumnType("integer");

                    b.Property<int>("BarPointAx")
                        .HasColumnType("integer");

                    b.Property<int>("BarPointAy")
                        .HasColumnType("integer");

                    b.Property<int>("BarPointBx")
                        .HasColumnType("integer");

                    b.Property<int>("BarPointBy")
                        .HasColumnType("integer");

                    b.Property<byte>("BarTransparency")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("ShowBar")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("TemplateBar");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.TemplateClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubIconSizeX")
                        .HasColumnType("integer");

                    b.Property<int>("ClubIconSizeY")
                        .HasColumnType("integer");

                    b.Property<int>("ClubIconX")
                        .HasColumnType("integer");

                    b.Property<int>("ClubIconY")
                        .HasColumnType("integer");

                    b.Property<string>("ClubNameColor")
                        .HasColumnType("text");

                    b.Property<int>("ClubNameFontSize")
                        .HasColumnType("integer");

                    b.Property<int>("ClubNameX")
                        .HasColumnType("integer");

                    b.Property<int>("ClubNameY")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("ShowClubIcon")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowClubName")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("TemplateClub");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.TemplateGuild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GuildLevelColor")
                        .HasColumnType("text");

                    b.Property<int>("GuildLevelFontSize")
                        .HasColumnType("integer");

                    b.Property<int>("GuildLevelX")
                        .HasColumnType("integer");

                    b.Property<int>("GuildLevelY")
                        .HasColumnType("integer");

                    b.Property<string>("GuildRankColor")
                        .HasColumnType("text");

                    b.Property<int>("GuildRankFontSize")
                        .HasColumnType("integer");

                    b.Property<int>("GuildRankX")
                        .HasColumnType("integer");

                    b.Property<int>("GuildRankY")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowGuildLevel")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowGuildRank")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("TemplateGuild");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.TemplateUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FontSize")
                        .HasColumnType("integer");

                    b.Property<int>("IconSizeX")
                        .HasColumnType("integer");

                    b.Property<int>("IconSizeY")
                        .HasColumnType("integer");

                    b.Property<int>("IconX")
                        .HasColumnType("integer");

                    b.Property<int>("IconY")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowIcon")
                        .HasColumnType("boolean");

                    b.Property<bool>("ShowText")
                        .HasColumnType("boolean");

                    b.Property<string>("TextColor")
                        .HasColumnType("text");

                    b.Property<int>("TextX")
                        .HasColumnType("integer");

                    b.Property<int>("TextY")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TemplateUser");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.TransactionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnbanTimer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UnbanAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("UnbanTimer");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnmuteTimer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UnmuteAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("UnmuteTimer");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnroleTimer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("UnbanAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("UnroleTimer");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UserRoleStates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("SavedRoles")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoleStates");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UserXpStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AwardedXp")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("LastLevelUp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2017, 9, 21, 20, 53, 13, 307, DateTimeKind.Local));

                    b.Property<int>("NotifyOnLevelUp")
                        .HasColumnType("integer");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Xp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AwardedXp");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.HasIndex("Xp");

                    b.HasIndex("UserId", "GuildId")
                        .IsUnique();

                    b.ToTable("UserXpStats");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.VcRoleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("VoiceChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("VcRoleInfo");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.VoteRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Timer")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("VoteRoles");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Votes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BotId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Warning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Forgiven")
                        .HasColumnType("boolean");

                    b.Property<string>("ForgivenBy")
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Moderator")
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("DateAdded");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId");

                    b.ToTable("Warnings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Warning2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Forgiven")
                        .HasColumnType("boolean");

                    b.Property<string>("ForgivenBy")
                        .HasColumnType("text");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Moderator")
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Warnings2");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.WarningPunishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Punishment")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("WarningPunishment");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.WarningPunishment2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<int>("Punishment")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId");

                    b.ToTable("WarningPunishment2");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpCurrencyReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("XpSettingsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("XpSettingsId");

                    b.ToTable("XpCurrencyReward");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpRoleReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoleId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("XpSettingsId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("XpSettingsId", "Level")
                        .IsUnique();

                    b.ToTable("XpRoleReward");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("integer");

                    b.Property<string>("NotifyMessage")
                        .HasColumnType("text");

                    b.Property<bool>("ServerExcluded")
                        .HasColumnType("boolean");

                    b.Property<bool>("XpRoleRewardExclusive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("GuildConfigId")
                        .IsUnique();

                    b.ToTable("XpSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiAltSetting", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithOne("AntiAltSetting")
                        .HasForeignKey("Mewdeko.Database.Models.AntiAltSetting", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiRaidSetting", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithOne("AntiRaidSetting")
                        .HasForeignKey("Mewdeko.Database.Models.AntiRaidSetting", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiSpamIgnore", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.AntiSpamSetting", null)
                        .WithMany("IgnoredChannels")
                        .HasForeignKey("AntiSpamSettingId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiSpamSetting", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithOne("AntiSpamSetting")
                        .HasForeignKey("Mewdeko.Database.Models.AntiSpamSetting", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.CommandAlias", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("CommandAliases")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.CommandCooldown", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("CommandCooldowns")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.DelMsgOnCmdChannel", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("DelMsgOnCmdChannels")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ExcludedItem", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.XpSettings", null)
                        .WithMany("ExclusionList")
                        .HasForeignKey("XpSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FeedSub", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FeedSubs")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterInvitesChannelIds", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FilterInvitesChannelIds")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterLinksChannelId", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FilterLinksChannelIds")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilterWordsChannelIds", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FilterWordsChannelIds")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FilteredWord", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FilteredWords")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.FollowedStream", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("FollowedStreams")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GroupName", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("SelfAssignableRoleGroupNames")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GuildConfig", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.LogSetting", "LogSetting")
                        .WithMany()
                        .HasForeignKey("LogSettingId");

                    b.Navigation("LogSetting");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.IgnoredLogChannel", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.LogSetting", null)
                        .WithMany("IgnoredChannels")
                        .HasForeignKey("LogSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MutedUserId", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("MutedUsers")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.NsfwBlacklitedTag", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("NsfwBlacklistedTags")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Permission", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.Permission", "Next")
                        .WithOne("Previous")
                        .HasForeignKey("Mewdeko.Database.Models.Permission", "NextId");

                    b.Navigation("Next");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Permissionv2", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("Permissions")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PlaylistSong", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.MusicPlaylist", null)
                        .WithMany("Songs")
                        .HasForeignKey("MusicPlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PollAnswer", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.Poll", null)
                        .WithMany("Answers")
                        .HasForeignKey("PollId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.PollVote", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.Poll", null)
                        .WithMany("Votes")
                        .HasForeignKey("PollId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ReactionRole", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.ReactionRoleMessage", null)
                        .WithMany("ReactionRoles")
                        .HasForeignKey("ReactionRoleMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ReactionRoleMessage", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("ReactionRoleMessages")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Repeater", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("GuildRepeaters")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleBlacklistedUser", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.StreamRoleSettings", null)
                        .WithMany("Blacklist")
                        .HasForeignKey("StreamRoleSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleSettings", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithOne("StreamRole")
                        .HasForeignKey("Mewdeko.Database.Models.StreamRoleSettings", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleWhitelistedUser", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.StreamRoleSettings", null)
                        .WithMany("Whitelist")
                        .HasForeignKey("StreamRoleSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Template", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.TemplateBar", "TemplateBar")
                        .WithMany()
                        .HasForeignKey("TemplateBarId");

                    b.HasOne("Mewdeko.Database.Models.TemplateClub", "TemplateClub")
                        .WithMany()
                        .HasForeignKey("TemplateClubId");

                    b.HasOne("Mewdeko.Database.Models.TemplateGuild", "TemplateGuild")
                        .WithMany()
                        .HasForeignKey("TemplateGuildId");

                    b.HasOne("Mewdeko.Database.Models.TemplateUser", "TemplateUser")
                        .WithMany()
                        .HasForeignKey("TemplateUserId");

                    b.Navigation("TemplateBar");

                    b.Navigation("TemplateClub");

                    b.Navigation("TemplateGuild");

                    b.Navigation("TemplateUser");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnbanTimer", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("UnbanTimer")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnmuteTimer", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("UnmuteTimers")
                        .HasForeignKey("GuildConfigId");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.UnroleTimer", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("UnroleTimer")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.VcRoleInfo", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("VcRoleInfos")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.WarningPunishment", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("WarnPunishments")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.WarningPunishment2", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithMany("WarnPunishments2")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpCurrencyReward", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.XpSettings", "XpSettings")
                        .WithMany("CurrencyRewards")
                        .HasForeignKey("XpSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("XpSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpRoleReward", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.XpSettings", "XpSettings")
                        .WithMany("RoleRewards")
                        .HasForeignKey("XpSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("XpSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpSettings", b =>
                {
                    b.HasOne("Mewdeko.Database.Models.GuildConfig", null)
                        .WithOne("XpSettings")
                        .HasForeignKey("Mewdeko.Database.Models.XpSettings", "GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mewdeko.Database.Models.AntiSpamSetting", b =>
                {
                    b.Navigation("IgnoredChannels");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.GuildConfig", b =>
                {
                    b.Navigation("AntiAltSetting");

                    b.Navigation("AntiRaidSetting");

                    b.Navigation("AntiSpamSetting");

                    b.Navigation("CommandAliases");

                    b.Navigation("CommandCooldowns");

                    b.Navigation("DelMsgOnCmdChannels");

                    b.Navigation("FeedSubs");

                    b.Navigation("FilterInvitesChannelIds");

                    b.Navigation("FilterLinksChannelIds");

                    b.Navigation("FilterWordsChannelIds");

                    b.Navigation("FilteredWords");

                    b.Navigation("FollowedStreams");

                    b.Navigation("GuildRepeaters");

                    b.Navigation("MutedUsers");

                    b.Navigation("NsfwBlacklistedTags");

                    b.Navigation("Permissions");

                    b.Navigation("ReactionRoleMessages");

                    b.Navigation("SelfAssignableRoleGroupNames");

                    b.Navigation("StreamRole");

                    b.Navigation("UnbanTimer");

                    b.Navigation("UnmuteTimers");

                    b.Navigation("UnroleTimer");

                    b.Navigation("VcRoleInfos");

                    b.Navigation("WarnPunishments");

                    b.Navigation("WarnPunishments2");

                    b.Navigation("XpSettings");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.LogSetting", b =>
                {
                    b.Navigation("IgnoredChannels");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.MusicPlaylist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Permission", b =>
                {
                    b.Navigation("Previous");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.Poll", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.ReactionRoleMessage", b =>
                {
                    b.Navigation("ReactionRoles");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.StreamRoleSettings", b =>
                {
                    b.Navigation("Blacklist");

                    b.Navigation("Whitelist");
                });

            modelBuilder.Entity("Mewdeko.Database.Models.XpSettings", b =>
                {
                    b.Navigation("CurrencyRewards");

                    b.Navigation("ExclusionList");

                    b.Navigation("RoleRewards");
                });
#pragma warning restore 612, 618
        }
    }
}
