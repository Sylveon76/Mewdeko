### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.OptionsParser
  commentId: T:Mewdeko.Common.OptionsParser
  id: OptionsParser
  parent: Mewdeko.Common
  children:
  - Mewdeko.Common.OptionsParser.ParseFrom``1(System.String[])
  - Mewdeko.Common.OptionsParser.ParseFrom``1(``0,System.String[])
  langs:
  - csharp
  - vb
  name: OptionsParser
  nameWithType: OptionsParser
  fullName: Mewdeko.Common.OptionsParser
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/OptionsParser.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OptionsParser
    path: src/Mewdeko/Common/OptionsParser.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: A static class responsible for parsing command-line options.
  example: []
  syntax:
    content: public static class OptionsParser
    content.vb: Public Module OptionsParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Common.OptionsParser.ParseFrom``1(System.String[])
  commentId: M:Mewdeko.Common.OptionsParser.ParseFrom``1(System.String[])
  id: ParseFrom``1(System.String[])
  parent: Mewdeko.Common.OptionsParser
  langs:
  - csharp
  - vb
  name: ParseFrom<T>(string[])
  nameWithType: OptionsParser.ParseFrom<T>(string[])
  fullName: Mewdeko.Common.OptionsParser.ParseFrom<T>(string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/OptionsParser.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ParseFrom
    path: src/Mewdeko/Common/OptionsParser.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Parses command-line arguments into an instance of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static T ParseFrom<T>(string[] args) where T : IMewdekoCommandOptions, new()'
    parameters:
    - id: args
      type: System.String[]
      description: The command-line arguments to parse.
    typeParameters:
    - id: T
      description: The type of options to parse.
    return:
      type: '{T}'
      description: An instance of type <code class="typeparamref">T</code> representing the parsed options.
    content.vb: Public Shared Function ParseFrom(Of T As {IMewdekoCommandOptions, New})(args As String()) As T
  overload: Mewdeko.Common.OptionsParser.ParseFrom*
  nameWithType.vb: OptionsParser.ParseFrom(Of T)(String())
  fullName.vb: Mewdeko.Common.OptionsParser.ParseFrom(Of T)(String())
  name.vb: ParseFrom(Of T)(String())
- uid: Mewdeko.Common.OptionsParser.ParseFrom``1(``0,System.String[])
  commentId: M:Mewdeko.Common.OptionsParser.ParseFrom``1(``0,System.String[])
  id: ParseFrom``1(``0,System.String[])
  parent: Mewdeko.Common.OptionsParser
  langs:
  - csharp
  - vb
  name: ParseFrom<T>(T, string[])
  nameWithType: OptionsParser.ParseFrom<T>(T, string[])
  fullName: Mewdeko.Common.OptionsParser.ParseFrom<T>(T, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/OptionsParser.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ParseFrom
    path: src/Mewdeko/Common/OptionsParser.cs
    startLine: 28
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Parses command-line arguments into the provided <code class="paramref">options</code> instance.
  example: []
  syntax:
    content: 'public static (T, bool) ParseFrom<T>(T options, string[] args) where T : IMewdekoCommandOptions'
    parameters:
    - id: options
      type: '{T}'
      description: The instance of options to populate.
    - id: args
      type: System.String[]
      description: The command-line arguments to parse.
    typeParameters:
    - id: T
      description: The type of options to parse.
    return:
      type: System.ValueTuple{{T},System.Boolean}
      description: >-
        A tuple containing the populated <code class="paramref">options</code> instance and a boolean indicating

        whether the parsing was successful.
    content.vb: Public Shared Function ParseFrom(Of T As IMewdekoCommandOptions)(options As T, args As String()) As (T, Boolean)
  overload: Mewdeko.Common.OptionsParser.ParseFrom*
  nameWithType.vb: OptionsParser.ParseFrom(Of T)(T, String())
  fullName.vb: Mewdeko.Common.OptionsParser.ParseFrom(Of T)(T, String())
  name.vb: ParseFrom(Of T)(T, String())
references:
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Common.OptionsParser.ParseFrom*
  commentId: Overload:Mewdeko.Common.OptionsParser.ParseFrom
  href: Mewdeko.Common.OptionsParser.html#Mewdeko_Common_OptionsParser_ParseFrom__1_System_String___
  name: ParseFrom
  nameWithType: OptionsParser.ParseFrom
  fullName: Mewdeko.Common.OptionsParser.ParseFrom
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ValueTuple{{T},System.Boolean}
  commentId: T:System.ValueTuple{``0,System.Boolean}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: (T, bool)
  nameWithType: (T, bool)
  fullName: (T, bool)
  nameWithType.vb: (T, Boolean)
  fullName.vb: (T, Boolean)
  name.vb: (T, Boolean)
  spec.csharp:
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
