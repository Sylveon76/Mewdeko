### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Permissions.SlashPermissions
  commentId: T:Mewdeko.Modules.Permissions.SlashPermissions
  id: SlashPermissions
  parent: Mewdeko.Modules.Permissions
  children:
  - Mewdeko.Modules.Permissions.SlashPermissions.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,Mewdeko.Services.GuildSettingsService,Mewdeko.Modules.Administration.Services.DiscordPermOverrideService,Discord.Commands.CommandService)
  - Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  - Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  - Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IRole[])
  - Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IUser[])
  - Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  - Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  - Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IUser)
  - Mewdeko.Modules.Permissions.SlashPermissions.CatCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.CatMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  - Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner(System.String,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat(System.String,System.Boolean,System.Boolean,System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn(System.String,System.Boolean,System.Boolean,System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol(System.String,System.Boolean,System.Boolean,System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr(System.String,System.Boolean,System.Boolean,System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.ListPerms
  - Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.PermRole(Discord.IRole)
  - Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms
  - Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu(System.String,System.String,System.String,System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  - Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  - Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  - Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  - Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo(System.String,System.Int32,System.String[])
  - Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu(System.String)
  - Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  - Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  - Mewdeko.Modules.Permissions.SlashPermissions.Verbose(System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash})
  langs:
  - csharp
  - vb
  name: SlashPermissions
  nameWithType: SlashPermissions
  fullName: Mewdeko.Modules.Permissions.SlashPermissions
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SlashPermissions
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: The permissions slash commands.
  example: []
  syntax:
    content: >-
      [Group("permissions", "Change or view command permissions.")]

      public class SlashPermissions : MewdekoSlashModuleBase<PermissionService>, IInteractionModuleBase
    content.vb: >-
      <Group("permissions", "Change or view command permissions.")>

      Public Class SlashPermissions Inherits MewdekoSlashModuleBase(Of PermissionService) Implements IInteractionModuleBase
  inheritance:
  - System.Object
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  - Discord.Interactions.InteractionModuleBase
  - Mewdeko.Common.MewdekoSlashCommandModule
  - Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}
  implements:
  - Discord.Interactions.IInteractionModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}.Service
  - Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  - Mewdeko.Common.MewdekoSlashCommandModule.Strings
  - Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  - Mewdeko.Common.MewdekoSlashCommandModule.Localization
  - Mewdeko.Common.MewdekoSlashCommandModule.ctx
  - Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Permissions.SlashPermissions.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  attributes:
  - type: Discord.Interactions.GroupAttribute
    ctor: Discord.Interactions.GroupAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: permissions
    - type: System.String
      value: Change or view command permissions.
- uid: Mewdeko.Modules.Permissions.SlashPermissions.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,Mewdeko.Services.GuildSettingsService,Mewdeko.Modules.Administration.Services.DiscordPermOverrideService,Discord.Commands.CommandService)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,Mewdeko.Services.GuildSettingsService,Mewdeko.Modules.Administration.Services.DiscordPermOverrideService,Discord.Commands.CommandService)
  id: '#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,Mewdeko.Services.GuildSettingsService,Mewdeko.Modules.Administration.Services.DiscordPermOverrideService,Discord.Commands.CommandService)'
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: SlashPermissions(DbService, InteractiveService, GuildSettingsService, DiscordPermOverrideService, CommandService)
  nameWithType: SlashPermissions.SlashPermissions(DbService, InteractiveService, GuildSettingsService, DiscordPermOverrideService, CommandService)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.SlashPermissions(Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService, Mewdeko.Services.GuildSettingsService, Mewdeko.Modules.Administration.Services.DiscordPermOverrideService, Discord.Commands.CommandService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 71
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Initializes a new instance of the SlashPermissions class.
  remarks: >-
    This constructor is responsible for setting up the necessary services required for

    managing slash command permissions, interactive commands, guild settings, and command execution.

    Each service parameter provided plays a crucial role in the operation and customization

    of the bot's functionality, especially in the context of permissions and settings management.
  example: []
  syntax:
    content: public SlashPermissions(DbService db, InteractiveService inter, GuildSettingsService guildSettings, DiscordPermOverrideService dpoS, CommandService cmdServe)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
      description: Database service instance for database operations.
    - id: inter
      type: Fergun.Interactive.InteractiveService
      description: Interactive service for managing interactive commands.
    - id: guildSettings
      type: Mewdeko.Services.GuildSettingsService
      description: Service for accessing and modifying guild settings.
    - id: dpoS
      type: Mewdeko.Modules.Administration.Services.DiscordPermOverrideService
      description: Discord permissions override service for custom permission handling.
    - id: cmdServe
      type: Discord.Commands.CommandService
      description: Command service for Discord bot commands management.
    content.vb: Public Sub New(db As DbService, inter As InteractiveService, guildSettings As GuildSettingsService, dpoS As DiscordPermOverrideService, cmdServe As CommandService)
  overload: Mewdeko.Modules.Permissions.SlashPermissions.#ctor*
  nameWithType.vb: SlashPermissions.New(DbService, InteractiveService, GuildSettingsService, DiscordPermOverrideService, CommandService)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.New(Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService, Mewdeko.Services.GuildSettingsService, Mewdeko.Modules.Administration.Services.DiscordPermOverrideService, Discord.Commands.CommandService)
  name.vb: New(DbService, InteractiveService, GuildSettingsService, DiscordPermOverrideService, CommandService)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms
  id: ResetPerms
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ResetPerms()
  nameWithType: SlashPermissions.ResetPerms()
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ResetPerms
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 89
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Resets command permissions for the guild.
  remarks: >-
    This slash command resets all custom command permissions back to their default states within the guild.

    Requires the user to have Administrator permissions to execute.

    After resetting permissions, a confirmation message is sent to the command invoker.
  example: []
  syntax:
    content: >-
      [SlashCommand("resetperms", "Reset Command Permissions", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ResetPerms()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("resetperms", "Reset Command Permissions", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ResetPerms() As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: resetperms
    - type: System.String
      value: Reset Command Permissions
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Permissions.SlashPermissions.Verbose(System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash})
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.Verbose(System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash})
  id: Verbose(System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash})
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: Verbose(PermissionSlash?)
  nameWithType: SlashPermissions.Verbose(SlashPermissions.PermissionSlash?)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.Verbose(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Verbose
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 105
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables verbose command error messages.
  remarks: >-
    This command toggles the verbosity of command error messages, providing detailed feedback when enabled.

    It requires a specific role checked by PermRoleCheck to execute. If no action is specified, the command defaults to disabling verbose errors.
  example: []
  syntax:
    content: >-
      [SlashCommand("verbose", "Enables or Disables command errors", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task Verbose(SlashPermissions.PermissionSlash? action = null)
    parameters:
    - id: action
      type: System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash}
      description: Optional parameter to enable (Allow) or disable (Deny) verbose permissions.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("verbose", "Enables or Disables command errors", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function Verbose(action As SlashPermissions.PermissionSlash? = Nothing) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.Verbose*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: verbose
    - type: System.String
      value: Enables or Disables command errors
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.PermRole(Discord.IRole)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.PermRole(Discord.IRole)
  id: PermRole(Discord.IRole)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: PermRole(IRole?)
  nameWithType: SlashPermissions.PermRole(IRole?)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.PermRole(Discord.IRole?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PermRole
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 133
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Sets or resets a role that can change command permissions without requiring admin rights.
  remarks: >-
    This command allows for setting a specific role to manage command permissions, providing a way to delegate permissions management without granting full Administrator rights.

    If the command is invoked without specifying a role, or if the @everyone role is selected, it will reset the permission role to its default state.

    Requires Administrator permissions to execute. Confirmation is sent upon changing the permission role.
  example: []
  syntax:
    content: >-
      [SlashCommand("permrole", "Sets a role to change command permissions without admin", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      [Priority(0)]

      public Task PermRole(IRole? role = null)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to set as the permission role. If null, resets the permission role.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("permrole", "Sets a role to change command permissions without admin", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      <Priority(0)>

      Public Function PermRole(role As IRole = Nothing) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.PermRole*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: permrole
    - type: System.String
      value: Sets a role to change command permissions without admin
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: SlashPermissions.PermRole(IRole)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.PermRole(Discord.IRole)
  name.vb: PermRole(IRole)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ListPerms
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ListPerms
  id: ListPerms
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ListPerms()
  nameWithType: SlashPermissions.ListPerms()
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ListPerms()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ListPerms
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 172
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Lists currently set permissions for commands in the guild.
  remarks: >-
    This command fetches and displays a list of all custom command permissions that have been configured in the guild.

    It presents the permissions in a paginated format, allowing users to navigate through the list.

    The command checks for permission roles before execution. If no custom permissions are set, it will display the default permissions list.
  example: []
  syntax:
    content: >-
      [SlashCommand("listperms", "List currently set permissions", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task ListPerms()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("listperms", "List currently set permissions", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function ListPerms() As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ListPerms*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: listperms
    - type: System.String
      value: List currently set permissions
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm(System.String)
  id: RemovePerm(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RemovePerm(string)
  nameWithType: SlashPermissions.RemovePerm(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemovePerm
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 218
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Removes a specified permission based on its list number.
  remarks: >-
    This command allows for the removal of a specific command permission by its number.

    The command validates the provided number and ensures that the default permission (index 0) cannot be removed.

    Upon successful removal, a confirmation message is displayed. If the specified permission number does not exist, an error message is shown.

    Requires permission role check for execution.
  example: []
  syntax:
    content: >-
      [SlashCommand("removeperm", "Remove a permission based on its number", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task RemovePerm(string perm)
    parameters:
    - id: perm
      type: System.String
      description: The number of the permission to remove, as displayed in the listperms command.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: permission
        - type: System.String
          value: the permission to modify
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.PermissionAutoCompleter
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("removeperm", "Remove a permission based on its number", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function RemovePerm(perm As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: removeperm
    - type: System.String
      value: Remove a permission based on its number
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.RemovePerm(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm(String)
  name.vb: RemovePerm(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  id: ServerCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ServerCmd(string, PermissionSlash)
  nameWithType: SlashPermissions.ServerCmd(string, SlashPermissions.PermissionSlash)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ServerCmd
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 269
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a specific command server-wide.
  remarks: >-
    This command changes the permission state of a specified command across the entire server.

    It allows for granular control over command availability, enhancing server customization and security.

    The change is immediate, affecting all users within the server based on the specified action.

    Requires the executing user to have a role with permission management capabilities.
  example: []
  syntax:
    content: >-
      [SlashCommand("servercommand", "Enable or disable a command in the server", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task ServerCmd(string command, SlashPermissions.PermissionSlash action)
    parameters:
    - id: command
      type: System.String
      description: The command to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: command
        - type: System.String
          value: the command to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.GenericCommandAutocompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: The action to apply, either Allow (enable) or Deny (disable).
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("servercommand", "Enable or disable a command in the server", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function ServerCmd(command As String, action As SlashPermissions.PermissionSlash) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: servercommand
    - type: System.String
      value: Enable or disable a command in the server
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ServerCmd(String, SlashPermissions.PermissionSlash)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  name.vb: ServerCmd(String, PermissionSlash)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  id: SrvrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: SrvrMdl(string, PermissionSlash)
  nameWithType: SlashPermissions.SrvrMdl(string, SlashPermissions.PermissionSlash)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SrvrMdl
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 312
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a module server-wide.
  remarks: >-
    This command allows administrators to manage the availability of entire modules within their server,

    enabling or disabling sets of functionality in one action. It's particularly useful for customizing the server experience

    and managing access to groups of commands.

    Execution requires the user to have a role designated for permission management.
  example: []
  syntax:
    content: >-
      [SlashCommand("servermodule", "Enable or disable a Module in the server", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task SrvrMdl(string module, SlashPermissions.PermissionSlash action)
    parameters:
    - id: module
      type: System.String
      description: The module to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: module
        - type: System.String
          value: the module to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.ModuleAutoCompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: The action to apply, either Allow (enable) or Deny (disable).
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("servermodule", "Enable or disable a Module in the server", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function SrvrMdl([module] As String, action As SlashPermissions.PermissionSlash) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: servermodule
    - type: System.String
      value: Enable or disable a Module in the server
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.SrvrMdl(String, SlashPermissions.PermissionSlash)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  name.vb: SrvrMdl(String, PermissionSlash)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  id: UsrCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: UsrCmd(string, PermissionSlash, IGuildUser)
  nameWithType: SlashPermissions.UsrCmd(string, SlashPermissions.PermissionSlash, IGuildUser)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UsrCmd
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 353
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a command for a specific user in the guild.
  remarks: >-
    This command modifies the accessibility of a specified command for an individual user,

    allowing for precise control over command usage. Useful for granting or restricting command access on a per-user basis.
  example: []
  syntax:
    content: >-
      [SlashCommand("usercommand", "Enable or disable a command for a user", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task UsrCmd(string command, SlashPermissions.PermissionSlash action, IGuildUser user)
    parameters:
    - id: command
      type: System.String
      description: The command to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: command
        - type: System.String
          value: the command to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.GenericCommandAutocompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the command.
    - id: user
      type: Discord.IGuildUser
      description: The user for whom the command permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("usercommand", "Enable or disable a command for a user", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function UsrCmd(command As String, action As SlashPermissions.PermissionSlash, user As IGuildUser) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: usercommand
    - type: System.String
      value: Enable or disable a command for a user
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.UsrCmd(String, SlashPermissions.PermissionSlash, IGuildUser)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IGuildUser)
  name.vb: UsrCmd(String, PermissionSlash, IGuildUser)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  id: UsrMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IGuildUser)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: UsrMdl(string, PermissionSlash, IGuildUser)
  nameWithType: SlashPermissions.UsrMdl(string, SlashPermissions.PermissionSlash, IGuildUser)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UsrMdl
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 397
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a module for a specific user in the guild.
  remarks: >-
    Similar to command permissions, this allows fine-grained control over module access for individual users,

    enhancing the customization of user experiences within the server.
  example: []
  syntax:
    content: >-
      [SlashCommand("usermodule", "Enable or disable a module for a user", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task UsrMdl(string module, SlashPermissions.PermissionSlash action, IGuildUser user)
    parameters:
    - id: module
      type: System.String
      description: The module to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: module
        - type: System.String
          value: the module to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.ModuleAutoCompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the module.
    - id: user
      type: Discord.IGuildUser
      description: The user for whom the module permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("usermodule", "Enable or disable a module for a user", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function UsrMdl([module] As String, action As SlashPermissions.PermissionSlash, user As IGuildUser) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: usermodule
    - type: System.String
      value: Enable or disable a module for a user
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.UsrMdl(String, SlashPermissions.PermissionSlash, IGuildUser)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IGuildUser)
  name.vb: UsrMdl(String, PermissionSlash, IGuildUser)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  id: RoleCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RoleCmd(string, PermissionSlash, IRole)
  nameWithType: SlashPermissions.RoleCmd(string, SlashPermissions.PermissionSlash, IRole)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleCmd
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 440
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a command for a specific role in the guild.
  remarks: >-
    This command facilitates role-based command permission management, allowing or disallowing command use for entire groups of users.

    It cannot be applied to the @everyone role, ensuring that some level of command access remains universal.
  example: []
  syntax:
    content: >-
      [SlashCommand("rolecommand", "Enable or disable a command for a role", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task RoleCmd(string command, SlashPermissions.PermissionSlash action, IRole role)
    parameters:
    - id: command
      type: System.String
      description: The command to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: command
        - type: System.String
          value: the command to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.GenericCommandAutocompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the command.
    - id: role
      type: Discord.IRole
      description: The role for which the command permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("rolecommand", "Enable or disable a command for a role", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function RoleCmd(command As String, action As SlashPermissions.PermissionSlash, role As IRole) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: rolecommand
    - type: System.String
      value: Enable or disable a command for a role
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.RoleCmd(String, SlashPermissions.PermissionSlash, IRole)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IRole)
  name.vb: RoleCmd(String, PermissionSlash, IRole)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  id: RoleMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RoleMdl(string, PermissionSlash, IRole)
  nameWithType: SlashPermissions.RoleMdl(string, SlashPermissions.PermissionSlash, IRole)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleMdl
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 487
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a module for a specific role within the guild.
  remarks: >-
    This command offers a nuanced control over module accessibility on a role-by-role basis, enhancing the server's ability to customize module usage.

    Using this command, server administrators can tailor the bot's functionality to suit the needs and privileges of different user groups within their community.
  example: []
  syntax:
    content: >-
      [SlashCommand("rolemodule", "Enable or disable a module for a role", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task RoleMdl(string module, SlashPermissions.PermissionSlash action, IRole role)
    parameters:
    - id: module
      type: System.String
      description: The name of the module to set permissions for.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: module
        - type: System.String
          value: the module to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.ModuleAutoCompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the module for the specified role.
    - id: role
      type: Discord.IRole
      description: The role for which the module permission will be set. The @everyone role is exempt from this command.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("rolemodule", "Enable or disable a module for a role", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function RoleMdl([module] As String, action As SlashPermissions.PermissionSlash, role As IRole) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: rolemodule
    - type: System.String
      value: Enable or disable a module for a role
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.RoleMdl(String, SlashPermissions.PermissionSlash, IRole)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IRole)
  name.vb: RoleMdl(String, PermissionSlash, IRole)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  id: ChnlCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ChnlCmd(string, PermissionSlash, ITextChannel)
  nameWithType: SlashPermissions.ChnlCmd(string, SlashPermissions.PermissionSlash, ITextChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChnlCmd
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 533
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a command for a specific channel in the guild.
  remarks: >-
    This command allows server administrators to control the availability of specific commands within individual channels,

    providing a way to customize the bot's interaction based on the channel's context or purpose. This ensures that commands are only used where they are most appropriate.
  example: []
  syntax:
    content: >-
      [SlashCommand("channelcommand", "Enable or disable a command for a channel", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task ChnlCmd(string command, SlashPermissions.PermissionSlash action, ITextChannel chnl)
    parameters:
    - id: command
      type: System.String
      description: The command to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: command
        - type: System.String
          value: the command to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.GenericCommandAutocompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the command in the specified channel.
    - id: chnl
      type: Discord.ITextChannel
      description: The channel for which the command permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("channelcommand", "Enable or disable a command for a channel", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function ChnlCmd(command As String, action As SlashPermissions.PermissionSlash, chnl As ITextChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: channelcommand
    - type: System.String
      value: Enable or disable a command for a channel
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ChnlCmd(String, SlashPermissions.PermissionSlash, ITextChannel)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ITextChannel)
  name.vb: ChnlCmd(String, PermissionSlash, ITextChannel)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  id: ChnlMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ChnlMdl(string, PermissionSlash, ITextChannel)
  nameWithType: SlashPermissions.ChnlMdl(string, SlashPermissions.PermissionSlash, ITextChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChnlMdl
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 577
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a module for a specific channel within the guild.
  remarks: >-
    By controlling module access at the channel level, this command provides granular control over where certain functionalities of the bot can be accessed within the guild.

    It's useful for restricting module usage to channels dedicated to specific topics or activities, thereby keeping the server organized and focused.
  example: []
  syntax:
    content: >-
      [SlashCommand("channelmodule", "Enable or disable a module for a channel", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task ChnlMdl(string module, SlashPermissions.PermissionSlash action, ITextChannel chnl)
    parameters:
    - id: module
      type: System.String
      description: The module to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: module
        - type: System.String
          value: the module to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.ModuleAutoCompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the module in the specified channel.
    - id: chnl
      type: Discord.ITextChannel
      description: The channel for which the module permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("channelmodule", "Enable or disable a module for a channel", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function ChnlMdl([module] As String, action As SlashPermissions.PermissionSlash, chnl As ITextChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: channelmodule
    - type: System.String
      value: Enable or disable a module for a channel
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ChnlMdl(String, SlashPermissions.PermissionSlash, ITextChannel)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ITextChannel)
  name.vb: ChnlMdl(String, PermissionSlash, ITextChannel)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  id: AllChnlMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ITextChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AllChnlMdls(PermissionSlash, ITextChannel)
  nameWithType: SlashPermissions.AllChnlMdls(SlashPermissions.PermissionSlash, ITextChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AllChnlMdls
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 620
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables all modules for a specified channel within the guild.
  remarks: >-
    This command provides a quick way to modify access to all bot modules for a particular channel,

    either granting full access or restricting it entirely. Useful for configuring channels with specific purposes

    without adjusting permissions for each module individually.
  example: []
  syntax:
    content: >-
      [SlashCommand("allchannelmodules", "Enable or disable all modules in a channel", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task AllChnlMdls(SlashPermissions.PermissionSlash action, ITextChannel chnl)
    parameters:
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) all modules in the channel.
    - id: chnl
      type: Discord.ITextChannel
      description: The text channel for which all module permissions will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("allchannelmodules", "Enable or disable all modules in a channel", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function AllChnlMdls(action As SlashPermissions.PermissionSlash, chnl As ITextChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: allchannelmodules
    - type: System.String
      value: Enable or disable all modules in a channel
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CatCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  id: CatCmd(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CatCmd(string, PermissionSlash, ICategoryChannel)
  nameWithType: SlashPermissions.CatCmd(string, SlashPermissions.PermissionSlash, ICategoryChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ICategoryChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CatCmd
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 655
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables commands for a specific category within the guild.
  remarks: >-
    Managing command permissions at the category level allows for uniform command availability across all channels within that category,

    streamlining the permission management process for large guilds.
  example: []
  syntax:
    content: >-
      [SlashCommand("categorycommand", "Enable or disable commands for a category", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task CatCmd(string command, SlashPermissions.PermissionSlash action, ICategoryChannel chnl)
    parameters:
    - id: command
      type: System.String
      description: The command to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: command
        - type: System.String
          value: the command to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.GenericCommandAutocompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the command for the category.
    - id: chnl
      type: Discord.ICategoryChannel
      description: The category channel for which the command permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("categorycommand", "Enable or disable commands for a category", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function CatCmd(command As String, action As SlashPermissions.PermissionSlash, chnl As ICategoryChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: categorycommand
    - type: System.String
      value: Enable or disable commands for a category
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.CatCmd(String, SlashPermissions.PermissionSlash, ICategoryChannel)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ICategoryChannel)
  name.vb: CatCmd(String, PermissionSlash, ICategoryChannel)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CatMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  id: CatMdl(System.String,Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CatMdl(string, PermissionSlash, ICategoryChannel)
  nameWithType: SlashPermissions.CatMdl(string, SlashPermissions.PermissionSlash, ICategoryChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl(string, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ICategoryChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CatMdl
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 699
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables a module for a specific category within the guild.
  remarks: >-
    This command allows for nuanced control over which modules are accessible in channels within a specific category,

    facilitating tailored functionality across different parts of a guild.
  example: []
  syntax:
    content: >-
      [SlashCommand("categorymodule", "Enable or disable a module for a category", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task CatMdl(string module, SlashPermissions.PermissionSlash action, ICategoryChannel chnl)
    parameters:
    - id: module
      type: System.String
      description: The module to set permissions on.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: module
        - type: System.String
          value: the module to set permissions on
      - type: Discord.Interactions.AutocompleteAttribute
        ctor: Discord.Interactions.AutocompleteAttribute.#ctor(System.Type)
        arguments:
        - type: System.Type
          value: Mewdeko.Common.Autocompleters.ModuleAutoCompleter
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) the module for the specified category.
    - id: chnl
      type: Discord.ICategoryChannel
      description: The category channel for which the module permission will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("categorymodule", "Enable or disable a module for a category", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function CatMdl([module] As String, action As SlashPermissions.PermissionSlash, chnl As ICategoryChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: categorymodule
    - type: System.String
      value: Enable or disable a module for a category
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.CatMdl(String, SlashPermissions.PermissionSlash, ICategoryChannel)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl(String, Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ICategoryChannel)
  name.vb: CatMdl(String, PermissionSlash, ICategoryChannel)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  id: AllCatMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.ICategoryChannel)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AllCatMdls(PermissionSlash, ICategoryChannel)
  nameWithType: SlashPermissions.AllCatMdls(SlashPermissions.PermissionSlash, ICategoryChannel)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.ICategoryChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AllCatMdls
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 741
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables all modules within a specific category.
  remarks: >-
    Offers a convenient way to quickly enable or disable all bot functionality within a category,

    useful for managing areas of the guild dedicated to specific types of interactions.
  example: []
  syntax:
    content: >-
      [SlashCommand("allcategorymodules", "Enable or disable all modules in a category", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task AllCatMdls(SlashPermissions.PermissionSlash action, ICategoryChannel chnl)
    parameters:
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) all modules for the category.
    - id: chnl
      type: Discord.ICategoryChannel
      description: The category channel for which all module permissions will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("allcategorymodules", "Enable or disable all modules in a category", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function AllCatMdls(action As SlashPermissions.PermissionSlash, chnl As ICategoryChannel) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: allcategorymodules
    - type: System.String
      value: Enable or disable all modules in a category
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  id: AllRoleMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IRole)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AllRoleMdls(PermissionSlash, IRole)
  nameWithType: SlashPermissions.AllRoleMdls(SlashPermissions.PermissionSlash, IRole)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AllRoleMdls
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 775
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables all modules for a specific role in the guild.
  remarks: >-
    This command provides a straightforward approach to control the access level of entire groups of users

    by adjusting their role's permissions regarding the bot's modules, streamlining the permission management process.
  example: []
  syntax:
    content: >-
      [SlashCommand("allrolemodules", "Enable or disable all modules for a role", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task AllRoleMdls(SlashPermissions.PermissionSlash action, IRole role)
    parameters:
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) all modules for the role.
    - id: role
      type: Discord.IRole
      description: The role for which all module permissions will be set. The @everyone role is excluded.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("allrolemodules", "Enable or disable all modules for a role", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function AllRoleMdls(action As SlashPermissions.PermissionSlash, role As IRole) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: allrolemodules
    - type: System.String
      value: Enable or disable all modules for a role
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IUser)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IUser)
  id: AllUsrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash,Discord.IUser)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AllUsrMdls(PermissionSlash, IUser)
  nameWithType: SlashPermissions.AllUsrMdls(SlashPermissions.PermissionSlash, IUser)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash, Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AllUsrMdls
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 812
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables all modules for a specific user within the guild.
  remarks: >-
    This command is especially useful for quickly adjusting a single user's access to the bot's functionalities,

    allowing for personalized control over the bot's interaction with individual members.
  example: []
  syntax:
    content: >-
      [SlashCommand("allusermodules", "Enable or disable all modules for a user", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task AllUsrMdls(SlashPermissions.PermissionSlash action, IUser user)
    parameters:
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) all modules for the user.
    - id: user
      type: Discord.IUser
      description: The user for whom all module permissions will be set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("allusermodules", "Enable or disable all modules for a user", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function AllUsrMdls(action As SlashPermissions.PermissionSlash, user As IUser) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: allusermodules
    - type: System.String
      value: Enable or disable all modules for a user
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  id: AllSrvrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AllSrvrMdls(PermissionSlash)
  nameWithType: SlashPermissions.AllSrvrMdls(SlashPermissions.PermissionSlash)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls(Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AllSrvrMdls
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 846
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Enables or disables all modules for the entire server.
  remarks: >-
    This command allows administrators to quickly toggle the availability of all bot modules within the server,

    effectively turning all bot functionalities on or off. This is particularly useful for managing bot permissions

    during specific server events or maintenance periods.
  example: []
  syntax:
    content: >-
      [SlashCommand("allservermodules", "Enable or disable all modules in the server", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      public Task AllSrvrMdls(SlashPermissions.PermissionSlash action)
    parameters:
    - id: action
      type: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
      description: Specifies whether to enable (Allow) or disable (Deny) all modules server-wide.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <SlashCommand("allservermodules", "Enable or disable all modules in the server", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      Public Function AllSrvrMdls(action As SlashPermissions.PermissionSlash) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: allservermodules
    - type: System.String
      value: Enable or disable all modules in the server
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu(System.String)
  id: UpdateMessageWithPermenu(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: UpdateMessageWithPermenu(string)
  nameWithType: SlashPermissions.UpdateMessageWithPermenu(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateMessageWithPermenu
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 886
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Updates the permission menu message for a command.
  remarks: >-
    This method is triggered via a component interaction. It updates the permission menu message to reflect

    current permissions or to offer quick adjustments for the specified command's permissions.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("permenu_update.*", true, RunMode.Default)]

      [RequireUserPermission(GuildPermission.Administrator)]

      [RequireContext(ContextType.Guild)]

      public Task UpdateMessageWithPermenu(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to update the permission menu for.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("permenu_update.*", True, RunMode.Default)>

      <RequireUserPermission(GuildPermission.Administrator)>

      <RequireContext(ContextType.Guild)>

      Public Function UpdateMessageWithPermenu(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: permenu_update.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireUserPermissionAttribute
    ctor: Discord.Interactions.RequireUserPermissionAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.UpdateMessageWithPermenu(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu(String)
  name.vb: UpdateMessageWithPermenu(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms(System.String)
  id: ClearRedundantPerms(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ClearRedundantPerms(string)
  nameWithType: SlashPermissions.ClearRedundantPerms(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClearRedundantPerms
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 982
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Clears redundant permissions for a specified command.
  remarks: >-
    Identifies and removes redundant permission entries for a command across all permission targets (e.g., roles, users, channels).

    This helps maintain a clean and efficient permissions setup by eliminating unnecessary or conflicting permission entries.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("credperms.*", true, RunMode.Default)]

      [RequireUserPermission(GuildPermission.Administrator)]

      [RequireContext(ContextType.Guild)]

      public Task ClearRedundantPerms(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to clear redundant permissions for.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("credperms.*", True, RunMode.Default)>

      <RequireUserPermission(GuildPermission.Administrator)>

      <RequireContext(ContextType.Guild)>

      Public Function ClearRedundantPerms(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: credperms.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireUserPermissionAttribute
    ctor: Discord.Interactions.RequireUserPermissionAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ClearRedundantPerms(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms(String)
  name.vb: ClearRedundantPerms(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu(System.String,System.String,System.String,System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu(System.String,System.String,System.String,System.String)
  id: ResolvePermMenu(System.String,System.String,System.String,System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ResolvePermMenu(string, string, string, string)
  nameWithType: SlashPermissions.ResolvePermMenu(string, string, string, string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu(string, string, string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ResolvePermMenu
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1065
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Resolves permission configurations through a menu-based interface.
  remarks: >-
    Allows administrators to resolve permission configurations, such as enabling, disabling, or clearing permissions,

    for a given command or module through a user-friendly menu interface. This method simplifies permission management

    by providing actionable options in response to identified permission issues or requirements.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("credperms_m.*.*.*.*", true, RunMode.Default)]

      [RequireUserPermission(GuildPermission.Administrator)]

      [RequireContext(ContextType.Guild)]

      public Task ResolvePermMenu(string primaryTargetType, string primaryTargetIdRaw, string secondaryTargetType, string secondaryTargetId)
    parameters:
    - id: primaryTargetType
      type: System.String
      description: The type of the primary permission target.
    - id: primaryTargetIdRaw
      type: System.String
      description: The ID of the primary permission target.
    - id: secondaryTargetType
      type: System.String
      description: The type of the secondary permission target.
    - id: secondaryTargetId
      type: System.String
      description: The ID or name of the secondary permission target.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("credperms_m.*.*.*.*", True, RunMode.Default)>

      <RequireUserPermission(GuildPermission.Administrator)>

      <RequireContext(ContextType.Guild)>

      Public Function ResolvePermMenu(primaryTargetType As String, primaryTargetIdRaw As String, secondaryTargetType As String, secondaryTargetId As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: credperms_m.*.*.*.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireUserPermissionAttribute
    ctor: Discord.Interactions.RequireUserPermissionAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ResolvePermMenu(String, String, String, String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu(String, String, String, String)
  name.vb: ResolvePermMenu(String, String, String, String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled(System.String)
  id: ToggleCommanddisabled(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: ToggleCommanddisabled(string)
  nameWithType: SlashPermissions.ToggleCommanddisabled(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleCommanddisabled
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1128
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Toggles the disabled state of a command server-wide.
  remarks: >-
    Enables or disables a command for the entire server. This command is particularly useful for quickly

    disabling commands that may be causing issues or that need to be temporarily restricted server-wide.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("command_toggle_disable.*", true, RunMode.Default)]

      [RequireUserPermission(GuildPermission.Administrator)]

      [RequireContext(ContextType.Guild)]

      public Task ToggleCommanddisabled(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to toggle the disabled state for.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("command_toggle_disable.*", True, RunMode.Default)>

      <RequireUserPermission(GuildPermission.Administrator)>

      <RequireContext(ContextType.Guild)>

      Public Function ToggleCommanddisabled(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: command_toggle_disable.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireUserPermissionAttribute
    ctor: Discord.Interactions.RequireUserPermissionAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  nameWithType.vb: SlashPermissions.ToggleCommanddisabled(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled(String)
  name.vb: ToggleCommanddisabled(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset(System.String)
  id: LocalPermsReset(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: LocalPermsReset(string)
  nameWithType: SlashPermissions.LocalPermsReset(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LocalPermsReset
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1199
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Resets local permissions for a specific command within the guild.
  remarks: >-
    This method removes all custom permissions set for a given command within the guild,

    reverting them back to the default or global permission settings. It's particularly useful

    for administrators to quickly normalize command permissions across the server.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("local_perms_reset.*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task LocalPermsReset(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to reset permissions for.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("local_perms_reset.*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function LocalPermsReset(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: local_perms_reset.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.LocalPermsReset(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset(String)
  name.vb: LocalPermsReset(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner(System.String,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner(System.String,System.String[])
  id: CommandPermSpawner(System.String,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermSpawner(string, string[])
  nameWithType: SlashPermissions.CommandPermSpawner(string, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner(string, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermSpawner
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1231
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Initiates a permission configuration process for a specific command.
  remarks: >-
    This method serves as an entry point for configuring detailed permissions for a command,

    allowing for the selection among different permission types like direct user permissions, role-based permissions,

    channel-specific permissions, etc. It facilitates granular control over who can use the command.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("cmd_perm_spawner.*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermSpawner(string commandName, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The command name for which to spawn permission configurations.
    - id: values
      type: System.String[]
      description: The actions or types of permissions to configure for the command.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("cmd_perm_spawner.*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermSpawner(commandName As String, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: cmd_perm_spawner.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermSpawner(String, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner(String, String())
  name.vb: CommandPermSpawner(String, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo(System.String)
  id: CommandPermsDpo(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermsDpo(string)
  nameWithType: SlashPermissions.CommandPermsDpo(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermsDpo
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1252
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Configures permissions for a command based on Discord's built-in permissions.
  remarks: >-
    Allows setting permissions for a command based on Discord's predefined permissions,

    offering a way to quickly align command access with Discord's role permissions.

    This method aids in maintaining a consistent permission structure across the server.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("cmd_perm_spawner_dpo.*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermsDpo(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which to set permissions.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("cmd_perm_spawner_dpo.*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermsDpo(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: cmd_perm_spawner_dpo.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermsDpo(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo(String)
  name.vb: CommandPermsDpo(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo(System.String,System.Int32,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo(System.String,System.Int32,System.String[])
  id: UpdateCommandDpo(System.String,System.Int32,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: UpdateCommandDpo(string, int, string[])
  nameWithType: SlashPermissions.UpdateCommandDpo(string, int, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo(string, int, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateCommandDpo
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1306
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Updates Discord's built-in permissions for a specific command.
  remarks: >-
    This method applies the selected Discord permissions to the specified command,

    allowing server administrators to customize which built-in permissions are required to use the command.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("update_cmd_dpo.*$*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task UpdateCommandDpo(string commandName, int index, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The command name for which permissions are being updated.
    - id: index
      type: System.Int32
      description: The index of the permission set to update.
    - id: values
      type: System.String[]
      description: The new permission values to apply.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("update_cmd_dpo.*$*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function UpdateCommandDpo(commandName As String, index As Integer, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: update_cmd_dpo.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.UpdateCommandDpo(String, Integer, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo(String, Integer, String())
  name.vb: UpdateCommandDpo(String, Integer, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr(System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr(System.String,System.Boolean,System.Boolean,System.String)
  id: CommandPermsUsr(System.String,System.Boolean,System.Boolean,System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermsUsr(string, bool, bool, string)
  nameWithType: SlashPermissions.CommandPermsUsr(string, bool, bool, string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr(string, bool, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermsUsr
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1348
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Configures user-specific permissions for a command.
  remarks: >-
    This method manages user-specific permissions for a command,

    enabling detailed access control on a per-user basis.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("command_perm_spawner_usr.*.*.*$*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermsUsr(string commandName, bool overwrite, bool allow, string _)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to configure.
    - id: overwrite
      type: System.Boolean
      description: Indicates if the permission should overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Determines if the permission allows or denies command access.
    - id: _
      type: System.String
      description: A placeholder parameter, currently not used.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("command_perm_spawner_usr.*.*.*$*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermsUsr(commandName As String, overwrite As Boolean, allow As Boolean, _ As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: command_perm_spawner_usr.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermsUsr(String, Boolean, Boolean, String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr(String, Boolean, Boolean, String)
  name.vb: CommandPermsUsr(String, Boolean, Boolean, String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  id: RemoveUserOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RemoveUserOveride(string, bool, bool, int, string[])
  nameWithType: SlashPermissions.RemoveUserOveride(string, bool, bool, int, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride(string, bool, bool, int, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveUserOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1447
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Removes user-specific overrides for a command.
  remarks: >-
    Facilitates the removal of specific user permission overrides, cleaning up any custom configurations

    that are no longer needed or desired for the given command.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_user_remove.*.*.*$*", true, RunMode.Default)]

      public Task RemoveUserOveride(string commandName, bool overwrite, bool allow, int index, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to remove overrides for.
    - id: overwrite
      type: System.Boolean
      description: Specifies whether the operation should overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Indicates if the override being removed is an allow or deny permission.
    - id: index
      type: System.Int32
      description: The index within the batch of permissions being processed.
    - id: values
      type: System.String[]
      description: The user IDs for which to remove the permission overrides.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_user_remove.*.*.*$*", True, RunMode.Default)>

      Public Function RemoveUserOveride(commandName As String, overwrite As Boolean, allow As Boolean, index As Integer, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_user_remove.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.RemoveUserOveride(String, Boolean, Boolean, Integer, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride(String, Boolean, Boolean, Integer, String())
  name.vb: RemoveUserOveride(String, Boolean, Boolean, Integer, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IUser[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IUser[])
  id: AddUserOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IUser[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AddUserOveride(string, bool, bool, string, IUser[])
  nameWithType: SlashPermissions.AddUserOveride(string, bool, bool, string, IUser[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride(string, bool, bool, string, Discord.IUser[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddUserOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1494
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Adds user-specific overrides for a command.
  remarks: >-
    Enables the addition of permission overrides on a per-user basis for a command,

    allowing for precise control over command access among server members.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_user_add.*.*.*$*", true, RunMode.Default)]

      public Task AddUserOveride(string commandName, bool overwrite, bool allow, string _, IUser[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to add overrides for.
    - id: overwrite
      type: System.Boolean
      description: Indicates whether to overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Determines if the override should allow or deny access to the command.
    - id: _
      type: System.String
      description: A placeholder parameter, currently not used.
    - id: values
      type: Discord.IUser[]
      description: The users for whom to add the permission overrides.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_user_add.*.*.*$*", True, RunMode.Default)>

      Public Function AddUserOveride(commandName As String, overwrite As Boolean, allow As Boolean, _ As String, values As IUser()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_user_add.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.AddUserOveride(String, Boolean, Boolean, String, IUser())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride(String, Boolean, Boolean, String, Discord.IUser())
  name.vb: AddUserOveride(String, Boolean, Boolean, String, IUser())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore(System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore(System.String)
  id: HelpComponentRestore(System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: HelpComponentRestore(string)
  nameWithType: SlashPermissions.HelpComponentRestore(string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HelpComponentRestore
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1553
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Restores the help component for a specific command.
  remarks: >-
    This method dynamically generates interactive buttons for command help,

    facilitating user access to command usage information and permission settings.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("help_component_restore.*", true, RunMode.Default)]

      public Task HelpComponentRestore(string commandName)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which the help component is being restored.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("help_component_restore.*", True, RunMode.Default)>

      Public Function HelpComponentRestore(commandName As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: help_component_restore.*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.HelpComponentRestore(String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore(String)
  name.vb: HelpComponentRestore(String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol(System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol(System.String,System.Boolean,System.Boolean,System.String)
  id: CommandPermsRol(System.String,System.Boolean,System.Boolean,System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermsRol(string, bool, bool, string)
  nameWithType: SlashPermissions.CommandPermsRol(string, bool, bool, string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol(string, bool, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermsRol
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1574
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Configures permissions for a command targeted at roles.
  remarks: >-
    Offers a streamlined way to manage command permissions on a role basis,

    either granting or restricting access to commands within the guild.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("command_perm_spawner_rol.*.*.*$*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermsRol(string commandName, bool overwrite, bool allow, string _)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to configure permissions for.
    - id: overwrite
      type: System.Boolean
      description: Indicates if permissions should overwrite existing settings.
    - id: allow
      type: System.Boolean
      description: Determines if the role should be allowed or denied permission to use the command.
    - id: _
      type: System.String
      description: A placeholder for future use.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("command_perm_spawner_rol.*.*.*$*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermsRol(commandName As String, overwrite As Boolean, allow As Boolean, _ As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: command_perm_spawner_rol.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermsRol(String, Boolean, Boolean, String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol(String, Boolean, Boolean, String)
  name.vb: CommandPermsRol(String, Boolean, Boolean, String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  id: RemoveRoleOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RemoveRoleOveride(string, bool, bool, int, string[])
  nameWithType: SlashPermissions.RemoveRoleOveride(string, bool, bool, int, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride(string, bool, bool, int, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveRoleOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1671
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Removes role-specific permission overrides for a command.
  remarks: Enables administrators to clean up permission configurations by removing outdated or unnecessary role-specific overrides.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_role_remove.*.*.*$*", true, RunMode.Default)]

      public Task RemoveRoleOveride(string commandName, bool overwrite, bool allow, int index, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to modify permissions for.
    - id: overwrite
      type: System.Boolean
      description: Indicates whether to overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Specifies if the permission to be removed is an allow or deny type.
    - id: index
      type: System.Int32
      description: The index in the permission configuration list being modified.
    - id: values
      type: System.String[]
      description: The roles from which to remove permission overrides.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_role_remove.*.*.*$*", True, RunMode.Default)>

      Public Function RemoveRoleOveride(commandName As String, overwrite As Boolean, allow As Boolean, index As Integer, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_role_remove.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.RemoveRoleOveride(String, Boolean, Boolean, Integer, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride(String, Boolean, Boolean, Integer, String())
  name.vb: RemoveRoleOveride(String, Boolean, Boolean, Integer, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IRole[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IRole[])
  id: AddRoleOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IRole[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AddRoleOveride(string, bool, bool, string, IRole[])
  nameWithType: SlashPermissions.AddRoleOveride(string, bool, bool, string, IRole[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride(string, bool, bool, string, Discord.IRole[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddRoleOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1717
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Adds role-specific permission overrides for a command.
  remarks: Facilitates granular control over command access, allowing for the specification of command permissions on a per-role basis.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_role_add.*.*.*$*", true, RunMode.Default)]

      public Task AddRoleOveride(string commandName, bool overwrite, bool allow, string _, IRole[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to add permission overrides for.
    - id: overwrite
      type: System.Boolean
      description: Indicates whether these permissions should overwrite existing ones.
    - id: allow
      type: System.Boolean
      description: Determines whether the command is allowed or denied for the specified roles.
    - id: _
      type: System.String
      description: A placeholder parameter for future expansion.
    - id: values
      type: Discord.IRole[]
      description: The roles to which the permission overrides will be applied.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_role_add.*.*.*$*", True, RunMode.Default)>

      Public Function AddRoleOveride(commandName As String, overwrite As Boolean, allow As Boolean, _ As String, values As IRole()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_role_add.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.AddRoleOveride(String, Boolean, Boolean, String, IRole())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride(String, Boolean, Boolean, String, Discord.IRole())
  name.vb: AddRoleOveride(String, Boolean, Boolean, String, IRole())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn(System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn(System.String,System.Boolean,System.Boolean,System.String)
  id: CommandPermsChn(System.String,System.Boolean,System.Boolean,System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermsChn(string, bool, bool, string)
  nameWithType: SlashPermissions.CommandPermsChn(string, bool, bool, string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn(string, bool, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermsChn
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1776
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Configures permissions for a command targeted at channels.
  remarks: >-
    This method allows for detailed command permission configurations on a per-channel basis,

    enhancing command access control within the guild.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("command_perm_spawner_chn.*.*.*$*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermsChn(string commandName, bool overwrite, bool allow, string _)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which to configure permissions.
    - id: overwrite
      type: System.Boolean
      description: Specifies whether to overwrite existing permission settings.
    - id: allow
      type: System.Boolean
      description: Indicates whether the permission should allow or deny command execution in the channel.
    - id: _
      type: System.String
      description: A placeholder parameter for future use.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("command_perm_spawner_chn.*.*.*$*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermsChn(commandName As String, overwrite As Boolean, allow As Boolean, _ As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: command_perm_spawner_chn.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermsChn(String, Boolean, Boolean, String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn(String, Boolean, Boolean, String)
  name.vb: CommandPermsChn(String, Boolean, Boolean, String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  id: RemoveChannelOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RemoveChannelOveride(string, bool, bool, int, string[])
  nameWithType: SlashPermissions.RemoveChannelOveride(string, bool, bool, int, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride(string, bool, bool, int, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveChannelOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1874
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Removes channel-specific permission overrides for a given command.
  remarks: This method facilitates the dynamic management of command permissions on a per-channel basis, allowing administrators to refine access control with precision. The implementation respects pagination, enabling scalable permission management across numerous channels.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_channel_remove.*.*.*$*", true, RunMode.Default)]

      public Task RemoveChannelOveride(string commandName, bool overwrite, bool allow, int index, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which to remove permissions.
    - id: overwrite
      type: System.Boolean
      description: Indicates if the action should overwrite existing permission settings. This parameter is not directly used but reflects a potential future extension for handling permission updates.
    - id: allow
      type: System.Boolean
      description: Specifies whether the permissions being removed were initially set to allow or deny the command. Similar to overwrite, this parameter is for future use and contextual consistency.
    - id: index
      type: System.Int32
      description: The index representing the chunk of permissions being targeted for removal within a paginated setup.
    - id: values
      type: System.String[]
      description: An array of channel IDs from which the command's permission overrides will be removed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_channel_remove.*.*.*$*", True, RunMode.Default)>

      Public Function RemoveChannelOveride(commandName As String, overwrite As Boolean, allow As Boolean, index As Integer, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_channel_remove.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.RemoveChannelOveride(String, Boolean, Boolean, Integer, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride(String, Boolean, Boolean, Integer, String())
  name.vb: RemoveChannelOveride(String, Boolean, Boolean, Integer, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  id: AddChannelOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AddChannelOveride(string, bool, bool, string, IChannel[])
  nameWithType: SlashPermissions.AddChannelOveride(string, bool, bool, string, IChannel[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride(string, bool, bool, string, Discord.IChannel[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddChannelOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1921
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Adds channel-specific permission overrides for a command.
  remarks: >-
    This method supports precise permission management by allowing specific command permissions

    to be set or overridden in individual channels.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_channel_add.*.*.*$*", true, RunMode.Default)]

      public Task AddChannelOveride(string commandName, bool overwrite, bool allow, string _, IChannel[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to configure permissions for.
    - id: overwrite
      type: System.Boolean
      description: Indicates whether to overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Specifies whether the command is allowed or denied within the channel.
    - id: _
      type: System.String
      description: A placeholder parameter for future expansion.
    - id: values
      type: Discord.IChannel[]
      description: The channels to which the permission overrides will be applied.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_channel_add.*.*.*$*", True, RunMode.Default)>

      Public Function AddChannelOveride(commandName As String, overwrite As Boolean, allow As Boolean, _ As String, values As IChannel()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_channel_add.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.AddChannelOveride(String, Boolean, Boolean, String, IChannel())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride(String, Boolean, Boolean, String, Discord.IChannel())
  name.vb: AddChannelOveride(String, Boolean, Boolean, String, IChannel())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat(System.String,System.Boolean,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat(System.String,System.Boolean,System.Boolean,System.String)
  id: CommandPermsCat(System.String,System.Boolean,System.Boolean,System.String)
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: CommandPermsCat(string, bool, bool, string)
  nameWithType: SlashPermissions.CommandPermsCat(string, bool, bool, string)
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat(string, bool, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandPermsCat
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 1982
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Configures permissions for a command targeted at categories.
  remarks: Enables fine-tuned control over command permissions within category channels, enhancing customization of command access.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("command_perm_spawner_cat.*.*.*$*", true, RunMode.Default)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task CommandPermsCat(string commandName, bool overwrite, bool allow, string _)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which to set permissions.
    - id: overwrite
      type: System.Boolean
      description: Indicates if existing permission settings should be overwritten.
    - id: allow
      type: System.Boolean
      description: Determines if the permission should enable or disable command use in the category.
    - id: _
      type: System.String
      description: A placeholder parameter for potential future use.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("command_perm_spawner_cat.*.*.*$*", True, RunMode.Default)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function CommandPermsCat(commandName As String, overwrite As Boolean, allow As Boolean, _ As String) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: command_perm_spawner_cat.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashPermissions.CommandPermsCat(String, Boolean, Boolean, String)
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat(String, Boolean, Boolean, String)
  name.vb: CommandPermsCat(String, Boolean, Boolean, String)
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  id: RemoveCategoryOveride(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: RemoveCategoryOveride(string, bool, bool, int, string[])
  nameWithType: SlashPermissions.RemoveCategoryOveride(string, bool, bool, int, string[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride(string, bool, bool, int, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveCategoryOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 2084
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Removes category-specific permission overrides for a command.
  remarks: >-
    Assists in cleaning up and streamlining permission configurations by removing specific category overrides

    that are no longer required.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_category_remove.*.*.*$*", true, RunMode.Default)]

      public Task RemoveCategoryOveride(string commandName, bool overwrite, bool allow, int index, string[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command for which to remove permissions.
    - id: overwrite
      type: System.Boolean
      description: Specifies whether the permission change should overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Indicates whether the permission being removed was an allow or deny permission.
    - id: index
      type: System.Int32
      description: The index within the configuration list from which to remove permissions.
    - id: values
      type: System.String[]
      description: The categories from which to remove permission overrides.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_category_remove.*.*.*$*", True, RunMode.Default)>

      Public Function RemoveCategoryOveride(commandName As String, overwrite As Boolean, allow As Boolean, index As Integer, values As String()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_category_remove.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.RemoveCategoryOveride(String, Boolean, Boolean, Integer, String())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride(String, Boolean, Boolean, Integer, String())
  name.vb: RemoveCategoryOveride(String, Boolean, Boolean, Integer, String())
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  commentId: M:Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  id: AddCategoryOveride(System.String,System.Boolean,System.Boolean,System.String,Discord.IChannel[])
  parent: Mewdeko.Modules.Permissions.SlashPermissions
  langs:
  - csharp
  - vb
  name: AddCategoryOveride(string, bool, bool, string, IChannel[])
  nameWithType: SlashPermissions.AddCategoryOveride(string, bool, bool, string, IChannel[])
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride(string, bool, bool, string, Discord.IChannel[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddCategoryOveride
    path: src/Mewdeko/Modules/Permissions/SlashPermissions.cs
    startLine: 2131
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions
  summary: Adds category-specific permission overrides for a command.
  remarks: >-
    This method allows for detailed permission management, enabling or restricting command usage

    in specific categories as needed.
  example: []
  syntax:
    content: >-
      [ComponentInteraction("perm_quick_options_category_add.*.*.*$*", true, RunMode.Default)]

      public Task AddCategoryOveride(string commandName, bool overwrite, bool allow, string _, IChannel[] values)
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command to add permission overrides for.
    - id: overwrite
      type: System.Boolean
      description: Specifies if the permission addition should overwrite existing permissions.
    - id: allow
      type: System.Boolean
      description: Determines whether the added permission is an allow or deny permission for the category.
    - id: _
      type: System.String
      description: A placeholder parameter for future expansion.
    - id: values
      type: Discord.IChannel[]
      description: The categories to which the permission overrides will be applied.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ComponentInteraction("perm_quick_options_category_add.*.*.*$*", True, RunMode.Default)>

      Public Function AddCategoryOveride(commandName As String, overwrite As Boolean, allow As Boolean, _ As String, values As IChannel()) As Task
  overload: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride*
  attributes:
  - type: Discord.Interactions.ComponentInteractionAttribute
    ctor: Discord.Interactions.ComponentInteractionAttribute.#ctor(System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: perm_quick_options_category_add.*.*.*$*
    - type: System.Boolean
      value: true
    - type: Discord.Interactions.RunMode
      value: 2
  nameWithType.vb: SlashPermissions.AddCategoryOveride(String, Boolean, Boolean, String, IChannel())
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride(String, Boolean, Boolean, String, Discord.IChannel())
  name.vb: AddCategoryOveride(String, Boolean, Boolean, String, IChannel())
references:
- uid: Mewdeko.Modules.Permissions
  commentId: N:Mewdeko.Modules.Permissions
  href: Mewdeko.html
  name: Mewdeko.Modules.Permissions
  nameWithType: Mewdeko.Modules.Permissions
  fullName: Mewdeko.Modules.Permissions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  commentId: T:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  parent: Discord.Interactions
  definition: Discord.Interactions.InteractionModuleBase`1
  name: InteractionModuleBase<IInteractionContext>
  nameWithType: InteractionModuleBase<IInteractionContext>
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext)
  name.vb: InteractionModuleBase(Of IInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase
  commentId: T:Discord.Interactions.InteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: InteractionModuleBase
  nameWithType: InteractionModuleBase
  fullName: Discord.Interactions.InteractionModuleBase
- uid: Mewdeko.Common.MewdekoSlashCommandModule
  commentId: T:Mewdeko.Common.MewdekoSlashCommandModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoSlashCommandModule.html
  name: MewdekoSlashCommandModule
  nameWithType: MewdekoSlashCommandModule
  fullName: Mewdeko.Common.MewdekoSlashCommandModule
- uid: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}
  commentId: T:Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSlashModuleBase`1
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  name: MewdekoSlashModuleBase<PermissionService>
  nameWithType: MewdekoSlashModuleBase<PermissionService>
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<Mewdeko.Modules.Permissions.Services.PermissionService>
  nameWithType.vb: MewdekoSlashModuleBase(Of PermissionService)
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of Mewdeko.Modules.Permissions.Services.PermissionService)
  name.vb: MewdekoSlashModuleBase(Of PermissionService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: )
- uid: Discord.Interactions.IInteractionModuleBase
  commentId: T:Discord.Interactions.IInteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: IInteractionModuleBase
  nameWithType: IInteractionModuleBase
  fullName: Discord.Interactions.IInteractionModuleBase
- uid: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}.Service
  commentId: P:Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}.Service
  parent: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Permissions.Services.PermissionService}
  definition: Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html#Mewdeko_Common_MewdekoSlashModuleBase_1_Service
  name: Service
  nameWithType: MewdekoSlashModuleBase<PermissionService>.Service
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<Mewdeko.Modules.Permissions.Services.PermissionService>.Service
  nameWithType.vb: MewdekoSlashModuleBase(Of PermissionService).Service
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of Mewdeko.Modules.Permissions.Services.PermissionService).Service
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoSlashCommandModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Strings
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Strings
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Strings
  name: Strings
  nameWithType: MewdekoSlashCommandModule.Strings
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Strings
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CmdHandler
  name: CmdHandler
  nameWithType: MewdekoSlashCommandModule.CmdHandler
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Localization
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Localization
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Localization
  name: Localization
  nameWithType: MewdekoSlashCommandModule.Localization
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Localization
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ctx
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.ctx
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ctx
  name: ctx
  nameWithType: MewdekoSlashCommandModule.ctx
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ctx
- uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  name: BeforeExecute(ICommandInfo)
  nameWithType: MewdekoSlashCommandModule.BeforeExecute(ICommandInfo)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoSlashCommandModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string)
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoSlashCommandModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  name: PromptUserConfirmAsync(string, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong, bool, bool)
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<IInteractionContext>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<IInteractionContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<IInteractionContext>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  commentId: P:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Context
  name: Context
  nameWithType: InteractionModuleBase<IInteractionContext>.Context
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Context
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<SlashPermissions>(SlashPermissions, string)
  nameWithType: Extensions.ThrowIfNull<SlashPermissions>(SlashPermissions, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Permissions.SlashPermissions>(Mewdeko.Modules.Permissions.SlashPermissions, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of SlashPermissions)(SlashPermissions, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Permissions.SlashPermissions)(Mewdeko.Modules.Permissions.SlashPermissions, String)
  name.vb: ThrowIfNull(Of SlashPermissions)(SlashPermissions, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.SlashPermissions,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.SlashPermissions,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Interactions.InteractionModuleBase`1
  commentId: T:Discord.Interactions.InteractionModuleBase`1
  isExternal: true
  name: InteractionModuleBase<T>
  nameWithType: InteractionModuleBase<T>
  fullName: Discord.Interactions.InteractionModuleBase<T>
  nameWithType.vb: InteractionModuleBase(Of T)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T)
  name.vb: InteractionModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Interactions
  commentId: N:Discord.Interactions
  isExternal: true
  name: Discord.Interactions
  nameWithType: Discord.Interactions
  fullName: Discord.Interactions
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoSlashModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoSlashModuleBase`1
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  name: MewdekoSlashModuleBase<TService>
  nameWithType: MewdekoSlashModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<TService>
  nameWithType.vb: MewdekoSlashModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of TService)
  name.vb: MewdekoSlashModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html#Mewdeko_Common_MewdekoSlashModuleBase_1_Service
  name: Service
  nameWithType: MewdekoSlashModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<TService>.Service
  nameWithType.vb: MewdekoSlashModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of TService).Service
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  isExternal: true
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<T>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of T).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  isExternal: true
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<T>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<T>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of T).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<T>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  isExternal: true
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<T>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  isExternal: true
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  isExternal: true
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  isExternal: true
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Context
  commentId: P:Discord.Interactions.InteractionModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: InteractionModuleBase<T>.Context
  fullName: Discord.Interactions.InteractionModuleBase<T>.Context
  nameWithType.vb: InteractionModuleBase(Of T).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Permissions.SlashPermissions.#ctor*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.#ctor
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions__ctor_Mewdeko_Database_DbService_Fergun_Interactive_InteractiveService_Mewdeko_Services_GuildSettingsService_Mewdeko_Modules_Administration_Services_DiscordPermOverrideService_Discord_Commands_CommandService_
  name: SlashPermissions
  nameWithType: SlashPermissions.SlashPermissions
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.SlashPermissions
  nameWithType.vb: SlashPermissions.New
  fullName.vb: Mewdeko.Modules.Permissions.SlashPermissions.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: Mewdeko.Modules.Administration.Services.DiscordPermOverrideService
  commentId: T:Mewdeko.Modules.Administration.Services.DiscordPermOverrideService
  parent: Mewdeko.Modules.Administration.Services
  href: Mewdeko.Modules.Administration.Services.DiscordPermOverrideService.html
  name: DiscordPermOverrideService
  nameWithType: DiscordPermOverrideService
  fullName: Mewdeko.Modules.Administration.Services.DiscordPermOverrideService
- uid: Discord.Commands.CommandService
  commentId: T:Discord.Commands.CommandService
  parent: Discord.Commands
  isExternal: true
  name: CommandService
  nameWithType: CommandService
  fullName: Discord.Commands.CommandService
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Modules.Administration.Services
  commentId: N:Mewdeko.Modules.Administration.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Administration.Services
  nameWithType: Mewdeko.Modules.Administration.Services
  fullName: Mewdeko.Modules.Administration.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ResetPerms
  name: ResetPerms
  nameWithType: SlashPermissions.ResetPerms
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ResetPerms
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Permissions.SlashPermissions.Verbose*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.Verbose
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_Verbose_System_Nullable_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash__
  name: Verbose
  nameWithType: SlashPermissions.Verbose
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.Verbose
- uid: System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash}
  commentId: T:System.Nullable{Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash}
  parent: System
  definition: System.Nullable`1
  href: Mewdeko.Modules.Permissions.SlashPermissions.html
  name: SlashPermissions.PermissionSlash?
  nameWithType: SlashPermissions.PermissionSlash?
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash?
  spec.csharp:
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
    name: PermissionSlash
    href: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash.html
  - name: '?'
  spec.vb:
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
    name: PermissionSlash
    href: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.PermRole*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.PermRole
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_PermRole_Discord_IRole_
  name: PermRole
  nameWithType: SlashPermissions.PermRole
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.PermRole
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ListPerms*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ListPerms
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ListPerms
  name: ListPerms
  nameWithType: SlashPermissions.ListPerms
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ListPerms
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RemovePerm_System_String_
  name: RemovePerm
  nameWithType: SlashPermissions.RemovePerm
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemovePerm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ServerCmd_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_
  name: ServerCmd
  nameWithType: SlashPermissions.ServerCmd
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ServerCmd
- uid: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
  commentId: T:Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
  parent: Mewdeko.Modules.Permissions
  href: Mewdeko.Modules.Permissions.SlashPermissions.html
  name: SlashPermissions.PermissionSlash
  nameWithType: SlashPermissions.PermissionSlash
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
  spec.csharp:
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
    name: PermissionSlash
    href: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash.html
  spec.vb:
  - uid: Mewdeko.Modules.Permissions.SlashPermissions
    name: SlashPermissions
    href: Mewdeko.Modules.Permissions.SlashPermissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash
    name: PermissionSlash
    href: Mewdeko.Modules.Permissions.SlashPermissions.PermissionSlash.html
- uid: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_SrvrMdl_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_
  name: SrvrMdl
  nameWithType: SlashPermissions.SrvrMdl
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.SrvrMdl
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_UsrCmd_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IGuildUser_
  name: UsrCmd
  nameWithType: SlashPermissions.UsrCmd
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UsrCmd
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_UsrMdl_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IGuildUser_
  name: UsrMdl
  nameWithType: SlashPermissions.UsrMdl
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UsrMdl
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RoleCmd_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IRole_
  name: RoleCmd
  nameWithType: SlashPermissions.RoleCmd
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RoleCmd
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RoleMdl_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IRole_
  name: RoleMdl
  nameWithType: SlashPermissions.RoleMdl
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RoleMdl
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ChnlCmd_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ITextChannel_
  name: ChnlCmd
  nameWithType: SlashPermissions.ChnlCmd
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ChnlCmd
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ChnlMdl_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ITextChannel_
  name: ChnlMdl
  nameWithType: SlashPermissions.ChnlMdl
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ChnlMdl
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AllChnlMdls_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ITextChannel_
  name: AllChnlMdls
  nameWithType: SlashPermissions.AllChnlMdls
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllChnlMdls
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CatCmd
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CatCmd_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ICategoryChannel_
  name: CatCmd
  nameWithType: SlashPermissions.CatCmd
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CatCmd
- uid: Discord.ICategoryChannel
  commentId: T:Discord.ICategoryChannel
  parent: Discord
  isExternal: true
  name: ICategoryChannel
  nameWithType: ICategoryChannel
  fullName: Discord.ICategoryChannel
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CatMdl
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CatMdl_System_String_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ICategoryChannel_
  name: CatMdl
  nameWithType: SlashPermissions.CatMdl
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CatMdl
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AllCatMdls_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_ICategoryChannel_
  name: AllCatMdls
  nameWithType: SlashPermissions.AllCatMdls
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllCatMdls
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AllRoleMdls_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IRole_
  name: AllRoleMdls
  nameWithType: SlashPermissions.AllRoleMdls
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllRoleMdls
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AllUsrMdls_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_Discord_IUser_
  name: AllUsrMdls
  nameWithType: SlashPermissions.AllUsrMdls
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllUsrMdls
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AllSrvrMdls_Mewdeko_Modules_Permissions_SlashPermissions_PermissionSlash_
  name: AllSrvrMdls
  nameWithType: SlashPermissions.AllSrvrMdls
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AllSrvrMdls
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_UpdateMessageWithPermenu_System_String_
  name: UpdateMessageWithPermenu
  nameWithType: SlashPermissions.UpdateMessageWithPermenu
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UpdateMessageWithPermenu
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ClearRedundantPerms_System_String_
  name: ClearRedundantPerms
  nameWithType: SlashPermissions.ClearRedundantPerms
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ClearRedundantPerms
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ResolvePermMenu_System_String_System_String_System_String_System_String_
  name: ResolvePermMenu
  nameWithType: SlashPermissions.ResolvePermMenu
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ResolvePermMenu
- uid: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_ToggleCommanddisabled_System_String_
  name: ToggleCommanddisabled
  nameWithType: SlashPermissions.ToggleCommanddisabled
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.ToggleCommanddisabled
- uid: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_LocalPermsReset_System_String_
  name: LocalPermsReset
  nameWithType: SlashPermissions.LocalPermsReset
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.LocalPermsReset
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermSpawner_System_String_System_String___
  name: CommandPermSpawner
  nameWithType: SlashPermissions.CommandPermSpawner
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermSpawner
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermsDpo_System_String_
  name: CommandPermsDpo
  nameWithType: SlashPermissions.CommandPermsDpo
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsDpo
- uid: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_UpdateCommandDpo_System_String_System_Int32_System_String___
  name: UpdateCommandDpo
  nameWithType: SlashPermissions.UpdateCommandDpo
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.UpdateCommandDpo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermsUsr_System_String_System_Boolean_System_Boolean_System_String_
  name: CommandPermsUsr
  nameWithType: SlashPermissions.CommandPermsUsr
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsUsr
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RemoveUserOveride_System_String_System_Boolean_System_Boolean_System_Int32_System_String___
  name: RemoveUserOveride
  nameWithType: SlashPermissions.RemoveUserOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveUserOveride
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AddUserOveride_System_String_System_Boolean_System_Boolean_System_String_Discord_IUser___
  name: AddUserOveride
  nameWithType: SlashPermissions.AddUserOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddUserOveride
- uid: Discord.IUser[]
  isExternal: true
  name: IUser[]
  nameWithType: IUser[]
  fullName: Discord.IUser[]
  nameWithType.vb: IUser()
  fullName.vb: Discord.IUser()
  name.vb: IUser()
  spec.csharp:
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_HelpComponentRestore_System_String_
  name: HelpComponentRestore
  nameWithType: SlashPermissions.HelpComponentRestore
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.HelpComponentRestore
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermsRol_System_String_System_Boolean_System_Boolean_System_String_
  name: CommandPermsRol
  nameWithType: SlashPermissions.CommandPermsRol
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsRol
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RemoveRoleOveride_System_String_System_Boolean_System_Boolean_System_Int32_System_String___
  name: RemoveRoleOveride
  nameWithType: SlashPermissions.RemoveRoleOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveRoleOveride
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AddRoleOveride_System_String_System_Boolean_System_Boolean_System_String_Discord_IRole___
  name: AddRoleOveride
  nameWithType: SlashPermissions.AddRoleOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddRoleOveride
- uid: Discord.IRole[]
  isExternal: true
  name: IRole[]
  nameWithType: IRole[]
  fullName: Discord.IRole[]
  nameWithType.vb: IRole()
  fullName.vb: Discord.IRole()
  name.vb: IRole()
  spec.csharp:
  - uid: Discord.IRole
    name: IRole
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Discord.IRole
    name: IRole
    isExternal: true
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermsChn_System_String_System_Boolean_System_Boolean_System_String_
  name: CommandPermsChn
  nameWithType: SlashPermissions.CommandPermsChn
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsChn
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RemoveChannelOveride_System_String_System_Boolean_System_Boolean_System_Int32_System_String___
  name: RemoveChannelOveride
  nameWithType: SlashPermissions.RemoveChannelOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveChannelOveride
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AddChannelOveride_System_String_System_Boolean_System_Boolean_System_String_Discord_IChannel___
  name: AddChannelOveride
  nameWithType: SlashPermissions.AddChannelOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddChannelOveride
- uid: Discord.IChannel[]
  isExternal: true
  name: IChannel[]
  nameWithType: IChannel[]
  fullName: Discord.IChannel[]
  nameWithType.vb: IChannel()
  fullName.vb: Discord.IChannel()
  name.vb: IChannel()
  spec.csharp:
  - uid: Discord.IChannel
    name: IChannel
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Discord.IChannel
    name: IChannel
    isExternal: true
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_CommandPermsCat_System_String_System_Boolean_System_Boolean_System_String_
  name: CommandPermsCat
  nameWithType: SlashPermissions.CommandPermsCat
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.CommandPermsCat
- uid: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_RemoveCategoryOveride_System_String_System_Boolean_System_Boolean_System_Int32_System_String___
  name: RemoveCategoryOveride
  nameWithType: SlashPermissions.RemoveCategoryOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.RemoveCategoryOveride
- uid: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride*
  commentId: Overload:Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride
  href: Mewdeko.Modules.Permissions.SlashPermissions.html#Mewdeko_Modules_Permissions_SlashPermissions_AddCategoryOveride_System_String_System_Boolean_System_Boolean_System_String_Discord_IChannel___
  name: AddCategoryOveride
  nameWithType: SlashPermissions.AddCategoryOveride
  fullName: Mewdeko.Modules.Permissions.SlashPermissions.AddCategoryOveride
