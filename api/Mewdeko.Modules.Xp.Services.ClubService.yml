### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Xp.Services.ClubService
  commentId: T:Mewdeko.Modules.Xp.Services.ClubService
  id: ClubService
  parent: Mewdeko.Modules.Xp.Services
  children:
  - Mewdeko.Modules.Xp.Services.ClubService.#ctor(Mewdeko.Database.DbService,System.Net.Http.IHttpClientFactory)
  - Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication(System.UInt64,System.String)
  - Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub(Discord.IUser,Mewdeko.Database.Models.ClubInfo)
  - Mewdeko.Modules.Xp.Services.ClubService.Ban(System.UInt64,System.String)
  - Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription(System.UInt64,System.String)
  - Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq(System.UInt64,System.Int32)
  - Mewdeko.Modules.Xp.Services.ClubService.CreateClub(Discord.IUser,System.String)
  - Mewdeko.Modules.Xp.Services.ClubService.Disband(System.UInt64)
  - Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember(Discord.IUser)
  - Mewdeko.Modules.Xp.Services.ClubService.GetClubByName(System.String,Mewdeko.Database.Models.ClubInfo@)
  - Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage(System.Int32)
  - Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications(System.UInt64)
  - Mewdeko.Modules.Xp.Services.ClubService.Kick(System.UInt64,System.String)
  - Mewdeko.Modules.Xp.Services.ClubService.LeaveClub(Discord.IUser)
  - Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon(System.UInt64,System.Uri)
  - Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin(Discord.IUser,Discord.IUser)
  - Mewdeko.Modules.Xp.Services.ClubService.TransferClub(Discord.IUser,Discord.IUser)
  - Mewdeko.Modules.Xp.Services.ClubService.UnBan(System.UInt64,System.String)
  langs:
  - csharp
  - vb
  name: ClubService
  nameWithType: ClubService
  fullName: Mewdeko.Modules.Xp.Services.ClubService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClubService
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Provides services related to club management within the experience (XP) module.
  example: []
  syntax:
    content: 'public class ClubService : INService'
    content.vb: Public Class ClubService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Xp.Services.ClubService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.#ctor(Mewdeko.Database.DbService,System.Net.Http.IHttpClientFactory)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.#ctor(Mewdeko.Database.DbService,System.Net.Http.IHttpClientFactory)
  id: '#ctor(Mewdeko.Database.DbService,System.Net.Http.IHttpClientFactory)'
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: ClubService(DbService, IHttpClientFactory)
  nameWithType: ClubService.ClubService(DbService, IHttpClientFactory)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ClubService(Mewdeko.Database.DbService, System.Net.Http.IHttpClientFactory)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Provides services related to club management within the experience (XP) module.
  example: []
  syntax:
    content: public ClubService(DbService db, IHttpClientFactory httpFactory)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
    - id: httpFactory
      type: System.Net.Http.IHttpClientFactory
    content.vb: Public Sub New(db As DbService, httpFactory As IHttpClientFactory)
  overload: Mewdeko.Modules.Xp.Services.ClubService.#ctor*
  nameWithType.vb: ClubService.New(DbService, IHttpClientFactory)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.New(Mewdeko.Database.DbService, System.Net.Http.IHttpClientFactory)
  name.vb: New(DbService, IHttpClientFactory)
- uid: Mewdeko.Modules.Xp.Services.ClubService.CreateClub(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.CreateClub(Discord.IUser,System.String)
  id: CreateClub(Discord.IUser,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: CreateClub(IUser, string)
  nameWithType: ClubService.CreateClub(IUser, string)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.CreateClub(Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CreateClub
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 18
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Attempts to create a new club with the specified name for the given user.
  example: []
  syntax:
    content: public Task<(bool, ClubInfo)> CreateClub(IUser user, string clubName)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user creating the club.
    - id: clubName
      type: System.String
      description: The desired name for the club.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
      description: A tuple indicating success status and the created <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref>, if successful.
    content.vb: Public Function CreateClub(user As IUser, clubName As String) As Task(Of (Boolean, ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.CreateClub*
  nameWithType.vb: ClubService.CreateClub(IUser, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.CreateClub(Discord.IUser, String)
  name.vb: CreateClub(IUser, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.TransferClub(Discord.IUser,Discord.IUser)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.TransferClub(Discord.IUser,Discord.IUser)
  id: TransferClub(Discord.IUser,Discord.IUser)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: TransferClub(IUser, IUser)
  nameWithType: ClubService.TransferClub(IUser, IUser)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.TransferClub(Discord.IUser, Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TransferClub
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 57
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Transfers club ownership from one user to another.
  example: []
  syntax:
    content: public Task<ClubInfo?> TransferClub(IUser from, IUser newOwner)
    parameters:
    - id: from
      type: Discord.IUser
      description: The current owner of the club.
    - id: newOwner
      type: Discord.IUser
      description: The new owner to transfer the club to.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.ClubInfo}
      description: The updated <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref> with the new owner, or null if the transfer was unsuccessful.
    content.vb: Public Function TransferClub(from As IUser, newOwner As IUser) As Task(Of ClubInfo)
  overload: Mewdeko.Modules.Xp.Services.ClubService.TransferClub*
- uid: Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin(Discord.IUser,Discord.IUser)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin(Discord.IUser,Discord.IUser)
  id: ToggleAdmin(Discord.IUser,Discord.IUser)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: ToggleAdmin(IUser, IUser)
  nameWithType: ClubService.ToggleAdmin(IUser, IUser)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin(Discord.IUser, Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleAdmin
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 84
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Toggles the admin status of a user within a club.
  example: []
  syntax:
    content: public Task<bool> ToggleAdmin(IUser owner, IUser toAdmin)
    parameters:
    - id: owner
      type: Discord.IUser
      description: The owner of the club.
    - id: toAdmin
      type: Discord.IUser
      description: The user to toggle admin status for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function ToggleAdmin(owner As IUser, toAdmin As IUser) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin*
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember(Discord.IUser)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember(Discord.IUser)
  id: GetClubByMember(Discord.IUser)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: GetClubByMember(IUser)
  nameWithType: ClubService.GetClubByMember(IUser)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetClubByMember
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 110
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Gets the club information by a member of the club.
  example: []
  syntax:
    content: public Task<ClubInfo?> GetClubByMember(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user whose club information is to be retrieved.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.ClubInfo}
      description: The <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref> of the club the user is a member of, or null if the user is not in a club.
    content.vb: Public Function GetClubByMember(user As IUser) As Task(Of ClubInfo)
  overload: Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember*
- uid: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon(System.UInt64,System.Uri)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon(System.UInt64,System.Uri)
  id: SetClubIcon(System.UInt64,System.Uri)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: SetClubIcon(ulong, Uri?)
  nameWithType: ClubService.SetClubIcon(ulong, Uri?)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon(ulong, System.Uri?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetClubIcon
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 122
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets the icon for a club owned by the specified user.
  example: []
  syntax:
    content: public Task<bool> SetClubIcon(ulong ownerUserId, Uri? url)
    parameters:
    - id: ownerUserId
      type: System.UInt64
      description: The user ID of the club owner.
    - id: url
      type: System.Uri
      description: The URL of the new club icon.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function SetClubIcon(ownerUserId As ULong, url As Uri) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon*
  nameWithType.vb: ClubService.SetClubIcon(ULong, Uri)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon(ULong, System.Uri)
  name.vb: SetClubIcon(ULong, Uri)
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName(System.String,Mewdeko.Database.Models.ClubInfo@)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.GetClubByName(System.String,Mewdeko.Database.Models.ClubInfo@)
  id: GetClubByName(System.String,Mewdeko.Database.Models.ClubInfo@)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: GetClubByName(string, out ClubInfo)
  nameWithType: ClubService.GetClubByName(string, out ClubInfo)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName(string, out Mewdeko.Database.Models.ClubInfo)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetClubByName
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 151
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a club by its name.
  example: []
  syntax:
    content: public bool GetClubByName(string clubName, out ClubInfo club)
    parameters:
    - id: clubName
      type: System.String
      description: The name of the club to retrieve.
    - id: club
      type: Mewdeko.Database.Models.ClubInfo
      description: Out parameter that contains the retrieved club, if found.
    return:
      type: System.Boolean
      description: True if the club was found, false otherwise.
    content.vb: Public Function GetClubByName(clubName As String, club As ClubInfo) As Boolean
  overload: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName*
  nameWithType.vb: ClubService.GetClubByName(String, ClubInfo)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName(String, Mewdeko.Database.Models.ClubInfo)
  name.vb: GetClubByName(String, ClubInfo)
- uid: Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub(Discord.IUser,Mewdeko.Database.Models.ClubInfo)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub(Discord.IUser,Mewdeko.Database.Models.ClubInfo)
  id: ApplyToClub(Discord.IUser,Mewdeko.Database.Models.ClubInfo)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: ApplyToClub(IUser, ClubInfo)
  nameWithType: ClubService.ApplyToClub(IUser, ClubInfo)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub(Discord.IUser, Mewdeko.Database.Models.ClubInfo)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ApplyToClub
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 180
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Applies a user to a club.
  example: []
  syntax:
    content: public Task<bool> ApplyToClub(IUser user, ClubInfo club)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user applying to the club.
    - id: club
      type: Mewdeko.Database.Models.ClubInfo
      description: The club to apply to.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the application was successful, false otherwise.
    content.vb: Public Function ApplyToClub(user As IUser, club As ClubInfo) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub*
- uid: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication(System.UInt64,System.String)
  id: AcceptApplication(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: AcceptApplication(ulong, string)
  nameWithType: ClubService.AcceptApplication(ulong, string)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AcceptApplication
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 214
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Accepts an application to a club.
  example: []
  syntax:
    content: public Task<(bool, DiscordUser)> AcceptApplication(ulong clubOwnerUserId, string userName)
    parameters:
    - id: clubOwnerUserId
      type: System.UInt64
      description: The user ID of the club owner.
    - id: userName
      type: System.String
      description: The name of the user whose application is being accepted.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.DiscordUser}}
      description: A tuple containing the operation's success status and the <xref href="Mewdeko.Database.Models.DiscordUser" data-throw-if-not-resolved="false"></xref> if the operation was successful.
    content.vb: Public Function AcceptApplication(clubOwnerUserId As ULong, userName As String) As Task(Of (Boolean, DiscordUser))
  overload: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication*
  nameWithType.vb: ClubService.AcceptApplication(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication(ULong, String)
  name.vb: AcceptApplication(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications(System.UInt64)
  id: GetClubWithBansAndApplications(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: GetClubWithBansAndApplications(ulong)
  nameWithType: ClubService.GetClubWithBansAndApplications(ulong)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetClubWithBansAndApplications
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 246
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves club information along with its bans and applications.
  example: []
  syntax:
    content: public Task<ClubInfo?> GetClubWithBansAndApplications(ulong ownerUserId)
    parameters:
    - id: ownerUserId
      type: System.UInt64
      description: The user ID of the club owner or admin.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.ClubInfo}
      description: The <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref> including bans and applications, or null if not found.
    content.vb: Public Function GetClubWithBansAndApplications(ownerUserId As ULong) As Task(Of ClubInfo)
  overload: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications*
  nameWithType.vb: ClubService.GetClubWithBansAndApplications(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications(ULong)
  name.vb: GetClubWithBansAndApplications(ULong)
- uid: Mewdeko.Modules.Xp.Services.ClubService.LeaveClub(Discord.IUser)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.LeaveClub(Discord.IUser)
  id: LeaveClub(Discord.IUser)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: LeaveClub(IUser)
  nameWithType: ClubService.LeaveClub(IUser)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.LeaveClub(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LeaveClub
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 257
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: A member leaves a club.
  example: []
  syntax:
    content: public Task<bool> LeaveClub(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user leaving the club.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function LeaveClub(user As IUser) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.LeaveClub*
- uid: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq(System.UInt64,System.Int32)
  id: ChangeClubLevelReq(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: ChangeClubLevelReq(ulong, int)
  nameWithType: ClubService.ChangeClubLevelReq(ulong, int)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChangeClubLevelReq
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 277
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Changes the minimum level requirement to join a club.
  example: []
  syntax:
    content: public Task<bool> ChangeClubLevelReq(ulong userId, int level)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user ID of the club owner.
    - id: level
      type: System.Int32
      description: The new minimum level requirement.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function ChangeClubLevelReq(userId As ULong, level As Integer) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq*
  nameWithType.vb: ClubService.ChangeClubLevelReq(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq(ULong, Integer)
  name.vb: ChangeClubLevelReq(ULong, Integer)
- uid: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription(System.UInt64,System.String)
  id: ChangeClubDescription(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: ChangeClubDescription(ulong, string?)
  nameWithType: ClubService.ChangeClubDescription(ulong, string?)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription(ulong, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChangeClubDescription
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 299
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Changes the description of a club.
  example: []
  syntax:
    content: public Task<bool> ChangeClubDescription(ulong userId, string? desc)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user ID of the club owner.
    - id: desc
      type: System.String
      description: The new description for the club.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function ChangeClubDescription(userId As ULong, desc As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription*
  nameWithType.vb: ClubService.ChangeClubDescription(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription(ULong, String)
  name.vb: ChangeClubDescription(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.Disband(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.Disband(System.UInt64)
  id: Disband(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: Disband(ulong)
  nameWithType: ClubService.Disband(ulong)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Disband(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Disband
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 317
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Disbands a club.
  example: []
  syntax:
    content: public Task<(bool, ClubInfo)> Disband(ulong userId)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user ID of the club owner.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
      description: A tuple containing the operation's success status and the <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref> of the disbanded club, if successful.
    content.vb: Public Function Disband(userId As ULong) As Task(Of (Boolean, ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.Disband*
  nameWithType.vb: ClubService.Disband(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.Disband(ULong)
  name.vb: Disband(ULong)
- uid: Mewdeko.Modules.Xp.Services.ClubService.Ban(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.Ban(System.UInt64,System.String)
  id: Ban(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: Ban(ulong, string)
  nameWithType: ClubService.Ban(ulong, string)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Ban(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 336
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Bans a user from a club.
  example: []
  syntax:
    content: public Task<(bool, ClubInfo)> Ban(ulong bannerId, string userName)
    parameters:
    - id: bannerId
      type: System.UInt64
      description: The user ID of the person performing the ban.
    - id: userName
      type: System.String
      description: The name of the user to be banned.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
      description: A tuple indicating success status and the updated <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref>, if successful.
    content.vb: Public Function Ban(bannerId As ULong, userName As String) As Task(Of (Boolean, ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.Ban*
  nameWithType.vb: ClubService.Ban(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.Ban(ULong, String)
  name.vb: Ban(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.UnBan(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.UnBan(System.UInt64,System.String)
  id: UnBan(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: UnBan(ulong, string)
  nameWithType: ClubService.UnBan(ulong, string)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.UnBan(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnBan
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 376
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Unbans a user from a club.
  example: []
  syntax:
    content: public Task<(bool, ClubInfo)> UnBan(ulong ownerUserId, string userName)
    parameters:
    - id: ownerUserId
      type: System.UInt64
      description: The user ID of the club owner or an administrator.
    - id: userName
      type: System.String
      description: The name of the user to be unbanned.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
      description: A tuple indicating success status and the updated <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref>, if successful.
    content.vb: Public Function UnBan(ownerUserId As ULong, userName As String) As Task(Of (Boolean, ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.UnBan*
  nameWithType.vb: ClubService.UnBan(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.UnBan(ULong, String)
  name.vb: UnBan(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.Kick(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.Kick(System.UInt64,System.String)
  id: Kick(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: Kick(ulong, string)
  nameWithType: ClubService.Kick(ulong, string)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Kick(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kick
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 398
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Kicks a user from a club.
  example: []
  syntax:
    content: public Task<(bool, ClubInfo)> Kick(ulong kickerId, string userName)
    parameters:
    - id: kickerId
      type: System.UInt64
      description: The user ID of the person performing the kick.
    - id: userName
      type: System.String
      description: The name of the user to be kicked.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
      description: A tuple indicating success status and the updated <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref>, if successful.
    content.vb: Public Function Kick(kickerId As ULong, userName As String) As Task(Of (Boolean, ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.Kick*
  nameWithType.vb: ClubService.Kick(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.Kick(ULong, String)
  name.vb: Kick(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage(System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage(System.Int32)
  id: GetClubLeaderboardPage(System.Int32)
  parent: Mewdeko.Modules.Xp.Services.ClubService
  langs:
  - csharp
  - vb
  name: GetClubLeaderboardPage(int)
  nameWithType: ClubService.GetClubLeaderboardPage(int)
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetClubLeaderboardPage
    path: src/Mewdeko/Modules/Xp/Services/ClubService.cs
    startLine: 426
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a page of clubs for the leaderboard display.
  example: []
  syntax:
    content: public Task<List<ClubInfo>> GetClubLeaderboardPage(int page)
    parameters:
    - id: page
      type: System.Int32
      description: The page number to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.ClubInfo}}
      description: A list of <xref href="Mewdeko.Database.Models.ClubInfo" data-throw-if-not-resolved="false"></xref> objects representing the clubs on the requested leaderboard page.
    content.vb: Public Function GetClubLeaderboardPage(page As Integer) As Task(Of List(Of ClubInfo))
  overload: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when the provided page number is less than 0.
  nameWithType.vb: ClubService.GetClubLeaderboardPage(Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage(Integer)
  name.vb: GetClubLeaderboardPage(Integer)
references:
- uid: Mewdeko.Modules.Xp.Services
  commentId: N:Mewdeko.Modules.Xp.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Xp.Services
  nameWithType: Mewdeko.Modules.Xp.Services
  fullName: Mewdeko.Modules.Xp.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Xp.Services.ClubService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ClubService>(ClubService, string)
  nameWithType: Extensions.ThrowIfNull<ClubService>(ClubService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Xp.Services.ClubService>(Mewdeko.Modules.Xp.Services.ClubService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of ClubService)(ClubService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Xp.Services.ClubService)(Mewdeko.Modules.Xp.Services.ClubService, String)
  name.vb: ThrowIfNull(Of ClubService)(ClubService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Services.ClubService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Xp.Services.ClubService
    name: ClubService
    href: Mewdeko.Modules.Xp.Services.ClubService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Xp.Services.ClubService
    name: ClubService
    href: Mewdeko.Modules.Xp.Services.ClubService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Services.ClubService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Xp.Services.ClubService
    name: ClubService
    href: Mewdeko.Modules.Xp.Services.ClubService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Xp.Services.ClubService
    name: ClubService
    href: Mewdeko.Modules.Xp.Services.ClubService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Xp.Services.ClubService.#ctor*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.#ctor
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService__ctor_Mewdeko_Database_DbService_System_Net_Http_IHttpClientFactory_
  name: ClubService
  nameWithType: ClubService.ClubService
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ClubService
  nameWithType.vb: ClubService.New
  fullName.vb: Mewdeko.Modules.Xp.Services.ClubService.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: System.Net.Http.IHttpClientFactory
  commentId: T:System.Net.Http.IHttpClientFactory
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.ihttpclientfactory
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: System.Net.Http.IHttpClientFactory
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Mewdeko.Database.Models.ClubInfo
  commentId: T:Mewdeko.Database.Models.ClubInfo
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.ClubInfo.html
  name: ClubInfo
  nameWithType: ClubInfo
  fullName: Mewdeko.Database.Models.ClubInfo
- uid: Mewdeko.Modules.Xp.Services.ClubService.CreateClub*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.CreateClub
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_CreateClub_Discord_IUser_System_String_
  name: CreateClub
  nameWithType: ClubService.CreateClub
  fullName: Mewdeko.Modules.Xp.Services.ClubService.CreateClub
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.ClubInfo}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool, ClubInfo)>
  nameWithType: Task<(bool, ClubInfo)>
  fullName: System.Threading.Tasks.Task<(bool, Mewdeko.Database.Models.ClubInfo)>
  nameWithType.vb: Task(Of (Boolean, ClubInfo))
  fullName.vb: System.Threading.Tasks.Task(Of (Boolean, Mewdeko.Database.Models.ClubInfo))
  name.vb: Task(Of (Boolean, ClubInfo))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
  - name: )
  - name: )
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Xp.Services.ClubService.TransferClub*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.TransferClub
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_TransferClub_Discord_IUser_Discord_IUser_
  name: TransferClub
  nameWithType: ClubService.TransferClub
  fullName: Mewdeko.Modules.Xp.Services.ClubService.TransferClub
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.ClubInfo}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.ClubInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ClubInfo>
  nameWithType: Task<ClubInfo>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.ClubInfo>
  nameWithType.vb: Task(Of ClubInfo)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.ClubInfo)
  name.vb: Task(Of ClubInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
    href: Mewdeko.Database.Models.ClubInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
    href: Mewdeko.Database.Models.ClubInfo.html
  - name: )
- uid: Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_ToggleAdmin_Discord_IUser_Discord_IUser_
  name: ToggleAdmin
  nameWithType: ClubService.ToggleAdmin
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ToggleAdmin
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_GetClubByMember_Discord_IUser_
  name: GetClubByMember
  nameWithType: ClubService.GetClubByMember
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubByMember
- uid: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_SetClubIcon_System_UInt64_System_Uri_
  name: SetClubIcon
  nameWithType: ClubService.SetClubIcon
  fullName: Mewdeko.Modules.Xp.Services.ClubService.SetClubIcon
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.GetClubByName
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_GetClubByName_System_String_Mewdeko_Database_Models_ClubInfo__
  name: GetClubByName
  nameWithType: ClubService.GetClubByName
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubByName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_ApplyToClub_Discord_IUser_Mewdeko_Database_Models_ClubInfo_
  name: ApplyToClub
  nameWithType: ClubService.ApplyToClub
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ApplyToClub
- uid: Mewdeko.Database.Models.DiscordUser
  commentId: T:Mewdeko.Database.Models.DiscordUser
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser
  nameWithType: DiscordUser
  fullName: Mewdeko.Database.Models.DiscordUser
- uid: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_AcceptApplication_System_UInt64_System_String_
  name: AcceptApplication
  nameWithType: ClubService.AcceptApplication
  fullName: Mewdeko.Modules.Xp.Services.ClubService.AcceptApplication
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.DiscordUser}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Database.Models.DiscordUser}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool, DiscordUser)>
  nameWithType: Task<(bool, DiscordUser)>
  fullName: System.Threading.Tasks.Task<(bool, Mewdeko.Database.Models.DiscordUser)>
  nameWithType.vb: Task(Of (Boolean, DiscordUser))
  fullName.vb: System.Threading.Tasks.Task(Of (Boolean, Mewdeko.Database.Models.DiscordUser))
  name.vb: Task(Of (Boolean, DiscordUser))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
  - name: )
  - name: )
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_GetClubWithBansAndApplications_System_UInt64_
  name: GetClubWithBansAndApplications
  nameWithType: ClubService.GetClubWithBansAndApplications
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubWithBansAndApplications
- uid: Mewdeko.Modules.Xp.Services.ClubService.LeaveClub*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.LeaveClub
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_LeaveClub_Discord_IUser_
  name: LeaveClub
  nameWithType: ClubService.LeaveClub
  fullName: Mewdeko.Modules.Xp.Services.ClubService.LeaveClub
- uid: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_ChangeClubLevelReq_System_UInt64_System_Int32_
  name: ChangeClubLevelReq
  nameWithType: ClubService.ChangeClubLevelReq
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubLevelReq
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_ChangeClubDescription_System_UInt64_System_String_
  name: ChangeClubDescription
  nameWithType: ClubService.ChangeClubDescription
  fullName: Mewdeko.Modules.Xp.Services.ClubService.ChangeClubDescription
- uid: Mewdeko.Modules.Xp.Services.ClubService.Disband*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.Disband
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_Disband_System_UInt64_
  name: Disband
  nameWithType: ClubService.Disband
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Disband
- uid: Mewdeko.Modules.Xp.Services.ClubService.Ban*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.Ban
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_Ban_System_UInt64_System_String_
  name: Ban
  nameWithType: ClubService.Ban
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Ban
- uid: Mewdeko.Modules.Xp.Services.ClubService.UnBan*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.UnBan
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_UnBan_System_UInt64_System_String_
  name: UnBan
  nameWithType: ClubService.UnBan
  fullName: Mewdeko.Modules.Xp.Services.ClubService.UnBan
- uid: Mewdeko.Modules.Xp.Services.ClubService.Kick*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.Kick
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_Kick_System_UInt64_System_String_
  name: Kick
  nameWithType: ClubService.Kick
  fullName: Mewdeko.Modules.Xp.Services.ClubService.Kick
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage*
  commentId: Overload:Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage
  href: Mewdeko.Modules.Xp.Services.ClubService.html#Mewdeko_Modules_Xp_Services_ClubService_GetClubLeaderboardPage_System_Int32_
  name: GetClubLeaderboardPage
  nameWithType: ClubService.GetClubLeaderboardPage
  fullName: Mewdeko.Modules.Xp.Services.ClubService.GetClubLeaderboardPage
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.ClubInfo}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.ClubInfo}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<ClubInfo>>
  nameWithType: Task<List<ClubInfo>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Database.Models.ClubInfo>>
  nameWithType.vb: Task(Of List(Of ClubInfo))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Database.Models.ClubInfo))
  name.vb: Task(Of List(Of ClubInfo))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
    href: Mewdeko.Database.Models.ClubInfo.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.ClubInfo
    name: ClubInfo
    href: Mewdeko.Database.Models.ClubInfo.html
  - name: )
  - name: )
