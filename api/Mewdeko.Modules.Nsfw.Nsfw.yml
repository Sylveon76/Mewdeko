### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Nsfw.Nsfw
  commentId: T:Mewdeko.Modules.Nsfw.Nsfw
  id: Nsfw
  parent: Mewdeko.Modules.Nsfw
  children:
  - Mewdeko.Modules.Nsfw.Nsfw.#ctor(Fergun.Interactive.InteractiveService,MartineApiNet.MartineApi,Mewdeko.Services.GuildSettingsService,System.Net.Http.HttpClient,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Services.IBotCredentials)
  - Mewdeko.Modules.Nsfw.Nsfw.Anal
  - Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs(System.Int32)
  - Mewdeko.Modules.Nsfw.Nsfw.AutoButts(System.Int32)
  - Mewdeko.Modules.Nsfw.Nsfw.AutoHentai(System.Int32,System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.Bondage
  - Mewdeko.Modules.Nsfw.Nsfw.Boobs
  - Mewdeko.Modules.Nsfw.Nsfw.Butts
  - Mewdeko.Modules.Nsfw.Nsfw.Danbooru(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Derpibooru(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.E621(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Gelbooru(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Hentai(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.HentaiGif
  - Mewdeko.Modules.Nsfw.Nsfw.Konachan(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.NHentai(System.Int32)
  - Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32)
  - Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String,System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist(System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.Porn
  - Mewdeko.Modules.Nsfw.Nsfw.PornBomb(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Pussy
  - Mewdeko.Modules.Nsfw.Nsfw.Realbooru(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw(System.String)
  - Mewdeko.Modules.Nsfw.Nsfw.Rule34(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Safebooru(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Sankaku(System.String[])
  - Mewdeko.Modules.Nsfw.Nsfw.Yandere(System.String[])
  langs:
  - csharp
  - vb
  name: Nsfw
  nameWithType: Nsfw
  fullName: Mewdeko.Modules.Nsfw.Nsfw
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Nsfw
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 27
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: The most used module in Mewdeko, nsfw.
  example: []
  syntax:
    content: 'public class Nsfw : MewdekoModuleBase<ISearchImagesService>, IModuleBase'
    content.vb: Public Class Nsfw Inherits MewdekoModuleBase(Of ISearchImagesService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Nsfw.Nsfw.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.#ctor(Fergun.Interactive.InteractiveService,MartineApiNet.MartineApi,Mewdeko.Services.GuildSettingsService,System.Net.Http.HttpClient,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Services.IBotCredentials)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.#ctor(Fergun.Interactive.InteractiveService,MartineApiNet.MartineApi,Mewdeko.Services.GuildSettingsService,System.Net.Http.HttpClient,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Services.IBotCredentials)
  id: '#ctor(Fergun.Interactive.InteractiveService,MartineApiNet.MartineApi,Mewdeko.Services.GuildSettingsService,System.Net.Http.HttpClient,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Services.IBotCredentials)'
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Nsfw(InteractiveService, MartineApi, GuildSettingsService, HttpClient, BotConfigService, IBotCredentials)
  nameWithType: Nsfw.Nsfw(InteractiveService, MartineApi, GuildSettingsService, HttpClient, BotConfigService, IBotCredentials)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Nsfw(Fergun.Interactive.InteractiveService, MartineApiNet.MartineApi, Mewdeko.Services.GuildSettingsService, System.Net.Http.HttpClient, Mewdeko.Services.Settings.BotConfigService, Mewdeko.Services.IBotCredentials)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 27
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: The most used module in Mewdeko, nsfw.
  example: []
  syntax:
    content: public Nsfw(InteractiveService interactivity, MartineApi martineApi, GuildSettingsService guildSettings, HttpClient client, BotConfigService config, IBotCredentials credentials)
    parameters:
    - id: interactivity
      type: Fergun.Interactive.InteractiveService
      description: ''
    - id: martineApi
      type: MartineApiNet.MartineApi
      description: ''
    - id: guildSettings
      type: Mewdeko.Services.GuildSettingsService
      description: ''
    - id: client
      type: System.Net.Http.HttpClient
      description: ''
    - id: config
      type: Mewdeko.Services.Settings.BotConfigService
      description: ''
    - id: credentials
      type: Mewdeko.Services.IBotCredentials
      description: ''
    content.vb: Public Sub New(interactivity As InteractiveService, martineApi As MartineApi, guildSettings As GuildSettingsService, client As HttpClient, config As BotConfigService, credentials As IBotCredentials)
  overload: Mewdeko.Modules.Nsfw.Nsfw.#ctor*
  nameWithType.vb: Nsfw.New(InteractiveService, MartineApi, GuildSettingsService, HttpClient, BotConfigService, IBotCredentials)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.New(Fergun.Interactive.InteractiveService, MartineApiNet.MartineApi, Mewdeko.Services.GuildSettingsService, System.Net.Http.HttpClient, Mewdeko.Services.Settings.BotConfigService, Mewdeko.Services.IBotCredentials)
  name.vb: New(InteractiveService, MartineApi, GuildSettingsService, HttpClient, BotConfigService, IBotCredentials)
- uid: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw(System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw(System.String)
  id: RedditNsfw(System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: RedditNsfw(string)
  nameWithType: Nsfw.RedditNsfw(string)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RedditNsfw
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 50
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to retrieve NSFW content from a specified subreddit.
  remarks: >-
    This command requires the context to be in a guild.

    NSFW (Not Safe For Work) content is required for this command.

    The command is rate-limited to 10 uses within a specified time frame.
  example: []
  syntax:
    content: >-
      [Cmd("RedditNsfw")]

      [Aliases("RedditNsfw")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      [Ratelimit(10)]

      public Task RedditNsfw(string subreddit)
    parameters:
    - id: subreddit
      type: System.String
      description: The name of the subreddit from which to fetch the content.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("RedditNsfw")>

      <Aliases("RedditNsfw")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      <Ratelimit(10)>

      Public Function RedditNsfw(subreddit As String) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: RedditNsfw
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: RedditNsfw
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 10
  nameWithType.vb: Nsfw.RedditNsfw(String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw(String)
  name.vb: RedditNsfw(String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentai(System.Int32)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentai(System.Int32)
  id: NHentai(System.Int32)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentai(int)
  nameWithType: Nsfw.NHentai(int)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentai(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentai
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display information about a manga from the NHentai website.
  remarks: >-
    This command requires the context to be in a guild.

    NSFW (Not Safe For Work) content is required for this command.
  example: []
  syntax:
    content: >-
      [Cmd("NHentai")]

      [Aliases("NHentai")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentai(int num)
    parameters:
    - id: num
      type: System.Int32
      description: The identification number of the manga to fetch.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("NHentai")>

      <Aliases("NHentai")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentai(num As Integer) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentai*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentai
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentai
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentai(Integer)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentai(Integer)
  name.vb: NHentai(Integer)
- uid: Mewdeko.Modules.Nsfw.Nsfw.HentaiGif
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.HentaiGif
  id: HentaiGif
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: HentaiGif()
  nameWithType: Nsfw.HentaiGif()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.HentaiGif()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HentaiGif
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 233
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "HENTAI_GIF" subreddit.
  example: []
  syntax:
    content: >-
      [Cmd("HentaiGif")]

      [Aliases("HentaiGif")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task HentaiGif()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("HentaiGif")>

      <Aliases("HentaiGif")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function HentaiGif() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.HentaiGif*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: HentaiGif
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: HentaiGif
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Nsfw.Nsfw.Pussy
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Pussy
  id: Pussy
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Pussy()
  nameWithType: Nsfw.Pussy()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Pussy()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pussy
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 240
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "pussy" subreddit.
  example: []
  syntax:
    content: >-
      [Cmd("Pussy")]

      [Aliases("Pussy")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task Pussy()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Pussy")>

      <Aliases("Pussy")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function Pussy() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Pussy*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pussy
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pussy
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Nsfw.Nsfw.Anal
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Anal
  id: Anal
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Anal()
  nameWithType: Nsfw.Anal()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Anal()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Anal
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 247
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "anal" subreddit.
  example: []
  syntax:
    content: >-
      [Cmd("Anal")]

      [Aliases("Anal")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task Anal()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Anal")>

      <Aliases("Anal")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function Anal() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Anal*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Anal
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Anal
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Nsfw.Nsfw.Porn
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Porn
  id: Porn
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Porn()
  nameWithType: Nsfw.Porn()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Porn()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Porn
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 254
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "porn" subreddit.
  example: []
  syntax:
    content: >-
      [Cmd("Porn")]

      [Aliases("Porn")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task Porn()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Porn")>

      <Aliases("Porn")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function Porn() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Porn*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Porn
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Porn
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Nsfw.Nsfw.Bondage
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Bondage
  id: Bondage
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Bondage()
  nameWithType: Nsfw.Bondage()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Bondage()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Bondage
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 261
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "bondage" subreddit.
  example: []
  syntax:
    content: >-
      [Cmd("Bondage")]

      [Aliases("Bondage")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task Bondage()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Bondage")>

      <Aliases("Bondage")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function Bondage() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Bondage*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bondage
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bondage
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String)
  id: NHentaiSearch(System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentaiSearch(string)
  nameWithType: Nsfw.NHentaiSearch(string)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentaiSearch
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 269
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to search for hentai manga on NHentai based on the provided search query.
  example: []
  syntax:
    content: >-
      [Cmd("NHentaiSearch")]

      [Aliases("NHentaiSearch")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentaiSearch(string search)
    parameters:
    - id: search
      type: System.String
      description: The search query for NHentai.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NHentaiSearch")>

      <Aliases("NHentaiSearch")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentaiSearch(search As String) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentaiSearch(String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(String)
  name.vb: NHentaiSearch(String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.String)
  id: NHentaiSearch(System.String,System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentaiSearch(string, string)
  nameWithType: Nsfw.NHentaiSearch(string, string)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentaiSearch
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 279
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to search for hentai manga on NHentai based on the provided search query and blacklist.
  example: []
  syntax:
    content: >-
      [Cmd("NHentaiSearch")]

      [Aliases("NHentaiSearch")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentaiSearch(string search, string blacklist)
    parameters:
    - id: search
      type: System.String
      description: The search query for NHentai.
    - id: blacklist
      type: System.String
      description: The blacklist for NHentai search.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NHentaiSearch")>

      <Aliases("NHentaiSearch")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentaiSearch(search As String, blacklist As String) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentaiSearch(String, String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(String, String)
  name.vb: NHentaiSearch(String, String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32)
  id: NHentaiSearch(System.String,System.Int32)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentaiSearch(string, int)
  nameWithType: Nsfw.NHentaiSearch(string, int)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(string, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentaiSearch
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 289
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to search for hentai manga on NHentai based on the provided search query and page number.
  example: []
  syntax:
    content: >-
      [Cmd("NHentaiSearch")]

      [Aliases("NHentaiSearch")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentaiSearch(string search, int page)
    parameters:
    - id: search
      type: System.String
      description: The search query for NHentai.
    - id: page
      type: System.Int32
      description: The page number for NHentai search.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NHentaiSearch")>

      <Aliases("NHentaiSearch")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentaiSearch(search As String, page As Integer) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentaiSearch(String, Integer)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(String, Integer)
  name.vb: NHentaiSearch(String, Integer)
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String)
  id: NHentaiSearch(System.String,System.Int32,System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentaiSearch(string, int, string)
  nameWithType: Nsfw.NHentaiSearch(string, int, string)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(string, int, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentaiSearch
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 300
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to search for hentai manga on NHentai based on the provided search query, page number, and type.
  example: []
  syntax:
    content: >-
      [Cmd("NHentaiSearch")]

      [Aliases("NHentaiSearch")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentaiSearch(string search, int page, string type)
    parameters:
    - id: search
      type: System.String
      description: The search query for NHentai.
    - id: page
      type: System.Int32
      description: The page number for NHentai search.
    - id: type
      type: System.String
      description: The type of NHentai search.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NHentaiSearch")>

      <Aliases("NHentaiSearch")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentaiSearch(search As String, page As Integer, type As String) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentaiSearch(String, Integer, String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(String, Integer, String)
  name.vb: NHentaiSearch(String, Integer, String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String,System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(System.String,System.Int32,System.String,System.String)
  id: NHentaiSearch(System.String,System.Int32,System.String,System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NHentaiSearch(string, int, string, string)
  nameWithType: Nsfw.NHentaiSearch(string, int, string, string)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(string, int, string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NHentaiSearch
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 312
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to search for hentai manga on NHentai based on the provided search query, page number, type, and blacklist.
  example: []
  syntax:
    content: >-
      [Cmd("NHentaiSearch")]

      [Aliases("NHentaiSearch")]

      [RequireContext(ContextType.Guild)]

      [RequireNsfw]

      public Task NHentaiSearch(string search, int page, string type, string blacklist)
    parameters:
    - id: search
      type: System.String
      description: The search query for NHentai.
    - id: page
      type: System.Int32
      description: The page number for NHentai search.
    - id: type
      type: System.String
      description: The type of NHentai search.
    - id: blacklist
      type: System.String
      description: The blacklist for NHentai search.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NHentaiSearch")>

      <Aliases("NHentaiSearch")>

      <RequireContext(ContextType.Guild)>

      <RequireNsfw>

      Public Function NHentaiSearch(search As String, page As Integer, type As String, blacklist As String) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NHentaiSearch
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  nameWithType.vb: Nsfw.NHentaiSearch(String, Integer, String, String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch(String, Integer, String, String)
  name.vb: NHentaiSearch(String, Integer, String, String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai(System.Int32,System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.AutoHentai(System.Int32,System.String)
  id: AutoHentai(System.Int32,System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: AutoHentai(int, string?)
  nameWithType: Nsfw.AutoHentai(int, string?)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai(int, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoHentai
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 322
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to start or stop automatic posting of NSFW content at specified intervals in the current guild channel.
  example: []
  syntax:
    content: >-
      [Cmd("AutoHentai")]

      [Aliases("AutoHentai")]

      [RequireNsfw]

      [RequireContext(ContextType.Guild)]

      [UserPerm(ChannelPermission.ManageMessages)]

      public Task AutoHentai(int interval = 0, string? tags = null)
    parameters:
    - id: interval
      type: System.Int32
      description: The interval in seconds between each automatic posting. Set to 0 to stop automatic posting.
    - id: tags
      type: System.String
      description: Optional tags to filter the NSFW content. Separate multiple tags with '|'. Leave blank for random NSFW content.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("AutoHentai")>

      <Aliases("AutoHentai")>

      <RequireNsfw>

      <RequireContext(ContextType.Guild)>

      <UserPerm(ChannelPermission.ManageMessages)>

      Public Function AutoHentai(interval As Integer = 0, tags As String = Nothing) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoHentai
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoHentai
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.ChannelPermission)
    arguments:
    - type: Discord.ChannelPermission
      value: "8192"
  nameWithType.vb: Nsfw.AutoHentai(Integer, String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai(Integer, String)
  name.vb: AutoHentai(Integer, String)
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs(System.Int32)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs(System.Int32)
  id: AutoBoobs(System.Int32)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: AutoBoobs(int)
  nameWithType: Nsfw.AutoBoobs(int)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoBoobs
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 380
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to start or stop automatic posting of NSFW content from the "boobs" subreddit at specified intervals in the current guild channel.
  example: []
  syntax:
    content: >-
      [Cmd("AutoBoobs")]

      [Aliases("AutoBoobs")]

      [RequireNsfw]

      [RequireContext(ContextType.Guild)]

      [UserPerm(ChannelPermission.ManageMessages)]

      public Task AutoBoobs(int interval = 0)
    parameters:
    - id: interval
      type: System.Int32
      description: The interval in seconds between each automatic posting. Set to 0 to stop automatic posting.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("AutoBoobs")>

      <Aliases("AutoBoobs")>

      <RequireNsfw>

      <RequireContext(ContextType.Guild)>

      <UserPerm(ChannelPermission.ManageMessages)>

      Public Function AutoBoobs(interval As Integer = 0) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoBoobs
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoBoobs
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.ChannelPermission)
    arguments:
    - type: Discord.ChannelPermission
      value: "8192"
  nameWithType.vb: Nsfw.AutoBoobs(Integer)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs(Integer)
  name.vb: AutoBoobs(Integer)
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoButts(System.Int32)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.AutoButts(System.Int32)
  id: AutoButts(System.Int32)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: AutoButts(int)
  nameWithType: Nsfw.AutoButts(int)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoButts(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoButts
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 423
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to start or stop automatic posting of NSFW content from the "butts" subreddit at specified intervals in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("AutoButts")]

      [Aliases("AutoButts")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      [UserPerm(ChannelPermission.ManageMessages)]

      public Task AutoButts(int interval = 0)
    parameters:
    - id: interval
      type: System.Int32
      description: The interval in seconds between each automatic posting. Set to 0 to stop automatic posting.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("AutoButts")>

      <Aliases("AutoButts")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      <UserPerm(ChannelPermission.ManageMessages)>

      Public Function AutoButts(interval As Integer = 0) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.AutoButts*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoButts
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AutoButts
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.ChannelPermission)
    arguments:
    - type: Discord.ChannelPermission
      value: "8192"
  nameWithType.vb: Nsfw.AutoButts(Integer)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.AutoButts(Integer)
  name.vb: AutoButts(Integer)
- uid: Mewdeko.Modules.Nsfw.Nsfw.Hentai(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Hentai(System.String[])
  id: Hentai(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Hentai(params string[])
  nameWithType: Nsfw.Hentai(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Hentai(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Hentai
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 469
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "hentai" subreddit with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Hentai")]

      [Aliases("Hentai")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Hentai(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the "hentai" subreddit.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Hentai")>

      <Aliases("Hentai")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Hentai(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Hentai*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Hentai
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Hentai
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Hentai(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Hentai(ParamArray String())
  name.vb: Hentai(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb(System.String[])
  id: HentaiBomb(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: HentaiBomb(params string[])
  nameWithType: Nsfw.HentaiBomb(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HentaiBomb
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 479
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to initiate a "hentai bomb" by fetching and displaying NSFW content from multiple sources with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("HentaiBomb")]

      [Aliases("HentaiBomb")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task HentaiBomb(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from each source.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("HentaiBomb")>

      <Aliases("HentaiBomb")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function HentaiBomb(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: HentaiBomb
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: HentaiBomb
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.HentaiBomb(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb(ParamArray String())
  name.vb: HentaiBomb(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.PornBomb(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.PornBomb(System.String[])
  id: PornBomb(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: PornBomb(params string[])
  nameWithType: Nsfw.PornBomb(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.PornBomb(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PornBomb
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 521
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to initiate a "porn bomb" by fetching and displaying NSFW content from a RealBooru source with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("PornBomb")]

      [Aliases("PornBomb")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task PornBomb(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the RealBooru source.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("PornBomb")>

      <Aliases("PornBomb")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function PornBomb(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.PornBomb*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: PornBomb
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: PornBomb
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.PornBomb(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.PornBomb(ParamArray String())
  name.vb: PornBomb(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Yandere(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Yandere(System.String[])
  id: Yandere(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Yandere(params string[])
  nameWithType: Nsfw.Yandere(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Yandere(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Yandere
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 563
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Yandere image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Yandere")]

      [Aliases("Yandere")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Yandere(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Yandere image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Yandere")>

      <Aliases("Yandere")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Yandere(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Yandere*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Yandere
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Yandere
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Yandere(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Yandere(ParamArray String())
  name.vb: Yandere(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Konachan(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Konachan(System.String[])
  id: Konachan(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Konachan(params string[])
  nameWithType: Nsfw.Konachan(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Konachan(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Konachan
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 573
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Konachan image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Konachan")]

      [Aliases("Konachan")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Konachan(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Konachan image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Konachan")>

      <Aliases("Konachan")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Konachan(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Konachan*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Konachan
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Konachan
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Konachan(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Konachan(ParamArray String())
  name.vb: Konachan(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Sankaku(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Sankaku(System.String[])
  id: Sankaku(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Sankaku(params string[])
  nameWithType: Nsfw.Sankaku(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Sankaku(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Sankaku
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 583
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Sankaku image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Sankaku")]

      [Aliases("Sankaku")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Sankaku(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Sankaku image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Sankaku")>

      <Aliases("Sankaku")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Sankaku(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Sankaku*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sankaku
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sankaku
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Sankaku(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Sankaku(ParamArray String())
  name.vb: Sankaku(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.E621(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.E621(System.String[])
  id: E621(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: E621(params string[])
  nameWithType: Nsfw.E621(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.E621(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: E621
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 593
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the E621 image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("E621")]

      [Aliases("E621")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task E621(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the E621 image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("E621")>

      <Aliases("E621")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function E621(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.E621*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: E621
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: E621
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.E621(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.E621(ParamArray String())
  name.vb: E621(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Rule34(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Rule34(System.String[])
  id: Rule34(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Rule34(params string[])
  nameWithType: Nsfw.Rule34(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Rule34(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Rule34
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 603
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Rule34 image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Rule34")]

      [Aliases("Rule34")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Rule34(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Rule34 image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Rule34")>

      <Aliases("Rule34")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Rule34(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Rule34*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Rule34
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Rule34
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Rule34(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Rule34(ParamArray String())
  name.vb: Rule34(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Danbooru(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Danbooru(System.String[])
  id: Danbooru(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Danbooru(params string[])
  nameWithType: Nsfw.Danbooru(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Danbooru(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Danbooru
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 613
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Danbooru image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Danbooru")]

      [Aliases("Danbooru")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Danbooru(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Danbooru image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Danbooru")>

      <Aliases("Danbooru")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Danbooru(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Danbooru*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Danbooru
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Danbooru
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Danbooru(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Danbooru(ParamArray String())
  name.vb: Danbooru(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Gelbooru(System.String[])
  id: Gelbooru(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Gelbooru(params string[])
  nameWithType: Nsfw.Gelbooru(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Gelbooru
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 623
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Gelbooru image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Gelbooru")]

      [Aliases("Gelbooru")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Gelbooru(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Gelbooru image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Gelbooru")>

      <Aliases("Gelbooru")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Gelbooru(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Gelbooru
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Gelbooru
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Gelbooru(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru(ParamArray String())
  name.vb: Gelbooru(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Derpibooru(System.String[])
  id: Derpibooru(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Derpibooru(params string[])
  nameWithType: Nsfw.Derpibooru(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Derpibooru
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 633
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Derpibooru image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Derpibooru")]

      [Aliases("Derpibooru")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Derpibooru(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Derpibooru image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Derpibooru")>

      <Aliases("Derpibooru")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Derpibooru(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Derpibooru
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Derpibooru
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Derpibooru(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru(ParamArray String())
  name.vb: Derpibooru(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Safebooru(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Safebooru(System.String[])
  id: Safebooru(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Safebooru(params string[])
  nameWithType: Nsfw.Safebooru(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Safebooru(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Safebooru
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 643
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Safebooru image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Safebooru")]

      [Aliases("Safebooru")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Safebooru(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Safebooru image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Safebooru")>

      <Aliases("Safebooru")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Safebooru(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Safebooru*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Safebooru
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Safebooru
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Safebooru(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Safebooru(ParamArray String())
  name.vb: Safebooru(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Realbooru(System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Realbooru(System.String[])
  id: Realbooru(System.String[])
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Realbooru(params string[])
  nameWithType: Nsfw.Realbooru(params string[])
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Realbooru(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Realbooru
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 653
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the Realbooru image board with optional tags in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Realbooru")]

      [Aliases("Realbooru")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Realbooru(params string[] tags)
    parameters:
    - id: tags
      type: System.String[]
      description: Optional tags to filter the NSFW content from the Realbooru image board.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Realbooru")>

      <Aliases("Realbooru")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Realbooru(ParamArray tags As String()) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Realbooru*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Realbooru
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Realbooru
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  nameWithType.vb: Nsfw.Realbooru(ParamArray String())
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.Realbooru(ParamArray String())
  name.vb: Realbooru(ParamArray String())
- uid: Mewdeko.Modules.Nsfw.Nsfw.Boobs
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Boobs
  id: Boobs
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Boobs()
  nameWithType: Nsfw.Boobs()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Boobs()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Boobs
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 662
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "boobs" subreddit in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Boobs")]

      [Aliases("Boobs")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Boobs()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Boobs")>

      <Aliases("Boobs")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Boobs() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Boobs*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Boobs
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Boobs
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
- uid: Mewdeko.Modules.Nsfw.Nsfw.Butts
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.Butts
  id: Butts
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: Butts()
  nameWithType: Nsfw.Butts()
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Butts()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Butts
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 670
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to fetch and display NSFW content from the "ass" subreddit in the current guild channel or direct messages.
  example: []
  syntax:
    content: >-
      [Cmd("Butts")]

      [Aliases("Butts")]

      [RequireNsfw(Group = "nsfw_or_dm")]

      [RequireContext(ContextType.DM, Group = "nsfw_or_dm")]

      public Task Butts()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Butts")>

      <Aliases("Butts")>

      <RequireNsfw(Group:="nsfw_or_dm")>

      <RequireContext(ContextType.DM, Group:="nsfw_or_dm")>

      Public Function Butts() As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.Butts*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Butts
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Butts
  - type: Discord.Commands.RequireNsfwAttribute
    ctor: Discord.Commands.RequireNsfwAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 2
    namedArguments:
    - name: Group
      type: System.String
      value: nsfw_or_dm
- uid: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist(System.String)
  commentId: M:Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist(System.String)
  id: NsfwTagBlacklist(System.String)
  parent: Mewdeko.Modules.Nsfw.Nsfw
  langs:
  - csharp
  - vb
  name: NsfwTagBlacklist(string?)
  nameWithType: Nsfw.NsfwTagBlacklist(string?)
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NsfwTagBlacklist
    path: src/Mewdeko/Modules/Nsfw/Nsfw.cs
    startLine: 679
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Command to manage the blacklist of NSFW tags in the current guild.
  example: []
  syntax:
    content: >-
      [Cmd("NsfwTagBlacklist")]

      [Aliases("NsfwTagBlacklist")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageMessages)]

      public Task NsfwTagBlacklist(string? tag = null)
    parameters:
    - id: tag
      type: System.String
      description: Optional tag to add or remove from the blacklist. If not provided, displays the current list of blacklisted tags.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("NsfwTagBlacklist")>

      <Aliases("NsfwTagBlacklist")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageMessages)>

      Public Function NsfwTagBlacklist(tag As String = Nothing) As Task
  overload: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NsfwTagBlacklist
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NsfwTagBlacklist
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8192"
  nameWithType.vb: Nsfw.NsfwTagBlacklist(String)
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist(String)
  name.vb: NsfwTagBlacklist(String)
references:
- uid: Mewdeko.Modules.Nsfw
  commentId: N:Mewdeko.Modules.Nsfw
  href: Mewdeko.html
  name: Mewdeko.Modules.Nsfw
  nameWithType: Mewdeko.Modules.Nsfw
  fullName: Mewdeko.Modules.Nsfw
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<ISearchImagesService>
  nameWithType: MewdekoModuleBase<ISearchImagesService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Nsfw.ISearchImagesService>
  nameWithType.vb: MewdekoModuleBase(Of ISearchImagesService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Nsfw.ISearchImagesService)
  name.vb: MewdekoModuleBase(Of ISearchImagesService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Nsfw.ISearchImagesService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<ISearchImagesService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Nsfw.ISearchImagesService>.Service
  nameWithType.vb: MewdekoModuleBase(Of ISearchImagesService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Nsfw.ISearchImagesService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Nsfw.Nsfw.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<Nsfw>(Nsfw, string)
  nameWithType: Extensions.ThrowIfNull<Nsfw>(Nsfw, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Nsfw.Nsfw>(Mewdeko.Modules.Nsfw.Nsfw, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Nsfw)(Nsfw, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Nsfw.Nsfw)(Mewdeko.Modules.Nsfw.Nsfw, String)
  name.vb: ThrowIfNull(Of Nsfw)(Nsfw, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Nsfw.Nsfw,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Nsfw.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.Nsfw.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Nsfw.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.Nsfw.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Nsfw.Nsfw,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Nsfw.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.Nsfw.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Nsfw.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.Nsfw.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Nsfw.Nsfw.#ctor*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.#ctor
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw__ctor_Fergun_Interactive_InteractiveService_MartineApiNet_MartineApi_Mewdeko_Services_GuildSettingsService_System_Net_Http_HttpClient_Mewdeko_Services_Settings_BotConfigService_Mewdeko_Services_IBotCredentials_
  name: Nsfw
  nameWithType: Nsfw.Nsfw
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Nsfw
  nameWithType.vb: Nsfw.New
  fullName.vb: Mewdeko.Modules.Nsfw.Nsfw.New
  name.vb: New
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: MartineApiNet.MartineApi
  commentId: T:MartineApiNet.MartineApi
  parent: MartineApiNet
  isExternal: true
  name: MartineApi
  nameWithType: MartineApi
  fullName: MartineApiNet.MartineApi
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Mewdeko.Services.Settings.BotConfigService
  commentId: T:Mewdeko.Services.Settings.BotConfigService
  parent: Mewdeko.Services.Settings
  href: Mewdeko.Services.Settings.BotConfigService.html
  name: BotConfigService
  nameWithType: BotConfigService
  fullName: Mewdeko.Services.Settings.BotConfigService
- uid: Mewdeko.Services.IBotCredentials
  commentId: T:Mewdeko.Services.IBotCredentials
  parent: Mewdeko.Services
  href: Mewdeko.Services.IBotCredentials.html
  name: IBotCredentials
  nameWithType: IBotCredentials
  fullName: Mewdeko.Services.IBotCredentials
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: MartineApiNet
  commentId: N:MartineApiNet
  isExternal: true
  name: MartineApiNet
  nameWithType: MartineApiNet
  fullName: MartineApiNet
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Mewdeko.Services.Settings
  commentId: N:Mewdeko.Services.Settings
  href: Mewdeko.html
  name: Mewdeko.Services.Settings
  nameWithType: Mewdeko.Services.Settings
  fullName: Mewdeko.Services.Settings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
- uid: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_RedditNsfw_System_String_
  name: RedditNsfw
  nameWithType: Nsfw.RedditNsfw
  fullName: Mewdeko.Modules.Nsfw.Nsfw.RedditNsfw
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentai*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.NHentai
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_NHentai_System_Int32_
  name: NHentai
  nameWithType: Nsfw.NHentai
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentai
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Nsfw.Nsfw.HentaiGif*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.HentaiGif
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_HentaiGif
  name: HentaiGif
  nameWithType: Nsfw.HentaiGif
  fullName: Mewdeko.Modules.Nsfw.Nsfw.HentaiGif
- uid: Mewdeko.Modules.Nsfw.Nsfw.Pussy*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Pussy
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Pussy
  name: Pussy
  nameWithType: Nsfw.Pussy
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Pussy
- uid: Mewdeko.Modules.Nsfw.Nsfw.Anal*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Anal
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Anal
  name: Anal
  nameWithType: Nsfw.Anal
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Anal
- uid: Mewdeko.Modules.Nsfw.Nsfw.Porn*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Porn
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Porn
  name: Porn
  nameWithType: Nsfw.Porn
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Porn
- uid: Mewdeko.Modules.Nsfw.Nsfw.Bondage*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Bondage
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Bondage
  name: Bondage
  nameWithType: Nsfw.Bondage
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Bondage
- uid: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_NHentaiSearch_System_String_
  name: NHentaiSearch
  nameWithType: Nsfw.NHentaiSearch
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NHentaiSearch
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.AutoHentai
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_AutoHentai_System_Int32_System_String_
  name: AutoHentai
  nameWithType: Nsfw.AutoHentai
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoHentai
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_AutoBoobs_System_Int32_
  name: AutoBoobs
  nameWithType: Nsfw.AutoBoobs
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoBoobs
- uid: Mewdeko.Modules.Nsfw.Nsfw.AutoButts*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.AutoButts
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_AutoButts_System_Int32_
  name: AutoButts
  nameWithType: Nsfw.AutoButts
  fullName: Mewdeko.Modules.Nsfw.Nsfw.AutoButts
- uid: Mewdeko.Modules.Nsfw.Nsfw.Hentai*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Hentai
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Hentai_System_String___
  name: Hentai
  nameWithType: Nsfw.Hentai
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Hentai
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_HentaiBomb_System_String___
  name: HentaiBomb
  nameWithType: Nsfw.HentaiBomb
  fullName: Mewdeko.Modules.Nsfw.Nsfw.HentaiBomb
- uid: Mewdeko.Modules.Nsfw.Nsfw.PornBomb*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.PornBomb
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_PornBomb_System_String___
  name: PornBomb
  nameWithType: Nsfw.PornBomb
  fullName: Mewdeko.Modules.Nsfw.Nsfw.PornBomb
- uid: Mewdeko.Modules.Nsfw.Nsfw.Yandere*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Yandere
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Yandere_System_String___
  name: Yandere
  nameWithType: Nsfw.Yandere
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Yandere
- uid: Mewdeko.Modules.Nsfw.Nsfw.Konachan*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Konachan
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Konachan_System_String___
  name: Konachan
  nameWithType: Nsfw.Konachan
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Konachan
- uid: Mewdeko.Modules.Nsfw.Nsfw.Sankaku*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Sankaku
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Sankaku_System_String___
  name: Sankaku
  nameWithType: Nsfw.Sankaku
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Sankaku
- uid: Mewdeko.Modules.Nsfw.Nsfw.E621*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.E621
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_E621_System_String___
  name: E621
  nameWithType: Nsfw.E621
  fullName: Mewdeko.Modules.Nsfw.Nsfw.E621
- uid: Mewdeko.Modules.Nsfw.Nsfw.Rule34*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Rule34
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Rule34_System_String___
  name: Rule34
  nameWithType: Nsfw.Rule34
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Rule34
- uid: Mewdeko.Modules.Nsfw.Nsfw.Danbooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Danbooru
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Danbooru_System_String___
  name: Danbooru
  nameWithType: Nsfw.Danbooru
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Danbooru
- uid: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Gelbooru
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Gelbooru_System_String___
  name: Gelbooru
  nameWithType: Nsfw.Gelbooru
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Gelbooru
- uid: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Derpibooru
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Derpibooru_System_String___
  name: Derpibooru
  nameWithType: Nsfw.Derpibooru
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Derpibooru
- uid: Mewdeko.Modules.Nsfw.Nsfw.Safebooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Safebooru
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Safebooru_System_String___
  name: Safebooru
  nameWithType: Nsfw.Safebooru
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Safebooru
- uid: Mewdeko.Modules.Nsfw.Nsfw.Realbooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Realbooru
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Realbooru_System_String___
  name: Realbooru
  nameWithType: Nsfw.Realbooru
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Realbooru
- uid: Mewdeko.Modules.Nsfw.Nsfw.Boobs*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Boobs
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Boobs
  name: Boobs
  nameWithType: Nsfw.Boobs
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Boobs
- uid: Mewdeko.Modules.Nsfw.Nsfw.Butts*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.Butts
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_Butts
  name: Butts
  nameWithType: Nsfw.Butts
  fullName: Mewdeko.Modules.Nsfw.Nsfw.Butts
- uid: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist*
  commentId: Overload:Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist
  href: Mewdeko.Modules.Nsfw.Nsfw.html#Mewdeko_Modules_Nsfw_Nsfw_NsfwTagBlacklist_System_String_
  name: NsfwTagBlacklist
  nameWithType: Nsfw.NsfwTagBlacklist
  fullName: Mewdeko.Modules.Nsfw.Nsfw.NsfwTagBlacklist
