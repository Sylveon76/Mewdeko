### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  commentId: T:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  id: Moderation.UserPunishCommands
  parent: Mewdeko.Modules.Moderation
  children:
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,NekosBestApiNet.NekosBestApi,Mewdeko.Services.Settings.BotConfigService)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage(System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist(Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll(System.Boolean)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(System.UInt64,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick(Discord.IUser[])
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill(System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize(Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel(Discord.ITextChannel)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(System.UInt64,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut(Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.UInt64)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear(Discord.IGuildUser,System.Int32)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(System.UInt64)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll
  langs:
  - csharp
  - vb
  name: Moderation.UserPunishCommands
  nameWithType: Moderation.UserPunishCommands
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserPunishCommands
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Module for user punishment commands.
  example: []
  syntax:
    content: >-
      [Group]

      public class Moderation.UserPunishCommands : MewdekoSubmodule<UserPunishService>, IModuleBase
    content.vb: >-
      <Group>

      Public Class Moderation.UserPunishCommands Inherits MewdekoSubmodule(Of UserPunishService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}
  - Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.Config
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  attributes:
  - type: Discord.Commands.GroupAttribute
    ctor: Discord.Commands.GroupAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,NekosBestApiNet.NekosBestApi,Mewdeko.Services.Settings.BotConfigService)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,NekosBestApiNet.NekosBestApi,Mewdeko.Services.Settings.BotConfigService)
  id: '#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService,NekosBestApiNet.NekosBestApi,Mewdeko.Services.Settings.BotConfigService)'
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: UserPunishCommands(MuteService, DbService, InteractiveService, NekosBestApi, BotConfigService)
  nameWithType: Moderation.UserPunishCommands.UserPunishCommands(MuteService, DbService, InteractiveService, NekosBestApi, BotConfigService)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UserPunishCommands(Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService, NekosBestApiNet.NekosBestApi, Mewdeko.Services.Settings.BotConfigService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Module for user punishment commands.
  example: []
  syntax:
    content: public UserPunishCommands(MuteService mute, DbService db, InteractiveService serv, NekosBestApi nekos, BotConfigService config)
    parameters:
    - id: mute
      type: Mewdeko.Modules.Moderation.Services.MuteService
      description: The mute service
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service
    - id: serv
      type: Fergun.Interactive.InteractiveService
      description: The service used to handle embed pagination
    - id: nekos
      type: NekosBestApiNet.NekosBestApi
      description: The NekosBest API
    - id: config
      type: Mewdeko.Services.Settings.BotConfigService
      description: The bot config service used for yml based configs
    content.vb: Public Sub New(mute As MuteService, db As DbService, serv As InteractiveService, nekos As NekosBestApi, config As BotConfigService)
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor*
  nameWithType.vb: Moderation.UserPunishCommands.New(MuteService, DbService, InteractiveService, NekosBestApi, BotConfigService)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.New(Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService, NekosBestApiNet.NekosBestApi, Mewdeko.Services.Settings.BotConfigService)
  name.vb: New(MuteService, DbService, InteractiveService, NekosBestApi, BotConfigService)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress
  id: MassNickProgress
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: MassNickProgress()
  nameWithType: Moderation.UserPunishCommands.MassNickProgress()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MassNickProgress
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 49
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets progress for a mass nickname operation.
  example: []
  syntax:
    content: >-
      [Cmd("MassNickProgress")]

      [Aliases("MassNickProgress")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MassNickProgress()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MassNickProgress")>

      <Aliases("MassNickProgress")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MassNickProgress() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassNickProgress
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassNickProgress
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop
  id: MassNickStop
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: MassNickStop()
  nameWithType: Moderation.UserPunishCommands.MassNickStop()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MassNickStop
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 74
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Stops a mass nickname operation.
  example: []
  syntax:
    content: >-
      [Cmd("MassNickStop")]

      [Aliases("MassNickStop")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MassNickStop()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MassNickStop")>

      <Aliases("MassNickStop")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MassNickStop() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassNickStop
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassNickStop
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll(System.Boolean)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll(System.Boolean)
  id: DehoistAll(System.Boolean)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: DehoistAll(bool)
  nameWithType: Moderation.UserPunishCommands.DehoistAll(bool)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll(bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DehoistAll
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 93
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Dehoists all users in the guild by replacing special characters in their nicknames.
  example: []
  syntax:
    content: >-
      [Cmd("DehoistAll")]

      [Aliases("DehoistAll")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageNicknames)]

      [BotPerm(GuildPermission.Administrator)]

      public Task DehoistAll(bool onlyDehoistNicks = false)
    parameters:
    - id: onlyDehoistNicks
      type: System.Boolean
      description: Whether to only dehoist nicknames
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("DehoistAll")>

      <Aliases("DehoistAll")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageNicknames)>

      <BotPerm(GuildPermission.Administrator)>

      Public Function DehoistAll(onlyDehoistNicks As Boolean = False) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: DehoistAll
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DehoistAll
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Moderation.UserPunishCommands.DehoistAll(Boolean)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll(Boolean)
  name.vb: DehoistAll(Boolean)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll
  id: SanitizeAll
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: SanitizeAll()
  nameWithType: Moderation.UserPunishCommands.SanitizeAll()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SanitizeAll
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 169
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sanitizes all users in the guild by replacing special characters in their usernames.
  example: []
  syntax:
    content: >-
      [Cmd("SanitizeAll")]

      [Aliases("SanitizeAll")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageNicknames)]

      [BotPerm(GuildPermission.Administrator)]

      public Task SanitizeAll()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SanitizeAll")>

      <Aliases("SanitizeAll")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageNicknames)>

      <BotPerm(GuildPermission.Administrator)>

      Public Function SanitizeAll() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SanitizeAll
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SanitizeAll
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist(Discord.IGuildUser)
  id: Dehoist(Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Dehoist(IGuildUser)
  nameWithType: Moderation.UserPunishCommands.Dehoist(IGuildUser)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Dehoist
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 234
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Dehoists a user by replacing special characters in their username.
  example: []
  syntax:
    content: >-
      [Cmd("Dehoist")]

      [Aliases("Dehoist")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageNicknames)]

      [BotPerm(GuildPermission.ManageNicknames)]

      public Task Dehoist(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to dehoist
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Dehoist")>

      <Aliases("Dehoist")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageNicknames)>

      <BotPerm(GuildPermission.ManageNicknames)>

      Public Function Dehoist(user As IGuildUser) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dehoist
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dehoist
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize(Discord.IGuildUser)
  id: Sanitize(Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Sanitize(IGuildUser)
  nameWithType: Moderation.UserPunishCommands.Sanitize(IGuildUser)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Sanitize
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 258
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sanitizes a user by replacing special characters in their username.
  example: []
  syntax:
    content: >-
      [Cmd("Sanitize")]

      [Aliases("Sanitize")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageNicknames)]

      [BotPerm(GuildPermission.ManageNicknames)]

      public Task Sanitize(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to sanitize
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Sanitize")>

      <Aliases("Sanitize")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageNicknames)>

      <BotPerm(GuildPermission.ManageNicknames)>

      Public Function Sanitize(user As IGuildUser) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sanitize
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sanitize
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel(Discord.ITextChannel)
  id: SetWarnChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: SetWarnChannel(ITextChannel)
  nameWithType: Moderation.UserPunishCommands.SetWarnChannel(ITextChannel)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel(Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetWarnChannel
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 272
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the warnlog channel for the guild.
  example: []
  syntax:
    content: >-
      [Cmd("SetWarnChannel")]

      [Aliases("SetWarnChannel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [Priority(0)]

      public Task SetWarnChannel(ITextChannel channel)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: ''
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetWarnChannel")>

      <Aliases("SetWarnChannel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <Priority(0)>

      Public Function SetWarnChannel(channel As ITextChannel) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetWarnChannel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetWarnChannel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  id: Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Timeout(StoopidTime, IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Timeout(StoopidTime, IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Timeout
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 304
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Timeouts a user for a specified amount of time.
  example: []
  syntax:
    content: >-
      [Cmd("Timeout")]

      [Aliases("Timeout")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ModerateMembers)]

      [BotPerm(GuildPermission.ModerateMembers)]

      public Task Timeout(StoopidTime time, IGuildUser user, string? reason = null)
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The time to timeout the user
    - id: user
      type: Discord.IGuildUser
      description: The user to timeout
    - id: reason
      type: System.String
      description: The reason for the timeout
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Timeout")>

      <Aliases("Timeout")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ModerateMembers)>

      <BotPerm(GuildPermission.ModerateMembers)>

      Public Function Timeout(time As StoopidTime, user As IGuildUser, reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Timeout
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Timeout
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "1099511627776"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "1099511627776"
  nameWithType.vb: Moderation.UserPunishCommands.Timeout(StoopidTime, IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, String)
  name.vb: Timeout(StoopidTime, IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut(Discord.IGuildUser)
  id: UnTimeOut(Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: UnTimeOut(IGuildUser)
  nameWithType: Moderation.UserPunishCommands.UnTimeOut(IGuildUser)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnTimeOut
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 329
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Removes a timeout from a user.
  example: []
  syntax:
    content: >-
      [Cmd("UnTimeOut")]

      [Aliases("UnTimeOut")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ModerateMembers)]

      [BotPerm(GuildPermission.ModerateMembers)]

      public Task UnTimeOut(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to remove the timeout from
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("UnTimeOut")>

      <Aliases("UnTimeOut")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ModerateMembers)>

      <BotPerm(GuildPermission.ModerateMembers)>

      Public Function UnTimeOut(user As IGuildUser) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: UnTimeOut
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UnTimeOut
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "1099511627776"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "1099511627776"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn(Discord.IGuildUser,System.String)
  id: Warn(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Warn(IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Warn(IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warn
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 347
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Warns a user with an optional reason.
  example: []
  syntax:
    content: >-
      [Cmd("Warn")]

      [Aliases("Warn")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task Warn(IGuildUser user, string? reason = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to warn
    - id: reason
      type: System.String
      description: The reason for the warn
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Warn")>

      <Aliases("Warn")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function Warn(user As IGuildUser, reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warn
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warn
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Warn(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn(Discord.IGuildUser, String)
  name.vb: Warn(IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  id: WarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnExpire(int, WarnExpireAction)
  nameWithType: Moderation.UserPunishCommands.WarnExpire(int, WarnExpireAction)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire(int, Mewdeko.Database.Models.WarnExpireAction)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnExpire
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 429
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the expiration time for warnings.
  example: []
  syntax:
    content: >-
      [Cmd("WarnExpire")]

      [Aliases("WarnExpire")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [Priority(2)]

      public Task WarnExpire(int days, WarnExpireAction options)
    parameters:
    - id: days
      type: System.Int32
      description: The number of days until warnings expire
    - id: options
      type: Mewdeko.Database.Models.WarnExpireAction
      description: The action to take when a warning expires
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnExpire")>

      <Aliases("WarnExpire")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <Priority(2)>

      Public Function WarnExpire(days As Integer, options As WarnExpireAction) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnExpire
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnExpire
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
  nameWithType.vb: Moderation.UserPunishCommands.WarnExpire(Integer, WarnExpireAction)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire(Integer, Mewdeko.Database.Models.WarnExpireAction)
  name.vb: WarnExpire(Integer, WarnExpireAction)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(Discord.IGuildUser)
  id: Warnlog(Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Warnlog(IGuildUser)
  nameWithType: Moderation.UserPunishCommands.Warnlog(IGuildUser)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 462
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the warnlog for a user.
  example: []
  syntax:
    content: >-
      [Cmd("Warnlog")]

      [Aliases("Warnlog")]

      [RequireContext(ContextType.Guild)]

      [Priority(3)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task Warnlog(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("Warnlog")>

      <Aliases("Warnlog")>

      <RequireContext(ContextType.Guild)>

      <Priority(3)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function Warnlog(user As IGuildUser) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog
  id: Warnlog
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Warnlog()
  nameWithType: Moderation.UserPunishCommands.Warnlog()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 469
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the warnlog for the user who invoked the command.
  example: []
  syntax:
    content: public Task Warnlog()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Warnlog() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog*
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(System.UInt64)
  id: Warnlog(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Warnlog(ulong)
  nameWithType: Moderation.UserPunishCommands.Warnlog(ulong)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 476
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the warnlog for a user by their ID.
  example: []
  syntax:
    content: >-
      [Cmd("Warnlog")]

      [Aliases("Warnlog")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [Priority(1)]

      public Task Warnlog(ulong userId)
    parameters:
    - id: userId
      type: System.UInt64
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("Warnlog")>

      <Aliases("Warnlog")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <Priority(1)>

      Public Function Warnlog(userId As ULong) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands.Warnlog(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog(ULong)
  name.vb: Warnlog(ULong)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll
  id: WarnlogAll
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnlogAll()
  nameWithType: Moderation.UserPunishCommands.WarnlogAll()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnlogAll
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 534
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets how many warnings each user has.
  example: []
  syntax:
    content: >-
      [Cmd("WarnlogAll")]

      [Aliases("WarnlogAll")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task WarnlogAll()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnlogAll")>

      <Aliases("WarnlogAll")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function WarnlogAll() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnlogAll
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnlogAll
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear(Discord.IGuildUser,System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear(Discord.IGuildUser,System.Int32)
  id: Warnclear(Discord.IGuildUser,System.Int32)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Warnclear(IGuildUser, int)
  nameWithType: Moderation.UserPunishCommands.Warnclear(IGuildUser, int)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear(Discord.IGuildUser, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warnclear
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 578
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Clears a user's warnings. If an index is provided, clears only that warning.
  example: []
  syntax:
    content: >-
      [Cmd("Warnclear")]

      [Aliases("Warnclear")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task Warnclear(IGuildUser user, int index = 0)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to clear warnings for
    - id: index
      type: System.Int32
      description: The index of the warning to clear
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Warnclear")>

      <Aliases("Warnclear")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function Warnclear(user As IGuildUser, index As Integer = 0) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnclear
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Warnclear
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Warnclear(IGuildUser, Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear(Discord.IGuildUser, Integer)
  name.vb: Warnclear(IGuildUser, Integer)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: WarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnPunish(int, AddRole, IRole, StoopidTime?)
  nameWithType: Moderation.UserPunishCommands.WarnPunish(int, Moderation.UserPunishCommands.AddRole, IRole, StoopidTime?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(int, Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole, Discord.IRole, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 614
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets a punishment for a certain number of warnings.
  example: []
  syntax:
    content: >-
      [Cmd("WarnPunish")]

      [Aliases("WarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [Priority(1)]

      public Task WarnPunish(int number, Moderation.UserPunishCommands.AddRole _, IRole role, StoopidTime? time = null)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    - id: _
      type: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
      description: The addrole keyword
    - id: role
      type: Discord.IRole
      description: The role to add
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The time for the punishment
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnPunish")>

      <Aliases("WarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <Priority(1)>

      Public Function WarnPunish(number As Integer, _ As Moderation.UserPunishCommands.AddRole, role As IRole, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands.WarnPunish(Integer, Moderation.UserPunishCommands.AddRole, IRole, StoopidTime)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(Integer, Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole, Discord.IRole, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: WarnPunish(Integer, AddRole, IRole, StoopidTime)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: WarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnPunish(int, PunishmentAction, StoopidTime?)
  nameWithType: Moderation.UserPunishCommands.WarnPunish(int, PunishmentAction, StoopidTime?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(int, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 645
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets a punishment for a certain number of warnings.
  example: []
  syntax:
    content: >-
      [Cmd("WarnPunish")]

      [Aliases("WarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task WarnPunish(int number, PunishmentAction punish, StoopidTime? time = null)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    - id: punish
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment to apply
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The time for the punishment
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnPunish")>

      <Aliases("WarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function WarnPunish(number As Integer, punish As PunishmentAction, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.WarnPunish(Integer, PunishmentAction, StoopidTime)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(Integer, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: WarnPunish(Integer, PunishmentAction, StoopidTime)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(System.Int32)
  id: WarnPunish(System.Int32)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnPunish(int)
  nameWithType: Moderation.UserPunishCommands.WarnPunish(int)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 690
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Removes a punishment for a certain number of warnings.
  example: []
  syntax:
    content: >-
      [Cmd("WarnPunish")]

      [Aliases("WarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      public Task WarnPunish(int number)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnPunish")>

      <Aliases("WarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      Public Function WarnPunish(number As Integer) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.WarnPunish(Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish(Integer)
  name.vb: WarnPunish(Integer)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList
  id: WarnPunishList
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: WarnPunishList()
  nameWithType: Moderation.UserPunishCommands.WarnPunishList()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunishList
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 703
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Lists the warn punishments for the guild.
  example: []
  syntax:
    content: >-
      [Cmd("WarnPunishList")]

      [Aliases("WarnPunishList")]

      [RequireContext(ContextType.Guild)]

      public Task WarnPunishList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("WarnPunishList")>

      <Aliases("WarnPunishList")>

      <RequireContext(ContextType.Guild)>

      Public Function WarnPunishList() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunishList
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: WarnPunishList
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  id: Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Ban(StoopidTime, StoopidTime, IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Ban(StoopidTime, StoopidTime, IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 733
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Bans a user for a specified amount of time.
  example: []
  syntax:
    content: >-
      [Cmd("Ban")]

      [Aliases("Ban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(1)]

      public Task Ban(StoopidTime pruneTime, StoopidTime time, IGuildUser user, string? msg = null)
    parameters:
    - id: pruneTime
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The amount of time to prune messages
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The amount of time to ban the user
    - id: user
      type: Discord.IGuildUser
      description: The user to ban
    - id: msg
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Ban")>

      <Aliases("Ban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(1)>

      Public Function Ban(pruneTime As StoopidTime, time As StoopidTime, user As IGuildUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands.Ban(StoopidTime, StoopidTime, IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, String)
  name.vb: Ban(StoopidTime, StoopidTime, IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IUser,System.String)
  id: Ban(Discord.IUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Ban(IUser?, string?)
  nameWithType: Moderation.UserPunishCommands.Ban(IUser?, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IUser?, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 792
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Bans a user.
  example: []
  syntax:
    content: >-
      [Cmd("Ban")]

      [Aliases("Ban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(0)]

      public Task Ban(IUser? user, string? msg = null)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to ban
    - id: msg
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Ban")>

      <Aliases("Ban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(0)>

      Public Function Ban(user As IUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Moderation.UserPunishCommands.Ban(IUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IUser, String)
  name.vb: Ban(IUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IUser,System.String)
  id: Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Ban(StoopidTime, IUser, string?)
  nameWithType: Moderation.UserPunishCommands.Ban(StoopidTime, IUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 820
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Bans a user for a specified amount of time.
  example: []
  syntax:
    content: >-
      [Cmd("Ban")]

      [Aliases("Ban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(0)]

      public Task Ban(StoopidTime time, IUser userId, string? msg = null)
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The amount of time to prune messages
    - id: userId
      type: Discord.IUser
      description: The ID of the user to ban
    - id: msg
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Ban")>

      <Aliases("Ban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(0)>

      Public Function Ban(time As StoopidTime, userId As IUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Moderation.UserPunishCommands.Ban(StoopidTime, IUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IUser, String)
  name.vb: Ban(StoopidTime, IUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IGuildUser,System.String)
  id: Ban(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Ban(IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Ban(IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 840
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Bans a user.
  example: []
  syntax:
    content: >-
      [Cmd("Ban")]

      [Aliases("Ban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(2)]

      public Task Ban(IGuildUser user, string? msg = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
    - id: msg
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Ban")>

      <Aliases("Ban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(2)>

      Public Function Ban(user As IGuildUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
  nameWithType.vb: Moderation.UserPunishCommands.Ban(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Discord.IGuildUser, String)
  name.vb: Ban(IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  id: Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Ban(StoopidTime, IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Ban(StoopidTime, IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 889
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Bans a user with the specified reason and amount of days to purge messages.
  example: []
  syntax:
    content: >-
      [Cmd("Ban")]

      [Aliases("Ban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(2)]

      public Task Ban(StoopidTime time, IGuildUser user, string? msg = null)
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The amount of time to prune messages
    - id: user
      type: Discord.IGuildUser
      description: The user to ban
    - id: msg
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Ban")>

      <Aliases("Ban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(2)>

      Public Function Ban(time As StoopidTime, user As IGuildUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
  nameWithType.vb: Moderation.UserPunishCommands.Ban(StoopidTime, IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban(Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IGuildUser, String)
  name.vb: Ban(StoopidTime, IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage(System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage(System.String)
  id: BanMessage(System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: BanMessage(string?)
  nameWithType: Moderation.UserPunishCommands.BanMessage(string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanMessage
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 936
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the message that users get dmed with when they are banned.
  example: []
  syntax:
    content: >-
      [Cmd("BanMessage")]

      [Aliases("BanMessage")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task BanMessage(string? message = null)
    parameters:
    - id: message
      type: System.String
      description: The message to set, can also be embedcode
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("BanMessage")>

      <Aliases("BanMessage")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function BanMessage(message As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessage
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessage
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.BanMessage(String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage(String)
  name.vb: BanMessage(String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset
  id: BanMsgReset
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: BanMsgReset()
  nameWithType: Moderation.UserPunishCommands.BanMsgReset()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanMsgReset
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 961
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Resets the ban message to the default message.
  example: []
  syntax:
    content: >-
      [Cmd("BanMsgReset")]

      [Aliases("BanMsgReset")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task BanMsgReset()
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("BanMsgReset")>

      <Aliases("BanMsgReset")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function BanMsgReset() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMsgReset
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMsgReset
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(System.String)
  id: BanMessageTest(System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: BanMessageTest(string?)
  nameWithType: Moderation.UserPunishCommands.BanMessageTest(string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanMessageTest
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 974
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Tests the ban message. Use it as a prank!
  example: []
  syntax:
    content: >-
      [Cmd("BanMessageTest")]

      [Aliases("BanMessageTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(0)]

      public Task BanMessageTest(string? reason = null)
    parameters:
    - id: reason
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("BanMessageTest")>

      <Aliases("BanMessageTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(0)>

      Public Function BanMessageTest(reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessageTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessageTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Moderation.UserPunishCommands.BanMessageTest(String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(String)
  name.vb: BanMessageTest(String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  id: BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: BanMessageTest(StoopidTime, string?)
  nameWithType: Moderation.UserPunishCommands.BanMessageTest(StoopidTime, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanMessageTest
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 984
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Tests the ban message. Use it as a prank!
  example: []
  syntax:
    content: >-
      [Cmd("BanMessageTest")]

      [Aliases("BanMessageTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [Priority(1)]

      public Task BanMessageTest(StoopidTime duration, string? reason = null)
    parameters:
    - id: duration
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The duration of the ban
    - id: reason
      type: System.String
      description: The reason for the ban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("BanMessageTest")>

      <Aliases("BanMessageTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <Priority(1)>

      Public Function BanMessageTest(duration As StoopidTime, reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessageTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanMessageTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands.BanMessageTest(StoopidTime, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest(Mewdeko.Common.TypeReaders.Models.StoopidTime, String)
  name.vb: BanMessageTest(StoopidTime, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.String)
  id: Unban(System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Unban(string)
  nameWithType: Moderation.UserPunishCommands.Unban(string)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Unban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1025
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Unbans a user.
  example: []
  syntax:
    content: >-
      [Cmd("Unban")]

      [Aliases("Unban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task Unban(string user)
    parameters:
    - id: user
      type: System.String
      description: The user to unban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Unban")>

      <Aliases("Unban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function Unban(user As String) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Unban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Unban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Unban(String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(String)
  name.vb: Unban(String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(System.UInt64)
  id: Unban(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Unban(ulong)
  nameWithType: Moderation.UserPunishCommands.Unban(ulong)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Unban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1047
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Unbans a user.
  example: []
  syntax:
    content: >-
      [Cmd("Unban")]

      [Aliases("Unban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task Unban(ulong userId)
    parameters:
    - id: userId
      type: System.UInt64
      description: The ID of the user to unban
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Unban")>

      <Aliases("Unban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function Unban(userId As ULong) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Unban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Unban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Unban(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban(ULong)
  name.vb: Unban(ULong)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(Discord.IGuildUser,System.String)
  id: Softban(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Softban(IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Softban(IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Softban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1075
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Softbans a user. Use this to kick a user and delete their messages.
  example: []
  syntax:
    content: >-
      [Cmd("Softban")]

      [Aliases("Softban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.KickMembers|GuildPermission.ManageMessages)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task Softban(IGuildUser user, string? msg = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to softban
    - id: msg
      type: System.String
      description: The reason for the softban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("Softban")>

      <Aliases("Softban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.KickMembersOrGuildPermission.ManageMessages)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function Softban(user As IGuildUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Softban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Softban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8194"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Softban(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(Discord.IGuildUser, String)
  name.vb: Softban(IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(System.UInt64,System.String)
  id: Softban(System.UInt64,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Softban(ulong, string?)
  nameWithType: Moderation.UserPunishCommands.Softban(ulong, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(ulong, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Softban
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1084
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Softbans a user. Use this to kick a user and delete their messages.
  example: []
  syntax:
    content: >-
      [Cmd("Softban")]

      [Aliases("Softban")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.KickMembers|GuildPermission.ManageMessages)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task Softban(ulong userId, string? msg = null)
    parameters:
    - id: userId
      type: System.UInt64
      description: The ID of the user to softban
    - id: msg
      type: System.String
      description: The reason for the softban
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Softban")>

      <Aliases("Softban")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.KickMembersOrGuildPermission.ManageMessages)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function Softban(userId As ULong, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Softban
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Softban
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8194"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Moderation.UserPunishCommands.Softban(ULong, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban(ULong, String)
  name.vb: Softban(ULong, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(Discord.IGuildUser,System.String)
  id: Kick(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Kick(IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands.Kick(IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kick
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1143
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Kicks a user.
  example: []
  syntax:
    content: >-
      [Cmd("Kick")]

      [Aliases("Kick")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.KickMembers)]

      [BotPerm(GuildPermission.KickMembers)]

      [Priority(1)]

      public Task Kick(IGuildUser user, string? msg = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to kick
    - id: msg
      type: System.String
      description: The reason for the kick
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("Kick")>

      <Aliases("Kick")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.KickMembers)>

      <BotPerm(GuildPermission.KickMembers)>

      <Priority(1)>

      Public Function Kick(user As IGuildUser, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kick
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kick
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands.Kick(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(Discord.IGuildUser, String)
  name.vb: Kick(IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(System.UInt64,System.String)
  id: Kick(System.UInt64,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: Kick(ulong, string?)
  nameWithType: Moderation.UserPunishCommands.Kick(ulong, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(ulong, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kick
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1152
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Kicks a user.
  example: []
  syntax:
    content: >-
      [Cmd("Kick")]

      [Aliases("Kick")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.KickMembers)]

      [BotPerm(GuildPermission.KickMembers)]

      [Priority(0)]

      public Task Kick(ulong userId, string? msg = null)
    parameters:
    - id: userId
      type: System.UInt64
      description: The ID of the user to kick
    - id: msg
      type: System.String
      description: The reason for the kick
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Kick")>

      <Aliases("Kick")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.KickMembers)>

      <BotPerm(GuildPermission.KickMembers)>

      <Priority(0)>

      Public Function Kick(userId As ULong, msg As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kick
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kick
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Moderation.UserPunishCommands.Kick(ULong, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick(ULong, String)
  name.vb: Kick(ULong, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick(Discord.IUser[])
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick(Discord.IUser[])
  id: MassKick(Discord.IUser[])
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: MassKick(params IUser[])
  nameWithType: Moderation.UserPunishCommands.MassKick(params IUser[])
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick(params Discord.IUser[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MassKick
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1168
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Kicks multiple users.
  example: []
  syntax:
    content: >-
      [Cmd("MassKick")]

      [Aliases("MassKick")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.KickMembers)]

      [BotPerm(GuildPermission.KickMembers)]

      public Task MassKick(params IUser[] usersUnp)
    parameters:
    - id: usersUnp
      type: Discord.IUser[]
      description: The users to kick
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MassKick")>

      <Aliases("MassKick")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.KickMembers)>

      <BotPerm(GuildPermission.KickMembers)>

      Public Function MassKick(ParamArray usersUnp As IUser()) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassKick
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassKick
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  nameWithType.vb: Moderation.UserPunishCommands.MassKick(ParamArray IUser())
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick(ParamArray Discord.IUser())
  name.vb: MassKick(ParamArray IUser())
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill(System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill(System.String)
  id: MassKill(System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
  langs:
  - csharp
  - vb
  name: MassKill(string)
  nameWithType: Moderation.UserPunishCommands.MassKill(string)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MassKill
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands.cs
    startLine: 1233
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Massbans users. Use this to ban multiple users at once. Blacklists them from the bot as well.
  example: []
  syntax:
    content: >-
      [Cmd("MassKill")]

      [Aliases("MassKill")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.BanMembers)]

      [BotPerm(GuildPermission.BanMembers)]

      [OwnerOnly]

      public Task MassKill(string people)
    parameters:
    - id: people
      type: System.String
      description: ''
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MassKill")>

      <Aliases("MassKill")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.BanMembers)>

      <BotPerm(GuildPermission.BanMembers)>

      <OwnerOnly>

      Public Function MassKill(people As String) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassKill
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MassKill
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  - type: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute.#ctor
    arguments: []
  nameWithType.vb: Moderation.UserPunishCommands.MassKill(String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill(String)
  name.vb: MassKill(String)
references:
- uid: Mewdeko.Modules.Moderation
  commentId: N:Mewdeko.Modules.Moderation
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation
  nameWithType: Mewdeko.Modules.Moderation
  fullName: Mewdeko.Modules.Moderation
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<UserPunishService>
  nameWithType: MewdekoModuleBase<UserPunishService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Moderation.Services.UserPunishService>
  nameWithType.vb: MewdekoModuleBase(Of UserPunishService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Moderation.Services.UserPunishService)
  name.vb: MewdekoModuleBase(Of UserPunishService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService}
  commentId: T:Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<UserPunishService>
  nameWithType: MewdekoSubmodule<UserPunishService>
  fullName: Mewdeko.Common.MewdekoSubmodule<Mewdeko.Modules.Moderation.Services.UserPunishService>
  nameWithType.vb: MewdekoSubmodule(Of UserPunishService)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of Mewdeko.Modules.Moderation.Services.UserPunishService)
  name.vb: MewdekoSubmodule(Of UserPunishService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<UserPunishService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Moderation.Services.UserPunishService>.Service
  nameWithType.vb: MewdekoModuleBase(Of UserPunishService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Moderation.Services.UserPunishService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.Config
  commentId: P:Mewdeko.Common.MewdekoModule.Config
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Config
  name: Config
  nameWithType: MewdekoModule.Config
  fullName: Mewdeko.Common.MewdekoModule.Config
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserPunishCommands>(UserPunishCommands, string)
  nameWithType: Extensions.ThrowIfNull<Moderation.UserPunishCommands>(Moderation.UserPunishCommands, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Moderation.Moderation.UserPunishCommands>(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Moderation.UserPunishCommands)(Moderation.UserPunishCommands, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Moderation.Moderation.UserPunishCommands)(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands, String)
  name.vb: ThrowIfNull(Of UserPunishCommands)(UserPunishCommands, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule`1
  commentId: T:Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<TService>
  nameWithType: MewdekoSubmodule<TService>
  fullName: Mewdeko.Common.MewdekoSubmodule<TService>
  nameWithType.vb: MewdekoSubmodule(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of TService)
  name.vb: MewdekoSubmodule(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.#ctor
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands__ctor_Mewdeko_Modules_Moderation_Services_MuteService_Mewdeko_Database_DbService_Fergun_Interactive_InteractiveService_NekosBestApiNet_NekosBestApi_Mewdeko_Services_Settings_BotConfigService_
  name: UserPunishCommands
  nameWithType: Moderation.UserPunishCommands.UserPunishCommands
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UserPunishCommands
  nameWithType.vb: Moderation.UserPunishCommands.New
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.New
  name.vb: New
- uid: Mewdeko.Modules.Moderation.Services.MuteService
  commentId: T:Mewdeko.Modules.Moderation.Services.MuteService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.MuteService.html
  name: MuteService
  nameWithType: MuteService
  fullName: Mewdeko.Modules.Moderation.Services.MuteService
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: NekosBestApiNet.NekosBestApi
  commentId: T:NekosBestApiNet.NekosBestApi
  parent: NekosBestApiNet
  isExternal: true
  name: NekosBestApi
  nameWithType: NekosBestApi
  fullName: NekosBestApiNet.NekosBestApi
- uid: Mewdeko.Services.Settings.BotConfigService
  commentId: T:Mewdeko.Services.Settings.BotConfigService
  parent: Mewdeko.Services.Settings
  href: Mewdeko.Services.Settings.BotConfigService.html
  name: BotConfigService
  nameWithType: BotConfigService
  fullName: Mewdeko.Services.Settings.BotConfigService
- uid: Mewdeko.Modules.Moderation.Services
  commentId: N:Mewdeko.Modules.Moderation.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation.Services
  nameWithType: Mewdeko.Modules.Moderation.Services
  fullName: Mewdeko.Modules.Moderation.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: NekosBestApiNet
  commentId: N:NekosBestApiNet
  isExternal: true
  name: NekosBestApiNet
  nameWithType: NekosBestApiNet
  fullName: NekosBestApiNet
- uid: Mewdeko.Services.Settings
  commentId: N:Mewdeko.Services.Settings
  href: Mewdeko.html
  name: Mewdeko.Services.Settings
  nameWithType: Mewdeko.Services.Settings
  fullName: Mewdeko.Services.Settings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_MassNickProgress
  name: MassNickProgress
  nameWithType: Moderation.UserPunishCommands.MassNickProgress
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickProgress
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_MassNickStop
  name: MassNickStop
  nameWithType: Moderation.UserPunishCommands.MassNickStop
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassNickStop
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_DehoistAll_System_Boolean_
  name: DehoistAll
  nameWithType: Moderation.UserPunishCommands.DehoistAll
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.DehoistAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_SanitizeAll
  name: SanitizeAll
  nameWithType: Moderation.UserPunishCommands.SanitizeAll
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SanitizeAll
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Dehoist_Discord_IGuildUser_
  name: Dehoist
  nameWithType: Moderation.UserPunishCommands.Dehoist
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Dehoist
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Sanitize_Discord_IGuildUser_
  name: Sanitize
  nameWithType: Moderation.UserPunishCommands.Sanitize
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Sanitize
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_SetWarnChannel_Discord_ITextChannel_
  name: SetWarnChannel
  nameWithType: Moderation.UserPunishCommands.SetWarnChannel
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.SetWarnChannel
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Timeout_Mewdeko_Common_TypeReaders_Models_StoopidTime_Discord_IGuildUser_System_String_
  name: Timeout
  nameWithType: Moderation.UserPunishCommands.Timeout
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Timeout
- uid: Mewdeko.Common.TypeReaders.Models.StoopidTime
  commentId: T:Mewdeko.Common.TypeReaders.Models.StoopidTime
  parent: Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.Common.TypeReaders.Models.StoopidTime.html
  name: StoopidTime
  nameWithType: StoopidTime
  fullName: Mewdeko.Common.TypeReaders.Models.StoopidTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Common.TypeReaders.Models
  commentId: N:Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders.Models
  nameWithType: Mewdeko.Common.TypeReaders.Models
  fullName: Mewdeko.Common.TypeReaders.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_UnTimeOut_Discord_IGuildUser_
  name: UnTimeOut
  nameWithType: Moderation.UserPunishCommands.UnTimeOut
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.UnTimeOut
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Warn_Discord_IGuildUser_System_String_
  name: Warn
  nameWithType: Moderation.UserPunishCommands.Warn
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warn
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_WarnExpire_System_Int32_Mewdeko_Database_Models_WarnExpireAction_
  name: WarnExpire
  nameWithType: Moderation.UserPunishCommands.WarnExpire
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnExpire
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Database.Models.WarnExpireAction
  commentId: T:Mewdeko.Database.Models.WarnExpireAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.WarnExpireAction.html
  name: WarnExpireAction
  nameWithType: WarnExpireAction
  fullName: Mewdeko.Database.Models.WarnExpireAction
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Warnlog_Discord_IGuildUser_
  name: Warnlog
  nameWithType: Moderation.UserPunishCommands.Warnlog
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnlog
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_WarnlogAll
  name: WarnlogAll
  nameWithType: Moderation.UserPunishCommands.WarnlogAll
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnlogAll
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Warnclear_Discord_IGuildUser_System_Int32_
  name: Warnclear
  nameWithType: Moderation.UserPunishCommands.Warnclear
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Warnclear
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_WarnPunish_System_Int32_Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_AddRole_Discord_IRole_Mewdeko_Common_TypeReaders_Models_StoopidTime_
  name: WarnPunish
  nameWithType: Moderation.UserPunishCommands.WarnPunish
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunish
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
  commentId: T:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
  parent: Mewdeko.Modules.Moderation
  href: Mewdeko.Modules.Moderation.Moderation.html
  name: Moderation.UserPunishCommands.AddRole
  nameWithType: Moderation.UserPunishCommands.AddRole
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
  spec.csharp:
  - uid: Mewdeko.Modules.Moderation.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
    name: AddRole
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole.html
  spec.vb:
  - uid: Mewdeko.Modules.Moderation.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands
    name: UserPunishCommands
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole
    name: AddRole
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.AddRole.html
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Database.Models.PunishmentAction
  commentId: T:Mewdeko.Database.Models.PunishmentAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.PunishmentAction.html
  name: PunishmentAction
  nameWithType: PunishmentAction
  fullName: Mewdeko.Database.Models.PunishmentAction
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_WarnPunishList
  name: WarnPunishList
  nameWithType: Moderation.UserPunishCommands.WarnPunishList
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.WarnPunishList
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Ban_Mewdeko_Common_TypeReaders_Models_StoopidTime_Mewdeko_Common_TypeReaders_Models_StoopidTime_Discord_IGuildUser_System_String_
  name: Ban
  nameWithType: Moderation.UserPunishCommands.Ban
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Ban
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_BanMessage_System_String_
  name: BanMessage
  nameWithType: Moderation.UserPunishCommands.BanMessage
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessage
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_BanMsgReset
  name: BanMsgReset
  nameWithType: Moderation.UserPunishCommands.BanMsgReset
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMsgReset
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_BanMessageTest_System_String_
  name: BanMessageTest
  nameWithType: Moderation.UserPunishCommands.BanMessageTest
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.BanMessageTest
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Unban_System_String_
  name: Unban
  nameWithType: Moderation.UserPunishCommands.Unban
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Unban
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Softban_Discord_IGuildUser_System_String_
  name: Softban
  nameWithType: Moderation.UserPunishCommands.Softban
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Softban
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_Kick_Discord_IGuildUser_System_String_
  name: Kick
  nameWithType: Moderation.UserPunishCommands.Kick
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.Kick
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_MassKick_Discord_IUser___
  name: MassKick
  nameWithType: Moderation.UserPunishCommands.MassKick
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKick
- uid: Discord.IUser[]
  isExternal: true
  name: IUser[]
  nameWithType: IUser[]
  fullName: Discord.IUser[]
  nameWithType.vb: IUser()
  fullName.vb: Discord.IUser()
  name.vb: IUser()
  spec.csharp:
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: (
  - name: )
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands_MassKill_System_String_
  name: MassKill
  nameWithType: Moderation.UserPunishCommands.MassKill
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands.MassKill
