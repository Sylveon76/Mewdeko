### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService
  commentId: T:Mewdeko.Modules.Moderation.Services.UserPunishService
  id: UserPunishService
  parent: Mewdeko.Modules.Moderation.Services
  children:
  - Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Permissions.Services.BlacklistService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.GuildSettingsService)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick(System.UInt64,Discord.IUser,System.Int32,System.String,Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick@)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment(Discord.IGuild,Discord.IGuildUser,Discord.IUser,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64},System.String)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync
  - Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.Commands.ICommandContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.IInteractionContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketGuild,Discord.IGuildUser,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill(Discord.WebSocket.SocketGuild,System.String)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate(System.UInt64,System.String)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId(Discord.IGuild,Discord.ITextChannel)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick(System.UInt64,System.Boolean,System.Boolean,System.Boolean)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.Warn(Discord.IGuild,System.UInt64,Discord.IUser,System.String)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync(System.UInt64,System.UInt64,System.Int32,System.String)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IRole)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList(System.UInt64)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove(System.UInt64,System.Int32)
  - Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll(System.UInt64)
  langs:
  - csharp
  - vb
  name: UserPunishService
  nameWithType: UserPunishService
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserPunishService
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 14
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Service for user punishments.
  example: []
  syntax:
    content: 'public class UserPunishService : INService'
    content.vb: Public Class UserPunishService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Moderation.Services.UserPunishService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Permissions.Services.BlacklistService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.GuildSettingsService)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Permissions.Services.BlacklistService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.GuildSettingsService)
  id: '#ctor(Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Permissions.Services.BlacklistService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.GuildSettingsService)'
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: UserPunishService(MuteService, DbService, BlacklistService, DiscordSocketClient, GuildSettingsService)
  nameWithType: UserPunishService.UserPunishService(MuteService, DbService, BlacklistService, DiscordSocketClient, GuildSettingsService)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UserPunishService(Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Mewdeko.Modules.Permissions.Services.BlacklistService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.GuildSettingsService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 31
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Constructs a new instance of the UserPunishService class.
  example: []
  syntax:
    content: public UserPunishService(MuteService mute, DbService db, BlacklistService blacklistService, DiscordSocketClient client, GuildSettingsService guildSettings)
    parameters:
    - id: mute
      type: Mewdeko.Modules.Moderation.Services.MuteService
      description: An instance of the MuteService class.
    - id: db
      type: Mewdeko.Database.DbService
      description: An instance of the DbService class.
    - id: blacklistService
      type: Mewdeko.Modules.Permissions.Services.BlacklistService
      description: An instance of the BlacklistService class.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: An instance of the DiscordSocketClient class.
    - id: guildSettings
      type: Mewdeko.Services.GuildSettingsService
      description: An instance of the GuildSettingsService class.
    content.vb: Public Sub New(mute As MuteService, db As DbService, blacklistService As BlacklistService, client As DiscordSocketClient, guildSettings As GuildSettingsService)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor*
  nameWithType.vb: UserPunishService.New(MuteService, DbService, BlacklistService, DiscordSocketClient, GuildSettingsService)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.New(Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Mewdeko.Modules.Permissions.Services.BlacklistService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.GuildSettingsService)
  name.vb: New(MuteService, DbService, BlacklistService, DiscordSocketClient, GuildSettingsService)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick(System.UInt64,Discord.IUser,System.Int32,System.String,Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick@)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick(System.UInt64,Discord.IUser,System.Int32,System.String,Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick@)
  id: AddMassNick(System.UInt64,Discord.IUser,System.Int32,System.String,Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick@)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: AddMassNick(ulong, IUser, int, string, out MassNick)
  nameWithType: UserPunishService.AddMassNick(ulong, IUser, int, string, out UserPunishService.MassNick)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick(ulong, Discord.IUser, int, string, out Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddMassNick
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Adds a new MassNick to the collection if it doesn't already exist for the given guild.
  example: []
  syntax:
    content: public bool AddMassNick(ulong guildId, IUser user, int total, string operationType, out UserPunishService.MassNick returnMassNick)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: user
      type: Discord.IUser
      description: The user who started the operation.
    - id: total
      type: System.Int32
      description: The total number of operations to be performed.
    - id: operationType
      type: System.String
      description: The type of operation to be performed.
    - id: returnMassNick
      type: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
      description: The MassNick object that was added to the collection. If a MassNick already exists for the guild, this will be null.
    return:
      type: System.Boolean
      description: True if a new MassNick was added to the collection, false otherwise.
    content.vb: Public Function AddMassNick(guildId As ULong, user As IUser, total As Integer, operationType As String, returnMassNick As UserPunishService.MassNick) As Boolean
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick*
  nameWithType.vb: UserPunishService.AddMassNick(ULong, IUser, Integer, String, UserPunishService.MassNick)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick(ULong, Discord.IUser, Integer, String, Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick)
  name.vb: AddMassNick(ULong, IUser, Integer, String, MassNick)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick(System.UInt64)
  id: GetMassNick(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetMassNick(ulong)
  nameWithType: UserPunishService.GetMassNick(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetMassNick
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 76
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Retrieves the MassNick object associated with the specified guild ID.
  example: []
  syntax:
    content: public UserPunishService.MassNick? GetMassNick(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
      description: The MassNick object if found; otherwise, null.
    content.vb: Public Function GetMassNick(guildId As ULong) As UserPunishService.MassNick
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick*
  nameWithType.vb: UserPunishService.GetMassNick(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick(ULong)
  name.vb: GetMassNick(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick(System.UInt64)
  id: RemoveMassNick(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: RemoveMassNick(ulong)
  nameWithType: UserPunishService.RemoveMassNick(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveMassNick
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 86
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Removes the MassNick object associated with the specified guild ID.
  example: []
  syntax:
    content: public bool RemoveMassNick(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Boolean
      description: True if the MassNick object was successfully removed; otherwise, false.
    content.vb: Public Function RemoveMassNick(guildId As ULong) As Boolean
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick*
  nameWithType.vb: UserPunishService.RemoveMassNick(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick(ULong)
  name.vb: RemoveMassNick(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick(System.UInt64,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick(System.UInt64,System.Boolean,System.Boolean,System.Boolean)
  id: UpdateMassNick(System.UInt64,System.Boolean,System.Boolean,System.Boolean)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: UpdateMassNick(ulong, bool, bool, bool)
  nameWithType: UserPunishService.UpdateMassNick(ulong, bool, bool, bool)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick(ulong, bool, bool, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateMassNick
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 98
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Updates the MassNick object associated with the specified guild ID.
  example: []
  syntax:
    content: public void UpdateMassNick(ulong guildId, bool failed, bool changed, bool stopped = false)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: failed
      type: System.Boolean
      description: Indicates whether the operation failed.
    - id: changed
      type: System.Boolean
      description: Indicates whether the operation changed the state.
    - id: stopped
      type: System.Boolean
      description: Indicates whether the operation was stopped. Defaults to false.
    content.vb: Public Sub UpdateMassNick(guildId As ULong, failed As Boolean, changed As Boolean, stopped As Boolean = False)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick*
  nameWithType.vb: UserPunishService.UpdateMassNick(ULong, Boolean, Boolean, Boolean)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick(ULong, Boolean, Boolean, Boolean)
  name.vb: UpdateMassNick(ULong, Boolean, Boolean, Boolean)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel(System.UInt64)
  id: GetWarnlogChannel(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetWarnlogChannel(ulong)
  nameWithType: UserPunishService.GetWarnlogChannel(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetWarnlogChannel
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 118
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Retrieves the ID of the Warnlog channel for the specified guild.
  example: []
  syntax:
    content: public Task<ulong> GetWarnlogChannel(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.UInt64}
      description: The ID of the Warnlog channel.
    content.vb: Public Function GetWarnlogChannel(id As ULong) As Task(Of ULong)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel*
  nameWithType.vb: UserPunishService.GetWarnlogChannel(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel(ULong)
  name.vb: GetWarnlogChannel(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId(Discord.IGuild,Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId(Discord.IGuild,Discord.ITextChannel)
  id: SetWarnlogChannelId(Discord.IGuild,Discord.ITextChannel)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: SetWarnlogChannelId(IGuild, ITextChannel)
  nameWithType: UserPunishService.SetWarnlogChannelId(IGuild, ITextChannel)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId(Discord.IGuild, Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetWarnlogChannelId
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 127
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Sets the ID of the Warnlog channel for the specified guild.
  example: []
  syntax:
    content: public Task SetWarnlogChannelId(IGuild guild, ITextChannel channel)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild for which to set the Warnlog channel.
    - id: channel
      type: Discord.ITextChannel
      description: The channel to set as the Warnlog channel.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function SetWarnlogChannelId(guild As IGuild, channel As ITextChannel) As Task
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId*
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn(Discord.IGuild,System.UInt64,Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.Warn(Discord.IGuild,System.UInt64,Discord.IUser,System.String)
  id: Warn(Discord.IGuild,System.UInt64,Discord.IUser,System.String)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: Warn(IGuild, ulong, IUser, string)
  nameWithType: UserPunishService.Warn(IGuild, ulong, IUser, string)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn(Discord.IGuild, ulong, Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Warn
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 144
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Issues a warning to a user in a guild.
  example: []
  syntax:
    content: public Task<WarningPunishment>? Warn(IGuild guild, ulong userId, IUser mod, string reason)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild where the warning is issued.
    - id: userId
      type: System.UInt64
      description: The ID of the user to be warned.
    - id: mod
      type: Discord.IUser
      description: The user who issues the warning.
    - id: reason
      type: System.String
      description: The reason for the warning.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment}
      description: A WarningPunishment object if a punishment is applied due to the warning; otherwise, null.
    content.vb: Public Function Warn(guild As IGuild, userId As ULong, [mod] As IUser, reason As String) As Task(Of WarningPunishment)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn*
  nameWithType.vb: UserPunishService.Warn(IGuild, ULong, IUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn(Discord.IGuild, ULong, Discord.IUser, String)
  name.vb: Warn(IGuild, ULong, IUser, String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment(Discord.IGuild,Discord.IGuildUser,Discord.IUser,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64},System.String)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment(Discord.IGuild,Discord.IGuildUser,Discord.IUser,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64},System.String)
  id: ApplyPunishment(Discord.IGuild,Discord.IGuildUser,Discord.IUser,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64},System.String)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: ApplyPunishment(IGuild, IGuildUser, IUser, PunishmentAction, int, ulong?, string?)
  nameWithType: UserPunishService.ApplyPunishment(IGuild, IGuildUser, IUser, PunishmentAction, int, ulong?, string?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment(Discord.IGuild, Discord.IGuildUser, Discord.IUser, Mewdeko.Database.Models.PunishmentAction, int, ulong?, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ApplyPunishment
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 211
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Applies a punishment to a user in a guild.
  example: []
  syntax:
    content: public Task ApplyPunishment(IGuild guild, IGuildUser user, IUser mod, PunishmentAction p, int minutes, ulong? roleId, string? reason)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild where the punishment is applied.
    - id: user
      type: Discord.IGuildUser
      description: The user to be punished.
    - id: mod
      type: Discord.IUser
      description: The user who issues the punishment.
    - id: p
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment to be applied.
    - id: minutes
      type: System.Int32
      description: The duration of the punishment in minutes.
    - id: roleId
      type: System.Nullable{System.UInt64}
      description: The ID of the role to be applied.
    - id: reason
      type: System.String
      description: The reason for the punishment.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ApplyPunishment(guild As IGuild, user As IGuildUser, [mod] As IUser, p As PunishmentAction, minutes As Integer, roleId As ULong?, reason As String) As Task
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment*
  nameWithType.vb: UserPunishService.ApplyPunishment(IGuild, IGuildUser, IUser, PunishmentAction, Integer, ULong?, String)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment(Discord.IGuild, Discord.IGuildUser, Discord.IUser, Mewdeko.Database.Models.PunishmentAction, Integer, ULong?, String)
  name.vb: ApplyPunishment(IGuild, IGuildUser, IUser, PunishmentAction, Integer, ULong?, String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync
  id: CheckAllWarnExpiresAsync
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: CheckAllWarnExpiresAsync()
  nameWithType: UserPunishService.CheckAllWarnExpiresAsync()
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckAllWarnExpiresAsync
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 335
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Checks all warnings for expiry.
  example: []
  syntax:
    content: public Task CheckAllWarnExpiresAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckAllWarnExpiresAsync() As Task
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync*
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync(System.UInt64)
  id: CheckWarnExpiresAsync(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: CheckWarnExpiresAsync(ulong)
  nameWithType: UserPunishService.CheckWarnExpiresAsync(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckWarnExpiresAsync
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 380
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Checks the expiry of warnings for a guild.
  example: []
  syntax:
    content: public Task CheckWarnExpiresAsync(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckWarnExpiresAsync(guildId As ULong) As Task
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync*
  nameWithType.vb: UserPunishService.CheckWarnExpiresAsync(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync(ULong)
  name.vb: CheckWarnExpiresAsync(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  id: WarnExpireAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnExpireAsync(ulong, int, WarnExpireAction)
  nameWithType: UserPunishService.WarnExpireAsync(ulong, int, WarnExpireAction)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync(ulong, int, Mewdeko.Database.Models.WarnExpireAction)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnExpireAsync
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 441
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Sets the expiry of warnings for a guild.
  example: []
  syntax:
    content: public Task WarnExpireAsync(ulong guildId, int days, WarnExpireAction action)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: days
      type: System.Int32
      description: The number of days before warnings expire.
    - id: action
      type: Mewdeko.Database.Models.WarnExpireAction
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function WarnExpireAsync(guildId As ULong, days As Integer, action As WarnExpireAction) As Task
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync*
  nameWithType.vb: UserPunishService.WarnExpireAsync(ULong, Integer, WarnExpireAction)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync(ULong, Integer, Mewdeko.Database.Models.WarnExpireAction)
  name.vb: WarnExpireAsync(ULong, Integer, WarnExpireAction)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll(System.UInt64)
  id: WarnlogAll(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnlogAll(ulong)
  nameWithType: UserPunishService.WarnlogAll(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnlogAll
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 473
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Retrieves the warnings for a guild.
  example: []
  syntax:
    content: public Task<IGrouping<ulong, Warning>[]> WarnlogAll(ulong gid)
    parameters:
    - id: gid
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Linq.IGrouping{System.UInt64,Mewdeko.Database.Models.Warning}[]}
      description: ''
    content.vb: Public Function WarnlogAll(gid As ULong) As Task(Of IGrouping(Of ULong, Warning)())
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll*
  nameWithType.vb: UserPunishService.WarnlogAll(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll(ULong)
  name.vb: WarnlogAll(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings(System.UInt64,System.UInt64)
  id: UserWarnings(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: UserWarnings(ulong, ulong)
  nameWithType: UserPunishService.UserWarnings(ulong, ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserWarnings
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 485
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Retrieves the warnings for a user in a guild.
  example: []
  syntax:
    content: public Warning[] UserWarnings(ulong gid, ulong userId)
    parameters:
    - id: gid
      type: System.UInt64
      description: The ID of the guild.
    - id: userId
      type: System.UInt64
      description: The ID of the user.
    return:
      type: Mewdeko.Database.Models.Warning[]
      description: ''
    content.vb: Public Function UserWarnings(gid As ULong, userId As ULong) As Warning()
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings*
  nameWithType.vb: UserPunishService.UserWarnings(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings(ULong, ULong)
  name.vb: UserWarnings(ULong, ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync(System.UInt64,System.UInt64,System.Int32,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync(System.UInt64,System.UInt64,System.Int32,System.String)
  id: WarnClearAsync(System.UInt64,System.UInt64,System.Int32,System.String)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnClearAsync(ulong, ulong, int, string)
  nameWithType: UserPunishService.WarnClearAsync(ulong, ulong, int, string)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync(ulong, ulong, int, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnClearAsync
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 499
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Clears all warnings or a specific warning for a user in a guild.
  example: []
  syntax:
    content: public Task<bool> WarnClearAsync(ulong guildId, ulong userId, int index, string moderator)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: userId
      type: System.UInt64
      description: The ID of the user.
    - id: index
      type: System.Int32
      description: The index of the warning to clear.
    - id: moderator
      type: System.String
      description: The user who clears the warning.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function WarnClearAsync(guildId As ULong, userId As ULong, index As Integer, moderator As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync*
  nameWithType.vb: UserPunishService.WarnClearAsync(ULong, ULong, Integer, String)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync(ULong, ULong, Integer, String)
  name.vb: WarnClearAsync(ULong, ULong, Integer, String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IRole)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IRole)
  id: WarnPunish(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime,Discord.IRole)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnPunish(ulong, int, PunishmentAction, StoopidTime?, IRole?)
  nameWithType: UserPunishService.WarnPunish(ulong, int, PunishmentAction, StoopidTime?, IRole?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish(ulong, int, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime?, Discord.IRole?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunish
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 521
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Sets what each warn number should do.
  example: []
  syntax:
    content: public Task<bool> WarnPunish(ulong guildId, int number, PunishmentAction punish, StoopidTime? time, IRole? role = null)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: number
      type: System.Int32
      description: The number of warnings.
    - id: punish
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment to apply.
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The duration of the punishment.
    - id: role
      type: Discord.IRole
      description: The role to apply.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function WarnPunish(guildId As ULong, number As Integer, punish As PunishmentAction, time As StoopidTime, role As IRole = Nothing) As Task(Of Boolean)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish*
  nameWithType.vb: UserPunishService.WarnPunish(ULong, Integer, PunishmentAction, StoopidTime, IRole)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish(ULong, Integer, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime, Discord.IRole)
  name.vb: WarnPunish(ULong, Integer, PunishmentAction, StoopidTime, IRole)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove(System.UInt64,System.Int32)
  id: WarnPunishRemove(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnPunishRemove(ulong, int)
  nameWithType: UserPunishService.WarnPunishRemove(ulong, int)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunishRemove
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 554
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Removes a warning punishment.
  example: []
  syntax:
    content: public Task<bool> WarnPunishRemove(ulong guildId, int number)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: number
      type: System.Int32
      description: The number of warnings.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function WarnPunishRemove(guildId As ULong, number As Integer) As Task(Of Boolean)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove*
  nameWithType.vb: UserPunishService.WarnPunishRemove(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove(ULong, Integer)
  name.vb: WarnPunishRemove(ULong, Integer)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList(System.UInt64)
  id: WarnPunishList(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: WarnPunishList(ulong)
  nameWithType: UserPunishService.WarnPunishList(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WarnPunishList
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 577
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Retrieves the list of warning punishments for a guild.
  example: []
  syntax:
    content: public Task<WarningPunishment[]> WarnPunishList(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment[]}
      description: ''
    content.vb: Public Function WarnPunishList(guildId As ULong) As Task(Of WarningPunishment())
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList*
  nameWithType.vb: UserPunishService.WarnPunishList(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList(ULong)
  name.vb: WarnPunishList(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill(Discord.WebSocket.SocketGuild,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill(Discord.WebSocket.SocketGuild,System.String)
  id: MassKill(Discord.WebSocket.SocketGuild,System.String)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: MassKill(SocketGuild, string)
  nameWithType: UserPunishService.MassKill(SocketGuild, string)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill(Discord.WebSocket.SocketGuild, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MassKill
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 592
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Mass bans users from a guild. And blacklists them.
  example: []
  syntax:
    content: public (IEnumerable<(string Original, ulong? id, string Reason)> Bans, int Missing) MassKill(SocketGuild guild, string people)
    parameters:
    - id: guild
      type: Discord.WebSocket.SocketGuild
      description: The guild to ban users from.
    - id: people
      type: System.String
      description: The list of users to ban.
    return:
      type: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}
      description: ''
    content.vb: Public Function MassKill(guild As SocketGuild, people As String) As (Bans As IEnumerable(Of (Original As String, id As ULong?, Reason As String)), Missing As Integer)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill*
  nameWithType.vb: UserPunishService.MassKill(SocketGuild, String)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill(Discord.WebSocket.SocketGuild, String)
  name.vb: MassKill(SocketGuild, String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate(System.UInt64)
  id: GetBanTemplate(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetBanTemplate(ulong)
  nameWithType: UserPunishService.GetBanTemplate(ulong)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBanTemplate
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 635
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Gets the dm ban message for a guild.
  example: []
  syntax:
    content: public string? GetBanTemplate(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetBanTemplate(guildId As ULong) As String
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate*
  nameWithType.vb: UserPunishService.GetBanTemplate(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate(ULong)
  name.vb: GetBanTemplate(ULong)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate(System.UInt64,System.String)
  id: SetBanTemplate(System.UInt64,System.String)
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: SetBanTemplate(ulong, string?)
  nameWithType: UserPunishService.SetBanTemplate(ulong, string?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate(ulong, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBanTemplate
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 650
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Sets the dm ban message for a guild.
  example: []
  syntax:
    content: public void SetBanTemplate(ulong guildId, string? text)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: text
      type: System.String
      description: The message to set.
    content.vb: Public Sub SetBanTemplate(guildId As ULong, text As String)
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate*
  nameWithType.vb: UserPunishService.SetBanTemplate(ULong, String)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate(ULong, String)
  name.vb: SetBanTemplate(ULong, String)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.Commands.ICommandContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.Commands.ICommandContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  id: GetBanUserDmEmbed(Discord.Commands.ICommandContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetBanUserDmEmbed(ICommandContext, IGuildUser, string?, string?, TimeSpan?)
  nameWithType: UserPunishService.GetBanUserDmEmbed(ICommandContext, IGuildUser, string?, string?, TimeSpan?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.Commands.ICommandContext, Discord.IGuildUser, string?, string?, System.TimeSpan?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBanUserDmEmbed
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 688
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Gets the dm ban embed for a user.
  example: []
  syntax:
    content: public Task<(Embed[]?, string?, ComponentBuilder?)> GetBanUserDmEmbed(ICommandContext context, IGuildUser target, string? defaultMessage, string? banReason, TimeSpan? duration)
    parameters:
    - id: context
      type: Discord.Commands.ICommandContext
      description: The context of the command.
    - id: target
      type: Discord.IGuildUser
      description: The user to ban.
    - id: defaultMessage
      type: System.String
      description: The default message to send.
    - id: banReason
      type: System.String
      description: The reason for the ban.
    - id: duration
      type: System.Nullable{System.TimeSpan}
      description: The duration of the ban.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{Discord.Embed[],System.String,Discord.ComponentBuilder}}
      description: ''
    content.vb: Public Function GetBanUserDmEmbed(context As ICommandContext, target As IGuildUser, defaultMessage As String, banReason As String, duration As TimeSpan?) As Task(Of (Embed(), String, ComponentBuilder))
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed*
  nameWithType.vb: UserPunishService.GetBanUserDmEmbed(ICommandContext, IGuildUser, String, String, TimeSpan?)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.Commands.ICommandContext, Discord.IGuildUser, String, String, System.TimeSpan?)
  name.vb: GetBanUserDmEmbed(ICommandContext, IGuildUser, String, String, TimeSpan?)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.IInteractionContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.IInteractionContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  id: GetBanUserDmEmbed(Discord.IInteractionContext,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetBanUserDmEmbed(IInteractionContext, IGuildUser, string?, string?, TimeSpan?)
  nameWithType: UserPunishService.GetBanUserDmEmbed(IInteractionContext, IGuildUser, string?, string?, TimeSpan?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.IInteractionContext, Discord.IGuildUser, string?, string?, System.TimeSpan?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBanUserDmEmbed
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 709
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Gets the dm ban embed for a user.
  example: []
  syntax:
    content: public Task<(Embed[]?, string?, ComponentBuilder?)> GetBanUserDmEmbed(IInteractionContext context, IGuildUser target, string? defaultMessage, string? banReason, TimeSpan? duration)
    parameters:
    - id: context
      type: Discord.IInteractionContext
      description: The context of the command.
    - id: target
      type: Discord.IGuildUser
      description: The user to ban.
    - id: defaultMessage
      type: System.String
      description: The default message to send.
    - id: banReason
      type: System.String
      description: The reason for the ban.
    - id: duration
      type: System.Nullable{System.TimeSpan}
      description: The duration of the ban.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{Discord.Embed[],System.String,Discord.ComponentBuilder}}
      description: ''
    content.vb: Public Function GetBanUserDmEmbed(context As IInteractionContext, target As IGuildUser, defaultMessage As String, banReason As String, duration As TimeSpan?) As Task(Of (Embed(), String, ComponentBuilder))
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed*
  nameWithType.vb: UserPunishService.GetBanUserDmEmbed(IInteractionContext, IGuildUser, String, String, TimeSpan?)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.IInteractionContext, Discord.IGuildUser, String, String, System.TimeSpan?)
  name.vb: GetBanUserDmEmbed(IInteractionContext, IGuildUser, String, String, TimeSpan?)
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketGuild,Discord.IGuildUser,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  commentId: M:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketGuild,Discord.IGuildUser,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  id: GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketGuild,Discord.IGuildUser,Discord.IGuildUser,System.String,System.String,System.Nullable{System.TimeSpan})
  parent: Mewdeko.Modules.Moderation.Services.UserPunishService
  langs:
  - csharp
  - vb
  name: GetBanUserDmEmbed(DiscordSocketClient, SocketGuild, IGuildUser, IGuildUser, string?, string?, TimeSpan?)
  nameWithType: UserPunishService.GetBanUserDmEmbed(DiscordSocketClient, SocketGuild, IGuildUser, IGuildUser, string?, string?, TimeSpan?)
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient, Discord.WebSocket.SocketGuild, Discord.IGuildUser, Discord.IGuildUser, string?, string?, System.TimeSpan?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBanUserDmEmbed
    path: src/Mewdeko/Modules/Moderation/Services/UserPunishService.cs
    startLine: 732
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation.Services
  summary: Gets the dm ban embed for a user.
  example: []
  syntax:
    content: public Task<(Embed[], string?, ComponentBuilder?)> GetBanUserDmEmbed(DiscordSocketClient discordSocketClient, SocketGuild guild, IGuildUser moderator, IGuildUser target, string? defaultMessage, string? banReason, TimeSpan? duration)
    parameters:
    - id: discordSocketClient
      type: Discord.WebSocket.DiscordSocketClient
      description: The DiscordSocketClient instance.
    - id: guild
      type: Discord.WebSocket.SocketGuild
      description: The guild where the ban is issued.
    - id: moderator
      type: Discord.IGuildUser
      description: The user who issues the ban.
    - id: target
      type: Discord.IGuildUser
      description: The user to ban.
    - id: defaultMessage
      type: System.String
      description: The default message to send.
    - id: banReason
      type: System.String
      description: The reason for the ban.
    - id: duration
      type: System.Nullable{System.TimeSpan}
      description: The duration of the ban.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{Discord.Embed[],System.String,Discord.ComponentBuilder}}
      description: ''
    content.vb: Public Function GetBanUserDmEmbed(discordSocketClient As DiscordSocketClient, guild As SocketGuild, moderator As IGuildUser, target As IGuildUser, defaultMessage As String, banReason As String, duration As TimeSpan?) As Task(Of (Embed(), String, ComponentBuilder))
  overload: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed*
  nameWithType.vb: UserPunishService.GetBanUserDmEmbed(DiscordSocketClient, SocketGuild, IGuildUser, IGuildUser, String, String, TimeSpan?)
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed(Discord.WebSocket.DiscordSocketClient, Discord.WebSocket.SocketGuild, Discord.IGuildUser, Discord.IGuildUser, String, String, System.TimeSpan?)
  name.vb: GetBanUserDmEmbed(DiscordSocketClient, SocketGuild, IGuildUser, IGuildUser, String, String, TimeSpan?)
references:
- uid: Mewdeko.Modules.Moderation.Services
  commentId: N:Mewdeko.Modules.Moderation.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation.Services
  nameWithType: Mewdeko.Modules.Moderation.Services
  fullName: Mewdeko.Modules.Moderation.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserPunishService>(UserPunishService, string)
  nameWithType: Extensions.ThrowIfNull<UserPunishService>(UserPunishService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Moderation.Services.UserPunishService>(Mewdeko.Modules.Moderation.Services.UserPunishService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of UserPunishService)(UserPunishService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Moderation.Services.UserPunishService)(Mewdeko.Modules.Moderation.Services.UserPunishService, String)
  name.vb: ThrowIfNull(Of UserPunishService)(UserPunishService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Services.UserPunishService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Services.UserPunishService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.#ctor
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService__ctor_Mewdeko_Modules_Moderation_Services_MuteService_Mewdeko_Database_DbService_Mewdeko_Modules_Permissions_Services_BlacklistService_Discord_WebSocket_DiscordSocketClient_Mewdeko_Services_GuildSettingsService_
  name: UserPunishService
  nameWithType: UserPunishService.UserPunishService
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UserPunishService
  nameWithType.vb: UserPunishService.New
  fullName.vb: Mewdeko.Modules.Moderation.Services.UserPunishService.New
  name.vb: New
- uid: Mewdeko.Modules.Moderation.Services.MuteService
  commentId: T:Mewdeko.Modules.Moderation.Services.MuteService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.MuteService.html
  name: MuteService
  nameWithType: MuteService
  fullName: Mewdeko.Modules.Moderation.Services.MuteService
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Modules.Permissions.Services.BlacklistService
  commentId: T:Mewdeko.Modules.Permissions.Services.BlacklistService
  parent: Mewdeko.Modules.Permissions.Services
  href: Mewdeko.Modules.Permissions.Services.BlacklistService.html
  name: BlacklistService
  nameWithType: BlacklistService
  fullName: Mewdeko.Modules.Permissions.Services.BlacklistService
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Modules.Permissions.Services
  commentId: N:Mewdeko.Modules.Permissions.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Permissions.Services
  nameWithType: Mewdeko.Modules.Permissions.Services
  fullName: Mewdeko.Modules.Permissions.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_AddMassNick_System_UInt64_Discord_IUser_System_Int32_System_String_Mewdeko_Modules_Moderation_Services_UserPunishService_MassNick__
  name: AddMassNick
  nameWithType: UserPunishService.AddMassNick
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.AddMassNick
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
  commentId: T:Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  name: UserPunishService.MassNick
  nameWithType: UserPunishService.MassNick
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
  spec.csharp:
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
    name: MassNick
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick.html
  spec.vb:
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService
    name: UserPunishService
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick
    name: MassNick
    href: Mewdeko.Modules.Moderation.Services.UserPunishService.MassNick.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_GetMassNick_System_UInt64_
  name: GetMassNick
  nameWithType: UserPunishService.GetMassNick
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetMassNick
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_RemoveMassNick_System_UInt64_
  name: RemoveMassNick
  nameWithType: UserPunishService.RemoveMassNick
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.RemoveMassNick
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_UpdateMassNick_System_UInt64_System_Boolean_System_Boolean_System_Boolean_
  name: UpdateMassNick
  nameWithType: UserPunishService.UpdateMassNick
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UpdateMassNick
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_GetWarnlogChannel_System_UInt64_
  name: GetWarnlogChannel
  nameWithType: UserPunishService.GetWarnlogChannel
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetWarnlogChannel
- uid: System.Threading.Tasks.Task{System.UInt64}
  commentId: T:System.Threading.Tasks.Task{System.UInt64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ulong>
  nameWithType: Task<ulong>
  fullName: System.Threading.Tasks.Task<ulong>
  nameWithType.vb: Task(Of ULong)
  fullName.vb: System.Threading.Tasks.Task(Of ULong)
  name.vb: Task(Of ULong)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_SetWarnlogChannelId_Discord_IGuild_Discord_ITextChannel_
  name: SetWarnlogChannelId
  nameWithType: UserPunishService.SetWarnlogChannelId
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.SetWarnlogChannelId
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.Warn
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_Warn_Discord_IGuild_System_UInt64_Discord_IUser_System_String_
  name: Warn
  nameWithType: UserPunishService.Warn
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.Warn
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WarningPunishment>
  nameWithType: Task<WarningPunishment>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.WarningPunishment>
  nameWithType.vb: Task(Of WarningPunishment)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.WarningPunishment)
  name.vb: Task(Of WarningPunishment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.WarningPunishment
    name: WarningPunishment
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.WarningPunishment
    name: WarningPunishment
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_ApplyPunishment_Discord_IGuild_Discord_IGuildUser_Discord_IUser_Mewdeko_Database_Models_PunishmentAction_System_Int32_System_Nullable_System_UInt64__System_String_
  name: ApplyPunishment
  nameWithType: UserPunishService.ApplyPunishment
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.ApplyPunishment
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Mewdeko.Database.Models.PunishmentAction
  commentId: T:Mewdeko.Database.Models.PunishmentAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.PunishmentAction.html
  name: PunishmentAction
  nameWithType: PunishmentAction
  fullName: Mewdeko.Database.Models.PunishmentAction
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_CheckAllWarnExpiresAsync
  name: CheckAllWarnExpiresAsync
  nameWithType: UserPunishService.CheckAllWarnExpiresAsync
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckAllWarnExpiresAsync
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_CheckWarnExpiresAsync_System_UInt64_
  name: CheckWarnExpiresAsync
  nameWithType: UserPunishService.CheckWarnExpiresAsync
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.CheckWarnExpiresAsync
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnExpireAsync_System_UInt64_System_Int32_Mewdeko_Database_Models_WarnExpireAction_
  name: WarnExpireAsync
  nameWithType: UserPunishService.WarnExpireAsync
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnExpireAsync
- uid: Mewdeko.Database.Models.WarnExpireAction
  commentId: T:Mewdeko.Database.Models.WarnExpireAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.WarnExpireAction.html
  name: WarnExpireAction
  nameWithType: WarnExpireAction
  fullName: Mewdeko.Database.Models.WarnExpireAction
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnlogAll_System_UInt64_
  name: WarnlogAll
  nameWithType: UserPunishService.WarnlogAll
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnlogAll
- uid: System.Threading.Tasks.Task{System.Linq.IGrouping{System.UInt64,Mewdeko.Database.Models.Warning}[]}
  commentId: T:System.Threading.Tasks.Task{System.Linq.IGrouping{System.UInt64,Mewdeko.Database.Models.Warning}[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IGrouping<ulong, Warning>[]>
  nameWithType: Task<IGrouping<ulong, Warning>[]>
  fullName: System.Threading.Tasks.Task<System.Linq.IGrouping<ulong, Mewdeko.Database.Models.Warning>[]>
  nameWithType.vb: Task(Of IGrouping(Of ULong, Warning)())
  fullName.vb: System.Threading.Tasks.Task(Of System.Linq.IGrouping(Of ULong, Mewdeko.Database.Models.Warning)())
  name.vb: Task(Of IGrouping(Of ULong, Warning)())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.igrouping-2
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.Warning
    name: Warning
  - name: '>'
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.igrouping-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Database.Models.Warning
    name: Warning
  - name: )
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_UserWarnings_System_UInt64_System_UInt64_
  name: UserWarnings
  nameWithType: UserPunishService.UserWarnings
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.UserWarnings
- uid: Mewdeko.Database.Models.Warning[]
  isExternal: true
  href: Mewdeko.Database.Models.Warning.html
  name: Warning[]
  nameWithType: Warning[]
  fullName: Mewdeko.Database.Models.Warning[]
  nameWithType.vb: Warning()
  fullName.vb: Mewdeko.Database.Models.Warning()
  name.vb: Warning()
  spec.csharp:
  - uid: Mewdeko.Database.Models.Warning
    name: Warning
    href: Mewdeko.Database.Models.Warning.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Mewdeko.Database.Models.Warning
    name: Warning
    href: Mewdeko.Database.Models.Warning.html
  - name: (
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnClearAsync_System_UInt64_System_UInt64_System_Int32_System_String_
  name: WarnClearAsync
  nameWithType: UserPunishService.WarnClearAsync
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnClearAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnPunish_System_UInt64_System_Int32_Mewdeko_Database_Models_PunishmentAction_Mewdeko_Common_TypeReaders_Models_StoopidTime_Discord_IRole_
  name: WarnPunish
  nameWithType: UserPunishService.WarnPunish
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunish
- uid: Mewdeko.Common.TypeReaders.Models.StoopidTime
  commentId: T:Mewdeko.Common.TypeReaders.Models.StoopidTime
  parent: Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.Common.TypeReaders.Models.StoopidTime.html
  name: StoopidTime
  nameWithType: StoopidTime
  fullName: Mewdeko.Common.TypeReaders.Models.StoopidTime
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Common.TypeReaders.Models
  commentId: N:Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders.Models
  nameWithType: Mewdeko.Common.TypeReaders.Models
  fullName: Mewdeko.Common.TypeReaders.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnPunishRemove_System_UInt64_System_Int32_
  name: WarnPunishRemove
  nameWithType: UserPunishService.WarnPunishRemove
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishRemove
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_WarnPunishList_System_UInt64_
  name: WarnPunishList
  nameWithType: UserPunishService.WarnPunishList
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.WarnPunishList
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment[]}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.WarningPunishment[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WarningPunishment[]>
  nameWithType: Task<WarningPunishment[]>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.WarningPunishment[]>
  nameWithType.vb: Task(Of WarningPunishment())
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.WarningPunishment())
  name.vb: Task(Of WarningPunishment())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.WarningPunishment
    name: WarningPunishment
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.WarningPunishment
    name: WarningPunishment
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_MassKill_Discord_WebSocket_SocketGuild_System_String_
  name: MassKill
  nameWithType: UserPunishService.MassKill
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.MassKill
- uid: Discord.WebSocket.SocketGuild
  commentId: T:Discord.WebSocket.SocketGuild
  parent: Discord.WebSocket
  isExternal: true
  name: SocketGuild
  nameWithType: SocketGuild
  fullName: Discord.WebSocket.SocketGuild
- uid: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}
  commentId: T:System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: (IEnumerable<(string Original, ulong? id, string Reason)> Bans, int Missing)
  nameWithType: (IEnumerable<(string Original, ulong? id, string Reason)> Bans, int Missing)
  fullName: (System.Collections.Generic.IEnumerable<(string Original, ulong? id, string Reason)> Bans, int Missing)
  nameWithType.vb: (Bans As IEnumerable(Of (Original As String, id As ULong?, Reason As String)), Missing As Integer)
  fullName.vb: (Bans As System.Collections.Generic.IEnumerable(Of (Original As String, id As ULong?, Reason As String)), Missing As Integer)
  name.vb: (Bans As IEnumerable(Of (Original As String, id As ULong?, Reason As String)), Missing As Integer)
  spec.csharp:
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.Original
    name: Original
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.original
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.id
    name: id
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.id
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.Reason
    name: Reason
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.reason
  - name: )
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}.Bans
    name: Bans
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ienumerable-system.valuetuple-system.string,system.nullable-system.uint64-,system.string--,system.int32-.bans
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}.Missing
    name: Missing
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ienumerable-system.valuetuple-system.string,system.nullable-system.uint64-,system.string--,system.int32-.missing
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}.Bans
    name: Bans
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ienumerable-system.valuetuple-system.string,system.nullable-system.uint64-,system.string--,system.int32-.bans
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.Original
    name: Original
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.original
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.id
    name: id
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.id
  - name: " "
  - name: As
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}.Reason
    name: Reason
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.nullable-system.uint64-,system.string-.reason
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Nullable{System.UInt64},System.String}},System.Int32}.Missing
    name: Missing
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.collections.generic.ienumerable-system.valuetuple-system.string,system.nullable-system.uint64-,system.string--,system.int32-.missing
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_GetBanTemplate_System_UInt64_
  name: GetBanTemplate
  nameWithType: UserPunishService.GetBanTemplate
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanTemplate
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_SetBanTemplate_System_UInt64_System_String_
  name: SetBanTemplate
  nameWithType: UserPunishService.SetBanTemplate
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.SetBanTemplate
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed*
  commentId: Overload:Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html#Mewdeko_Modules_Moderation_Services_UserPunishService_GetBanUserDmEmbed_Discord_Commands_ICommandContext_Discord_IGuildUser_System_String_System_String_System_Nullable_System_TimeSpan__
  name: GetBanUserDmEmbed
  nameWithType: UserPunishService.GetBanUserDmEmbed
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService.GetBanUserDmEmbed
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  isExternal: true
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Threading.Tasks.Task{System.ValueTuple{Discord.Embed[],System.String,Discord.ComponentBuilder}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{Discord.Embed[],System.String,Discord.ComponentBuilder}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(Embed[], string, ComponentBuilder)>
  nameWithType: Task<(Embed[], string, ComponentBuilder)>
  fullName: System.Threading.Tasks.Task<(Discord.Embed[], string, Discord.ComponentBuilder)>
  nameWithType.vb: Task(Of (Embed(), String, ComponentBuilder))
  fullName.vb: System.Threading.Tasks.Task(Of (Discord.Embed(), String, Discord.ComponentBuilder))
  name.vb: Task(Of (Embed(), String, ComponentBuilder))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.ComponentBuilder
    name: ComponentBuilder
    isExternal: true
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.ComponentBuilder
    name: ComponentBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Discord.IInteractionContext
  commentId: T:Discord.IInteractionContext
  parent: Discord
  isExternal: true
  name: IInteractionContext
  nameWithType: IInteractionContext
  fullName: Discord.IInteractionContext
