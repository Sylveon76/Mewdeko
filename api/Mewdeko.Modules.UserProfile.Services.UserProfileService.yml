### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
  commentId: T:Mewdeko.Modules.UserProfile.Services.UserProfileService
  id: UserProfileService
  parent: Mewdeko.Modules.UserProfile.Services
  children:
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor(Mewdeko.Database.DbService,System.Net.Http.HttpClient)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData(Discord.IUser)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio(Discord.IUser)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed(Discord.IUser,Discord.IUser)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy(Discord.IUser)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync(System.UInt64)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac(Discord.IUser)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo(System.UInt64)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio(Discord.IUser,System.String)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday(Discord.IUser,System.DateTime)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode(Discord.IUser,Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy(Discord.IUser,Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor(Discord.IUser,Discord.Color)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage(Discord.IUser,System.String)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc(Discord.IUser,System.String)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac(Discord.IUser,System.String)
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut(Discord.IUser)
  langs:
  - csharp
  - vb
  name: UserProfileService
  nameWithType: UserProfileService
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService
  type: Class
  source:
    id: UserProfileService
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 315
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Provides services for managing user profiles, including operations such as retrieving and setting user pronouns, zodiac information, biographies, and privacy settings. It interacts with external services for some functionalities, like fetching pronouns from PronounDB.
  example: []
  syntax:
    content: 'public class UserProfileService : INService'
    content.vb: Public Class UserProfileService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.UserProfile.Services.UserProfileService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor(Mewdeko.Database.DbService,System.Net.Http.HttpClient)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor(Mewdeko.Database.DbService,System.Net.Http.HttpClient)
  id: '#ctor(Mewdeko.Database.DbService,System.Net.Http.HttpClient)'
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: UserProfileService(DbService, HttpClient)
  nameWithType: UserProfileService.UserProfileService(DbService, HttpClient)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.UserProfileService(Mewdeko.Database.DbService, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.UserProfile.Services.UserProfileService" data-throw-if-not-resolved="false"></xref> class with specified database and HTTP services.
  example: []
  syntax:
    content: public UserProfileService(DbService db, HttpClient http)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service for accessing user data.
    - id: http
      type: System.Net.Http.HttpClient
      description: The HTTP client used for making external API calls.
    content.vb: Public Sub New(db As DbService, http As HttpClient)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor*
  nameWithType.vb: UserProfileService.New(DbService, HttpClient)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.New(Mewdeko.Database.DbService, System.Net.Http.HttpClient)
  name.vb: New(DbService, HttpClient)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync(System.UInt64)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync(System.UInt64)
  id: GetPronounsOrUnspecifiedAsync(System.UInt64)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetPronounsOrUnspecifiedAsync(ulong)
  nameWithType: UserProfileService.GetPronounsOrUnspecifiedAsync(ulong)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetPronounsOrUnspecifiedAsync
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously retrieves the pronouns for a given Discord user ID, either from the local database or PronounDB if unspecified.
  remarks: This method first attempts to find the user's pronouns in the local database. If not found or unspecified, it then queries PronounDB's API.
  example: []
  syntax:
    content: public Task<PronounSearchResult> GetPronounsOrUnspecifiedAsync(ulong discordId)
    parameters:
    - id: discordId
      type: System.UInt64
      description: The Discord user ID to retrieve pronouns for.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.UserProfile.Common.PronounSearchResult}
      description: A <xref href="Mewdeko.Modules.UserProfile.Common.PronounSearchResult" data-throw-if-not-resolved="false"></xref> object containing the pronouns or a default value if unspecified.
    content.vb: Public Function GetPronounsOrUnspecifiedAsync(discordId As ULong) As Task(Of PronounSearchResult)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync*
  nameWithType.vb: UserProfileService.GetPronounsOrUnspecifiedAsync(ULong)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync(ULong)
  name.vb: GetPronounsOrUnspecifiedAsync(ULong)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo(System.UInt64)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo(System.UInt64)
  id: GetZodiacInfo(System.UInt64)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetZodiacInfo(ulong)
  nameWithType: UserProfileService.GetZodiacInfo(ulong)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetZodiacInfo
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 104
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously fetches zodiac information for a given Discord user ID.
  remarks: The zodiac information is retrieved from an external API and requires the user's zodiac sign to be previously set.
  example: []
  syntax:
    content: public Task<(bool, ZodiacResult)> GetZodiacInfo(ulong discordId)
    parameters:
    - id: discordId
      type: System.UInt64
      description: The Discord user ID to retrieve zodiac information for.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Modules.UserProfile.Common.ZodiacResult}}
      description: A tuple containing a boolean indicating success, and a <xref href="Mewdeko.Modules.UserProfile.Common.ZodiacResult" data-throw-if-not-resolved="false"></xref> object if successful.
    content.vb: Public Function GetZodiacInfo(discordId As ULong) As Task(Of (Boolean, ZodiacResult))
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo*
  nameWithType.vb: UserProfileService.GetZodiacInfo(ULong)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo(ULong)
  name.vb: GetZodiacInfo(ULong)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio(Discord.IUser)
  id: GetBio(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetBio(IUser)
  nameWithType: UserProfileService.GetBio(IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBio
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 122
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously retrieves the biography of a given user.
  example: []
  syntax:
    content: public Task<string?> GetBio(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to retrieve the biography for.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The biography as a string, or an empty string if not set.
    content.vb: Public Function GetBio(user As IUser) As Task(Of String)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio(Discord.IUser,System.String)
  id: SetBio(Discord.IUser,System.String)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetBio(IUser, string)
  nameWithType: UserProfileService.SetBio(IUser, string)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio(Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBio
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 134
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the biography for a given user.
  example: []
  syntax:
    content: public Task SetBio(IUser user, string bio)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the biography for.
    - id: bio
      type: System.String
      description: The biography text to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetBio(user As IUser, bio As String) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio*
  nameWithType.vb: UserProfileService.SetBio(IUser, String)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio(Discord.IUser, String)
  name.vb: SetBio(IUser, String)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy(Discord.IUser)
  id: GetProfilePrivacy(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetProfilePrivacy(IUser)
  nameWithType: UserProfileService.GetProfilePrivacy(IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetProfilePrivacy
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 148
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously gets the privacy setting of a user's profile.
  example: []
  syntax:
    content: public Task<DiscordUser.ProfilePrivacyEnum> GetProfilePrivacy(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to retrieve the privacy setting for.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum}
      description: The current privacy setting of the user's profile.
    content.vb: Public Function GetProfilePrivacy(user As IUser) As Task(Of DiscordUser.ProfilePrivacyEnum)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy(Discord.IUser,Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy(Discord.IUser,Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  id: SetPrivacy(Discord.IUser,Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetPrivacy(IUser, ProfilePrivacyEnum)
  nameWithType: UserProfileService.SetPrivacy(IUser, DiscordUser.ProfilePrivacyEnum)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy(Discord.IUser, Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetPrivacy
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 161
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the privacy setting for a given user's profile.
  example: []
  syntax:
    content: public Task SetPrivacy(IUser user, DiscordUser.ProfilePrivacyEnum privacyEnum)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the privacy for.
    - id: privacyEnum
      type: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
      description: The privacy setting to apply to the user's profile.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetPrivacy(user As IUser, privacyEnum As DiscordUser.ProfilePrivacyEnum) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode(Discord.IUser,Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode(Discord.IUser,Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  id: SetBirthdayDisplayMode(Discord.IUser,Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetBirthdayDisplayMode(IUser, BirthdayDisplayModeEnum)
  nameWithType: UserProfileService.SetBirthdayDisplayMode(IUser, DiscordUser.BirthdayDisplayModeEnum)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode(Discord.IUser, Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBirthdayDisplayMode
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 175
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the display mode for a user's birthday.
  example: []
  syntax:
    content: public Task SetBirthdayDisplayMode(IUser user, DiscordUser.BirthdayDisplayModeEnum birthdayDisplayModeEnum)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the birthday display mode for.
    - id: birthdayDisplayModeEnum
      type: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
      description: The birthday display mode to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetBirthdayDisplayMode(user As IUser, birthdayDisplayModeEnum As DiscordUser.BirthdayDisplayModeEnum) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday(Discord.IUser,System.DateTime)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday(Discord.IUser,System.DateTime)
  id: SetBirthday(Discord.IUser,System.DateTime)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetBirthday(IUser, DateTime)
  nameWithType: UserProfileService.SetBirthday(IUser, DateTime)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday(Discord.IUser, System.DateTime)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBirthday
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 189
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the birthday for a given user.
  example: []
  syntax:
    content: public Task SetBirthday(IUser user, DateTime time)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the birthday for.
    - id: time
      type: System.DateTime
      description: The birthday date to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetBirthday(user As IUser, time As Date) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday*
  nameWithType.vb: UserProfileService.SetBirthday(IUser, Date)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday(Discord.IUser, Date)
  name.vb: SetBirthday(IUser, Date)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac(Discord.IUser)
  id: GetZodiac(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetZodiac(IUser)
  nameWithType: UserProfileService.GetZodiac(IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetZodiac
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 203
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously retrieves the zodiac sign of a given user.
  example: []
  syntax:
    content: public Task<string> GetZodiac(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to retrieve the zodiac sign for.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The zodiac sign of the user.
    content.vb: Public Function GetZodiac(user As IUser) As Task(Of String)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac(Discord.IUser,System.String)
  id: SetZodiac(Discord.IUser,System.String)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetZodiac(IUser, string)
  nameWithType: UserProfileService.SetZodiac(IUser, string)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac(Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetZodiac
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 219
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the zodiac sign for a given user.
  remarks: The method checks if the provided zodiac sign is within a predefined list of valid signs before setting it.
  example: []
  syntax:
    content: public Task<bool> SetZodiac(IUser user, string zodiacSign)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the zodiac sign for.
    - id: zodiacSign
      type: System.String
      description: The zodiac sign to set.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the zodiac sign was successfully set; otherwise, false.
    content.vb: Public Function SetZodiac(user As IUser, zodiacSign As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac*
  nameWithType.vb: UserProfileService.SetZodiac(IUser, String)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac(Discord.IUser, String)
  name.vb: SetZodiac(IUser, String)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor(Discord.IUser,Discord.Color)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor(Discord.IUser,Discord.Color)
  id: SetProfileColor(Discord.IUser,Discord.Color)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetProfileColor(IUser, Color)
  nameWithType: UserProfileService.SetProfileColor(IUser, Color)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor(Discord.IUser, Discord.Color)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetProfileColor
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 236
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the profile color for a given user.
  example: []
  syntax:
    content: public Task SetProfileColor(IUser user, Color color)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the profile color for.
    - id: color
      type: Discord.Color
      description: The color to set as the user's profile color.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProfileColor(user As IUser, color As Color) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage(Discord.IUser,System.String)
  id: SetProfileImage(Discord.IUser,System.String)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetProfileImage(IUser, string)
  nameWithType: UserProfileService.SetProfileImage(IUser, string)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage(Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetProfileImage
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 250
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the profile image URL for a given user.
  example: []
  syntax:
    content: public Task SetProfileImage(IUser user, string url)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the profile image for.
    - id: url
      type: System.String
      description: The URL of the image to set as the user's profile image.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProfileImage(user As IUser, url As String) As Task
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage*
  nameWithType.vb: UserProfileService.SetProfileImage(IUser, String)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage(Discord.IUser, String)
  name.vb: SetProfileImage(IUser, String)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc(Discord.IUser,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc(Discord.IUser,System.String)
  id: SetSwitchFc(Discord.IUser,System.String)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: SetSwitchFc(IUser, string)
  nameWithType: UserProfileService.SetSwitchFc(IUser, string)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc(Discord.IUser, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetSwitchFc
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 268
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously sets the Nintendo Switch friend code for a given user.
  remarks: Validates the friend code format before setting it. Friend codes must match the pattern "SW-XXXX-XXXX-XXXX".
  example: []
  syntax:
    content: public Task<bool> SetSwitchFc(IUser user, string fc)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to set the friend code for.
    - id: fc
      type: System.String
      description: The friend code to set.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the friend code was successfully set; otherwise, false.
    content.vb: Public Function SetSwitchFc(user As IUser, fc As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc*
  nameWithType.vb: UserProfileService.SetSwitchFc(IUser, String)
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc(Discord.IUser, String)
  name.vb: SetSwitchFc(IUser, String)
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut(Discord.IUser)
  id: ToggleOptOut(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: ToggleOptOut(IUser)
  nameWithType: UserProfileService.ToggleOptOut(IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleOptOut
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 285
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Toggles the opt-out setting for a user's participation in statistics gathering.
  example: []
  syntax:
    content: public Task<bool> ToggleOptOut(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to toggle the opt-out setting for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the user is now opted out; otherwise, false.
    content.vb: Public Function ToggleOptOut(user As IUser) As Task(Of Boolean)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData(Discord.IUser)
  id: DeleteStatsData(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: DeleteStatsData(IUser)
  nameWithType: UserProfileService.DeleteStatsData(IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DeleteStatsData
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 300
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously deletes statistical data for a given user.
  example: []
  syntax:
    content: public Task<bool> DeleteStatsData(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to delete statistical data for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if data was found and deleted; otherwise, false.
    content.vb: Public Function DeleteStatsData(user As IUser) As Task(Of Boolean)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData*
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed(Discord.IUser,Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed(Discord.IUser,Discord.IUser)
  id: GetProfileEmbed(Discord.IUser,Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.Services.UserProfileService
  langs:
  - csharp
  - vb
  name: GetProfileEmbed(IUser, IUser)
  nameWithType: UserProfileService.GetProfileEmbed(IUser, IUser)
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed(Discord.IUser, Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetProfileEmbed
    path: src/Mewdeko/Modules/UserProfile/Services/UserProfileService.cs
    startLine: 320
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile.Services
  summary: Asynchronously generates an embed for displaying a user's profile information.
  remarks: The profile embed includes information such as pronouns, zodiac sign, birthday, and other personalization settings, considering the privacy settings.
  example: []
  syntax:
    content: public Task<Embed?> GetProfileEmbed(IUser user, IUser profileCaller)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to generate the profile embed for.
    - id: profileCaller
      type: Discord.IUser
      description: The user requesting the profile view, for privacy considerations.
    return:
      type: System.Threading.Tasks.Task{Discord.Embed}
      description: An <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref> object containing the user's profile information, or null if privacy settings prevent displaying it.
    content.vb: Public Function GetProfileEmbed(user As IUser, profileCaller As IUser) As Task(Of Embed)
  overload: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed*
references:
- uid: Mewdeko.Modules.UserProfile.Services
  commentId: N:Mewdeko.Modules.UserProfile.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.UserProfile.Services
  nameWithType: Mewdeko.Modules.UserProfile.Services
  fullName: Mewdeko.Modules.UserProfile.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile.Services
    name: Services
    href: Mewdeko.Modules.UserProfile.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile.Services
    name: Services
    href: Mewdeko.Modules.UserProfile.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserProfileService>(UserProfileService, string)
  nameWithType: Extensions.ThrowIfNull<UserProfileService>(UserProfileService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.UserProfile.Services.UserProfileService>(Mewdeko.Modules.UserProfile.Services.UserProfileService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of UserProfileService)(UserProfileService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.UserProfile.Services.UserProfileService)(Mewdeko.Modules.UserProfile.Services.UserProfileService, String)
  name.vb: ThrowIfNull(Of UserProfileService)(UserProfileService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.UserProfile.Services.UserProfileService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.UserProfile.Services.UserProfileService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
  commentId: T:Mewdeko.Modules.UserProfile.Services.UserProfileService
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  name: UserProfileService
  nameWithType: UserProfileService
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.#ctor
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService__ctor_Mewdeko_Database_DbService_System_Net_Http_HttpClient_
  name: UserProfileService
  nameWithType: UserProfileService.UserProfileService
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.UserProfileService
  nameWithType.vb: UserProfileService.New
  fullName.vb: Mewdeko.Modules.UserProfile.Services.UserProfileService.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Mewdeko.Modules.UserProfile.Common.PronounSearchResult
  commentId: T:Mewdeko.Modules.UserProfile.Common.PronounSearchResult
  href: Mewdeko.Modules.UserProfile.Common.PronounSearchResult.html
  name: PronounSearchResult
  nameWithType: PronounSearchResult
  fullName: Mewdeko.Modules.UserProfile.Common.PronounSearchResult
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetPronounsOrUnspecifiedAsync_System_UInt64_
  name: GetPronounsOrUnspecifiedAsync
  nameWithType: UserProfileService.GetPronounsOrUnspecifiedAsync
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetPronounsOrUnspecifiedAsync
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.UserProfile.Common.PronounSearchResult}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.UserProfile.Common.PronounSearchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PronounSearchResult>
  nameWithType: Task<PronounSearchResult>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.UserProfile.Common.PronounSearchResult>
  nameWithType.vb: Task(Of PronounSearchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.UserProfile.Common.PronounSearchResult)
  name.vb: Task(Of PronounSearchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.UserProfile.Common.PronounSearchResult
    name: PronounSearchResult
    href: Mewdeko.Modules.UserProfile.Common.PronounSearchResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.Common.PronounSearchResult
    name: PronounSearchResult
    href: Mewdeko.Modules.UserProfile.Common.PronounSearchResult.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.UserProfile.Common.ZodiacResult
  commentId: T:Mewdeko.Modules.UserProfile.Common.ZodiacResult
  href: Mewdeko.Modules.UserProfile.Common.ZodiacResult.html
  name: ZodiacResult
  nameWithType: ZodiacResult
  fullName: Mewdeko.Modules.UserProfile.Common.ZodiacResult
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetZodiacInfo_System_UInt64_
  name: GetZodiacInfo
  nameWithType: UserProfileService.GetZodiacInfo
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiacInfo
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Modules.UserProfile.Common.ZodiacResult}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,Mewdeko.Modules.UserProfile.Common.ZodiacResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool, ZodiacResult)>
  nameWithType: Task<(bool, ZodiacResult)>
  fullName: System.Threading.Tasks.Task<(bool, Mewdeko.Modules.UserProfile.Common.ZodiacResult)>
  nameWithType.vb: Task(Of (Boolean, ZodiacResult))
  fullName.vb: System.Threading.Tasks.Task(Of (Boolean, Mewdeko.Modules.UserProfile.Common.ZodiacResult))
  name.vb: Task(Of (Boolean, ZodiacResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.Common.ZodiacResult
    name: ZodiacResult
    href: Mewdeko.Modules.UserProfile.Common.ZodiacResult.html
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.Common.ZodiacResult
    name: ZodiacResult
    href: Mewdeko.Modules.UserProfile.Common.ZodiacResult.html
  - name: )
  - name: )
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetBio_Discord_IUser_
  name: GetBio
  nameWithType: UserProfileService.GetBio
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetBio
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetBio_Discord_IUser_System_String_
  name: SetBio
  nameWithType: UserProfileService.SetBio
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBio
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetProfilePrivacy_Discord_IUser_
  name: GetProfilePrivacy
  nameWithType: UserProfileService.GetProfilePrivacy
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfilePrivacy
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DiscordUser.ProfilePrivacyEnum>
  nameWithType: Task<DiscordUser.ProfilePrivacyEnum>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum>
  nameWithType.vb: Task(Of DiscordUser.ProfilePrivacyEnum)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  name.vb: Task(Of DiscordUser.ProfilePrivacyEnum)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
  - name: )
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetPrivacy_Discord_IUser_Mewdeko_Database_Models_DiscordUser_ProfilePrivacyEnum_
  name: SetPrivacy
  nameWithType: UserProfileService.SetPrivacy
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetPrivacy
- uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  commentId: T:Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser.ProfilePrivacyEnum
  nameWithType: DiscordUser.ProfilePrivacyEnum
  fullName: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  spec.csharp:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
    href: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum.html
  spec.vb:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
    href: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum.html
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetBirthdayDisplayMode_Discord_IUser_Mewdeko_Database_Models_DiscordUser_BirthdayDisplayModeEnum_
  name: SetBirthdayDisplayMode
  nameWithType: UserProfileService.SetBirthdayDisplayMode
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthdayDisplayMode
- uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  commentId: T:Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser.BirthdayDisplayModeEnum
  nameWithType: DiscordUser.BirthdayDisplayModeEnum
  fullName: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  spec.csharp:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
    name: BirthdayDisplayModeEnum
    href: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum.html
  spec.vb:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
    name: BirthdayDisplayModeEnum
    href: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum.html
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetBirthday_Discord_IUser_System_DateTime_
  name: SetBirthday
  nameWithType: UserProfileService.SetBirthday
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetBirthday
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetZodiac_Discord_IUser_
  name: GetZodiac
  nameWithType: UserProfileService.GetZodiac
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetZodiac
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetZodiac_Discord_IUser_System_String_
  name: SetZodiac
  nameWithType: UserProfileService.SetZodiac
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetZodiac
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetProfileColor_Discord_IUser_Discord_Color_
  name: SetProfileColor
  nameWithType: UserProfileService.SetProfileColor
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileColor
- uid: Discord.Color
  commentId: T:Discord.Color
  parent: Discord
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Discord.Color
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetProfileImage_Discord_IUser_System_String_
  name: SetProfileImage
  nameWithType: UserProfileService.SetProfileImage
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetProfileImage
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_SetSwitchFc_Discord_IUser_System_String_
  name: SetSwitchFc
  nameWithType: UserProfileService.SetSwitchFc
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.SetSwitchFc
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_ToggleOptOut_Discord_IUser_
  name: ToggleOptOut
  nameWithType: UserProfileService.ToggleOptOut
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.ToggleOptOut
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_DeleteStatsData_Discord_IUser_
  name: DeleteStatsData
  nameWithType: UserProfileService.DeleteStatsData
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.DeleteStatsData
- uid: Discord.Embed
  commentId: T:Discord.Embed
  isExternal: true
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed*
  commentId: Overload:Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed
  href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html#Mewdeko_Modules_UserProfile_Services_UserProfileService_GetProfileEmbed_Discord_IUser_Discord_IUser_
  name: GetProfileEmbed
  nameWithType: UserProfileService.GetProfileEmbed
  fullName: Mewdeko.Modules.UserProfile.Services.UserProfileService.GetProfileEmbed
- uid: System.Threading.Tasks.Task{Discord.Embed}
  commentId: T:System.Threading.Tasks.Task{Discord.Embed}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Embed>
  nameWithType: Task<Embed>
  fullName: System.Threading.Tasks.Task<Discord.Embed>
  nameWithType.vb: Task(Of Embed)
  fullName.vb: System.Threading.Tasks.Task(Of Discord.Embed)
  name.vb: Task(Of Embed)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
