### YamlMime:ManagedReference
items:
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  commentId: T:Mewdeko.Coordinator.Coordinator.CoordinatorClient
  id: Coordinator.CoordinatorClient
  parent: Mewdeko.Coordinator
  children:
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.CallInvoker)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ChannelBase)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Coordinator.CoordinatorClient
  nameWithType: Coordinator.CoordinatorClient
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  type: Class
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CoordinatorClient
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 175
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Client for Coordinator
  example: []
  syntax:
    content: 'public class Coordinator.CoordinatorClient : ClientBase<Coordinator.CoordinatorClient>'
    content.vb: Public Class Coordinator.CoordinatorClient Inherits ClientBase(Of Coordinator.CoordinatorClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Coordinator.Coordinator.CoordinatorClient.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: CoordinatorClient(ChannelBase)
  nameWithType: Coordinator.CoordinatorClient.CoordinatorClient(ChannelBase)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.CoordinatorClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 179
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Creates a new client for Coordinator
  example: []
  syntax:
    content: public CoordinatorClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor*
  nameWithType.vb: Coordinator.CoordinatorClient.New(ChannelBase)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.New(Grpc.Core.ChannelBase)
  name.vb: New(ChannelBase)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: CoordinatorClient(CallInvoker)
  nameWithType: Coordinator.CoordinatorClient.CoordinatorClient(CallInvoker)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.CoordinatorClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 185
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Creates a new client for Coordinator that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public CoordinatorClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor*
  nameWithType.vb: Coordinator.CoordinatorClient.New(CallInvoker)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.New(Grpc.Core.CallInvoker)
  name.vb: New(CallInvoker)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor
  id: '#ctor'
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: CoordinatorClient()
  nameWithType: Coordinator.CoordinatorClient.CoordinatorClient()
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.CoordinatorClient()
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 190
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected CoordinatorClient()
    content.vb: Protected Sub New()
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor*
  nameWithType.vb: Coordinator.CoordinatorClient.New()
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.New()
  name.vb: New()
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: CoordinatorClient(ClientBaseConfiguration)
  nameWithType: Coordinator.CoordinatorClient.CoordinatorClient(ClientBase.ClientBaseConfiguration)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.CoordinatorClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 196
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected CoordinatorClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor*
  nameWithType.vb: Coordinator.CoordinatorClient.New(ClientBase.ClientBaseConfiguration)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.New(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name.vb: New(ClientBaseConfiguration)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Heartbeat(HeartbeatRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.Heartbeat(HeartbeatRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Heartbeat
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 209
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: sends update to coordinator to let it know that the shard is alive
  example: []
  syntax:
    content: public virtual HeartbeatReply Heartbeat(HeartbeatRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.HeartbeatRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.HeartbeatReply
      description: The response received from the server.
    content.vb: Public Overridable Function Heartbeat(request As HeartbeatRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As HeartbeatReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat*
  nameWithType.vb: Coordinator.CoordinatorClient.Heartbeat(HeartbeatRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Heartbeat(HeartbeatRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  id: Heartbeat(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Heartbeat(HeartbeatRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.Heartbeat(HeartbeatRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Heartbeat
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 220
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: sends update to coordinator to let it know that the shard is alive
  example: []
  syntax:
    content: public virtual HeartbeatReply Heartbeat(HeartbeatRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.HeartbeatRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.HeartbeatReply
      description: The response received from the server.
    content.vb: Public Overridable Function Heartbeat(request As HeartbeatRequest, options As CallOptions) As HeartbeatReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: HeartbeatAsync(HeartbeatRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.HeartbeatAsync(HeartbeatRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HeartbeatAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 233
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: sends update to coordinator to let it know that the shard is alive
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<HeartbeatReply> HeartbeatAsync(HeartbeatRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.HeartbeatRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.HeartbeatReply}
      description: The call object.
    content.vb: Public Overridable Function HeartbeatAsync(request As HeartbeatRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of HeartbeatReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.HeartbeatAsync(HeartbeatRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: HeartbeatAsync(HeartbeatRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  id: HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: HeartbeatAsync(HeartbeatRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.HeartbeatAsync(HeartbeatRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync(Mewdeko.Coordinator.HeartbeatRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HeartbeatAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 244
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: sends update to coordinator to let it know that the shard is alive
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<HeartbeatReply> HeartbeatAsync(HeartbeatRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.HeartbeatRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.HeartbeatReply}
      description: The call object.
    content.vb: Public Overridable Function HeartbeatAsync(request As HeartbeatRequest, options As CallOptions) As AsyncUnaryCall(Of HeartbeatReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartShard(RestartShardRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.RestartShard(RestartShardRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartShard
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 257
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: restarts a shard given the id
  example: []
  syntax:
    content: public virtual RestartShardReply RestartShard(RestartShardRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartShardRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.RestartShardReply
      description: The response received from the server.
    content.vb: Public Overridable Function RestartShard(request As RestartShardRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As RestartShardReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard*
  nameWithType.vb: Coordinator.CoordinatorClient.RestartShard(RestartShardRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: RestartShard(RestartShardRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  id: RestartShard(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartShard(RestartShardRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.RestartShard(RestartShardRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartShard
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 268
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: restarts a shard given the id
  example: []
  syntax:
    content: public virtual RestartShardReply RestartShard(RestartShardRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartShardRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.RestartShardReply
      description: The response received from the server.
    content.vb: Public Overridable Function RestartShard(request As RestartShardRequest, options As CallOptions) As RestartShardReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartShardAsync(RestartShardRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.RestartShardAsync(RestartShardRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartShardAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 281
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: restarts a shard given the id
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<RestartShardReply> RestartShardAsync(RestartShardRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartShardRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartShardReply}
      description: The call object.
    content.vb: Public Overridable Function RestartShardAsync(request As RestartShardRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of RestartShardReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.RestartShardAsync(RestartShardRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: RestartShardAsync(RestartShardRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  id: RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartShardAsync(RestartShardRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.RestartShardAsync(RestartShardRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync(Mewdeko.Coordinator.RestartShardRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartShardAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 292
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: restarts a shard given the id
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<RestartShardReply> RestartShardAsync(RestartShardRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartShardRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartShardReply}
      description: The call object.
    content.vb: Public Overridable Function RestartShardAsync(request As RestartShardRequest, options As CallOptions) As AsyncUnaryCall(Of RestartShardReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Reshard(ReshardRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.Reshard(ReshardRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reshard
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 305
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: reshards given the new number of shards
  example: []
  syntax:
    content: public virtual ReshardReply Reshard(ReshardRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReshardRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.ReshardReply
      description: The response received from the server.
    content.vb: Public Overridable Function Reshard(request As ReshardRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ReshardReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard*
  nameWithType.vb: Coordinator.CoordinatorClient.Reshard(ReshardRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Reshard(ReshardRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  id: Reshard(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Reshard(ReshardRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.Reshard(ReshardRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reshard
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 316
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: reshards given the new number of shards
  example: []
  syntax:
    content: public virtual ReshardReply Reshard(ReshardRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReshardRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.ReshardReply
      description: The response received from the server.
    content.vb: Public Overridable Function Reshard(request As ReshardRequest, options As CallOptions) As ReshardReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: ReshardAsync(ReshardRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.ReshardAsync(ReshardRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReshardAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 329
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: reshards given the new number of shards
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ReshardReply> ReshardAsync(ReshardRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReshardRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReshardReply}
      description: The call object.
    content.vb: Public Overridable Function ReshardAsync(request As ReshardRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ReshardReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.ReshardAsync(ReshardRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: ReshardAsync(ReshardRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  id: ReshardAsync(Mewdeko.Coordinator.ReshardRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: ReshardAsync(ReshardRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.ReshardAsync(ReshardRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync(Mewdeko.Coordinator.ReshardRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReshardAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 340
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: reshards given the new number of shards
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ReshardReply> ReshardAsync(ReshardRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReshardRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReshardReply}
      description: The call object.
    content.vb: Public Overridable Function ReshardAsync(request As ReshardRequest, options As CallOptions) As AsyncUnaryCall(Of ReshardReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Reload(ReloadRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.Reload(ReloadRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reload
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 353
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Reload config
  example: []
  syntax:
    content: public virtual ReloadReply Reload(ReloadRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReloadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.ReloadReply
      description: The response received from the server.
    content.vb: Public Overridable Function Reload(request As ReloadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As ReloadReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload*
  nameWithType.vb: Coordinator.CoordinatorClient.Reload(ReloadRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Reload(ReloadRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  id: Reload(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Reload(ReloadRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.Reload(ReloadRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reload
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 364
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Reload config
  example: []
  syntax:
    content: public virtual ReloadReply Reload(ReloadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReloadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.ReloadReply
      description: The response received from the server.
    content.vb: Public Overridable Function Reload(request As ReloadRequest, options As CallOptions) As ReloadReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: ReloadAsync(ReloadRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.ReloadAsync(ReloadRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReloadAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 377
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Reload config
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ReloadReply> ReloadAsync(ReloadRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReloadRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReloadReply}
      description: The call object.
    content.vb: Public Overridable Function ReloadAsync(request As ReloadRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of ReloadReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.ReloadAsync(ReloadRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: ReloadAsync(ReloadRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  id: ReloadAsync(Mewdeko.Coordinator.ReloadRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: ReloadAsync(ReloadRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.ReloadAsync(ReloadRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync(Mewdeko.Coordinator.ReloadRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReloadAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 388
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Reload config
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<ReloadReply> ReloadAsync(ReloadRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.ReloadRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReloadReply}
      description: The call object.
    content.vb: Public Overridable Function ReloadAsync(request As ReloadRequest, options As CallOptions) As AsyncUnaryCall(Of ReloadReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetStatus(GetStatusRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetStatus(GetStatusRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatus
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 401
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Gets status of a single shard
  example: []
  syntax:
    content: public virtual GetStatusReply GetStatus(GetStatusRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetStatusRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.GetStatusReply
      description: The response received from the server.
    content.vb: Public Overridable Function GetStatus(request As GetStatusRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As GetStatusReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus*
  nameWithType.vb: Coordinator.CoordinatorClient.GetStatus(GetStatusRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetStatus(GetStatusRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  id: GetStatus(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetStatus(GetStatusRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetStatus(GetStatusRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatus
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 412
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Gets status of a single shard
  example: []
  syntax:
    content: public virtual GetStatusReply GetStatus(GetStatusRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetStatusRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.GetStatusReply
      description: The response received from the server.
    content.vb: Public Overridable Function GetStatus(request As GetStatusRequest, options As CallOptions) As GetStatusReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetStatusAsync(GetStatusRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetStatusAsync(GetStatusRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatusAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 425
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Gets status of a single shard
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<GetStatusReply> GetStatusAsync(GetStatusRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetStatusRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetStatusReply}
      description: The call object.
    content.vb: Public Overridable Function GetStatusAsync(request As GetStatusRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of GetStatusReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.GetStatusAsync(GetStatusRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetStatusAsync(GetStatusRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  id: GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetStatusAsync(GetStatusRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetStatusAsync(GetStatusRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync(Mewdeko.Coordinator.GetStatusRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatusAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 436
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Gets status of a single shard
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<GetStatusReply> GetStatusAsync(GetStatusRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetStatusRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetStatusReply}
      description: The call object.
    content.vb: Public Overridable Function GetStatusAsync(request As GetStatusRequest, options As CallOptions) As AsyncUnaryCall(Of GetStatusReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetAllStatuses(GetAllStatusesRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetAllStatuses(GetAllStatusesRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllStatuses
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 449
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Get status of all shards
  example: []
  syntax:
    content: public virtual GetAllStatusesReply GetAllStatuses(GetAllStatusesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetAllStatusesRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.GetAllStatusesReply
      description: The response received from the server.
    content.vb: Public Overridable Function GetAllStatuses(request As GetAllStatusesRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As GetAllStatusesReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses*
  nameWithType.vb: Coordinator.CoordinatorClient.GetAllStatuses(GetAllStatusesRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetAllStatuses(GetAllStatusesRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  id: GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetAllStatuses(GetAllStatusesRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetAllStatuses(GetAllStatusesRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllStatuses
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 460
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Get status of all shards
  example: []
  syntax:
    content: public virtual GetAllStatusesReply GetAllStatuses(GetAllStatusesRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetAllStatusesRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.GetAllStatusesReply
      description: The response received from the server.
    content.vb: Public Overridable Function GetAllStatuses(request As GetAllStatusesRequest, options As CallOptions) As GetAllStatusesReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetAllStatusesAsync(GetAllStatusesRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetAllStatusesAsync(GetAllStatusesRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllStatusesAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 473
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Get status of all shards
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<GetAllStatusesReply> GetAllStatusesAsync(GetAllStatusesRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetAllStatusesRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetAllStatusesReply}
      description: The call object.
    content.vb: Public Overridable Function GetAllStatusesAsync(request As GetAllStatusesRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of GetAllStatusesReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.GetAllStatusesAsync(GetAllStatusesRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetAllStatusesAsync(GetAllStatusesRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  id: GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetAllStatusesAsync(GetAllStatusesRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetAllStatusesAsync(GetAllStatusesRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync(Mewdeko.Coordinator.GetAllStatusesRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllStatusesAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 484
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Get status of all shards
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<GetAllStatusesReply> GetAllStatusesAsync(GetAllStatusesRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetAllStatusesRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetAllStatusesReply}
      description: The call object.
    content.vb: Public Overridable Function GetAllStatusesAsync(request As GetAllStatusesRequest, options As CallOptions) As AsyncUnaryCall(Of GetAllStatusesReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartAllShards(RestartAllRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.RestartAllShards(RestartAllRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartAllShards
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 498
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: >-
    Restarts all shards. Queues them to be restarted at a normal rate. Setting Nuke to true will kill all shards right

    away
  example: []
  syntax:
    content: public virtual RestartAllReply RestartAllShards(RestartAllRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartAllRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.RestartAllReply
      description: The response received from the server.
    content.vb: Public Overridable Function RestartAllShards(request As RestartAllRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As RestartAllReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards*
  nameWithType.vb: Coordinator.CoordinatorClient.RestartAllShards(RestartAllRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: RestartAllShards(RestartAllRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  id: RestartAllShards(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartAllShards(RestartAllRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.RestartAllShards(RestartAllRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartAllShards
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 510
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: >-
    Restarts all shards. Queues them to be restarted at a normal rate. Setting Nuke to true will kill all shards right

    away
  example: []
  syntax:
    content: public virtual RestartAllReply RestartAllShards(RestartAllRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartAllRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.RestartAllReply
      description: The response received from the server.
    content.vb: Public Overridable Function RestartAllShards(request As RestartAllRequest, options As CallOptions) As RestartAllReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartAllShardsAsync(RestartAllRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.RestartAllShardsAsync(RestartAllRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartAllShardsAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 524
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: >-
    Restarts all shards. Queues them to be restarted at a normal rate. Setting Nuke to true will kill all shards right

    away
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<RestartAllReply> RestartAllShardsAsync(RestartAllRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartAllRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartAllReply}
      description: The call object.
    content.vb: Public Overridable Function RestartAllShardsAsync(request As RestartAllRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of RestartAllReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.RestartAllShardsAsync(RestartAllRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: RestartAllShardsAsync(RestartAllRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  id: RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: RestartAllShardsAsync(RestartAllRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.RestartAllShardsAsync(RestartAllRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync(Mewdeko.Coordinator.RestartAllRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartAllShardsAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 536
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: >-
    Restarts all shards. Queues them to be restarted at a normal rate. Setting Nuke to true will kill all shards right

    away
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<RestartAllReply> RestartAllShardsAsync(RestartAllRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.RestartAllRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartAllReply}
      description: The call object.
    content.vb: Public Overridable Function RestartAllShardsAsync(request As RestartAllRequest, options As CallOptions) As AsyncUnaryCall(Of RestartAllReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Die(DieRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.Die(DieRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Die
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 549
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: kill coordinator (and all shards as a consequence)
  example: []
  syntax:
    content: public virtual DieReply Die(DieRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.DieRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Mewdeko.Coordinator.DieReply
      description: The response received from the server.
    content.vb: Public Overridable Function Die(request As DieRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As DieReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die*
  nameWithType.vb: Coordinator.CoordinatorClient.Die(DieRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: Die(DieRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  id: Die(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: Die(DieRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.Die(DieRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die(Mewdeko.Coordinator.DieRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Die
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 560
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: kill coordinator (and all shards as a consequence)
  example: []
  syntax:
    content: public virtual DieReply Die(DieRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.DieRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Mewdeko.Coordinator.DieReply
      description: The response received from the server.
    content.vb: Public Overridable Function Die(request As DieRequest, options As CallOptions) As DieReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: DieAsync(DieRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.DieAsync(DieRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DieAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 573
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: kill coordinator (and all shards as a consequence)
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<DieReply> DieAsync(DieRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.DieRequest
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.DieReply}
      description: The call object.
    content.vb: Public Overridable Function DieAsync(request As DieRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of DieReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.DieAsync(DieRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: DieAsync(DieRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  id: DieAsync(Mewdeko.Coordinator.DieRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: DieAsync(DieRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.DieAsync(DieRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync(Mewdeko.Coordinator.DieRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DieAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 584
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: kill coordinator (and all shards as a consequence)
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<DieReply> DieAsync(DieRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.DieRequest
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.DieReply}
      description: The call object.
    content.vb: Public Overridable Function DieAsync(request As DieRequest, options As CallOptions) As AsyncUnaryCall(Of DieReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: SetConfigText(SetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.SetConfigText(SetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetConfigText
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 589
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual SetConfigTextReply SetConfigText(SetConfigTextRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.SetConfigTextRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Mewdeko.Coordinator.SetConfigTextReply
    content.vb: Public Overridable Function SetConfigText(request As SetConfigTextRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SetConfigTextReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText*
  nameWithType.vb: Coordinator.CoordinatorClient.SetConfigText(SetConfigTextRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SetConfigText(SetConfigTextRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  id: SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: SetConfigText(SetConfigTextRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.SetConfigText(SetConfigTextRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetConfigText
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 594
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual SetConfigTextReply SetConfigText(SetConfigTextRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.SetConfigTextRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Mewdeko.Coordinator.SetConfigTextReply
    content.vb: Public Overridable Function SetConfigText(request As SetConfigTextRequest, options As CallOptions) As SetConfigTextReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: SetConfigTextAsync(SetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.SetConfigTextAsync(SetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetConfigTextAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 599
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual AsyncUnaryCall<SetConfigTextReply> SetConfigTextAsync(SetConfigTextRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.SetConfigTextRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.SetConfigTextReply}
    content.vb: Public Overridable Function SetConfigTextAsync(request As SetConfigTextRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SetConfigTextReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.SetConfigTextAsync(SetConfigTextRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SetConfigTextAsync(SetConfigTextRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  id: SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: SetConfigTextAsync(SetConfigTextRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.SetConfigTextAsync(SetConfigTextRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync(Mewdeko.Coordinator.SetConfigTextRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetConfigTextAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 604
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual AsyncUnaryCall<SetConfigTextReply> SetConfigTextAsync(SetConfigTextRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.SetConfigTextRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.SetConfigTextReply}
    content.vb: Public Overridable Function SetConfigTextAsync(request As SetConfigTextRequest, options As CallOptions) As AsyncUnaryCall(Of SetConfigTextReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetConfigText(GetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetConfigText(GetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetConfigText
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 609
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual GetConfigTextReply GetConfigText(GetConfigTextRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetConfigTextRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Mewdeko.Coordinator.GetConfigTextReply
    content.vb: Public Overridable Function GetConfigText(request As GetConfigTextRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As GetConfigTextReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText*
  nameWithType.vb: Coordinator.CoordinatorClient.GetConfigText(GetConfigTextRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetConfigText(GetConfigTextRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  id: GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetConfigText(GetConfigTextRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetConfigText(GetConfigTextRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetConfigText
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 614
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual GetConfigTextReply GetConfigText(GetConfigTextRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetConfigTextRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Mewdeko.Coordinator.GetConfigTextReply
    content.vb: Public Overridable Function GetConfigText(request As GetConfigTextRequest, options As CallOptions) As GetConfigTextReply
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetConfigTextAsync(GetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  nameWithType: Coordinator.CoordinatorClient.GetConfigTextAsync(GetConfigTextRequest, Metadata, DateTime?, CancellationToken)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetConfigTextAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 619
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual AsyncUnaryCall<GetConfigTextReply> GetConfigTextAsync(GetConfigTextRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetConfigTextRequest
    - id: headers
      type: Grpc.Core.Metadata
    - id: deadline
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetConfigTextReply}
    content.vb: Public Overridable Function GetConfigTextAsync(request As GetConfigTextRequest, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of GetConfigTextReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync*
  nameWithType.vb: Coordinator.CoordinatorClient.GetConfigTextAsync(GetConfigTextRequest, Metadata, Date?, CancellationToken)
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: GetConfigTextAsync(GetConfigTextRequest, Metadata, Date?, CancellationToken)
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  id: GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest,Grpc.Core.CallOptions)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: GetConfigTextAsync(GetConfigTextRequest, CallOptions)
  nameWithType: Coordinator.CoordinatorClient.GetConfigTextAsync(GetConfigTextRequest, CallOptions)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync(Mewdeko.Coordinator.GetConfigTextRequest, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetConfigTextAsync
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 624
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  syntax:
    content: public virtual AsyncUnaryCall<GetConfigTextReply> GetConfigTextAsync(GetConfigTextRequest request, CallOptions options)
    parameters:
    - id: request
      type: Mewdeko.Coordinator.GetConfigTextRequest
    - id: options
      type: Grpc.Core.CallOptions
    return:
      type: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetConfigTextReply}
    content.vb: Public Overridable Function GetConfigTextAsync(request As GetConfigTextRequest, options As CallOptions) As AsyncUnaryCall(Of GetConfigTextReply)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync*
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: Coordinator.CoordinatorClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NewInstance
    path: src/Mewdeko/obj/Release/net8.0/CoordinatorGrpc.cs
    startLine: 630
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Coordinator
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override Coordinator.CoordinatorClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As Coordinator.CoordinatorClient
  overridden: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance*
references:
- uid: Mewdeko.Coordinator
  commentId: N:Mewdeko.Coordinator
  href: Mewdeko.html
  name: Mewdeko.Coordinator
  nameWithType: Mewdeko.Coordinator
  fullName: Mewdeko.Coordinator
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}
  commentId: T:Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<Coordinator.CoordinatorClient>
  nameWithType: ClientBase<Coordinator.CoordinatorClient>
  fullName: Grpc.Core.ClientBase<Mewdeko.Coordinator.Coordinator.CoordinatorClient>
  nameWithType.vb: ClientBase(Of Coordinator.CoordinatorClient)
  fullName.vb: Grpc.Core.ClientBase(Of Mewdeko.Coordinator.Coordinator.CoordinatorClient)
  name.vb: ClientBase(Of Coordinator.CoordinatorClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: <
  - uid: Mewdeko.Coordinator.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.Coordinator.html
  - name: .
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.Coordinator.html
  - name: .
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: )
- uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<Coordinator.CoordinatorClient>.WithHost(string)
  fullName: Grpc.Core.ClientBase<Mewdeko.Coordinator.Coordinator.CoordinatorClient>.WithHost(string)
  nameWithType.vb: ClientBase(Of Coordinator.CoordinatorClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of Mewdeko.Coordinator.Coordinator.CoordinatorClient).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<CoordinatorClient>(CoordinatorClient, string)
  nameWithType: Extensions.ThrowIfNull<Coordinator.CoordinatorClient>(Coordinator.CoordinatorClient, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Coordinator.Coordinator.CoordinatorClient>(Mewdeko.Coordinator.Coordinator.CoordinatorClient, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Coordinator.CoordinatorClient)(Coordinator.CoordinatorClient, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Coordinator.Coordinator.CoordinatorClient)(Mewdeko.Coordinator.Coordinator.CoordinatorClient, String)
  name.vb: ThrowIfNull(Of CoordinatorClient)(CoordinatorClient, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Coordinator.Coordinator.CoordinatorClient,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Coordinator.Coordinator.CoordinatorClient,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: )
  - name: (
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
  spec.csharp:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<T>.WithHost(string)
  fullName: Grpc.Core.ClientBase<T>.WithHost(string)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.#ctor
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient__ctor_Grpc_Core_ChannelBase_
  name: CoordinatorClient
  nameWithType: Coordinator.CoordinatorClient.CoordinatorClient
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.CoordinatorClient
  nameWithType.vb: Coordinator.CoordinatorClient.New
  fullName.vb: Mewdeko.Coordinator.Coordinator.CoordinatorClient.New
  name.vb: New
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ChannelBase.cs
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/CallInvoker.cs
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
  spec.csharp:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  spec.vb:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_Heartbeat_Mewdeko_Coordinator_HeartbeatRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: Heartbeat
  nameWithType: Coordinator.CoordinatorClient.Heartbeat
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Heartbeat
- uid: Mewdeko.Coordinator.HeartbeatRequest
  commentId: T:Mewdeko.Coordinator.HeartbeatRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.HeartbeatRequest.html
  name: HeartbeatRequest
  nameWithType: HeartbeatRequest
  fullName: Mewdeko.Coordinator.HeartbeatRequest
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/Metadata.cs
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Mewdeko.Coordinator.HeartbeatReply
  commentId: T:Mewdeko.Coordinator.HeartbeatReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.HeartbeatReply.html
  name: HeartbeatReply
  nameWithType: HeartbeatReply
  fullName: Mewdeko.Coordinator.HeartbeatReply
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/CallOptions.cs
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_HeartbeatAsync_Mewdeko_Coordinator_HeartbeatRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: HeartbeatAsync
  nameWithType: Coordinator.CoordinatorClient.HeartbeatAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.HeartbeatAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.HeartbeatReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.HeartbeatReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<HeartbeatReply>
  nameWithType: AsyncUnaryCall<HeartbeatReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.HeartbeatReply>
  nameWithType.vb: AsyncUnaryCall(Of HeartbeatReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.HeartbeatReply)
  name.vb: AsyncUnaryCall(Of HeartbeatReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.HeartbeatReply
    name: HeartbeatReply
    href: Mewdeko.Coordinator.HeartbeatReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.HeartbeatReply
    name: HeartbeatReply
    href: Mewdeko.Coordinator.HeartbeatReply.html
  - name: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_RestartShard_Mewdeko_Coordinator_RestartShardRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: RestartShard
  nameWithType: Coordinator.CoordinatorClient.RestartShard
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShard
- uid: Mewdeko.Coordinator.RestartShardRequest
  commentId: T:Mewdeko.Coordinator.RestartShardRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.RestartShardRequest.html
  name: RestartShardRequest
  nameWithType: RestartShardRequest
  fullName: Mewdeko.Coordinator.RestartShardRequest
- uid: Mewdeko.Coordinator.RestartShardReply
  commentId: T:Mewdeko.Coordinator.RestartShardReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.RestartShardReply.html
  name: RestartShardReply
  nameWithType: RestartShardReply
  fullName: Mewdeko.Coordinator.RestartShardReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_RestartShardAsync_Mewdeko_Coordinator_RestartShardRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: RestartShardAsync
  nameWithType: Coordinator.CoordinatorClient.RestartShardAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartShardAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartShardReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartShardReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<RestartShardReply>
  nameWithType: AsyncUnaryCall<RestartShardReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.RestartShardReply>
  nameWithType.vb: AsyncUnaryCall(Of RestartShardReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.RestartShardReply)
  name.vb: AsyncUnaryCall(Of RestartShardReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.RestartShardReply
    name: RestartShardReply
    href: Mewdeko.Coordinator.RestartShardReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.RestartShardReply
    name: RestartShardReply
    href: Mewdeko.Coordinator.RestartShardReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_Reshard_Mewdeko_Coordinator_ReshardRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: Reshard
  nameWithType: Coordinator.CoordinatorClient.Reshard
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reshard
- uid: Mewdeko.Coordinator.ReshardRequest
  commentId: T:Mewdeko.Coordinator.ReshardRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.ReshardRequest.html
  name: ReshardRequest
  nameWithType: ReshardRequest
  fullName: Mewdeko.Coordinator.ReshardRequest
- uid: Mewdeko.Coordinator.ReshardReply
  commentId: T:Mewdeko.Coordinator.ReshardReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.ReshardReply.html
  name: ReshardReply
  nameWithType: ReshardReply
  fullName: Mewdeko.Coordinator.ReshardReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_ReshardAsync_Mewdeko_Coordinator_ReshardRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: ReshardAsync
  nameWithType: Coordinator.CoordinatorClient.ReshardAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReshardAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReshardReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReshardReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<ReshardReply>
  nameWithType: AsyncUnaryCall<ReshardReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.ReshardReply>
  nameWithType.vb: AsyncUnaryCall(Of ReshardReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.ReshardReply)
  name.vb: AsyncUnaryCall(Of ReshardReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.ReshardReply
    name: ReshardReply
    href: Mewdeko.Coordinator.ReshardReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.ReshardReply
    name: ReshardReply
    href: Mewdeko.Coordinator.ReshardReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_Reload_Mewdeko_Coordinator_ReloadRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: Reload
  nameWithType: Coordinator.CoordinatorClient.Reload
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Reload
- uid: Mewdeko.Coordinator.ReloadRequest
  commentId: T:Mewdeko.Coordinator.ReloadRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.ReloadRequest.html
  name: ReloadRequest
  nameWithType: ReloadRequest
  fullName: Mewdeko.Coordinator.ReloadRequest
- uid: Mewdeko.Coordinator.ReloadReply
  commentId: T:Mewdeko.Coordinator.ReloadReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.ReloadReply.html
  name: ReloadReply
  nameWithType: ReloadReply
  fullName: Mewdeko.Coordinator.ReloadReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_ReloadAsync_Mewdeko_Coordinator_ReloadRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: ReloadAsync
  nameWithType: Coordinator.CoordinatorClient.ReloadAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.ReloadAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReloadReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.ReloadReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<ReloadReply>
  nameWithType: AsyncUnaryCall<ReloadReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.ReloadReply>
  nameWithType.vb: AsyncUnaryCall(Of ReloadReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.ReloadReply)
  name.vb: AsyncUnaryCall(Of ReloadReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.ReloadReply
    name: ReloadReply
    href: Mewdeko.Coordinator.ReloadReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.ReloadReply
    name: ReloadReply
    href: Mewdeko.Coordinator.ReloadReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetStatus_Mewdeko_Coordinator_GetStatusRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetStatus
  nameWithType: Coordinator.CoordinatorClient.GetStatus
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatus
- uid: Mewdeko.Coordinator.GetStatusRequest
  commentId: T:Mewdeko.Coordinator.GetStatusRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetStatusRequest.html
  name: GetStatusRequest
  nameWithType: GetStatusRequest
  fullName: Mewdeko.Coordinator.GetStatusRequest
- uid: Mewdeko.Coordinator.GetStatusReply
  commentId: T:Mewdeko.Coordinator.GetStatusReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetStatusReply.html
  name: GetStatusReply
  nameWithType: GetStatusReply
  fullName: Mewdeko.Coordinator.GetStatusReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetStatusAsync_Mewdeko_Coordinator_GetStatusRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetStatusAsync
  nameWithType: Coordinator.CoordinatorClient.GetStatusAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetStatusAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetStatusReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetStatusReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<GetStatusReply>
  nameWithType: AsyncUnaryCall<GetStatusReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.GetStatusReply>
  nameWithType.vb: AsyncUnaryCall(Of GetStatusReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.GetStatusReply)
  name.vb: AsyncUnaryCall(Of GetStatusReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.GetStatusReply
    name: GetStatusReply
    href: Mewdeko.Coordinator.GetStatusReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.GetStatusReply
    name: GetStatusReply
    href: Mewdeko.Coordinator.GetStatusReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetAllStatuses_Mewdeko_Coordinator_GetAllStatusesRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetAllStatuses
  nameWithType: Coordinator.CoordinatorClient.GetAllStatuses
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatuses
- uid: Mewdeko.Coordinator.GetAllStatusesRequest
  commentId: T:Mewdeko.Coordinator.GetAllStatusesRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetAllStatusesRequest.html
  name: GetAllStatusesRequest
  nameWithType: GetAllStatusesRequest
  fullName: Mewdeko.Coordinator.GetAllStatusesRequest
- uid: Mewdeko.Coordinator.GetAllStatusesReply
  commentId: T:Mewdeko.Coordinator.GetAllStatusesReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetAllStatusesReply.html
  name: GetAllStatusesReply
  nameWithType: GetAllStatusesReply
  fullName: Mewdeko.Coordinator.GetAllStatusesReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetAllStatusesAsync_Mewdeko_Coordinator_GetAllStatusesRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetAllStatusesAsync
  nameWithType: Coordinator.CoordinatorClient.GetAllStatusesAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetAllStatusesAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetAllStatusesReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetAllStatusesReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<GetAllStatusesReply>
  nameWithType: AsyncUnaryCall<GetAllStatusesReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.GetAllStatusesReply>
  nameWithType.vb: AsyncUnaryCall(Of GetAllStatusesReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.GetAllStatusesReply)
  name.vb: AsyncUnaryCall(Of GetAllStatusesReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.GetAllStatusesReply
    name: GetAllStatusesReply
    href: Mewdeko.Coordinator.GetAllStatusesReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.GetAllStatusesReply
    name: GetAllStatusesReply
    href: Mewdeko.Coordinator.GetAllStatusesReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_RestartAllShards_Mewdeko_Coordinator_RestartAllRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: RestartAllShards
  nameWithType: Coordinator.CoordinatorClient.RestartAllShards
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShards
- uid: Mewdeko.Coordinator.RestartAllRequest
  commentId: T:Mewdeko.Coordinator.RestartAllRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.RestartAllRequest.html
  name: RestartAllRequest
  nameWithType: RestartAllRequest
  fullName: Mewdeko.Coordinator.RestartAllRequest
- uid: Mewdeko.Coordinator.RestartAllReply
  commentId: T:Mewdeko.Coordinator.RestartAllReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.RestartAllReply.html
  name: RestartAllReply
  nameWithType: RestartAllReply
  fullName: Mewdeko.Coordinator.RestartAllReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_RestartAllShardsAsync_Mewdeko_Coordinator_RestartAllRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: RestartAllShardsAsync
  nameWithType: Coordinator.CoordinatorClient.RestartAllShardsAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.RestartAllShardsAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartAllReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.RestartAllReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<RestartAllReply>
  nameWithType: AsyncUnaryCall<RestartAllReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.RestartAllReply>
  nameWithType.vb: AsyncUnaryCall(Of RestartAllReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.RestartAllReply)
  name.vb: AsyncUnaryCall(Of RestartAllReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.RestartAllReply
    name: RestartAllReply
    href: Mewdeko.Coordinator.RestartAllReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.RestartAllReply
    name: RestartAllReply
    href: Mewdeko.Coordinator.RestartAllReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_Die_Mewdeko_Coordinator_DieRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: Die
  nameWithType: Coordinator.CoordinatorClient.Die
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.Die
- uid: Mewdeko.Coordinator.DieRequest
  commentId: T:Mewdeko.Coordinator.DieRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.DieRequest.html
  name: DieRequest
  nameWithType: DieRequest
  fullName: Mewdeko.Coordinator.DieRequest
- uid: Mewdeko.Coordinator.DieReply
  commentId: T:Mewdeko.Coordinator.DieReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.DieReply.html
  name: DieReply
  nameWithType: DieReply
  fullName: Mewdeko.Coordinator.DieReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_DieAsync_Mewdeko_Coordinator_DieRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: DieAsync
  nameWithType: Coordinator.CoordinatorClient.DieAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.DieAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.DieReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.DieReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<DieReply>
  nameWithType: AsyncUnaryCall<DieReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.DieReply>
  nameWithType.vb: AsyncUnaryCall(Of DieReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.DieReply)
  name.vb: AsyncUnaryCall(Of DieReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.DieReply
    name: DieReply
    href: Mewdeko.Coordinator.DieReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.DieReply
    name: DieReply
    href: Mewdeko.Coordinator.DieReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_SetConfigText_Mewdeko_Coordinator_SetConfigTextRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: SetConfigText
  nameWithType: Coordinator.CoordinatorClient.SetConfigText
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigText
- uid: Mewdeko.Coordinator.SetConfigTextRequest
  commentId: T:Mewdeko.Coordinator.SetConfigTextRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.SetConfigTextRequest.html
  name: SetConfigTextRequest
  nameWithType: SetConfigTextRequest
  fullName: Mewdeko.Coordinator.SetConfigTextRequest
- uid: Mewdeko.Coordinator.SetConfigTextReply
  commentId: T:Mewdeko.Coordinator.SetConfigTextReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.SetConfigTextReply.html
  name: SetConfigTextReply
  nameWithType: SetConfigTextReply
  fullName: Mewdeko.Coordinator.SetConfigTextReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_SetConfigTextAsync_Mewdeko_Coordinator_SetConfigTextRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: SetConfigTextAsync
  nameWithType: Coordinator.CoordinatorClient.SetConfigTextAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.SetConfigTextAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.SetConfigTextReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.SetConfigTextReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SetConfigTextReply>
  nameWithType: AsyncUnaryCall<SetConfigTextReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.SetConfigTextReply>
  nameWithType.vb: AsyncUnaryCall(Of SetConfigTextReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.SetConfigTextReply)
  name.vb: AsyncUnaryCall(Of SetConfigTextReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.SetConfigTextReply
    name: SetConfigTextReply
    href: Mewdeko.Coordinator.SetConfigTextReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.SetConfigTextReply
    name: SetConfigTextReply
    href: Mewdeko.Coordinator.SetConfigTextReply.html
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetConfigText_Mewdeko_Coordinator_GetConfigTextRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetConfigText
  nameWithType: Coordinator.CoordinatorClient.GetConfigText
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigText
- uid: Mewdeko.Coordinator.GetConfigTextRequest
  commentId: T:Mewdeko.Coordinator.GetConfigTextRequest
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetConfigTextRequest.html
  name: GetConfigTextRequest
  nameWithType: GetConfigTextRequest
  fullName: Mewdeko.Coordinator.GetConfigTextRequest
- uid: Mewdeko.Coordinator.GetConfigTextReply
  commentId: T:Mewdeko.Coordinator.GetConfigTextReply
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.GetConfigTextReply.html
  name: GetConfigTextReply
  nameWithType: GetConfigTextReply
  fullName: Mewdeko.Coordinator.GetConfigTextReply
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_GetConfigTextAsync_Mewdeko_Coordinator_GetConfigTextRequest_Grpc_Core_Metadata_System_Nullable_System_DateTime__System_Threading_CancellationToken_
  name: GetConfigTextAsync
  nameWithType: Coordinator.CoordinatorClient.GetConfigTextAsync
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.GetConfigTextAsync
- uid: Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetConfigTextReply}
  commentId: T:Grpc.Core.AsyncUnaryCall{Mewdeko.Coordinator.GetConfigTextReply}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<GetConfigTextReply>
  nameWithType: AsyncUnaryCall<GetConfigTextReply>
  fullName: Grpc.Core.AsyncUnaryCall<Mewdeko.Coordinator.GetConfigTextReply>
  nameWithType.vb: AsyncUnaryCall(Of GetConfigTextReply)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of Mewdeko.Coordinator.GetConfigTextReply)
  name.vb: AsyncUnaryCall(Of GetConfigTextReply)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: Mewdeko.Coordinator.GetConfigTextReply
    name: GetConfigTextReply
    href: Mewdeko.Coordinator.GetConfigTextReply.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Coordinator.GetConfigTextReply
    name: GetConfigTextReply
    href: Mewdeko.Coordinator.GetConfigTextReply.html
  - name: )
- uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<Coordinator.CoordinatorClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<Mewdeko.Coordinator.Coordinator.CoordinatorClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of Coordinator.CoordinatorClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of Mewdeko.Coordinator.Coordinator.CoordinatorClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{Mewdeko.Coordinator.Coordinator.CoordinatorClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: )
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance*
  commentId: Overload:Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance
  href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html#Mewdeko_Coordinator_Coordinator_CoordinatorClient_NewInstance_Grpc_Core_ClientBase_ClientBaseConfiguration_
  name: NewInstance
  nameWithType: Coordinator.CoordinatorClient.NewInstance
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient.NewInstance
- uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  commentId: T:Mewdeko.Coordinator.Coordinator.CoordinatorClient
  parent: Mewdeko.Coordinator
  href: Mewdeko.Coordinator.Coordinator.html
  name: Coordinator.CoordinatorClient
  nameWithType: Coordinator.CoordinatorClient
  fullName: Mewdeko.Coordinator.Coordinator.CoordinatorClient
  spec.csharp:
  - uid: Mewdeko.Coordinator.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.Coordinator.html
  - name: .
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
  spec.vb:
  - uid: Mewdeko.Coordinator.Coordinator
    name: Coordinator
    href: Mewdeko.Coordinator.Coordinator.html
  - name: .
  - uid: Mewdeko.Coordinator.Coordinator.CoordinatorClient
    name: CoordinatorClient
    href: Mewdeko.Coordinator.Coordinator.CoordinatorClient.html
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc-dotnet/blob/7b423e79708c57709515ff929721768a646dc02b/src/Grpc.Core.Api/ClientBase.cs
  - name: )
