### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Administration.Services.ProtectionService
  commentId: T:Mewdeko.Modules.Administration.Services.ProtectionService
  id: ProtectionService
  parent: Mewdeko.Modules.Administration.Services
  children:
  - Mewdeko.Modules.Administration.Services.ProtectionService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Mewdeko,Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.Impl.EventHandler)
  - Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats(System.UInt64)
  - Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed(Mewdeko.Database.Models.PunishmentAction)
  - Mewdeko.Modules.Administration.Services.ProtectionService.OnAntiProtectionTriggered
  - Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  - Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync(System.UInt64,System.Int32,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32)
  - Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  - Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt(System.UInt64)
  - Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid(System.UInt64)
  - Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam(System.UInt64)
  langs:
  - csharp
  - vb
  name: ProtectionService
  nameWithType: ProtectionService
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ProtectionService
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Provides anti-alt, anti-raid, and antispam protection services.
  example: []
  syntax:
    content: 'public class ProtectionService : INService'
    content.vb: Public Class ProtectionService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Administration.Services.ProtectionService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Mewdeko,Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.Impl.EventHandler)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Mewdeko,Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.Impl.EventHandler)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Mewdeko,Mewdeko.Modules.Moderation.Services.MuteService,Mewdeko.Database.DbService,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.Impl.EventHandler)'
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: ProtectionService(DiscordSocketClient, Mewdeko, MuteService, DbService, UserPunishService, EventHandler)
  nameWithType: ProtectionService.ProtectionService(DiscordSocketClient, Mewdeko, MuteService, DbService, UserPunishService, EventHandler)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.ProtectionService(Discord.WebSocket.DiscordSocketClient, Mewdeko.Mewdeko, Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Mewdeko.Modules.Moderation.Services.UserPunishService, Mewdeko.Services.Impl.EventHandler)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 47
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Constructs a new instance of the ProtectionService.
  example: []
  syntax:
    content: public ProtectionService(DiscordSocketClient client, Mewdeko bot, MuteService mute, DbService db, UserPunishService punishService, EventHandler eventHandler)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client.
    - id: bot
      type: Mewdeko.Mewdeko
      description: The Mewdeko bot.
    - id: mute
      type: Mewdeko.Modules.Moderation.Services.MuteService
      description: The mute service.
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service.
    - id: punishService
      type: Mewdeko.Modules.Moderation.Services.UserPunishService
      description: The user punish service.
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler.
    content.vb: Public Sub New(client As DiscordSocketClient, bot As Mewdeko, mute As MuteService, db As DbService, punishService As UserPunishService, eventHandler As EventHandler)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.#ctor*
  nameWithType.vb: ProtectionService.New(DiscordSocketClient, Mewdeko, MuteService, DbService, UserPunishService, EventHandler)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.New(Discord.WebSocket.DiscordSocketClient, Mewdeko.Mewdeko, Mewdeko.Modules.Moderation.Services.MuteService, Mewdeko.Database.DbService, Mewdeko.Modules.Moderation.Services.UserPunishService, Mewdeko.Services.Impl.EventHandler)
  name.vb: New(DiscordSocketClient, Mewdeko, MuteService, DbService, UserPunishService, EventHandler)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.OnAntiProtectionTriggered
  commentId: E:Mewdeko.Modules.Administration.Services.ProtectionService.OnAntiProtectionTriggered
  id: OnAntiProtectionTriggered
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: OnAntiProtectionTriggered
  nameWithType: ProtectionService.OnAntiProtectionTriggered
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.OnAntiProtectionTriggered
  type: Event
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OnAntiProtectionTriggered
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 70
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: An event that is triggered when the anti-protection is triggered.
  example: []
  syntax:
    content: public event Func<PunishmentAction, ProtectionType, IGuildUser[], Task> OnAntiProtectionTriggered
    return:
      type: System.Func{Mewdeko.Database.Models.PunishmentAction,Mewdeko.Modules.Administration.Common.ProtectionType,Discord.IGuildUser[],System.Threading.Tasks.Task}
    content.vb: Public Event OnAntiProtectionTriggered As Func(Of PunishmentAction, ProtectionType, IGuildUser(), Task)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync(System.UInt64,System.Int32,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync(System.UInt64,System.Int32,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32)
  id: StartAntiRaidAsync(System.UInt64,System.Int32,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: StartAntiRaidAsync(ulong, int, int, PunishmentAction, int)
  nameWithType: ProtectionService.StartAntiRaidAsync(ulong, int, int, PunishmentAction, int)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync(ulong, int, int, Mewdeko.Database.Models.PunishmentAction, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StartAntiRaidAsync
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 358
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Starts the anti-raid protection for a guild.
  example: []
  syntax:
    content: public Task<AntiRaidStats?> StartAntiRaidAsync(ulong guildId, int userThreshold, int seconds, PunishmentAction action, int minutesDuration)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to start the protection for.
    - id: userThreshold
      type: System.Int32
      description: The number of users that triggers the anti-raid protection.
    - id: seconds
      type: System.Int32
      description: The time period in seconds in which the user threshold must be reached to trigger the protection.
    - id: action
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment action to be applied when the protection is triggered.
    - id: minutesDuration
      type: System.Int32
      description: The duration of the punishment, if applicable.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiRaidStats}
      description: A task that represents the asynchronous operation and contains the anti-raid stats if the protection was successfully started.
    content.vb: Public Function StartAntiRaidAsync(guildId As ULong, userThreshold As Integer, seconds As Integer, action As PunishmentAction, minutesDuration As Integer) As Task(Of AntiRaidStats)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync*
  nameWithType.vb: ProtectionService.StartAntiRaidAsync(ULong, Integer, Integer, PunishmentAction, Integer)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync(ULong, Integer, Integer, Mewdeko.Database.Models.PunishmentAction, Integer)
  name.vb: StartAntiRaidAsync(ULong, Integer, Integer, PunishmentAction, Integer)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid(System.UInt64)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid(System.UInt64)
  id: TryStopAntiRaid(System.UInt64)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: TryStopAntiRaid(ulong)
  nameWithType: ProtectionService.TryStopAntiRaid(ulong)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryStopAntiRaid
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 394
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Attempts to stop the anti-raid protection for a guild.
  example: []
  syntax:
    content: public Task<bool> TryStopAntiRaid(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to stop the protection for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation and contains a boolean indicating whether the operation was successful.
    content.vb: Public Function TryStopAntiRaid(guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid*
  nameWithType.vb: ProtectionService.TryStopAntiRaid(ULong)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid(ULong)
  name.vb: TryStopAntiRaid(ULong)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam(System.UInt64)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam(System.UInt64)
  id: TryStopAntiSpam(System.UInt64)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: TryStopAntiSpam(ulong)
  nameWithType: ProtectionService.TryStopAntiSpam(ulong)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryStopAntiSpam
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 422
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Attempts to stop the anti-spam protection for a guild.
  example: []
  syntax:
    content: public Task<bool> TryStopAntiSpam(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to stop the protection for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation and contains a boolean indicating whether the operation was successful.
    content.vb: Public Function TryStopAntiSpam(guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam*
  nameWithType.vb: ProtectionService.TryStopAntiSpam(ULong)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam(ULong)
  name.vb: TryStopAntiSpam(ULong)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  id: StartAntiSpamAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: StartAntiSpamAsync(ulong, int, PunishmentAction, int, ulong?)
  nameWithType: ProtectionService.StartAntiSpamAsync(ulong, int, PunishmentAction, int, ulong?)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync(ulong, int, Mewdeko.Database.Models.PunishmentAction, int, ulong?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StartAntiSpamAsync
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 457
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Starts the anti-spam protection for a guild.
  example: []
  syntax:
    content: public Task<AntiSpamStats> StartAntiSpamAsync(ulong guildId, int messageCount, PunishmentAction action, int punishDurationMinutes, ulong? roleId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to start the protection for.
    - id: messageCount
      type: System.Int32
      description: The number of messages that triggers the anti-spam protection.
    - id: action
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment action to be applied when the protection is triggered.
    - id: punishDurationMinutes
      type: System.Int32
      description: The duration of the punishment, if applicable.
    - id: roleId
      type: System.Nullable{System.UInt64}
      description: The ID of the role to be added, if applicable.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiSpamStats}
      description: A task that represents the asynchronous operation and contains the anti-spam stats if the protection was successfully started.
    content.vb: Public Function StartAntiSpamAsync(guildId As ULong, messageCount As Integer, action As PunishmentAction, punishDurationMinutes As Integer, roleId As ULong?) As Task(Of AntiSpamStats)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync*
  nameWithType.vb: ProtectionService.StartAntiSpamAsync(ULong, Integer, PunishmentAction, Integer, ULong?)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync(ULong, Integer, Mewdeko.Database.Models.PunishmentAction, Integer, ULong?)
  name.vb: StartAntiSpamAsync(ULong, Integer, PunishmentAction, Integer, ULong?)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync(System.UInt64,System.UInt64)
  id: AntiSpamIgnoreAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: AntiSpamIgnoreAsync(ulong, ulong)
  nameWithType: ProtectionService.AntiSpamIgnoreAsync(ulong, ulong)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AntiSpamIgnoreAsync
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 507
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Ignores a channel for the anti-spam protection in a guild.
  example: []
  syntax:
    content: public Task<bool?> AntiSpamIgnoreAsync(ulong guildId, ulong channelId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to ignore the channel for.
    - id: channelId
      type: System.UInt64
      description: The ID of the channel to ignore.
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
      description: A task that represents the asynchronous operation and contains a boolean indicating whether the operation was successful.
    content.vb: Public Function AntiSpamIgnoreAsync(guildId As ULong, channelId As ULong) As Task(Of Boolean?)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync*
  nameWithType.vb: ProtectionService.AntiSpamIgnoreAsync(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync(ULong, ULong)
  name.vb: AntiSpamIgnoreAsync(ULong, ULong)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats(System.UInt64)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats(System.UInt64)
  id: GetAntiStats(System.UInt64)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: GetAntiStats(ulong)
  nameWithType: ProtectionService.GetAntiStats(ulong)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAntiStats
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 550
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Retrieves the anti-spam, anti-raid, and anti-alt statistics for a guild.
  example: []
  syntax:
    content: public (AntiSpamStats?, AntiRaidStats?, AntiAltStats?) GetAntiStats(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to retrieve the statistics for.
    return:
      type: System.ValueTuple{Mewdeko.Modules.Administration.Common.AntiSpamStats,Mewdeko.Modules.Administration.Common.AntiRaidStats,Mewdeko.Modules.Administration.Common.AntiAltStats}
      description: A tuple containing the anti-spam, anti-raid, and anti-alt statistics for the guild.
    content.vb: Public Function GetAntiStats(guildId As ULong) As (AntiSpamStats, AntiRaidStats, AntiAltStats)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats*
  nameWithType.vb: ProtectionService.GetAntiStats(ULong)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats(ULong)
  name.vb: GetAntiStats(ULong)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed(Mewdeko.Database.Models.PunishmentAction)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed(Mewdeko.Database.Models.PunishmentAction)
  id: IsDurationAllowed(Mewdeko.Database.Models.PunishmentAction)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: IsDurationAllowed(PunishmentAction)
  nameWithType: ProtectionService.IsDurationAllowed(PunishmentAction)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed(Mewdeko.Database.Models.PunishmentAction)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsDurationAllowed
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 564
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Checks if a duration is allowed for a specific punishment action.
  example: []
  syntax:
    content: public static bool IsDurationAllowed(PunishmentAction action)
    parameters:
    - id: action
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment action to check.
    return:
      type: System.Boolean
      description: A boolean indicating whether a duration is allowed for the punishment action.
    content.vb: Public Shared Function IsDurationAllowed(action As PunishmentAction) As Boolean
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed*
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  id: StartAntiAltAsync(System.UInt64,System.Int32,Mewdeko.Database.Models.PunishmentAction,System.Int32,System.Nullable{System.UInt64})
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: StartAntiAltAsync(ulong, int, PunishmentAction, int, ulong?)
  nameWithType: ProtectionService.StartAntiAltAsync(ulong, int, PunishmentAction, int, ulong?)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync(ulong, int, Mewdeko.Database.Models.PunishmentAction, int, ulong?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StartAntiAltAsync
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 585
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Starts the anti-alt protection for a guild.
  example: []
  syntax:
    content: public Task StartAntiAltAsync(ulong guildId, int minAgeMinutes, PunishmentAction action, int actionDurationMinutes = 0, ulong? roleId = null)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to start the protection for.
    - id: minAgeMinutes
      type: System.Int32
      description: The minimum age of an account to not be considered an alt.
    - id: action
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment action to be applied when the protection is triggered.
    - id: actionDurationMinutes
      type: System.Int32
      description: The duration of the punishment, if applicable.
    - id: roleId
      type: System.Nullable{System.UInt64}
      description: The ID of the role to be added, if applicable.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function StartAntiAltAsync(guildId As ULong, minAgeMinutes As Integer, action As PunishmentAction, actionDurationMinutes As Integer = 0, roleId As ULong? = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync*
  nameWithType.vb: ProtectionService.StartAntiAltAsync(ULong, Integer, PunishmentAction, Integer, ULong?)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync(ULong, Integer, Mewdeko.Database.Models.PunishmentAction, Integer, ULong?)
  name.vb: StartAntiAltAsync(ULong, Integer, PunishmentAction, Integer, ULong?)
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt(System.UInt64)
  commentId: M:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt(System.UInt64)
  id: TryStopAntiAlt(System.UInt64)
  parent: Mewdeko.Modules.Administration.Services.ProtectionService
  langs:
  - csharp
  - vb
  name: TryStopAntiAlt(ulong)
  nameWithType: ProtectionService.TryStopAntiAlt(ulong)
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryStopAntiAlt
    path: src/Mewdeko/Modules/Administration/Services/ProtectionService.cs
    startLine: 607
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration.Services
  summary: Attempts to stop the anti-alt protection for a guild.
  example: []
  syntax:
    content: public Task<bool> TryStopAntiAlt(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to stop the protection for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation and contains a boolean indicating whether the operation was successful.
    content.vb: Public Function TryStopAntiAlt(guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt*
  nameWithType.vb: ProtectionService.TryStopAntiAlt(ULong)
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt(ULong)
  name.vb: TryStopAntiAlt(ULong)
references:
- uid: Mewdeko.Modules.Administration.Services
  commentId: N:Mewdeko.Modules.Administration.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Administration.Services
  nameWithType: Mewdeko.Modules.Administration.Services
  fullName: Mewdeko.Modules.Administration.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ProtectionService>(ProtectionService, string)
  nameWithType: Extensions.ThrowIfNull<ProtectionService>(ProtectionService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Administration.Services.ProtectionService>(Mewdeko.Modules.Administration.Services.ProtectionService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of ProtectionService)(ProtectionService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Administration.Services.ProtectionService)(Mewdeko.Modules.Administration.Services.ProtectionService, String)
  name.vb: ThrowIfNull(Of ProtectionService)(ProtectionService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Services.ProtectionService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Administration.Services.ProtectionService
    name: ProtectionService
    href: Mewdeko.Modules.Administration.Services.ProtectionService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Administration.Services.ProtectionService
    name: ProtectionService
    href: Mewdeko.Modules.Administration.Services.ProtectionService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Services.ProtectionService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Services.ProtectionService
    name: ProtectionService
    href: Mewdeko.Modules.Administration.Services.ProtectionService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Administration.Services.ProtectionService
    name: ProtectionService
    href: Mewdeko.Modules.Administration.Services.ProtectionService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.#ctor*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.#ctor
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService__ctor_Discord_WebSocket_DiscordSocketClient_Mewdeko_Mewdeko_Mewdeko_Modules_Moderation_Services_MuteService_Mewdeko_Database_DbService_Mewdeko_Modules_Moderation_Services_UserPunishService_Mewdeko_Services_Impl_EventHandler_
  name: ProtectionService
  nameWithType: ProtectionService.ProtectionService
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.ProtectionService
  nameWithType.vb: ProtectionService.New
  fullName.vb: Mewdeko.Modules.Administration.Services.ProtectionService.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Mewdeko
  commentId: T:Mewdeko.Mewdeko
  parent: Mewdeko
  href: Mewdeko.Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko.Mewdeko
- uid: Mewdeko.Modules.Moderation.Services.MuteService
  commentId: T:Mewdeko.Modules.Moderation.Services.MuteService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.MuteService.html
  name: MuteService
  nameWithType: MuteService
  fullName: Mewdeko.Modules.Moderation.Services.MuteService
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService
  commentId: T:Mewdeko.Modules.Moderation.Services.UserPunishService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  name: UserPunishService
  nameWithType: UserPunishService
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko
  commentId: N:Mewdeko
  href: Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko
- uid: Mewdeko.Modules.Moderation.Services
  commentId: N:Mewdeko.Modules.Moderation.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation.Services
  nameWithType: Mewdeko.Modules.Moderation.Services
  fullName: Mewdeko.Modules.Moderation.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: System.Func{Mewdeko.Database.Models.PunishmentAction,Mewdeko.Modules.Administration.Common.ProtectionType,Discord.IGuildUser[],System.Threading.Tasks.Task}
  commentId: T:System.Func{Mewdeko.Database.Models.PunishmentAction,Mewdeko.Modules.Administration.Common.ProtectionType,Discord.IGuildUser[],System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<PunishmentAction, ProtectionType, IGuildUser[], Task>
  nameWithType: Func<PunishmentAction, ProtectionType, IGuildUser[], Task>
  fullName: System.Func<Mewdeko.Database.Models.PunishmentAction, Mewdeko.Modules.Administration.Common.ProtectionType, Discord.IGuildUser[], System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of PunishmentAction, ProtectionType, IGuildUser(), Task)
  fullName.vb: System.Func(Of Mewdeko.Database.Models.PunishmentAction, Mewdeko.Modules.Administration.Common.ProtectionType, Discord.IGuildUser(), System.Threading.Tasks.Task)
  name.vb: Func(Of PunishmentAction, ProtectionType, IGuildUser(), Task)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Mewdeko.Database.Models.PunishmentAction
    name: PunishmentAction
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.ProtectionType
    name: ProtectionType
    href: Mewdeko.Modules.Administration.Common.ProtectionType.html
  - name: ','
  - name: " "
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.PunishmentAction
    name: PunishmentAction
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.ProtectionType
    name: ProtectionType
    href: Mewdeko.Modules.Administration.Common.ProtectionType.html
  - name: ','
  - name: " "
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_StartAntiRaidAsync_System_UInt64_System_Int32_System_Int32_Mewdeko_Database_Models_PunishmentAction_System_Int32_
  name: StartAntiRaidAsync
  nameWithType: ProtectionService.StartAntiRaidAsync
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiRaidAsync
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Database.Models.PunishmentAction
  commentId: T:Mewdeko.Database.Models.PunishmentAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.PunishmentAction.html
  name: PunishmentAction
  nameWithType: PunishmentAction
  fullName: Mewdeko.Database.Models.PunishmentAction
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiRaidStats}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiRaidStats}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AntiRaidStats>
  nameWithType: Task<AntiRaidStats>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Administration.Common.AntiRaidStats>
  nameWithType.vb: Task(Of AntiRaidStats)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Administration.Common.AntiRaidStats)
  name.vb: Task(Of AntiRaidStats)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Administration.Common.AntiRaidStats
    name: AntiRaidStats
    href: Mewdeko.Modules.Administration.Common.AntiRaidStats.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiRaidStats
    name: AntiRaidStats
    href: Mewdeko.Modules.Administration.Common.AntiRaidStats.html
  - name: )
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_TryStopAntiRaid_System_UInt64_
  name: TryStopAntiRaid
  nameWithType: ProtectionService.TryStopAntiRaid
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiRaid
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_TryStopAntiSpam_System_UInt64_
  name: TryStopAntiSpam
  nameWithType: ProtectionService.TryStopAntiSpam
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiSpam
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_StartAntiSpamAsync_System_UInt64_System_Int32_Mewdeko_Database_Models_PunishmentAction_System_Int32_System_Nullable_System_UInt64__
  name: StartAntiSpamAsync
  nameWithType: ProtectionService.StartAntiSpamAsync
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiSpamAsync
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiSpamStats}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Administration.Common.AntiSpamStats}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<AntiSpamStats>
  nameWithType: Task<AntiSpamStats>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Administration.Common.AntiSpamStats>
  nameWithType.vb: Task(Of AntiSpamStats)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Administration.Common.AntiSpamStats)
  name.vb: Task(Of AntiSpamStats)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Administration.Common.AntiSpamStats
    name: AntiSpamStats
    href: Mewdeko.Modules.Administration.Common.AntiSpamStats.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiSpamStats
    name: AntiSpamStats
    href: Mewdeko.Modules.Administration.Common.AntiSpamStats.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_AntiSpamIgnoreAsync_System_UInt64_System_UInt64_
  name: AntiSpamIgnoreAsync
  nameWithType: ProtectionService.AntiSpamIgnoreAsync
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.AntiSpamIgnoreAsync
- uid: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool?>
  nameWithType: Task<bool?>
  fullName: System.Threading.Tasks.Task<bool?>
  nameWithType.vb: Task(Of Boolean?)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean?)
  name.vb: Task(Of Boolean?)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_GetAntiStats_System_UInt64_
  name: GetAntiStats
  nameWithType: ProtectionService.GetAntiStats
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.GetAntiStats
- uid: System.ValueTuple{Mewdeko.Modules.Administration.Common.AntiSpamStats,Mewdeko.Modules.Administration.Common.AntiRaidStats,Mewdeko.Modules.Administration.Common.AntiAltStats}
  commentId: T:System.ValueTuple{Mewdeko.Modules.Administration.Common.AntiSpamStats,Mewdeko.Modules.Administration.Common.AntiRaidStats,Mewdeko.Modules.Administration.Common.AntiAltStats}
  parent: System
  definition: System.ValueTuple`3
  href: Mewdeko.Modules.Administration.Common.AntiSpamStats.html
  name: (AntiSpamStats, AntiRaidStats, AntiAltStats)
  nameWithType: (AntiSpamStats, AntiRaidStats, AntiAltStats)
  fullName: (Mewdeko.Modules.Administration.Common.AntiSpamStats, Mewdeko.Modules.Administration.Common.AntiRaidStats, Mewdeko.Modules.Administration.Common.AntiAltStats)
  spec.csharp:
  - name: (
  - uid: Mewdeko.Modules.Administration.Common.AntiSpamStats
    name: AntiSpamStats
    href: Mewdeko.Modules.Administration.Common.AntiSpamStats.html
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiRaidStats
    name: AntiRaidStats
    href: Mewdeko.Modules.Administration.Common.AntiRaidStats.html
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiAltStats
    name: AntiAltStats
    href: Mewdeko.Modules.Administration.Common.AntiAltStats.html
  - name: )
  spec.vb:
  - name: (
  - uid: Mewdeko.Modules.Administration.Common.AntiSpamStats
    name: AntiSpamStats
    href: Mewdeko.Modules.Administration.Common.AntiSpamStats.html
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiRaidStats
    name: AntiRaidStats
    href: Mewdeko.Modules.Administration.Common.AntiRaidStats.html
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Administration.Common.AntiAltStats
    name: AntiAltStats
    href: Mewdeko.Modules.Administration.Common.AntiAltStats.html
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_IsDurationAllowed_Mewdeko_Database_Models_PunishmentAction_
  name: IsDurationAllowed
  nameWithType: ProtectionService.IsDurationAllowed
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.IsDurationAllowed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_StartAntiAltAsync_System_UInt64_System_Int32_Mewdeko_Database_Models_PunishmentAction_System_Int32_System_Nullable_System_UInt64__
  name: StartAntiAltAsync
  nameWithType: ProtectionService.StartAntiAltAsync
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.StartAntiAltAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt*
  commentId: Overload:Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt
  href: Mewdeko.Modules.Administration.Services.ProtectionService.html#Mewdeko_Modules_Administration_Services_ProtectionService_TryStopAntiAlt_System_UInt64_
  name: TryStopAntiAlt
  nameWithType: ProtectionService.TryStopAntiAlt
  fullName: Mewdeko.Modules.Administration.Services.ProtectionService.TryStopAntiAlt
