### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  commentId: T:Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  id: TryParseTypeReader`1
  parent: Mewdeko.Common.TypeReaders
  children:
  - Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0}.TryParseDelegate{`0})
  - Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: TryParseTypeReader<T>
  nameWithType: TryParseTypeReader<T>
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryParseTypeReader
    path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
    startLine: 8
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.TypeReaders
  summary: Type reader for parsing input strings into objects of type T using a custom TryParse method.
  example: []
  syntax:
    content: 'public class TryParseTypeReader<T> : TypeReader'
    typeParameters:
    - id: T
      description: The type of object to parse.
    content.vb: Public Class TryParseTypeReader(Of T) Inherits TypeReader
  inheritance:
  - System.Object
  - Discord.Commands.TypeReader
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Common.TypeReaders.TryParseTypeReader`1.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  nameWithType.vb: TryParseTypeReader(Of T)
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T)
  name.vb: TryParseTypeReader(Of T)
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0}.TryParseDelegate{`0})
  commentId: M:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0}.TryParseDelegate{`0})
  id: '#ctor(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0}.TryParseDelegate{`0})'
  parent: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  langs:
  - csharp
  - vb
  name: TryParseTypeReader(TryParseDelegate<T>)
  nameWithType: TryParseTypeReader<T>.TryParseTypeReader(TryParseTypeReader<T>.TryParseDelegate<T>)
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.TryParseTypeReader(Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.TryParseDelegate<T>)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.TypeReaders
  summary: Initializes a new instance of the <xref href="Mewdeko.Common.TypeReaders.TryParseTypeReader%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TryParseTypeReader(TryParseTypeReader<T>.TryParseDelegate<T> tryParse)
    parameters:
    - id: tryParse
      type: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate{{T}}
      description: The delegate representing the custom TryParse method for type T.
    content.vb: Public Sub New(tryParse As TryParseTypeReader(Of T).TryParseDelegate(Of T))
  overload: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor*
  nameWithType.vb: TryParseTypeReader(Of T).New(TryParseTypeReader(Of T).TryParseDelegate(Of T))
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).New(Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).TryParseDelegate(Of T))
  name.vb: New(TryParseDelegate(Of T))
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  commentId: M:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  id: ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  parent: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  langs:
  - csharp
  - vb
  name: ReadAsync(ICommandContext, string, IServiceProvider)
  nameWithType: TryParseTypeReader<T>.ReadAsync(ICommandContext, string, IServiceProvider)
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.ReadAsync(Discord.Commands.ICommandContext, string, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReadAsync
    path: src/Mewdeko/Common/TypeReaders/TryParseTypereader.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.TypeReaders
  summary: Attempts to parse the <code class="paramref">input</code> into the desired type.
  example: []
  syntax:
    content: public override Task<TypeReaderResult> ReadAsync(ICommandContext context, string input, IServiceProvider services)
    parameters:
    - id: context
      type: Discord.Commands.ICommandContext
      description: The context of the command.
    - id: input
      type: System.String
      description: The raw input of the command.
    - id: services
      type: System.IServiceProvider
      description: The service collection used for dependency injection.
    return:
      type: System.Threading.Tasks.Task{Discord.Commands.TypeReaderResult}
      description: A task that represents the asynchronous parsing operation. The task result contains the parsing result.
    content.vb: Public Overrides Function ReadAsync(context As ICommandContext, input As String, services As IServiceProvider) As Task(Of TypeReaderResult)
  overridden: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  overload: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync*
  nameWithType.vb: TryParseTypeReader(Of T).ReadAsync(ICommandContext, String, IServiceProvider)
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).ReadAsync(Discord.Commands.ICommandContext, String, System.IServiceProvider)
  name.vb: ReadAsync(ICommandContext, String, IServiceProvider)
references:
- uid: Mewdeko.Common.TypeReaders
  commentId: N:Mewdeko.Common.TypeReaders
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders
  nameWithType: Mewdeko.Common.TypeReaders
  fullName: Mewdeko.Common.TypeReaders
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.TypeReader
  commentId: T:Discord.Commands.TypeReader
  parent: Discord.Commands
  isExternal: true
  name: TypeReader
  nameWithType: TypeReader
  fullName: Discord.Commands.TypeReader
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<TryParseTypeReader<T>>(TryParseTypeReader<T>, string)
  nameWithType: Extensions.ThrowIfNull<TryParseTypeReader<T>>(TryParseTypeReader<T>, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.TypeReaders.TryParseTypeReader<T>>(Mewdeko.Common.TypeReaders.TryParseTypeReader<T>, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of TryParseTypeReader(Of T))(TryParseTypeReader(Of T), String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T))(Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T), String)
  name.vb: ThrowIfNull(Of TryParseTypeReader(Of T))(TryParseTypeReader(Of T), String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0},System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.TypeReaders.TryParseTypeReader{`0},System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  commentId: T:Mewdeko.Common.TypeReaders.TryParseTypeReader`1
  href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  name: TryParseTypeReader<T>
  nameWithType: TryParseTypeReader<T>
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>
  nameWithType.vb: TryParseTypeReader(Of T)
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T)
  name.vb: TryParseTypeReader(Of T)
  spec.csharp:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor*
  commentId: Overload:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.#ctor
  href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html#Mewdeko_Common_TypeReaders_TryParseTypeReader_1__ctor_Mewdeko_Common_TypeReaders_TryParseTypeReader__0__TryParseDelegate__0__
  name: TryParseTypeReader
  nameWithType: TryParseTypeReader<T>.TryParseTypeReader
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.TryParseTypeReader
  nameWithType.vb: TryParseTypeReader(Of T).New
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).New
  name.vb: New
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate{{T}}
  commentId: T:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate{`0}
  parent: Mewdeko.Common.TypeReaders
  definition: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
  href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  name: TryParseTypeReader<T>.TryParseDelegate<T>
  nameWithType: TryParseTypeReader<T>.TryParseDelegate<T>
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.TryParseDelegate<T>
  nameWithType.vb: TryParseTypeReader(Of T).TryParseDelegate(Of T)
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).TryParseDelegate(Of T)
  name.vb: TryParseTypeReader(Of T).TryParseDelegate(Of T)
  spec.csharp:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
    name: TryParseDelegate
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.TryParseDelegate-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
    name: TryParseDelegate
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.TryParseDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
  commentId: T:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
  href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  name: TryParseTypeReader<T>.TryParseDelegate<TA>
  nameWithType: TryParseTypeReader<T>.TryParseDelegate<TA>
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.TryParseDelegate<TA>
  nameWithType.vb: TryParseTypeReader(Of T).TryParseDelegate(Of TA)
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).TryParseDelegate(Of TA)
  name.vb: TryParseTypeReader(Of T).TryParseDelegate(Of TA)
  spec.csharp:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
    name: TryParseDelegate
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.TryParseDelegate-1.html
  - name: <
  - name: TA
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1
    name: TryParseTypeReader
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.TryParseDelegate`1
    name: TryParseDelegate
    href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.TryParseDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TA
  - name: )
- uid: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  commentId: M:Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
  parent: Discord.Commands.TypeReader
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReadAsync(ICommandContext, string, IServiceProvider)
  nameWithType: TypeReader.ReadAsync(ICommandContext, string, IServiceProvider)
  fullName: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext, string, System.IServiceProvider)
  nameWithType.vb: TypeReader.ReadAsync(ICommandContext, String, IServiceProvider)
  fullName.vb: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext, String, System.IServiceProvider)
  name.vb: ReadAsync(ICommandContext, String, IServiceProvider)
  spec.csharp:
  - uid: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
    name: ReadAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
  spec.vb:
  - uid: Discord.Commands.TypeReader.ReadAsync(Discord.Commands.ICommandContext,System.String,System.IServiceProvider)
    name: ReadAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IServiceProvider
    name: IServiceProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  - name: )
- uid: Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync*
  commentId: Overload:Mewdeko.Common.TypeReaders.TryParseTypeReader`1.ReadAsync
  href: Mewdeko.Common.TypeReaders.TryParseTypeReader-1.html#Mewdeko_Common_TypeReaders_TryParseTypeReader_1_ReadAsync_Discord_Commands_ICommandContext_System_String_System_IServiceProvider_
  name: ReadAsync
  nameWithType: TryParseTypeReader<T>.ReadAsync
  fullName: Mewdeko.Common.TypeReaders.TryParseTypeReader<T>.ReadAsync
  nameWithType.vb: TryParseTypeReader(Of T).ReadAsync
  fullName.vb: Mewdeko.Common.TypeReaders.TryParseTypeReader(Of T).ReadAsync
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  isExternal: true
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Threading.Tasks.Task{Discord.Commands.TypeReaderResult}
  commentId: T:System.Threading.Tasks.Task{Discord.Commands.TypeReaderResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TypeReaderResult>
  nameWithType: Task<TypeReaderResult>
  fullName: System.Threading.Tasks.Task<Discord.Commands.TypeReaderResult>
  nameWithType.vb: Task(Of TypeReaderResult)
  fullName.vb: System.Threading.Tasks.Task(Of Discord.Commands.TypeReaderResult)
  name.vb: Task(Of TypeReaderResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Discord.Commands.TypeReaderResult
    name: TypeReaderResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.TypeReaderResult
    name: TypeReaderResult
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
