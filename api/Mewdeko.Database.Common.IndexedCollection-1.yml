### YamlMime:ManagedReference
items:
- uid: Mewdeko.Database.Common.IndexedCollection`1
  commentId: T:Mewdeko.Database.Common.IndexedCollection`1
  id: IndexedCollection`1
  parent: Mewdeko.Database.Common
  children:
  - Mewdeko.Database.Common.IndexedCollection`1.#ctor
  - Mewdeko.Database.Common.IndexedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - Mewdeko.Database.Common.IndexedCollection`1.Add(`0)
  - Mewdeko.Database.Common.IndexedCollection`1.Clear
  - Mewdeko.Database.Common.IndexedCollection`1.Contains(`0)
  - Mewdeko.Database.Common.IndexedCollection`1.CopyTo(`0[],System.Int32)
  - Mewdeko.Database.Common.IndexedCollection`1.Count
  - Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator
  - Mewdeko.Database.Common.IndexedCollection`1.IndexOf(`0)
  - Mewdeko.Database.Common.IndexedCollection`1.Insert(System.Int32,`0)
  - Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly
  - Mewdeko.Database.Common.IndexedCollection`1.Item(System.Int32)
  - Mewdeko.Database.Common.IndexedCollection`1.Remove(`0)
  - Mewdeko.Database.Common.IndexedCollection`1.RemoveAt(System.Int32)
  - Mewdeko.Database.Common.IndexedCollection`1.Source
  - Mewdeko.Database.Common.IndexedCollection`1.ToList
  - Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes
  - Mewdeko.Database.Common.IndexedCollection`1.op_Implicit(Mewdeko.Database.Common.IndexedCollection{`0})~System.Collections.Generic.List{`0}
  langs:
  - csharp
  - vb
  name: IndexedCollection<T>
  nameWithType: IndexedCollection<T>
  fullName: Mewdeko.Database.Common.IndexedCollection<T>
  type: Class
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IndexedCollection
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 6
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: 'public class IndexedCollection<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable where T : class, IIndexed'
    typeParameters:
    - id: T
    content.vb: Public Class IndexedCollection(Of T As {Class, IIndexed}) Implements IList(Of T), ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - Mewdeko.Modules.Permissions.Common.PermissionsCollection`1
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Database.Common.IndexedCollection`1.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Func{{T},{TU}})
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Action{{T}})
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Char,System.Func{{T},System.String})
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.String,System.Func{{T},System.String})
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Char,System.Func{{T},System.String})
  - System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Shuffle``1
  - System.Collections.Generic.IList{`0}.Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IEnumerable{{T}})
  - System.Collections.Generic.IList{`0}.Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IEnumerable{{T}})
  nameWithType.vb: IndexedCollection(Of T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T)
  name.vb: IndexedCollection(Of T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.#ctor
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.#ctor
  id: '#ctor'
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: IndexedCollection()
  nameWithType: IndexedCollection<T>.IndexedCollection()
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IndexedCollection()
  type: Constructor
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 10
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public IndexedCollection()
    content.vb: Public Sub New()
  overload: Mewdeko.Database.Common.IndexedCollection`1.#ctor*
  nameWithType.vb: IndexedCollection(Of T).New()
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).New()
  name.vb: New()
- uid: Mewdeko.Database.Common.IndexedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: IndexedCollection(IEnumerable<T>)
  nameWithType: IndexedCollection<T>.IndexedCollection(IEnumerable<T>)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IndexedCollection(System.Collections.Generic.IEnumerable<T>)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 12
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public IndexedCollection(IEnumerable<T> source)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Sub New(source As IEnumerable(Of T))
  overload: Mewdeko.Database.Common.IndexedCollection`1.#ctor*
  nameWithType.vb: IndexedCollection(Of T).New(IEnumerable(Of T))
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).New(System.Collections.Generic.IEnumerable(Of T))
  name.vb: New(IEnumerable(Of T))
- uid: Mewdeko.Database.Common.IndexedCollection`1.Source
  commentId: P:Mewdeko.Database.Common.IndexedCollection`1.Source
  id: Source
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: IndexedCollection<T>.Source
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Source
  type: Property
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Source
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 21
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public List<T> Source { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public ReadOnly Property Source As List(Of T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.Source*
  nameWithType.vb: IndexedCollection(Of T).Source
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Source
- uid: Mewdeko.Database.Common.IndexedCollection`1.Count
  commentId: P:Mewdeko.Database.Common.IndexedCollection`1.Count
  id: Count
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IndexedCollection<T>.Count
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Count
  type: Property
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Count
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 23
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Gets the number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
      description: The number of elements contained in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public ReadOnly Property Count As Integer
  overload: Mewdeko.Database.Common.IndexedCollection`1.Count*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Count
  nameWithType.vb: IndexedCollection(Of T).Count
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Count
- uid: Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly
  commentId: P:Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly
  id: IsReadOnly
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: IndexedCollection<T>.IsReadOnly
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsReadOnly
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 24
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Gets a value indicating whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  nameWithType.vb: IndexedCollection(Of T).IsReadOnly
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).IsReadOnly
- uid: Mewdeko.Database.Common.IndexedCollection`1.IndexOf(`0)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: IndexOf(T)
  nameWithType: IndexedCollection<T>.IndexOf(T)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IndexOf(T)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IndexOf
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 26
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Determines the index of a specific item in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int IndexOf(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Int32
      description: The index of <code class="paramref">item</code> if found in the list; otherwise, -1.
    content.vb: Public Function IndexOf(item As T) As Integer
  overload: Mewdeko.Database.Common.IndexedCollection`1.IndexOf*
  implements:
  - System.Collections.Generic.IList{{T}}.IndexOf({T})
  nameWithType.vb: IndexedCollection(Of T).IndexOf(T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).IndexOf(T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator
  id: GetEnumerator
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IndexedCollection<T>.GetEnumerator()
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetEnumerator
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 32
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: IndexedCollection(Of T).GetEnumerator()
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).GetEnumerator()
- uid: Mewdeko.Database.Common.IndexedCollection`1.Add(`0)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.Add(`0)
  id: Add(`0)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: IndexedCollection<T>.Add(T)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Add
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 36
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Adds an item to the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to add to the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Add(item As T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: IndexedCollection(Of T).Add(T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Add(T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.Clear
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.Clear
  id: Clear
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IndexedCollection<T>.Clear()
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Clear()
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Clear
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 46
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Removes all items from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear()
  overload: Mewdeko.Database.Common.IndexedCollection`1.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{T}}.Clear
  nameWithType.vb: IndexedCollection(Of T).Clear()
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Clear()
- uid: Mewdeko.Database.Common.IndexedCollection`1.Contains(`0)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.Contains(`0)
  id: Contains(`0)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: IndexedCollection<T>.Contains(T)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Contains
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 54
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Determines whether the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> contains a specific value.
  example: []
  syntax:
    content: public bool Contains(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to locate in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> is found in the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Contains(item As T) As Boolean
  overload: Mewdeko.Database.Common.IndexedCollection`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: IndexedCollection(Of T).Contains(T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Contains(T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], int)
  nameWithType: IndexedCollection<T>.CopyTo(T[], int)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.CopyTo(T[], int)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CopyTo
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 62
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Copies the elements of the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> to an <xref href="System.Array" data-throw-if-not-resolved="false"></xref>, starting at a particular <xref href="System.Array" data-throw-if-not-resolved="false"></xref> index.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{T}[]'
      description: The one-dimensional <xref href="System.Array" data-throw-if-not-resolved="false"></xref> that is the destination of the elements copied from <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>. The <xref href="System.Array" data-throw-if-not-resolved="false"></xref> must have zero-based indexing.
    - id: arrayIndex
      type: System.Int32
      description: The zero-based index in <code class="paramref">array</code> at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
  overload: Mewdeko.Database.Common.IndexedCollection`1.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">array</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">arrayIndex</code> is less than 0.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The number of elements in the source <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is greater than the available space from <code class="paramref">arrayIndex</code> to the end of the destination <code class="paramref">array</code>.
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: IndexedCollection(Of T).CopyTo(T(), Integer)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
- uid: Mewdeko.Database.Common.IndexedCollection`1.Remove(`0)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.Remove(`0)
  id: Remove(`0)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: IndexedCollection<T>.Remove(T)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Remove
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 70
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Removes the first occurrence of a specific object from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool Remove(T item)
    parameters:
    - id: item
      type: '{T}'
      description: The object to remove from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">item</code> was successfully removed from the <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This method also returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if <code class="paramref">item</code> is not found in the original <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overridable Function Remove(item As T) As Boolean
  overload: Mewdeko.Database.Common.IndexedCollection`1.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: IndexedCollection(Of T).Remove(T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Remove(T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.Insert(System.Int32,`0)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: Insert(int, T)
  nameWithType: IndexedCollection<T>.Insert(int, T)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Insert(int, T)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Insert
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 87
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Inserts an item to the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> at the specified index.
  example: []
  syntax:
    content: public virtual void Insert(int index, T item)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which <code class="paramref">item</code> should be inserted.
    - id: item
      type: '{T}'
      description: The object to insert into the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overridable Sub Insert(index As Integer, item As T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  nameWithType.vb: IndexedCollection(Of T).Insert(Integer, T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
- uid: Mewdeko.Database.Common.IndexedCollection`1.RemoveAt(System.Int32)
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: RemoveAt(int)
  nameWithType: IndexedCollection<T>.RemoveAt(int)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.RemoveAt(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveAt
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 96
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Removes the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> item at the specified index.
  example: []
  syntax:
    content: public virtual void RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
    content.vb: Public Overridable Sub RemoveAt(index As Integer)
  overload: Mewdeko.Database.Common.IndexedCollection`1.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  nameWithType.vb: IndexedCollection(Of T).RemoveAt(Integer)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
- uid: Mewdeko.Database.Common.IndexedCollection`1.Item(System.Int32)
  commentId: P:Mewdeko.Database.Common.IndexedCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: IndexedCollection<T>.this[int]
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.this[int]
  type: Property
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: this[]
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 105
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  summary: Gets or sets the element at the specified index.
  example: []
  syntax:
    content: public virtual T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: '{T}'
      description: The element at the specified index.
    content.vb: Public Overridable Default Property this[](index As Integer) As T
  overload: Mewdeko.Database.Common.IndexedCollection`1.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">index</code> is not a valid index in the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref>.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The property is set and the <xref href="System.Collections.Generic.IList%601" data-throw-if-not-resolved="false"></xref> is read-only.
  implements:
  - System.Collections.Generic.IList{{T}}.Item(System.Int32)
  nameWithType.vb: IndexedCollection(Of T).this[](Integer)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).this[](Integer)
  name.vb: this[](Integer)
- uid: Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes
  id: UpdateIndexes
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: UpdateIndexes()
  nameWithType: IndexedCollection<T>.UpdateIndexes()
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.UpdateIndexes()
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateIndexes
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 118
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public void UpdateIndexes()
    content.vb: Public Sub UpdateIndexes()
  overload: Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes*
  nameWithType.vb: IndexedCollection(Of T).UpdateIndexes()
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).UpdateIndexes()
- uid: Mewdeko.Database.Common.IndexedCollection`1.op_Implicit(Mewdeko.Database.Common.IndexedCollection{`0})~System.Collections.Generic.List{`0}
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.op_Implicit(Mewdeko.Database.Common.IndexedCollection{`0})~System.Collections.Generic.List{`0}
  id: op_Implicit(Mewdeko.Database.Common.IndexedCollection{`0})~System.Collections.Generic.List{`0}
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: implicit operator List<T>(IndexedCollection<T>)
  nameWithType: IndexedCollection<T>.implicit operator List<T>(IndexedCollection<T>)
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.implicit operator System.Collections.Generic.List<T>(Mewdeko.Database.Common.IndexedCollection<T>)
  type: Operator
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Implicit
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 130
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public static implicit operator List<T>(IndexedCollection<T> x)
    parameters:
    - id: x
      type: Mewdeko.Database.Common.IndexedCollection`1
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Shared Widening Operator CType(x As IndexedCollection(Of T)) As List(Of T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.op_Implicit*
  nameWithType.vb: IndexedCollection(Of T).CType(IndexedCollection(Of T))
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).CType(Mewdeko.Database.Common.IndexedCollection(Of T))
  name.vb: CType(IndexedCollection(Of T))
- uid: Mewdeko.Database.Common.IndexedCollection`1.ToList
  commentId: M:Mewdeko.Database.Common.IndexedCollection`1.ToList
  id: ToList
  parent: Mewdeko.Database.Common.IndexedCollection`1
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: IndexedCollection<T>.ToList()
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.ToList()
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Common/IndexedCollections.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToList
    path: src/Mewdeko.Database/Common/IndexedCollections.cs
    startLine: 132
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Common
  syntax:
    content: public List<T> ToList()
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function ToList() As List(Of T)
  overload: Mewdeko.Database.Common.IndexedCollection`1.ToList*
  nameWithType.vb: IndexedCollection(Of T).ToList()
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).ToList()
references:
- uid: Mewdeko.Database.Common
  commentId: N:Mewdeko.Database.Common
  href: Mewdeko.html
  name: Mewdeko.Database.Common
  nameWithType: Mewdeko.Database.Common
  fullName: Mewdeko.Database.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Common
    name: Common
    href: Mewdeko.Database.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Common
    name: Common
    href: Mewdeko.Database.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<IndexedCollection<T>>(IndexedCollection<T>, string)
  nameWithType: Extensions.ThrowIfNull<IndexedCollection<T>>(IndexedCollection<T>, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Database.Common.IndexedCollection<T>>(Mewdeko.Database.Common.IndexedCollection<T>, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of IndexedCollection(Of T))(IndexedCollection(Of T), String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Database.Common.IndexedCollection(Of T))(Mewdeko.Database.Common.IndexedCollection(Of T), String)
  name.vb: ThrowIfNull(Of IndexedCollection(Of T))(IndexedCollection(Of T), String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Database.Common.IndexedCollection{`0},System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Database.Common.IndexedCollection{`0},System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Func{{T},{TU}})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: Distinct<T, TU>(IEnumerable<T>, Func<T, TU>)
  nameWithType: EnumerableExtensions.Distinct<T, TU>(IEnumerable<T>, Func<T, TU>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Distinct<T, TU>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TU>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of T, TU)(IEnumerable(Of T), Func(Of T, TU))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Distinct(Of T, TU)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TU))
  name.vb: Distinct(Of T, TU)(IEnumerable(Of T), Func(Of T, TU))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: Distinct
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{`0},System.Func{`0,``1})
    name: Distinct
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Action{{T}})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: EnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: EnumerableExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{`0},System.Action{`0})
    name: ForEach
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{`0},System.Action{`0})
    name: ForEach
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  name: GetRandomElement<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.GetRandomElement<T>(IEnumerable<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.GetRandomElement(Of T)(IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: GetRandomElement(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{`0})
    name: GetRandomElement
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{`0})
    name: GetRandomElement
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Char,System.Func{{T},System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  name: JoinWith<T>(IEnumerable<T>, char, Func<T, string>)
  nameWithType: EnumerableExtensions.JoinWith<T>(IEnumerable<T>, char, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.JoinWith<T>(System.Collections.Generic.IEnumerable<T>, char, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.JoinWith(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.JoinWith(Of T)(System.Collections.Generic.IEnumerable(Of T), Char, System.Func(Of T, String))
  name.vb: JoinWith(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{`0},System.Char,System.Func{`0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{`0},System.Char,System.Func{`0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.String,System.Func{{T},System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  name: JoinWith<T>(IEnumerable<T>, string, Func<T, string>)
  nameWithType: EnumerableExtensions.JoinWith<T>(IEnumerable<T>, string, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.JoinWith<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.JoinWith(Of T)(IEnumerable(Of T), String, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.JoinWith(Of T)(System.Collections.Generic.IEnumerable(Of T), String, System.Func(Of T, String))
  name.vb: JoinWith(Of T)(IEnumerable(Of T), String, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{`0},System.String,System.Func{`0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{`0},System.String,System.Func{`0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Char,System.Func{{T},System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  name: Join<T>(IEnumerable<T>, char, Func<T, string>)
  nameWithType: EnumerableExtensions.Join<T>(IEnumerable<T>, char, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Join<T>(System.Collections.Generic.IEnumerable<T>, char, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.Join(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Join(Of T)(System.Collections.Generic.IEnumerable(Of T), Char, System.Func(Of T, String))
  name.vb: Join(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{`0},System.Char,System.Func{`0,System.String})
    name: Join
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{`0},System.Char,System.Func{`0,System.String})
    name: Join
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{`0}.Mewdeko.Extensions.EnumerableExtensions.Shuffle``1
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  parent: Mewdeko.Extensions.EnumerableExtensions
  definition: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  name: Shuffle<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.Shuffle<T>(IEnumerable<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Shuffle<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.Shuffle(Of T)(IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Shuffle(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Shuffle(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{`0})
    name: Shuffle
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{`0})
    name: Shuffle
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IList{`0}.Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  name: AddRange<T>(IList<T>, IEnumerable<T>)
  nameWithType: Extensions.AddRange<T>(IList<T>, IEnumerable<T>)
  fullName: Mewdeko.Extensions.Extensions.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.AddRange(Of T)(IList(Of T), IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.Extensions.AddRange(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(Of T)(IList(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{`0},System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{`0},System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IList{`0}.Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IEnumerable{{T}})
  commentId: M:Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  name: RemoveRange<T>(IList<T>, IEnumerable<T>)
  nameWithType: Extensions.RemoveRange<T>(IList<T>, IEnumerable<T>)
  fullName: Mewdeko.Extensions.Extensions.RemoveRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.RemoveRange(Of T)(IList(Of T), IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.Extensions.RemoveRange(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: RemoveRange(Of T)(IList(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{`0},System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{`0},System.Collections.Generic.IEnumerable{`0})
    name: RemoveRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  name: Distinct<T, TU>(IEnumerable<T>, Func<T, TU>)
  nameWithType: EnumerableExtensions.Distinct<T, TU>(IEnumerable<T>, Func<T, TU>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Distinct<T, TU>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TU>)
  nameWithType.vb: EnumerableExtensions.Distinct(Of T, TU)(IEnumerable(Of T), Func(Of T, TU))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Distinct(Of T, TU)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TU))
  name.vb: Distinct(Of T, TU)(IEnumerable(Of T), Func(Of T, TU))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Distinct
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: Distinct
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Distinct__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TU
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions
  commentId: T:Mewdeko.Extensions.EnumerableExtensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.EnumerableExtensions.html
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Mewdeko.Extensions.EnumerableExtensions
- uid: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: EnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: EnumerableExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_ForEach__1_System_Collections_Generic_IEnumerable___0__System_Action___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  name: GetRandomElement<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.GetRandomElement<T>(IEnumerable<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.GetRandomElement(Of T)(IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: GetRandomElement(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
    name: GetRandomElement
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.GetRandomElement``1(System.Collections.Generic.IEnumerable{``0})
    name: GetRandomElement
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_GetRandomElement__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  name: JoinWith<T>(IEnumerable<T>, char, Func<T, string>)
  nameWithType: EnumerableExtensions.JoinWith<T>(IEnumerable<T>, char, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.JoinWith<T>(System.Collections.Generic.IEnumerable<T>, char, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.JoinWith(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.JoinWith(Of T)(System.Collections.Generic.IEnumerable(Of T), Char, System.Func(Of T, String))
  name.vb: JoinWith(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  name: JoinWith<T>(IEnumerable<T>, string, Func<T, string>)
  nameWithType: EnumerableExtensions.JoinWith<T>(IEnumerable<T>, string, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.JoinWith<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.JoinWith(Of T)(IEnumerable(Of T), String, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.JoinWith(Of T)(System.Collections.Generic.IEnumerable(Of T), String, System.Func(Of T, String))
  name.vb: JoinWith(Of T)(IEnumerable(Of T), String, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.JoinWith``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})
    name: JoinWith
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_JoinWith__1_System_Collections_Generic_IEnumerable___0__System_String_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  name: Join<T>(IEnumerable<T>, char, Func<T, string>)
  nameWithType: EnumerableExtensions.Join<T>(IEnumerable<T>, char, Func<T, string>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Join<T>(System.Collections.Generic.IEnumerable<T>, char, System.Func<T, string>)
  nameWithType.vb: EnumerableExtensions.Join(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Join(Of T)(System.Collections.Generic.IEnumerable(Of T), Char, System.Func(Of T, String))
  name.vb: Join(Of T)(IEnumerable(Of T), Char, Func(Of T, String))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
    name: Join
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char,System.Func{``0,System.String})
    name: Join
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Join__1_System_Collections_Generic_IEnumerable___0__System_Char_System_Func___0_System_String__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  name: Shuffle<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.Shuffle<T>(IEnumerable<T>)
  fullName: Mewdeko.Extensions.EnumerableExtensions.Shuffle<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.Shuffle(Of T)(IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.EnumerableExtensions.Shuffle(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Shuffle(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle
    href: Mewdeko.Extensions.EnumerableExtensions.html#Mewdeko_Extensions_EnumerableExtensions_Shuffle__1_System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  name: AddRange<T>(IList<T>, IEnumerable<T>)
  nameWithType: Extensions.AddRange<T>(IList<T>, IEnumerable<T>)
  fullName: Mewdeko.Extensions.Extensions.AddRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.AddRange(Of T)(IList(Of T), IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.Extensions.AddRange(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(Of T)(IList(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
    name: AddRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
    name: AddRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_AddRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  name: RemoveRange<T>(IList<T>, IEnumerable<T>)
  nameWithType: Extensions.RemoveRange<T>(IList<T>, IEnumerable<T>)
  fullName: Mewdeko.Extensions.Extensions.RemoveRange<T>(System.Collections.Generic.IList<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.RemoveRange(Of T)(IList(Of T), IEnumerable(Of T))
  fullName.vb: Mewdeko.Extensions.Extensions.RemoveRange(Of T)(System.Collections.Generic.IList(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: RemoveRange(Of T)(IList(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
    name: RemoveRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RemoveRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})
    name: RemoveRange
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RemoveRange__1_System_Collections_Generic_IList___0__System_Collections_Generic_IEnumerable___0__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Database.Common.IndexedCollection`1.#ctor*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.#ctor
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1__ctor
  name: IndexedCollection
  nameWithType: IndexedCollection<T>.IndexedCollection
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IndexedCollection
  nameWithType.vb: IndexedCollection(Of T).New
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).New
  name.vb: New
- uid: Mewdeko.Database.Common.IndexedCollection`1.Source*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Source
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Source
  name: Source
  nameWithType: IndexedCollection<T>.Source
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Source
  nameWithType.vb: IndexedCollection(Of T).Source
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Source
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Count*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Count
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Count
  name: Count
  nameWithType: IndexedCollection<T>.Count
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Count
  nameWithType.vb: IndexedCollection(Of T).Count
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.Count
  commentId: P:System.Collections.Generic.ICollection{`0}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.count
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.IsReadOnly
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_IsReadOnly
  name: IsReadOnly
  nameWithType: IndexedCollection<T>.IsReadOnly
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IsReadOnly
  nameWithType.vb: IndexedCollection(Of T).IsReadOnly
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`0}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.isreadonly
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: Mewdeko.Database.Common.IndexedCollection`1.IndexOf*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.IndexOf
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_IndexOf__0_
  name: IndexOf
  nameWithType: IndexedCollection<T>.IndexOf
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.IndexOf
  nameWithType.vb: IndexedCollection(Of T).IndexOf
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).IndexOf
- uid: System.Collections.Generic.IList{{T}}.IndexOf({T})
  commentId: M:System.Collections.Generic.IList{`0}.IndexOf(`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.indexof
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.GetEnumerator
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_GetEnumerator
  name: GetEnumerator
  nameWithType: IndexedCollection<T>.GetEnumerator
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.GetEnumerator
  nameWithType.vb: IndexedCollection(Of T).GetEnumerator
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: Mewdeko.Database.Common.IndexedCollection`1.Add*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Add
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Add__0_
  name: Add
  nameWithType: IndexedCollection<T>.Add
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Add
  nameWithType.vb: IndexedCollection(Of T).Add
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.add
  - name: (
  - name: T
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Clear*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Clear
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Clear
  name: Clear
  nameWithType: IndexedCollection<T>.Clear
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Clear
  nameWithType.vb: IndexedCollection(Of T).Clear
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Clear
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`0}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.clear
  - name: (
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Contains*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Contains
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Contains__0_
  name: Contains
  nameWithType: IndexedCollection<T>.Contains
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Contains
  nameWithType.vb: IndexedCollection(Of T).Contains
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Array
  commentId: T:System.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Mewdeko.Database.Common.IndexedCollection`1.CopyTo*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.CopyTo
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_CopyTo__0___System_Int32_
  name: CopyTo
  nameWithType: IndexedCollection<T>.CopyTo
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.CopyTo
  nameWithType.vb: IndexedCollection(Of T).CopyTo
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  name: CopyTo(T[], int)
  nameWithType: ICollection<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], int)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.copyto
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Remove*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Remove
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Remove__0_
  name: Remove
  nameWithType: IndexedCollection<T>.Remove
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Remove
  nameWithType.vb: IndexedCollection(Of T).Remove
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection{`0}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1.remove
  - name: (
  - name: T
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Insert*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Insert
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Insert_System_Int32__0_
  name: Insert
  nameWithType: IndexedCollection<T>.Insert
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.Insert
  nameWithType.vb: IndexedCollection(Of T).Insert
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).Insert
- uid: System.Collections.Generic.IList{{T}}.Insert(System.Int32,{T})
  commentId: M:System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  name: Insert(int, T)
  nameWithType: IList<T>.Insert(int, T)
  fullName: System.Collections.Generic.IList<T>.Insert(int, T)
  nameWithType.vb: IList(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.RemoveAt*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.RemoveAt
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_RemoveAt_System_Int32_
  name: RemoveAt
  nameWithType: IndexedCollection<T>.RemoveAt
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.RemoveAt
  nameWithType.vb: IndexedCollection(Of T).RemoveAt
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).RemoveAt
- uid: System.Collections.Generic.IList{{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  name: RemoveAt(int)
  nameWithType: IList<T>.RemoveAt(int)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(int)
  nameWithType.vb: IList(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.Item*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.Item
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_Item_System_Int32_
  name: this
  nameWithType: IndexedCollection<T>.this
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.this
  nameWithType.vb: IndexedCollection(Of T).this[]
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).this[]
  name.vb: this[]
- uid: System.Collections.Generic.IList{{T}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`0}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{T}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList{`0}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: IList<T>.this[int]
  fullName: System.Collections.Generic.IList<T>.this[int]
  nameWithType.vb: IList(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.IList(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.UpdateIndexes
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_UpdateIndexes
  name: UpdateIndexes
  nameWithType: IndexedCollection<T>.UpdateIndexes
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.UpdateIndexes
  nameWithType.vb: IndexedCollection(Of T).UpdateIndexes
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).UpdateIndexes
- uid: Mewdeko.Database.Common.IndexedCollection`1.op_Implicit*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.op_Implicit
  name: implicit operator
  nameWithType: IndexedCollection<T>.implicit operator
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.implicit operator
  nameWithType.vb: IndexedCollection(Of T).CType
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Mewdeko.Database.Common.IndexedCollection`1
  commentId: T:Mewdeko.Database.Common.IndexedCollection`1
  parent: Mewdeko.Database.Common
  href: Mewdeko.Database.Common.IndexedCollection-1.html
  name: IndexedCollection<T>
  nameWithType: IndexedCollection<T>
  fullName: Mewdeko.Database.Common.IndexedCollection<T>
  nameWithType.vb: IndexedCollection(Of T)
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T)
  name.vb: IndexedCollection(Of T)
  spec.csharp:
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Database.Common.IndexedCollection`1
    name: IndexedCollection
    href: Mewdeko.Database.Common.IndexedCollection-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Database.Common.IndexedCollection`1.ToList*
  commentId: Overload:Mewdeko.Database.Common.IndexedCollection`1.ToList
  href: Mewdeko.Database.Common.IndexedCollection-1.html#Mewdeko_Database_Common_IndexedCollection_1_ToList
  name: ToList
  nameWithType: IndexedCollection<T>.ToList
  fullName: Mewdeko.Database.Common.IndexedCollection<T>.ToList
  nameWithType.vb: IndexedCollection(Of T).ToList
  fullName.vb: Mewdeko.Database.Common.IndexedCollection(Of T).ToList
