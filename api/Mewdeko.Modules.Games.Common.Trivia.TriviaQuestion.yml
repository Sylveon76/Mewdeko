### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  id: TriviaQuestion
  parent: Mewdeko.Modules.Games.Common.Trivia
  children:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect(System.String)
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.MaxStringLength
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
  langs:
  - csharp
  - vb
  name: TriviaQuestion
  nameWithType: TriviaQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TriviaQuestion
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 8
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Represents a trivia question.
  example: []
  syntax:
    content: public class TriviaQuestion
    content.vb: Public Class TriviaQuestion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.MaxStringLength
  commentId: F:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.MaxStringLength
  id: MaxStringLength
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: MaxStringLength
  nameWithType: TriviaQuestion.MaxStringLength
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.MaxStringLength
  type: Field
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MaxStringLength
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: The maximum length of the string.
  example: []
  syntax:
    content: public const int MaxStringLength = 22
    return:
      type: System.Int32
    content.vb: Public Const MaxStringLength As Integer = 22
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: TriviaQuestion(string, string, string, string?, string?)
  nameWithType: TriviaQuestion.TriviaQuestion(string, string, string, string?, string?)
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.TriviaQuestion(string, string, string, string?, string?)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 31
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TriviaQuestion(string q, string a, string c, string? img = null, string? answerImage = null)
    parameters:
    - id: q
      type: System.String
      description: The question.
    - id: a
      type: System.String
      description: The answer.
    - id: c
      type: System.String
      description: The category.
    - id: img
      type: System.String
      description: The image URL.
    - id: answerImage
      type: System.String
      description: The answer image URL.
    content.vb: Public Sub New(q As String, a As String, c As String, img As String = Nothing, answerImage As String = Nothing)
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor*
  nameWithType.vb: TriviaQuestion.New(String, String, String, String, String)
  fullName.vb: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.New(String, String, String, String, String)
  name.vb: New(String, String, String, String, String)
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
  id: Category
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: TriviaQuestion.Category
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Category
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 43
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the category of the question.
  example: []
  syntax:
    content: public string Category { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Category As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
  id: Question
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: Question
  nameWithType: TriviaQuestion.Question
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Question
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 48
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the question.
  example: []
  syntax:
    content: public string Question { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Question As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
  id: ImageUrl
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: ImageUrl
  nameWithType: TriviaQuestion.ImageUrl
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ImageUrl
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 53
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the image URL associated with the question.
  example: []
  syntax:
    content: public string ImageUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ImageUrl As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
  id: AnswerImageUrl
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: AnswerImageUrl
  nameWithType: TriviaQuestion.AnswerImageUrl
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AnswerImageUrl
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 58
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the answer image URL associated with the question.
  example: []
  syntax:
    content: public string AnswerImageUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AnswerImageUrl As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
  id: Answer
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: Answer
  nameWithType: TriviaQuestion.Answer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Answer
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 63
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the answer to the question.
  example: []
  syntax:
    content: public string Answer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Answer As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
  id: CleanAnswer
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: CleanAnswer
  nameWithType: TriviaQuestion.CleanAnswer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CleanAnswer
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 68
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets the clean version of the answer.
  example: []
  syntax:
    content: public string CleanAnswer { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CleanAnswer As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint
  id: GetHint
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: GetHint()
  nameWithType: TriviaQuestion.GetHint()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHint
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 74
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Generates a hint for the answer.
  example: []
  syntax:
    content: public string GetHint()
    return:
      type: System.String
      description: A scrambled version of the answer.
    content.vb: Public Function GetHint() As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect(System.String)
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect(System.String)
  id: IsAnswerCorrect(System.String)
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  langs:
  - csharp
  - vb
  name: IsAnswerCorrect(string)
  nameWithType: TriviaQuestion.IsAnswerCorrect(string)
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsAnswerCorrect
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaQuestion.cs
    startLine: 81
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Checks if the given guess matches the answer.
  example: []
  syntax:
    content: public bool IsAnswerCorrect(string guess)
    parameters:
    - id: guess
      type: System.String
      description: The guess to check.
    return:
      type: System.Boolean
      description: True if the guess is correct, otherwise false.
    content.vb: Public Function IsAnswerCorrect(guess As String) As Boolean
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect*
  nameWithType.vb: TriviaQuestion.IsAnswerCorrect(String)
  fullName.vb: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect(String)
  name.vb: IsAnswerCorrect(String)
references:
- uid: Mewdeko.Modules.Games.Common.Trivia
  commentId: N:Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.html
  name: Mewdeko.Modules.Games.Common.Trivia
  nameWithType: Mewdeko.Modules.Games.Common.Trivia
  fullName: Mewdeko.Modules.Games.Common.Trivia
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<TriviaQuestion>(TriviaQuestion, string)
  nameWithType: Extensions.ThrowIfNull<TriviaQuestion>(TriviaQuestion, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion>(Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of TriviaQuestion)(TriviaQuestion, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion)(Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion, String)
  name.vb: ThrowIfNull(Of TriviaQuestion)(TriviaQuestion, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  parent: Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  name: TriviaQuestion
  nameWithType: TriviaQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.#ctor
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion__ctor_System_String_System_String_System_String_System_String_System_String_
  name: TriviaQuestion
  nameWithType: TriviaQuestion.TriviaQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.TriviaQuestion
  nameWithType.vb: TriviaQuestion.New
  fullName.vb: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_Category
  name: Category
  nameWithType: TriviaQuestion.Category
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Category
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_Question
  name: Question
  nameWithType: TriviaQuestion.Question
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Question
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_ImageUrl
  name: ImageUrl
  nameWithType: TriviaQuestion.ImageUrl
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.ImageUrl
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_AnswerImageUrl
  name: AnswerImageUrl
  nameWithType: TriviaQuestion.AnswerImageUrl
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.AnswerImageUrl
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_Answer
  name: Answer
  nameWithType: TriviaQuestion.Answer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.Answer
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_CleanAnswer
  name: CleanAnswer
  nameWithType: TriviaQuestion.CleanAnswer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.CleanAnswer
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_GetHint
  name: GetHint
  nameWithType: TriviaQuestion.GetHint
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.GetHint
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html#Mewdeko_Modules_Games_Common_Trivia_TriviaQuestion_IsAnswerCorrect_System_String_
  name: IsAnswerCorrect
  nameWithType: TriviaQuestion.IsAnswerCorrect
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.IsAnswerCorrect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
