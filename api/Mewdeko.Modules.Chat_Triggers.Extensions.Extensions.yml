### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  commentId: T:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  id: Extensions
  parent: Mewdeko.Modules.Chat_Triggers.Extensions
  children:
  - Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char}@)
  - Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  - Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  - Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction(Mewdeko.Database.Models.ChatTriggers,Discord.WebSocket.SocketInteraction,Discord.WebSocket.DiscordSocketClient,System.Boolean,Discord.IUserMessage,System.Boolean,Mewdeko.Database.MewdekoContext,System.Boolean)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Extensions
    path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Chat_Triggers.Extensions
  summary: Extension methods for chat triggers.
  example: []
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  commentId: M:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  id: ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: ResponseWithContextAsync(ChatTriggers, IUserMessage, DiscordSocketClient, bool, MewdekoContext)
  nameWithType: Extensions.ResponseWithContextAsync(ChatTriggers, IUserMessage, DiscordSocketClient, bool, MewdekoContext)
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers, Discord.IUserMessage, Discord.WebSocket.DiscordSocketClient, bool, Mewdeko.Database.MewdekoContext)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ResponseWithContextAsync
    path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
    startLine: 167
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Chat_Triggers.Extensions
  summary: Generates a response string with context asynchronously based on the provided parameters.
  example: []
  syntax:
    content: public static Task<string?> ResponseWithContextAsync(this ChatTriggers cr, IUserMessage ctx, DiscordSocketClient client, bool containsAnywhere, MewdekoContext context = null)
    parameters:
    - id: cr
      type: Mewdeko.Database.Models.ChatTriggers
      description: The chat trigger model.
    - id: ctx
      type: Discord.IUserMessage
      description: The message context.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord socket client.
    - id: containsAnywhere
      type: System.Boolean
      description: Boolean value indicating whether the trigger is contained anywhere in the message.
    - id: context
      type: Mewdeko.Database.MewdekoContext
      description: 'Optional: The database context. Default is null.'
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The response string with context.
    content.vb: Public Shared Function ResponseWithContextAsync(cr As ChatTriggers, ctx As IUserMessage, client As DiscordSocketClient, containsAnywhere As Boolean, context As MewdekoContext = Nothing) As Task(Of String)
  overload: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync*
  nameWithType.vb: Extensions.ResponseWithContextAsync(ChatTriggers, IUserMessage, DiscordSocketClient, Boolean, MewdekoContext)
  fullName.vb: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync(Mewdeko.Database.Models.ChatTriggers, Discord.IUserMessage, Discord.WebSocket.DiscordSocketClient, Boolean, Mewdeko.Database.MewdekoContext)
  name.vb: ResponseWithContextAsync(ChatTriggers, IUserMessage, DiscordSocketClient, Boolean, MewdekoContext)
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  commentId: M:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  id: Send(Mewdeko.Database.Models.ChatTriggers,Discord.IUserMessage,Discord.WebSocket.DiscordSocketClient,System.Boolean,Mewdeko.Database.MewdekoContext)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: Send(ChatTriggers, IUserMessage, DiscordSocketClient, bool, MewdekoContext)
  nameWithType: Extensions.Send(ChatTriggers, IUserMessage, DiscordSocketClient, bool, MewdekoContext)
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send(Mewdeko.Database.Models.ChatTriggers, Discord.IUserMessage, Discord.WebSocket.DiscordSocketClient, bool, Mewdeko.Database.MewdekoContext)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Send
    path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
    startLine: 182
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Chat_Triggers.Extensions
  summary: Sends a message based on the provided chat trigger asynchronously.
  example: []
  syntax:
    content: public static Task<IUserMessage>? Send(this ChatTriggers ct, IUserMessage ctx, DiscordSocketClient client, bool sanitize, MewdekoContext dbContext = null)
    parameters:
    - id: ct
      type: Mewdeko.Database.Models.ChatTriggers
      description: The chat trigger model.
    - id: ctx
      type: Discord.IUserMessage
      description: The message context.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord socket client.
    - id: sanitize
      type: System.Boolean
      description: Boolean value indicating whether to sanitize mentions in the response.
    - id: dbContext
      type: Mewdeko.Database.MewdekoContext
      description: 'Optional: The database context. Default is null.'
    return:
      type: System.Threading.Tasks.Task{Discord.IUserMessage}
      description: The sent user message or null if no response is required.
    content.vb: Public Shared Function Send(ct As ChatTriggers, ctx As IUserMessage, client As DiscordSocketClient, sanitize As Boolean, dbContext As MewdekoContext = Nothing) As Task(Of IUserMessage)
  overload: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send*
  nameWithType.vb: Extensions.Send(ChatTriggers, IUserMessage, DiscordSocketClient, Boolean, MewdekoContext)
  fullName.vb: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send(Mewdeko.Database.Models.ChatTriggers, Discord.IUserMessage, Discord.WebSocket.DiscordSocketClient, Boolean, Mewdeko.Database.MewdekoContext)
  name.vb: Send(ChatTriggers, IUserMessage, DiscordSocketClient, Boolean, MewdekoContext)
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction(Mewdeko.Database.Models.ChatTriggers,Discord.WebSocket.SocketInteraction,Discord.WebSocket.DiscordSocketClient,System.Boolean,Discord.IUserMessage,System.Boolean,Mewdeko.Database.MewdekoContext,System.Boolean)
  commentId: M:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction(Mewdeko.Database.Models.ChatTriggers,Discord.WebSocket.SocketInteraction,Discord.WebSocket.DiscordSocketClient,System.Boolean,Discord.IUserMessage,System.Boolean,Mewdeko.Database.MewdekoContext,System.Boolean)
  id: SendInteraction(Mewdeko.Database.Models.ChatTriggers,Discord.WebSocket.SocketInteraction,Discord.WebSocket.DiscordSocketClient,System.Boolean,Discord.IUserMessage,System.Boolean,Mewdeko.Database.MewdekoContext,System.Boolean)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: SendInteraction(ChatTriggers, SocketInteraction, DiscordSocketClient, bool, IUserMessage, bool, MewdekoContext, bool)
  nameWithType: Extensions.SendInteraction(ChatTriggers, SocketInteraction, DiscordSocketClient, bool, IUserMessage, bool, MewdekoContext, bool)
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction(Mewdeko.Database.Models.ChatTriggers, Discord.WebSocket.SocketInteraction, Discord.WebSocket.DiscordSocketClient, bool, Discord.IUserMessage, bool, Mewdeko.Database.MewdekoContext, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SendInteraction
    path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
    startLine: 302
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Chat_Triggers.Extensions
  summary: Sends a message based on the provided chat trigger and interaction asynchronously.
  example: []
  syntax:
    content: public static Task<IUserMessage>? SendInteraction(this ChatTriggers ct, SocketInteraction inter, DiscordSocketClient client, bool sanitize, IUserMessage fakeMsg, bool ephemeral = false, MewdekoContext dbContext = null, bool followup = false)
    parameters:
    - id: ct
      type: Mewdeko.Database.Models.ChatTriggers
      description: The chat trigger model.
    - id: inter
      type: Discord.WebSocket.SocketInteraction
      description: The socket interaction.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord socket client.
    - id: sanitize
      type: System.Boolean
      description: Boolean value indicating whether to sanitize mentions in the response.
    - id: fakeMsg
      type: Discord.IUserMessage
      description: The fake user message for context.
    - id: ephemeral
      type: System.Boolean
      description: Boolean value indicating whether the response should be ephemeral. Default is false.
    - id: dbContext
      type: Mewdeko.Database.MewdekoContext
      description: 'Optional: The database context. Default is null.'
    - id: followup
      type: System.Boolean
      description: Boolean value indicating whether to send a follow-up response. Default is false.
    return:
      type: System.Threading.Tasks.Task{Discord.IUserMessage}
      description: The sent user message or null if no response is required.
    content.vb: Public Shared Function SendInteraction(ct As ChatTriggers, inter As SocketInteraction, client As DiscordSocketClient, sanitize As Boolean, fakeMsg As IUserMessage, ephemeral As Boolean = False, dbContext As MewdekoContext = Nothing, followup As Boolean = False) As Task(Of IUserMessage)
  overload: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction*
  nameWithType.vb: Extensions.SendInteraction(ChatTriggers, SocketInteraction, DiscordSocketClient, Boolean, IUserMessage, Boolean, MewdekoContext, Boolean)
  fullName.vb: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction(Mewdeko.Database.Models.ChatTriggers, Discord.WebSocket.SocketInteraction, Discord.WebSocket.DiscordSocketClient, Boolean, Discord.IUserMessage, Boolean, Mewdeko.Database.MewdekoContext, Boolean)
  name.vb: SendInteraction(ChatTriggers, SocketInteraction, DiscordSocketClient, Boolean, IUserMessage, Boolean, MewdekoContext, Boolean)
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char}@)
  commentId: M:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char}@)
  id: GetWordPosition(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char}@)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions
  langs:
  - csharp
  - vb
  name: GetWordPosition(ReadOnlySpan<char>, in ReadOnlySpan<char>)
  nameWithType: Extensions.GetWordPosition(ReadOnlySpan<char>, in ReadOnlySpan<char>)
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition(System.ReadOnlySpan<char>, in System.ReadOnlySpan<char>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetWordPosition
    path: src/Mewdeko/Modules/Chat Triggers/Extensions/Extensions.cs
    startLine: 407
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Chat_Triggers.Extensions
  summary: Gets the position of a word within a string.
  example: []
  syntax:
    content: public static WordPosition GetWordPosition(this ReadOnlySpan<char> str, in ReadOnlySpan<char> word)
    parameters:
    - id: str
      type: System.ReadOnlySpan{System.Char}
      description: The input string.
    - id: word
      type: System.ReadOnlySpan{System.Char}
      description: The word to search for.
    return:
      type: Mewdeko.Modules.Chat_Triggers.Extensions.WordPosition
      description: The position of the word within the string.
    content.vb: Public Shared Function GetWordPosition(str As ReadOnlySpan(Of Char), word As ReadOnlySpan(Of Char)) As WordPosition
  overload: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition*
  nameWithType.vb: Extensions.GetWordPosition(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName.vb: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition(System.ReadOnlySpan(Of Char), System.ReadOnlySpan(Of Char))
  name.vb: GetWordPosition(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
references:
- uid: Mewdeko.Modules.Chat_Triggers.Extensions
  commentId: N:Mewdeko.Modules.Chat_Triggers.Extensions
  href: Mewdeko.html
  name: Mewdeko.Modules.Chat_Triggers.Extensions
  nameWithType: Mewdeko.Modules.Chat_Triggers.Extensions
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Chat_Triggers
    name: Chat_Triggers
    href: Mewdeko.Modules.Chat_Triggers.html
  - name: .
  - uid: Mewdeko.Modules.Chat_Triggers.Extensions
    name: Extensions
    href: Mewdeko.Modules.Chat_Triggers.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Chat_Triggers
    name: Chat_Triggers
    href: Mewdeko.Modules.Chat_Triggers.html
  - name: .
  - uid: Mewdeko.Modules.Chat_Triggers.Extensions
    name: Extensions
    href: Mewdeko.Modules.Chat_Triggers.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync*
  commentId: Overload:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync
  href: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.html#Mewdeko_Modules_Chat_Triggers_Extensions_Extensions_ResponseWithContextAsync_Mewdeko_Database_Models_ChatTriggers_Discord_IUserMessage_Discord_WebSocket_DiscordSocketClient_System_Boolean_Mewdeko_Database_MewdekoContext_
  name: ResponseWithContextAsync
  nameWithType: Extensions.ResponseWithContextAsync
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.ResponseWithContextAsync
- uid: Mewdeko.Database.Models.ChatTriggers
  commentId: T:Mewdeko.Database.Models.ChatTriggers
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.ChatTriggers.html
  name: ChatTriggers
  nameWithType: ChatTriggers
  fullName: Mewdeko.Database.Models.ChatTriggers
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  isExternal: true
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Database.MewdekoContext
  commentId: T:Mewdeko.Database.MewdekoContext
  parent: Mewdeko.Database
  href: Mewdeko.Database.MewdekoContext.html
  name: MewdekoContext
  nameWithType: MewdekoContext
  fullName: Mewdeko.Database.MewdekoContext
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send*
  commentId: Overload:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send
  href: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.html#Mewdeko_Modules_Chat_Triggers_Extensions_Extensions_Send_Mewdeko_Database_Models_ChatTriggers_Discord_IUserMessage_Discord_WebSocket_DiscordSocketClient_System_Boolean_Mewdeko_Database_MewdekoContext_
  name: Send
  nameWithType: Extensions.Send
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.Send
- uid: System.Threading.Tasks.Task{Discord.IUserMessage}
  commentId: T:System.Threading.Tasks.Task{Discord.IUserMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IUserMessage>
  nameWithType: Task<IUserMessage>
  fullName: System.Threading.Tasks.Task<Discord.IUserMessage>
  nameWithType.vb: Task(Of IUserMessage)
  fullName.vb: System.Threading.Tasks.Task(Of Discord.IUserMessage)
  name.vb: Task(Of IUserMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: )
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction*
  commentId: Overload:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction
  href: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.html#Mewdeko_Modules_Chat_Triggers_Extensions_Extensions_SendInteraction_Mewdeko_Database_Models_ChatTriggers_Discord_WebSocket_SocketInteraction_Discord_WebSocket_DiscordSocketClient_System_Boolean_Discord_IUserMessage_System_Boolean_Mewdeko_Database_MewdekoContext_System_Boolean_
  name: SendInteraction
  nameWithType: Extensions.SendInteraction
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.SendInteraction
- uid: Discord.WebSocket.SocketInteraction
  commentId: T:Discord.WebSocket.SocketInteraction
  parent: Discord.WebSocket
  isExternal: true
  name: SocketInteraction
  nameWithType: SocketInteraction
  fullName: Discord.WebSocket.SocketInteraction
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition*
  commentId: Overload:Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition
  href: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.html#Mewdeko_Modules_Chat_Triggers_Extensions_Extensions_GetWordPosition_System_ReadOnlySpan_System_Char__System_ReadOnlySpan_System_Char___
  name: GetWordPosition
  nameWithType: Extensions.GetWordPosition
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.Extensions.GetWordPosition
- uid: System.ReadOnlySpan{System.Char}
  commentId: T:System.ReadOnlySpan{System.Char}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<char>
  nameWithType: ReadOnlySpan<char>
  fullName: System.ReadOnlySpan<char>
  nameWithType.vb: ReadOnlySpan(Of Char)
  fullName.vb: System.ReadOnlySpan(Of Char)
  name.vb: ReadOnlySpan(Of Char)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: Mewdeko.Modules.Chat_Triggers.Extensions.WordPosition
  commentId: T:Mewdeko.Modules.Chat_Triggers.Extensions.WordPosition
  parent: Mewdeko.Modules.Chat_Triggers.Extensions
  href: Mewdeko.Modules.Chat_Triggers.Extensions.WordPosition.html
  name: WordPosition
  nameWithType: WordPosition
  fullName: Mewdeko.Modules.Chat_Triggers.Extensions.WordPosition
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
