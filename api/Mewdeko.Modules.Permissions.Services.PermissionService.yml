### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Permissions.Services.PermissionService
  commentId: T:Mewdeko.Modules.Permissions.Services.PermissionService
  id: PermissionService
  parent: Mewdeko.Modules.Permissions.Services
  children:
  - Mewdeko.Modules.Permissions.Services.PermissionService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.GuildSettingsService,Mewdeko.Mewdeko)
  - Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions(System.UInt64,Mewdeko.Database.Models.Permissionv2[])
  - Mewdeko.Modules.Permissions.Services.PermissionService.Cache
  - Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType,System.UInt64)
  - Mewdeko.Modules.Permissions.Services.PermissionService.Priority
  - Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm(System.UInt64,System.Int32)
  - Mewdeko.Modules.Permissions.Services.PermissionService.Reset(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.PermissionService.Strings
  - Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  - Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  - Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm(System.UInt64,System.Int32,System.Int32)
  - Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache(Mewdeko.Database.Models.GuildConfig)
  - Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm(System.UInt64,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: PermissionService
  nameWithType: PermissionService
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PermissionService
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Manages permissions for commands and interactions within the guilds, allowing dynamic updates and checks.
  example: []
  syntax:
    content: 'public class PermissionService : ILateBlocker, INService'
    content.vb: Public Class PermissionService Implements ILateBlocker, INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Common.ModuleBehaviors.ILateBlocker
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Permissions.Services.PermissionService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Strings
  commentId: F:Mewdeko.Modules.Permissions.Services.PermissionService.Strings
  id: Strings
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: Strings
  nameWithType: PermissionService.Strings
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Strings
  type: Field
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Strings
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Service for accessing localized bot strings.
  example: []
  syntax:
    content: public readonly IBotStrings Strings
    return:
      type: Mewdeko.Services.strings.IBotStrings
    content.vb: Public ReadOnly Strings As IBotStrings
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.GuildSettingsService,Mewdeko.Mewdeko)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.GuildSettingsService,Mewdeko.Mewdeko)
  id: '#ctor(Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.GuildSettingsService,Mewdeko.Mewdeko)'
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: PermissionService(DbService, IBotStrings, GuildSettingsService, Mewdeko)
  nameWithType: PermissionService.PermissionService(DbService, IBotStrings, GuildSettingsService, Mewdeko)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.PermissionService(Mewdeko.Database.DbService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Services.GuildSettingsService, Mewdeko.Mewdeko)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 30
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Permissions.Services.PermissionService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public PermissionService(DbService db, IBotStrings strings, GuildSettingsService guildSettings, Mewdeko bot)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service for accessing permission settings.
    - id: strings
      type: Mewdeko.Services.strings.IBotStrings
      description: The service for localized bot strings.
    - id: guildSettings
      type: Mewdeko.Services.GuildSettingsService
      description: The service for managing guild-specific settings.
    - id: bot
      type: Mewdeko.Mewdeko
      description: The main bot instance for accessing global configurations.
    content.vb: Public Sub New(db As DbService, strings As IBotStrings, guildSettings As GuildSettingsService, bot As Mewdeko)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.#ctor*
  nameWithType.vb: PermissionService.New(DbService, IBotStrings, GuildSettingsService, Mewdeko)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.New(Mewdeko.Database.DbService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Services.GuildSettingsService, Mewdeko.Mewdeko)
  name.vb: New(DbService, IBotStrings, GuildSettingsService, Mewdeko)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Cache
  commentId: P:Mewdeko.Modules.Permissions.Services.PermissionService.Cache
  id: Cache
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: Cache
  nameWithType: PermissionService.Cache
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Cache
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Cache
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: The cache of permissions for quick access.
  example: []
  syntax:
    content: public ConcurrentDictionary<ulong, PermissionCache> Cache { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Modules.Permissions.Common.PermissionCache}
    content.vb: Public ReadOnly Property Cache As ConcurrentDictionary(Of ULong, PermissionCache)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.Cache*
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Priority
  commentId: P:Mewdeko.Modules.Permissions.Services.PermissionService.Priority
  id: Priority
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: PermissionService.Priority
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Priority
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Priority
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 59
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: The priority order in which the early behavior should run, with lower numbers indicating higher priority.
  example: []
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.Priority*
  implements:
  - Mewdeko.Common.ModuleBehaviors.ILateBlocker.Priority
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  id: TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: TryBlockLate(DiscordSocketClient, ICommandContext, string, CommandInfo)
  nameWithType: PermissionService.TryBlockLate(DiscordSocketClient, ICommandContext, string, CommandInfo)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.Commands.ICommandContext, string, Discord.Commands.CommandInfo)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryBlockLate
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 69
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Attempts to block a command execution based on the permissions configured for the guild.
  example: []
  syntax:
    content: public Task<bool> TryBlockLate(DiscordSocketClient client, ICommandContext ctx, string moduleName, CommandInfo command)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client.
    - id: ctx
      type: Discord.Commands.ICommandContext
      description: The context of the command.
    - id: moduleName
      type: System.String
      description: The name of the module containing the command.
    - id: command
      type: Discord.Commands.CommandInfo
      description: The command information.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the command execution should be blocked, otherwise false.
    content.vb: Public Function TryBlockLate(client As DiscordSocketClient, ctx As ICommandContext, moduleName As String, command As CommandInfo) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate*
  implements:
  - Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  nameWithType.vb: PermissionService.TryBlockLate(DiscordSocketClient, ICommandContext, String, CommandInfo)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.Commands.ICommandContext, String, Discord.Commands.CommandInfo)
  name.vb: TryBlockLate(DiscordSocketClient, ICommandContext, String, CommandInfo)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  id: TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: TryBlockLate(DiscordSocketClient, IInteractionContext, ICommandInfo)
  nameWithType: PermissionService.TryBlockLate(DiscordSocketClient, IInteractionContext, ICommandInfo)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.IInteractionContext, Discord.Interactions.ICommandInfo)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryBlockLate
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 170
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Attempts to block a slash command execution based on the permissions configured for the guild.
  example: []
  syntax:
    content: public Task<bool> TryBlockLate(DiscordSocketClient client, IInteractionContext ctx, ICommandInfo command)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client.
    - id: ctx
      type: Discord.IInteractionContext
      description: The interaction context.
    - id: command
      type: Discord.Interactions.ICommandInfo
      description: The slash command information.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the slash command execution should be blocked, otherwise false.
    content.vb: Public Function TryBlockLate(client As DiscordSocketClient, ctx As IInteractionContext, command As ICommandInfo) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate*
  implements:
  - Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor(System.UInt64)
  id: GetCacheFor(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: GetCacheFor(ulong)
  nameWithType: PermissionService.GetCacheFor(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetCacheFor
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 205
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Retrieves the permission cache for a specific guild.
  example: []
  syntax:
    content: public Task<PermissionCache?> GetCacheFor(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Permissions.Common.PermissionCache}
      description: The permission cache for the guild.
    content.vb: Public Function GetCacheFor(guildId As ULong) As Task(Of PermissionCache)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor*
  nameWithType.vb: PermissionService.GetCacheFor(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor(ULong)
  name.vb: GetCacheFor(ULong)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions(System.UInt64,Mewdeko.Database.Models.Permissionv2[])
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions(System.UInt64,Mewdeko.Database.Models.Permissionv2[])
  id: AddPermissions(System.UInt64,Mewdeko.Database.Models.Permissionv2[])
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: AddPermissions(ulong, params Permissionv2[])
  nameWithType: PermissionService.AddPermissions(ulong, params Permissionv2[])
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions(ulong, params Mewdeko.Database.Models.Permissionv2[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddPermissions
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 226
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Adds new permissions to a guild's configuration.
  remarks: Updates both the database and the in-memory cache.
  example: []
  syntax:
    content: public Task AddPermissions(ulong guildId, params Permissionv2[] perms)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: perms
      type: Mewdeko.Database.Models.Permissionv2[]
      description: The permissions to add.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddPermissions(guildId As ULong, ParamArray perms As Permissionv2()) As Task
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions*
  nameWithType.vb: PermissionService.AddPermissions(ULong, ParamArray Permissionv2())
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions(ULong, ParamArray Mewdeko.Database.Models.Permissionv2())
  name.vb: AddPermissions(ULong, ParamArray Permissionv2())
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache(Mewdeko.Database.Models.GuildConfig)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache(Mewdeko.Database.Models.GuildConfig)
  id: UpdateCache(Mewdeko.Database.Models.GuildConfig)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: UpdateCache(GuildConfig)
  nameWithType: PermissionService.UpdateCache(GuildConfig)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache(Mewdeko.Database.Models.GuildConfig)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateCache
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 246
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Updates the in-memory cache with the latest permissions from the database for a guild.
  example: []
  syntax:
    content: public void UpdateCache(GuildConfig config)
    parameters:
    - id: config
      type: Mewdeko.Database.Models.GuildConfig
      description: The guild configuration containing the permissions.
    content.vb: Public Sub UpdateCache(config As GuildConfig)
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache*
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Reset(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.Reset(System.UInt64)
  id: Reset(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: Reset(ulong)
  nameWithType: PermissionService.Reset(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Reset(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reset
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 264
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  syntax:
    content: public Task Reset(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Reset(guildId As ULong) As Task
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.Reset*
  nameWithType.vb: PermissionService.Reset(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.Reset(ULong)
  name.vb: Reset(ULong)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType,System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType,System.UInt64)
  id: MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType,System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: MentionPerm(PrimaryPermissionType, ulong)
  nameWithType: PermissionService.MentionPerm(PrimaryPermissionType, ulong)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MentionPerm
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 279
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Generates a mention string for a permission based on its type.
  example: []
  syntax:
    content: public static string MentionPerm(PrimaryPermissionType t, ulong id)
    parameters:
    - id: t
      type: Mewdeko.Database.Models.PrimaryPermissionType
      description: The type of the permission.
    - id: id
      type: System.UInt64
      description: The ID associated with the permission type.
    return:
      type: System.String
      description: A mention string for the permission.
    content.vb: Public Shared Function MentionPerm(t As PrimaryPermissionType, id As ULong) As String
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm*
  nameWithType.vb: PermissionService.MentionPerm(PrimaryPermissionType, ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm(Mewdeko.Database.Models.PrimaryPermissionType, ULong)
  name.vb: MentionPerm(PrimaryPermissionType, ULong)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm(System.UInt64,System.Int32)
  id: RemovePerm(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: RemovePerm(ulong, int)
  nameWithType: PermissionService.RemovePerm(ulong, int)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemovePerm
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 297
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Removes a specific permission from a guild's configuration.
  remarks: Updates both the database and the in-memory cache.
  example: []
  syntax:
    content: public Task RemovePerm(ulong guildId, int index)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: index
      type: System.Int32
      description: The index of the permission to remove.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RemovePerm(guildId As ULong, index As Integer) As Task
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm*
  nameWithType.vb: PermissionService.RemovePerm(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm(ULong, Integer)
  name.vb: RemovePerm(ULong, Integer)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm(System.UInt64,System.Int32,System.Boolean)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm(System.UInt64,System.Int32,System.Boolean)
  id: UpdatePerm(System.UInt64,System.Int32,System.Boolean)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: UpdatePerm(ulong, int, bool)
  nameWithType: PermissionService.UpdatePerm(ulong, int, bool)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm(ulong, int, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdatePerm
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 318
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Updates the state of a specific permission in a guild's configuration.
  remarks: Updates both the database and the in-memory cache.
  example: []
  syntax:
    content: public Task UpdatePerm(ulong guildId, int index, bool state)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: index
      type: System.Int32
      description: The index of the permission to update.
    - id: state
      type: System.Boolean
      description: The new state of the permission.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdatePerm(guildId As ULong, index As Integer, state As Boolean) As Task
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm*
  nameWithType.vb: PermissionService.UpdatePerm(ULong, Integer, Boolean)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm(ULong, Integer, Boolean)
  name.vb: UpdatePerm(ULong, Integer, Boolean)
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm(System.UInt64,System.Int32,System.Int32)
  commentId: M:Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm(System.UInt64,System.Int32,System.Int32)
  id: UnsafeMovePerm(System.UInt64,System.Int32,System.Int32)
  parent: Mewdeko.Modules.Permissions.Services.PermissionService
  langs:
  - csharp
  - vb
  name: UnsafeMovePerm(ulong, int, int)
  nameWithType: PermissionService.UnsafeMovePerm(ulong, int, int)
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm(ulong, int, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnsafeMovePerm
    path: src/Mewdeko/Modules/Permissions/Services/PermissionsService.cs
    startLine: 339
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Moves a permission within the list, changing its order of evaluation.
  remarks: Updates both the database and the in-memory cache.
  example: []
  syntax:
    content: public Task UnsafeMovePerm(ulong guildId, int from, int to)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: from
      type: System.Int32
      description: The current index of the permission.
    - id: to
      type: System.Int32
      description: The new index of the permission.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UnsafeMovePerm(guildId As ULong, from As Integer, [to] As Integer) As Task
  overload: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm*
  nameWithType.vb: PermissionService.UnsafeMovePerm(ULong, Integer, Integer)
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm(ULong, Integer, Integer)
  name.vb: UnsafeMovePerm(ULong, Integer, Integer)
references:
- uid: Mewdeko.Modules.Permissions.Services
  commentId: N:Mewdeko.Modules.Permissions.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Permissions.Services
  nameWithType: Mewdeko.Modules.Permissions.Services
  fullName: Mewdeko.Modules.Permissions.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker
  commentId: T:Mewdeko.Common.ModuleBehaviors.ILateBlocker
  parent: Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html
  name: ILateBlocker
  nameWithType: ILateBlocker
  fullName: Mewdeko.Common.ModuleBehaviors.ILateBlocker
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<PermissionService>(PermissionService, string)
  nameWithType: Extensions.ThrowIfNull<PermissionService>(PermissionService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Permissions.Services.PermissionService>(Mewdeko.Modules.Permissions.Services.PermissionService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of PermissionService)(PermissionService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Permissions.Services.PermissionService)(Mewdeko.Modules.Permissions.Services.PermissionService, String)
  name.vb: ThrowIfNull(Of PermissionService)(PermissionService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.Services.PermissionService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.Services.PermissionService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Permissions.Services.PermissionService
    name: PermissionService
    href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Common.ModuleBehaviors
  commentId: N:Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.html
  name: Mewdeko.Common.ModuleBehaviors
  nameWithType: Mewdeko.Common.ModuleBehaviors
  fullName: Mewdeko.Common.ModuleBehaviors
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.strings.IBotStrings
  commentId: T:Mewdeko.Services.strings.IBotStrings
  parent: Mewdeko.Services.strings
  href: Mewdeko.Services.strings.IBotStrings.html
  name: IBotStrings
  nameWithType: IBotStrings
  fullName: Mewdeko.Services.strings.IBotStrings
- uid: Mewdeko.Services.strings
  commentId: N:Mewdeko.Services.strings
  href: Mewdeko.html
  name: Mewdeko.Services.strings
  nameWithType: Mewdeko.Services.strings
  fullName: Mewdeko.Services.strings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
- uid: Mewdeko.Modules.Permissions.Services.PermissionService
  commentId: T:Mewdeko.Modules.Permissions.Services.PermissionService
  parent: Mewdeko.Modules.Permissions.Services
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html
  name: PermissionService
  nameWithType: PermissionService
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.#ctor*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.#ctor
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService__ctor_Mewdeko_Database_DbService_Mewdeko_Services_strings_IBotStrings_Mewdeko_Services_GuildSettingsService_Mewdeko_Mewdeko_
  name: PermissionService
  nameWithType: PermissionService.PermissionService
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.PermissionService
  nameWithType.vb: PermissionService.New
  fullName.vb: Mewdeko.Modules.Permissions.Services.PermissionService.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: Mewdeko.Mewdeko
  commentId: T:Mewdeko.Mewdeko
  parent: Mewdeko
  href: Mewdeko.Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko.Mewdeko
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko
  commentId: N:Mewdeko
  href: Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Cache*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.Cache
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_Cache
  name: Cache
  nameWithType: PermissionService.Cache
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Cache
- uid: NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Modules.Permissions.Common.PermissionCache}
  commentId: T:NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Modules.Permissions.Common.PermissionCache}
  parent: NonBlocking
  definition: NonBlocking.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ConcurrentDictionary<ulong, PermissionCache>
  nameWithType: ConcurrentDictionary<ulong, PermissionCache>
  fullName: NonBlocking.ConcurrentDictionary<ulong, Mewdeko.Modules.Permissions.Common.PermissionCache>
  nameWithType.vb: ConcurrentDictionary(Of ULong, PermissionCache)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of ULong, Mewdeko.Modules.Permissions.Common.PermissionCache)
  name.vb: ConcurrentDictionary(Of ULong, PermissionCache)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Common.PermissionCache
    name: PermissionCache
    href: Mewdeko.Modules.Permissions.Common.PermissionCache.html
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Common.PermissionCache
    name: PermissionCache
    href: Mewdeko.Modules.Permissions.Common.PermissionCache.html
  - name: )
- uid: NonBlocking.ConcurrentDictionary`2
  commentId: T:NonBlocking.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: NonBlocking.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NonBlocking
  commentId: N:NonBlocking
  isExternal: true
  name: NonBlocking
  nameWithType: NonBlocking
  fullName: NonBlocking
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Priority*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.Priority
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_Priority
  name: Priority
  nameWithType: PermissionService.Priority
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Priority
- uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.Priority
  commentId: P:Mewdeko.Common.ModuleBehaviors.ILateBlocker.Priority
  parent: Mewdeko.Common.ModuleBehaviors.ILateBlocker
  href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_Priority
  name: Priority
  nameWithType: ILateBlocker.Priority
  fullName: Mewdeko.Common.ModuleBehaviors.ILateBlocker.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_Commands_ICommandContext_System_String_Discord_Commands_CommandInfo_
  name: TryBlockLate
  nameWithType: PermissionService.TryBlockLate
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.TryBlockLate
- uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.ModuleBehaviors.ILateBlocker
  isExternal: true
  href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_Commands_ICommandContext_System_String_Discord_Commands_CommandInfo_
  name: TryBlockLate(DiscordSocketClient, ICommandContext, string, CommandInfo)
  nameWithType: ILateBlocker.TryBlockLate(DiscordSocketClient, ICommandContext, string, CommandInfo)
  fullName: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.Commands.ICommandContext, string, Discord.Commands.CommandInfo)
  nameWithType.vb: ILateBlocker.TryBlockLate(DiscordSocketClient, ICommandContext, String, CommandInfo)
  fullName.vb: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.Commands.ICommandContext, String, Discord.Commands.CommandInfo)
  name.vb: TryBlockLate(DiscordSocketClient, ICommandContext, String, CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
    name: TryBlockLate
    href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_Commands_ICommandContext_System_String_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.Commands.ICommandContext,System.String,Discord.Commands.CommandInfo)
    name: TryBlockLate
    href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_Commands_ICommandContext_System_String_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  isExternal: true
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Discord.Commands.CommandInfo
  commentId: T:Discord.Commands.CommandInfo
  parent: Discord.Commands
  isExternal: true
  name: CommandInfo
  nameWithType: CommandInfo
  fullName: Discord.Commands.CommandInfo
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  commentId: M:Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
  parent: Mewdeko.Common.ModuleBehaviors.ILateBlocker
  isExternal: true
  href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_IInteractionContext_Discord_Interactions_ICommandInfo_
  name: TryBlockLate(DiscordSocketClient, IInteractionContext, ICommandInfo)
  nameWithType: ILateBlocker.TryBlockLate(DiscordSocketClient, IInteractionContext, ICommandInfo)
  fullName: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient, Discord.IInteractionContext, Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
    name: TryBlockLate
    href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_IInteractionContext_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.ModuleBehaviors.ILateBlocker.TryBlockLate(Discord.WebSocket.DiscordSocketClient,Discord.IInteractionContext,Discord.Interactions.ICommandInfo)
    name: TryBlockLate
    href: Mewdeko.Common.ModuleBehaviors.ILateBlocker.html#Mewdeko_Common_ModuleBehaviors_ILateBlocker_TryBlockLate_Discord_WebSocket_DiscordSocketClient_Discord_IInteractionContext_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.IInteractionContext
  commentId: T:Discord.IInteractionContext
  parent: Discord
  isExternal: true
  name: IInteractionContext
  nameWithType: IInteractionContext
  fullName: Discord.IInteractionContext
- uid: Discord.Interactions.ICommandInfo
  commentId: T:Discord.Interactions.ICommandInfo
  parent: Discord.Interactions
  isExternal: true
  name: ICommandInfo
  nameWithType: ICommandInfo
  fullName: Discord.Interactions.ICommandInfo
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Interactions
  commentId: N:Discord.Interactions
  isExternal: true
  name: Discord.Interactions
  nameWithType: Discord.Interactions
  fullName: Discord.Interactions
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_GetCacheFor_System_UInt64_
  name: GetCacheFor
  nameWithType: PermissionService.GetCacheFor
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.GetCacheFor
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Permissions.Common.PermissionCache}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Permissions.Common.PermissionCache}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PermissionCache>
  nameWithType: Task<PermissionCache>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Permissions.Common.PermissionCache>
  nameWithType.vb: Task(Of PermissionCache)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Permissions.Common.PermissionCache)
  name.vb: Task(Of PermissionCache)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Permissions.Common.PermissionCache
    name: PermissionCache
    href: Mewdeko.Modules.Permissions.Common.PermissionCache.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Common.PermissionCache
    name: PermissionCache
    href: Mewdeko.Modules.Permissions.Common.PermissionCache.html
  - name: )
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_AddPermissions_System_UInt64_Mewdeko_Database_Models_Permissionv2___
  name: AddPermissions
  nameWithType: PermissionService.AddPermissions
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.AddPermissions
- uid: Mewdeko.Database.Models.Permissionv2[]
  isExternal: true
  name: Permissionv2[]
  nameWithType: Permissionv2[]
  fullName: Mewdeko.Database.Models.Permissionv2[]
  nameWithType.vb: Permissionv2()
  fullName.vb: Mewdeko.Database.Models.Permissionv2()
  name.vb: Permissionv2()
  spec.csharp:
  - uid: Mewdeko.Database.Models.Permissionv2
    name: Permissionv2
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Mewdeko.Database.Models.Permissionv2
    name: Permissionv2
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_UpdateCache_Mewdeko_Database_Models_GuildConfig_
  name: UpdateCache
  nameWithType: PermissionService.UpdateCache
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UpdateCache
- uid: Mewdeko.Database.Models.GuildConfig
  commentId: T:Mewdeko.Database.Models.GuildConfig
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.GuildConfig.html
  name: GuildConfig
  nameWithType: GuildConfig
  fullName: Mewdeko.Database.Models.GuildConfig
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.Reset*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.Reset
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_Reset_System_UInt64_
  name: Reset
  nameWithType: PermissionService.Reset
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.Reset
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_MentionPerm_Mewdeko_Database_Models_PrimaryPermissionType_System_UInt64_
  name: MentionPerm
  nameWithType: PermissionService.MentionPerm
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.MentionPerm
- uid: Mewdeko.Database.Models.PrimaryPermissionType
  commentId: T:Mewdeko.Database.Models.PrimaryPermissionType
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.PrimaryPermissionType.html
  name: PrimaryPermissionType
  nameWithType: PrimaryPermissionType
  fullName: Mewdeko.Database.Models.PrimaryPermissionType
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_RemovePerm_System_UInt64_System_Int32_
  name: RemovePerm
  nameWithType: PermissionService.RemovePerm
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.RemovePerm
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_UpdatePerm_System_UInt64_System_Int32_System_Boolean_
  name: UpdatePerm
  nameWithType: PermissionService.UpdatePerm
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UpdatePerm
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm
  href: Mewdeko.Modules.Permissions.Services.PermissionService.html#Mewdeko_Modules_Permissions_Services_PermissionService_UnsafeMovePerm_System_UInt64_System_Int32_System_Int32_
  name: UnsafeMovePerm
  nameWithType: PermissionService.UnsafeMovePerm
  fullName: Mewdeko.Modules.Permissions.Services.PermissionService.UnsafeMovePerm
