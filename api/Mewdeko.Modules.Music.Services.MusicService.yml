### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Music.Services.MusicService
  commentId: T:Mewdeko.Modules.Music.Services.MusicService
  id: MusicService
  parent: Mewdeko.Modules.Music.Services
  children:
  - Mewdeko.Modules.Music.Services.MusicService.#ctor(Lavalink4NET.LavalinkNode,Mewdeko.Services.IBotCredentials,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IGoogleApiService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.Settings.BotConfigService)
  - Mewdeko.Modules.Music.Services.MusicService.AutoPlay(System.UInt64)
  - Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,Lavalink4NET.Player.LavalinkTrack,Mewdeko.Database.Models.Platform)
  - Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack},Mewdeko.Database.Models.Platform)
  - Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist(Discord.IUser)
  - Mewdeko.Modules.Music.Services.MusicService.GetPlaylists(Discord.IUser)
  - Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo(Lavalink4NET.Player.LavalinkPlayer,Discord.IGuild)
  - Mewdeko.Modules.Music.Services.MusicService.GetQueue(System.UInt64)
  - Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync(System.UInt64)
  - Mewdeko.Modules.Music.Services.MusicService.GetVolume(System.UInt64)
  - Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync``1(System.UInt64,System.Action{Mewdeko.Database.Models.MusicPlayerSettings,``0},``0)
  - Mewdeko.Modules.Music.Services.MusicService.MoveSong(System.UInt64,System.Int32,System.Int32)
  - Mewdeko.Modules.Music.Services.MusicService.QueueClear(System.UInt64)
  - Mewdeko.Modules.Music.Services.MusicService.RemoveSong(Discord.IGuild,System.Int32)
  - Mewdeko.Modules.Music.Services.MusicService.Shuffle(Discord.IGuild)
  - Mewdeko.Modules.Music.Services.MusicService.Skip(Discord.IGuild,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,Discord.IInteractionContext,System.Int32)
  - Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue(Discord.IGuild,Discord.IUser,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,System.String)
  - Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist(Discord.IUser,Mewdeko.Database.Models.MusicPlaylist)
  langs:
  - csharp
  - vb
  name: MusicService
  nameWithType: MusicService
  fullName: Mewdeko.Modules.Music.Services.MusicService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MusicService
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Service for music playback.
  example: []
  syntax:
    content: 'public class MusicService : INService'
    content.vb: Public Class MusicService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Music.Services.MusicService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Music.Services.MusicService.#ctor(Lavalink4NET.LavalinkNode,Mewdeko.Services.IBotCredentials,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IGoogleApiService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.Settings.BotConfigService)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.#ctor(Lavalink4NET.LavalinkNode,Mewdeko.Services.IBotCredentials,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IGoogleApiService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.Settings.BotConfigService)
  id: '#ctor(Lavalink4NET.LavalinkNode,Mewdeko.Services.IBotCredentials,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IGoogleApiService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.Settings.BotConfigService)'
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: MusicService(LavalinkNode, IBotCredentials, DbService, EventHandler, IGoogleApiService, DiscordSocketClient, BotConfigService)
  nameWithType: MusicService.MusicService(LavalinkNode, IBotCredentials, DbService, EventHandler, IGoogleApiService, DiscordSocketClient, BotConfigService)
  fullName: Mewdeko.Modules.Music.Services.MusicService.MusicService(Lavalink4NET.LavalinkNode, Mewdeko.Services.IBotCredentials, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Services.IGoogleApiService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.Settings.BotConfigService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 33
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Initializes a new instance of <xref href="Mewdeko.Modules.Music.Services.MusicService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MusicService(LavalinkNode lavaNode, IBotCredentials creds, DbService db, EventHandler eventHandler, IGoogleApiService googleApi, DiscordSocketClient client, BotConfigService config)
    parameters:
    - id: lavaNode
      type: Lavalink4NET.LavalinkNode
      description: The Lavalink node
    - id: creds
      type: Mewdeko.Services.IBotCredentials
      description: The bot credentials
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler
    - id: googleApi
      type: Mewdeko.Services.IGoogleApiService
      description: The Google API service
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client
    - id: config
      type: Mewdeko.Services.Settings.BotConfigService
      description: The bot configuration service
    content.vb: Public Sub New(lavaNode As LavalinkNode, creds As IBotCredentials, db As DbService, eventHandler As EventHandler, googleApi As IGoogleApiService, client As DiscordSocketClient, config As BotConfigService)
  overload: Mewdeko.Modules.Music.Services.MusicService.#ctor*
  nameWithType.vb: MusicService.New(LavalinkNode, IBotCredentials, DbService, EventHandler, IGoogleApiService, DiscordSocketClient, BotConfigService)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.New(Lavalink4NET.LavalinkNode, Mewdeko.Services.IBotCredentials, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Services.IGoogleApiService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.Settings.BotConfigService)
  name.vb: New(LavalinkNode, IBotCredentials, DbService, EventHandler, IGoogleApiService, DiscordSocketClient, BotConfigService)
- uid: Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo(Lavalink4NET.Player.LavalinkPlayer,Discord.IGuild)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo(Lavalink4NET.Player.LavalinkPlayer,Discord.IGuild)
  id: GetPrettyInfo(Lavalink4NET.Player.LavalinkPlayer,Discord.IGuild)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetPrettyInfo(LavalinkPlayer, IGuild)
  nameWithType: MusicService.GetPrettyInfo(LavalinkPlayer, IGuild)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo(Lavalink4NET.Player.LavalinkPlayer, Discord.IGuild)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetPrettyInfo
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 55
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets pretty information about the current track.
  example: []
  syntax:
    content: public Task<string> GetPrettyInfo(LavalinkPlayer player, IGuild guild)
    parameters:
    - id: player
      type: Lavalink4NET.Player.LavalinkPlayer
      description: The player
    - id: guild
      type: Discord.IGuild
      description: The guild to get information from
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function GetPrettyInfo(player As LavalinkPlayer, guild As IGuild) As Task(Of String)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo*
- uid: Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist(Discord.IUser,Mewdeko.Database.Models.MusicPlaylist)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist(Discord.IUser,Mewdeko.Database.Models.MusicPlaylist)
  id: UpdateDefaultPlaylist(Discord.IUser,Mewdeko.Database.Models.MusicPlaylist)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: UpdateDefaultPlaylist(IUser, MusicPlaylist)
  nameWithType: MusicService.UpdateDefaultPlaylist(IUser, MusicPlaylist)
  fullName: Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist(Discord.IUser, Mewdeko.Database.Models.MusicPlaylist)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateDefaultPlaylist
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 69
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Updates the default playlist for a user.
  example: []
  syntax:
    content: public Task UpdateDefaultPlaylist(IUser user, MusicPlaylist mpl)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to update the playlist for
    - id: mpl
      type: Mewdeko.Database.Models.MusicPlaylist
      description: The playlist to update
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateDefaultPlaylist(user As IUser, mpl As MusicPlaylist) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist*
- uid: Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack},Mewdeko.Database.Models.Platform)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack},Mewdeko.Database.Models.Platform)
  id: Enqueue(System.UInt64,Discord.IUser,System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack},Mewdeko.Database.Models.Platform)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: Enqueue(ulong, IUser, IEnumerable<LavalinkTrack>, Platform)
  nameWithType: MusicService.Enqueue(ulong, IUser, IEnumerable<LavalinkTrack>, Platform)
  fullName: Mewdeko.Modules.Music.Services.MusicService.Enqueue(ulong, Discord.IUser, System.Collections.Generic.IEnumerable<Lavalink4NET.Player.LavalinkTrack>, Mewdeko.Database.Models.Platform)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Enqueue
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 110
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Adds a song to the current queue.
  example: []
  syntax:
    content: public Task Enqueue(ulong guildId, IUser user, IEnumerable<LavalinkTrack> lavaTracks, Platform queuedPlatform = Platform.Youtube)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to queue tracks for
    - id: user
      type: Discord.IUser
      description: The user who queued the track
    - id: lavaTracks
      type: System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack}
      description: The tracks to queue
    - id: queuedPlatform
      type: Mewdeko.Database.Models.Platform
      description: The platform the tracks are queued from
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Enqueue(guildId As ULong, user As IUser, lavaTracks As IEnumerable(Of LavalinkTrack), queuedPlatform As Platform = Platform.Youtube) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.Enqueue*
  nameWithType.vb: MusicService.Enqueue(ULong, IUser, IEnumerable(Of LavalinkTrack), Platform)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.Enqueue(ULong, Discord.IUser, System.Collections.Generic.IEnumerable(Of Lavalink4NET.Player.LavalinkTrack), Mewdeko.Database.Models.Platform)
  name.vb: Enqueue(ULong, IUser, IEnumerable(Of LavalinkTrack), Platform)
- uid: Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,Lavalink4NET.Player.LavalinkTrack,Mewdeko.Database.Models.Platform)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.Enqueue(System.UInt64,Discord.IUser,Lavalink4NET.Player.LavalinkTrack,Mewdeko.Database.Models.Platform)
  id: Enqueue(System.UInt64,Discord.IUser,Lavalink4NET.Player.LavalinkTrack,Mewdeko.Database.Models.Platform)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: Enqueue(ulong, IUser, LavalinkTrack?, Platform)
  nameWithType: MusicService.Enqueue(ulong, IUser, LavalinkTrack?, Platform)
  fullName: Mewdeko.Modules.Music.Services.MusicService.Enqueue(ulong, Discord.IUser, Lavalink4NET.Player.LavalinkTrack?, Mewdeko.Database.Models.Platform)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Enqueue
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 134
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Adds a song to the current queue.
  example: []
  syntax:
    content: public Task Enqueue(ulong guildId, IUser user, LavalinkTrack? lavaTrack, Platform queuedPlatform = Platform.Youtube)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to queue tracks for
    - id: user
      type: Discord.IUser
      description: The user who queued the track
    - id: lavaTrack
      type: Lavalink4NET.Player.LavalinkTrack
      description: The track to queue
    - id: queuedPlatform
      type: Mewdeko.Database.Models.Platform
      description: The platform the track is queued from
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function Enqueue(guildId As ULong, user As IUser, lavaTrack As LavalinkTrack, queuedPlatform As Platform = Platform.Youtube) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.Enqueue*
  nameWithType.vb: MusicService.Enqueue(ULong, IUser, LavalinkTrack, Platform)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.Enqueue(ULong, Discord.IUser, Lavalink4NET.Player.LavalinkTrack, Mewdeko.Database.Models.Platform)
  name.vb: Enqueue(ULong, IUser, LavalinkTrack, Platform)
- uid: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue(Discord.IGuild,Discord.IUser,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,System.String)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue(Discord.IGuild,Discord.IUser,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,System.String)
  id: SpotifyQueue(Discord.IGuild,Discord.IUser,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,System.String)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: SpotifyQueue(IGuild, IUser, ITextChannel?, LavalinkPlayer, string?)
  nameWithType: MusicService.SpotifyQueue(IGuild, IUser, ITextChannel?, LavalinkPlayer, string?)
  fullName: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue(Discord.IGuild, Discord.IUser, Discord.ITextChannel?, Lavalink4NET.Player.LavalinkPlayer, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SpotifyQueue
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 154
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Service for trying to queue a spotify playlist, album or track.
  example: []
  syntax:
    content: public Task SpotifyQueue(IGuild guild, IUser user, ITextChannel? chan, LavalinkPlayer player, string? uri)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild to queue the track for
    - id: user
      type: Discord.IUser
      description: The user who queued the track
    - id: chan
      type: Discord.ITextChannel
      description: The channel to send messages to
    - id: player
      type: Lavalink4NET.Player.LavalinkPlayer
      description: The player to queue the track for
    - id: uri
      type: System.String
      description: The uri to queue
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SpotifyQueue(guild As IGuild, user As IUser, chan As ITextChannel, player As LavalinkPlayer, uri As String) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue*
  nameWithType.vb: MusicService.SpotifyQueue(IGuild, IUser, ITextChannel, LavalinkPlayer, String)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue(Discord.IGuild, Discord.IUser, Discord.ITextChannel, Lavalink4NET.Player.LavalinkPlayer, String)
  name.vb: SpotifyQueue(IGuild, IUser, ITextChannel, LavalinkPlayer, String)
- uid: Mewdeko.Modules.Music.Services.MusicService.MoveSong(System.UInt64,System.Int32,System.Int32)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.MoveSong(System.UInt64,System.Int32,System.Int32)
  id: MoveSong(System.UInt64,System.Int32,System.Int32)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: MoveSong(ulong, int, int)
  nameWithType: MusicService.MoveSong(ulong, int, int)
  fullName: Mewdeko.Modules.Music.Services.MusicService.MoveSong(ulong, int, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MoveSong
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 345
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Moves a song in the queue.
  example: []
  syntax:
    content: public Task<bool> MoveSong(ulong guildId, int index, int newIndex)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to move the song in
    - id: index
      type: System.Int32
      description: The index of the song to move
    - id: newIndex
      type: System.Int32
      description: The new index of the song
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function MoveSong(guildId As ULong, index As Integer, newIndex As Integer) As Task(Of Boolean)
  overload: Mewdeko.Modules.Music.Services.MusicService.MoveSong*
  nameWithType.vb: MusicService.MoveSong(ULong, Integer, Integer)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.MoveSong(ULong, Integer, Integer)
  name.vb: MoveSong(ULong, Integer, Integer)
- uid: Mewdeko.Modules.Music.Services.MusicService.AutoPlay(System.UInt64)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.AutoPlay(System.UInt64)
  id: AutoPlay(System.UInt64)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: AutoPlay(ulong)
  nameWithType: MusicService.AutoPlay(ulong)
  fullName: Mewdeko.Modules.Music.Services.MusicService.AutoPlay(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoPlay
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 374
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Attempts to add songs to the queue based on the current song.
  example: []
  syntax:
    content: public Task AutoPlay(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to add songs to
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AutoPlay(guildId As ULong) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.AutoPlay*
  nameWithType.vb: MusicService.AutoPlay(ULong)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.AutoPlay(ULong)
  name.vb: AutoPlay(ULong)
- uid: Mewdeko.Modules.Music.Services.MusicService.RemoveSong(Discord.IGuild,System.Int32)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.RemoveSong(Discord.IGuild,System.Int32)
  id: RemoveSong(Discord.IGuild,System.Int32)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: RemoveSong(IGuild, int)
  nameWithType: MusicService.RemoveSong(IGuild, int)
  fullName: Mewdeko.Modules.Music.Services.MusicService.RemoveSong(Discord.IGuild, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveSong
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 441
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Removes a song from the queue.
  example: []
  syntax:
    content: public Task<bool> RemoveSong(IGuild guild, int trackNum)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild to remove the song from
    - id: trackNum
      type: System.Int32
      description: The track number to remove
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: Public Function RemoveSong(guild As IGuild, trackNum As Integer) As Task(Of Boolean)
  overload: Mewdeko.Modules.Music.Services.MusicService.RemoveSong*
  nameWithType.vb: MusicService.RemoveSong(IGuild, Integer)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.RemoveSong(Discord.IGuild, Integer)
  name.vb: RemoveSong(IGuild, Integer)
- uid: Mewdeko.Modules.Music.Services.MusicService.GetQueue(System.UInt64)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetQueue(System.UInt64)
  id: GetQueue(System.UInt64)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetQueue(ulong)
  nameWithType: MusicService.GetQueue(ulong)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetQueue(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetQueue
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 465
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets the current queue.
  example: []
  syntax:
    content: public List<LavalinkTrack?> GetQueue(ulong guildid)
    parameters:
    - id: guildid
      type: System.UInt64
      description: The guild id to get the queue for
    return:
      type: System.Collections.Generic.List{Lavalink4NET.Player.LavalinkTrack}
      description: ''
    content.vb: Public Function GetQueue(guildid As ULong) As List(Of LavalinkTrack)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetQueue*
  nameWithType.vb: MusicService.GetQueue(ULong)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.GetQueue(ULong)
  name.vb: GetQueue(ULong)
- uid: Mewdeko.Modules.Music.Services.MusicService.Skip(Discord.IGuild,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,Discord.IInteractionContext,System.Int32)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.Skip(Discord.IGuild,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,Discord.IInteractionContext,System.Int32)
  id: Skip(Discord.IGuild,Discord.ITextChannel,Lavalink4NET.Player.LavalinkPlayer,Discord.IInteractionContext,System.Int32)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: Skip(IGuild, ITextChannel?, LavalinkPlayer, IInteractionContext?, int)
  nameWithType: MusicService.Skip(IGuild, ITextChannel?, LavalinkPlayer, IInteractionContext?, int)
  fullName: Mewdeko.Modules.Music.Services.MusicService.Skip(Discord.IGuild, Discord.ITextChannel?, Lavalink4NET.Player.LavalinkPlayer, Discord.IInteractionContext?, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Skip
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 490
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Skips a song in the queue.
  example: []
  syntax:
    content: public Task Skip(IGuild guild, ITextChannel? chan, LavalinkPlayer player, IInteractionContext? ctx = null, int num = 1)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild to skip the song in
    - id: chan
      type: Discord.ITextChannel
      description: The channel to send messages to
    - id: player
      type: Lavalink4NET.Player.LavalinkPlayer
      description: The player to skip the song in
    - id: ctx
      type: Discord.IInteractionContext
      description: The interaction context (if executed from a slash command, otherwise null)
    - id: num
      type: System.Int32
      description: The number of songs to skip
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Skip(guild As IGuild, chan As ITextChannel, player As LavalinkPlayer, ctx As IInteractionContext = Nothing, num As Integer = 1) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.Skip*
  nameWithType.vb: MusicService.Skip(IGuild, ITextChannel, LavalinkPlayer, IInteractionContext, Integer)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.Skip(Discord.IGuild, Discord.ITextChannel, Lavalink4NET.Player.LavalinkPlayer, Discord.IInteractionContext, Integer)
  name.vb: Skip(IGuild, ITextChannel, LavalinkPlayer, IInteractionContext, Integer)
- uid: Mewdeko.Modules.Music.Services.MusicService.Shuffle(Discord.IGuild)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.Shuffle(Discord.IGuild)
  id: Shuffle(Discord.IGuild)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: Shuffle(IGuild)
  nameWithType: MusicService.Shuffle(IGuild)
  fullName: Mewdeko.Modules.Music.Services.MusicService.Shuffle(Discord.IGuild)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Shuffle
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 553
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Shuffles the current queue.
  example: []
  syntax:
    content: public void Shuffle(IGuild guild)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild to shuffle the queue for
    content.vb: Public Sub Shuffle(guild As IGuild)
  overload: Mewdeko.Modules.Music.Services.MusicService.Shuffle*
- uid: Mewdeko.Modules.Music.Services.MusicService.QueueClear(System.UInt64)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.QueueClear(System.UInt64)
  id: QueueClear(System.UInt64)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: QueueClear(ulong)
  nameWithType: MusicService.QueueClear(ulong)
  fullName: Mewdeko.Modules.Music.Services.MusicService.QueueClear(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: QueueClear
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 561
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Clears the current queue.
  example: []
  syntax:
    content: public Task QueueClear(ulong guildid)
    parameters:
    - id: guildid
      type: System.UInt64
      description: The guild id to clear the queue for
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function QueueClear(guildid As ULong) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.QueueClear*
  nameWithType.vb: MusicService.QueueClear(ULong)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.QueueClear(ULong)
  name.vb: QueueClear(ULong)
- uid: Mewdeko.Modules.Music.Services.MusicService.GetVolume(System.UInt64)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetVolume(System.UInt64)
  id: GetVolume(System.UInt64)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetVolume(ulong)
  nameWithType: MusicService.GetVolume(ulong)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetVolume(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVolume
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 573
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets the current volume.
  example: []
  syntax:
    content: public Task<int> GetVolume(ulong guildid)
    parameters:
    - id: guildid
      type: System.UInt64
      description: The guild id to get the volume for
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Function GetVolume(guildid As ULong) As Task(Of Integer)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetVolume*
  nameWithType.vb: MusicService.GetVolume(ULong)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.GetVolume(ULong)
  name.vb: GetVolume(ULong)
- uid: Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist(Discord.IUser)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist(Discord.IUser)
  id: GetDefaultPlaylist(Discord.IUser)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetDefaultPlaylist(IUser)
  nameWithType: MusicService.GetDefaultPlaylist(IUser)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetDefaultPlaylist
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 581
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets the default playlist for a user.
  example: []
  syntax:
    content: public Task<MusicPlaylist?> GetDefaultPlaylist(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to get the default playlist for
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlaylist}
      description: ''
    content.vb: Public Function GetDefaultPlaylist(user As IUser) As Task(Of MusicPlaylist)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist*
- uid: Mewdeko.Modules.Music.Services.MusicService.GetPlaylists(Discord.IUser)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetPlaylists(Discord.IUser)
  id: GetPlaylists(Discord.IUser)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetPlaylists(IUser)
  nameWithType: MusicService.GetPlaylists(IUser)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetPlaylists(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetPlaylists
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 592
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets the playlists for a user.
  example: []
  syntax:
    content: public IEnumerable<MusicPlaylist?> GetPlaylists(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to get the playlists for
    return:
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.MusicPlaylist}
      description: ''
    content.vb: Public Function GetPlaylists(user As IUser) As IEnumerable(Of MusicPlaylist)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetPlaylists*
- uid: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync(System.UInt64)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync(System.UInt64)
  id: GetSettingsInternalAsync(System.UInt64)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: GetSettingsInternalAsync(ulong)
  nameWithType: MusicService.GetSettingsInternalAsync(ulong)
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetSettingsInternalAsync
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 604
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Gets the music player settings for a guild.
  example: []
  syntax:
    content: public Task<MusicPlayerSettings> GetSettingsInternalAsync(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to get the settings for
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlayerSettings}
      description: A <xref href="Mewdeko.Database.Models.MusicPlayerSettings" data-throw-if-not-resolved="false"></xref> object
    content.vb: Public Function GetSettingsInternalAsync(guildId As ULong) As Task(Of MusicPlayerSettings)
  overload: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync*
  nameWithType.vb: MusicService.GetSettingsInternalAsync(ULong)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync(ULong)
  name.vb: GetSettingsInternalAsync(ULong)
- uid: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync``1(System.UInt64,System.Action{Mewdeko.Database.Models.MusicPlayerSettings,``0},``0)
  commentId: M:Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync``1(System.UInt64,System.Action{Mewdeko.Database.Models.MusicPlayerSettings,``0},``0)
  id: ModifySettingsInternalAsync``1(System.UInt64,System.Action{Mewdeko.Database.Models.MusicPlayerSettings,``0},``0)
  parent: Mewdeko.Modules.Music.Services.MusicService
  langs:
  - csharp
  - vb
  name: ModifySettingsInternalAsync<TState>(ulong, Action<MusicPlayerSettings, TState>, TState)
  nameWithType: MusicService.ModifySettingsInternalAsync<TState>(ulong, Action<MusicPlayerSettings, TState>, TState)
  fullName: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync<TState>(ulong, System.Action<Mewdeko.Database.Models.MusicPlayerSettings, TState>, TState)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Music/Services/MusicService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ModifySettingsInternalAsync
    path: src/Mewdeko/Modules/Music/Services/MusicService.cs
    startLine: 624
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Music.Services
  summary: Modifies the music player settings for a guild.
  example: []
  syntax:
    content: public Task ModifySettingsInternalAsync<TState>(ulong guildId, Action<MusicPlayerSettings, TState> action, TState state)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild id to modify the settings for
    - id: action
      type: System.Action{Mewdeko.Database.Models.MusicPlayerSettings,{TState}}
      description: The action to perform on the settings
    - id: state
      type: '{TState}'
      description: The state to pass to the action
    typeParameters:
    - id: TState
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ModifySettingsInternalAsync(Of TState)(guildId As ULong, action As Action(Of MusicPlayerSettings, TState), state As TState) As Task
  overload: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync*
  nameWithType.vb: MusicService.ModifySettingsInternalAsync(Of TState)(ULong, Action(Of MusicPlayerSettings, TState), TState)
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync(Of TState)(ULong, System.Action(Of Mewdeko.Database.Models.MusicPlayerSettings, TState), TState)
  name.vb: ModifySettingsInternalAsync(Of TState)(ULong, Action(Of MusicPlayerSettings, TState), TState)
references:
- uid: Mewdeko.Modules.Music.Services
  commentId: N:Mewdeko.Modules.Music.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Music.Services
  nameWithType: Mewdeko.Modules.Music.Services
  fullName: Mewdeko.Modules.Music.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Music
    name: Music
    href: Mewdeko.Modules.Music.html
  - name: .
  - uid: Mewdeko.Modules.Music.Services
    name: Services
    href: Mewdeko.Modules.Music.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Music
    name: Music
    href: Mewdeko.Modules.Music.html
  - name: .
  - uid: Mewdeko.Modules.Music.Services
    name: Services
    href: Mewdeko.Modules.Music.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<MusicService>(MusicService, string)
  nameWithType: Extensions.ThrowIfNull<MusicService>(MusicService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Music.Services.MusicService>(Mewdeko.Modules.Music.Services.MusicService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of MusicService)(MusicService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Music.Services.MusicService)(Mewdeko.Modules.Music.Services.MusicService, String)
  name.vb: ThrowIfNull(Of MusicService)(MusicService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Music.Services.MusicService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Music.Services.MusicService
    name: MusicService
    href: Mewdeko.Modules.Music.Services.MusicService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Music.Services.MusicService
    name: MusicService
    href: Mewdeko.Modules.Music.Services.MusicService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Music.Services.MusicService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Music.Services.MusicService
    name: MusicService
    href: Mewdeko.Modules.Music.Services.MusicService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Music.Services.MusicService
    name: MusicService
    href: Mewdeko.Modules.Music.Services.MusicService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Music.Services.MusicService
  commentId: T:Mewdeko.Modules.Music.Services.MusicService
  parent: Mewdeko.Modules.Music.Services
  href: Mewdeko.Modules.Music.Services.MusicService.html
  name: MusicService
  nameWithType: MusicService
  fullName: Mewdeko.Modules.Music.Services.MusicService
- uid: Mewdeko.Modules.Music.Services.MusicService.#ctor*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.#ctor
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService__ctor_Lavalink4NET_LavalinkNode_Mewdeko_Services_IBotCredentials_Mewdeko_Database_DbService_Mewdeko_Services_Impl_EventHandler_Mewdeko_Services_IGoogleApiService_Discord_WebSocket_DiscordSocketClient_Mewdeko_Services_Settings_BotConfigService_
  name: MusicService
  nameWithType: MusicService.MusicService
  fullName: Mewdeko.Modules.Music.Services.MusicService.MusicService
  nameWithType.vb: MusicService.New
  fullName.vb: Mewdeko.Modules.Music.Services.MusicService.New
  name.vb: New
- uid: Lavalink4NET.LavalinkNode
  commentId: T:Lavalink4NET.LavalinkNode
  parent: Lavalink4NET
  isExternal: true
  name: LavalinkNode
  nameWithType: LavalinkNode
  fullName: Lavalink4NET.LavalinkNode
- uid: Mewdeko.Services.IBotCredentials
  commentId: T:Mewdeko.Services.IBotCredentials
  parent: Mewdeko.Services
  href: Mewdeko.Services.IBotCredentials.html
  name: IBotCredentials
  nameWithType: IBotCredentials
  fullName: Mewdeko.Services.IBotCredentials
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Services.IGoogleApiService
  commentId: T:Mewdeko.Services.IGoogleApiService
  parent: Mewdeko.Services
  href: Mewdeko.Services.IGoogleApiService.html
  name: IGoogleApiService
  nameWithType: IGoogleApiService
  fullName: Mewdeko.Services.IGoogleApiService
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Services.Settings.BotConfigService
  commentId: T:Mewdeko.Services.Settings.BotConfigService
  parent: Mewdeko.Services.Settings
  href: Mewdeko.Services.Settings.BotConfigService.html
  name: BotConfigService
  nameWithType: BotConfigService
  fullName: Mewdeko.Services.Settings.BotConfigService
- uid: Lavalink4NET
  commentId: N:Lavalink4NET
  isExternal: true
  name: Lavalink4NET
  nameWithType: Lavalink4NET
  fullName: Lavalink4NET
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Services.Settings
  commentId: N:Mewdeko.Services.Settings
  href: Mewdeko.html
  name: Mewdeko.Services.Settings
  nameWithType: Mewdeko.Services.Settings
  fullName: Mewdeko.Services.Settings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
- uid: Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetPrettyInfo_Lavalink4NET_Player_LavalinkPlayer_Discord_IGuild_
  name: GetPrettyInfo
  nameWithType: MusicService.GetPrettyInfo
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetPrettyInfo
- uid: Lavalink4NET.Player.LavalinkPlayer
  commentId: T:Lavalink4NET.Player.LavalinkPlayer
  parent: Lavalink4NET.Player
  isExternal: true
  name: LavalinkPlayer
  nameWithType: LavalinkPlayer
  fullName: Lavalink4NET.Player.LavalinkPlayer
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Lavalink4NET.Player
  commentId: N:Lavalink4NET.Player
  isExternal: true
  name: Lavalink4NET.Player
  nameWithType: Lavalink4NET.Player
  fullName: Lavalink4NET.Player
  spec.csharp:
  - uid: Lavalink4NET
    name: Lavalink4NET
    isExternal: true
  - name: .
  - uid: Lavalink4NET.Player
    name: Player
    isExternal: true
  spec.vb:
  - uid: Lavalink4NET
    name: Lavalink4NET
    isExternal: true
  - name: .
  - uid: Lavalink4NET.Player
    name: Player
    isExternal: true
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_UpdateDefaultPlaylist_Discord_IUser_Mewdeko_Database_Models_MusicPlaylist_
  name: UpdateDefaultPlaylist
  nameWithType: MusicService.UpdateDefaultPlaylist
  fullName: Mewdeko.Modules.Music.Services.MusicService.UpdateDefaultPlaylist
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Mewdeko.Database.Models.MusicPlaylist
  commentId: T:Mewdeko.Database.Models.MusicPlaylist
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.MusicPlaylist.html
  name: MusicPlaylist
  nameWithType: MusicPlaylist
  fullName: Mewdeko.Database.Models.MusicPlaylist
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Music.Services.MusicService.Enqueue*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.Enqueue
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_Enqueue_System_UInt64_Discord_IUser_System_Collections_Generic_IEnumerable_Lavalink4NET_Player_LavalinkTrack__Mewdeko_Database_Models_Platform_
  name: Enqueue
  nameWithType: MusicService.Enqueue
  fullName: Mewdeko.Modules.Music.Services.MusicService.Enqueue
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack}
  commentId: T:System.Collections.Generic.IEnumerable{Lavalink4NET.Player.LavalinkTrack}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<LavalinkTrack>
  nameWithType: IEnumerable<LavalinkTrack>
  fullName: System.Collections.Generic.IEnumerable<Lavalink4NET.Player.LavalinkTrack>
  nameWithType.vb: IEnumerable(Of LavalinkTrack)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Lavalink4NET.Player.LavalinkTrack)
  name.vb: IEnumerable(Of LavalinkTrack)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Lavalink4NET.Player.LavalinkTrack
    name: LavalinkTrack
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lavalink4NET.Player.LavalinkTrack
    name: LavalinkTrack
    isExternal: true
  - name: )
- uid: Mewdeko.Database.Models.Platform
  commentId: T:Mewdeko.Database.Models.Platform
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.Platform.html
  name: Platform
  nameWithType: Platform
  fullName: Mewdeko.Database.Models.Platform
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Lavalink4NET.Player.LavalinkTrack
  commentId: T:Lavalink4NET.Player.LavalinkTrack
  parent: Lavalink4NET.Player
  isExternal: true
  name: LavalinkTrack
  nameWithType: LavalinkTrack
  fullName: Lavalink4NET.Player.LavalinkTrack
- uid: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_SpotifyQueue_Discord_IGuild_Discord_IUser_Discord_ITextChannel_Lavalink4NET_Player_LavalinkPlayer_System_String_
  name: SpotifyQueue
  nameWithType: MusicService.SpotifyQueue
  fullName: Mewdeko.Modules.Music.Services.MusicService.SpotifyQueue
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Music.Services.MusicService.MoveSong*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.MoveSong
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_MoveSong_System_UInt64_System_Int32_System_Int32_
  name: MoveSong
  nameWithType: MusicService.MoveSong
  fullName: Mewdeko.Modules.Music.Services.MusicService.MoveSong
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.AutoPlay*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.AutoPlay
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_AutoPlay_System_UInt64_
  name: AutoPlay
  nameWithType: MusicService.AutoPlay
  fullName: Mewdeko.Modules.Music.Services.MusicService.AutoPlay
- uid: Mewdeko.Modules.Music.Services.MusicService.RemoveSong*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.RemoveSong
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_RemoveSong_Discord_IGuild_System_Int32_
  name: RemoveSong
  nameWithType: MusicService.RemoveSong
  fullName: Mewdeko.Modules.Music.Services.MusicService.RemoveSong
- uid: Mewdeko.Modules.Music.Services.MusicService.GetQueue*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetQueue
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetQueue_System_UInt64_
  name: GetQueue
  nameWithType: MusicService.GetQueue
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetQueue
- uid: System.Collections.Generic.List{Lavalink4NET.Player.LavalinkTrack}
  commentId: T:System.Collections.Generic.List{Lavalink4NET.Player.LavalinkTrack}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LavalinkTrack>
  nameWithType: List<LavalinkTrack>
  fullName: System.Collections.Generic.List<Lavalink4NET.Player.LavalinkTrack>
  nameWithType.vb: List(Of LavalinkTrack)
  fullName.vb: System.Collections.Generic.List(Of Lavalink4NET.Player.LavalinkTrack)
  name.vb: List(Of LavalinkTrack)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Lavalink4NET.Player.LavalinkTrack
    name: LavalinkTrack
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Lavalink4NET.Player.LavalinkTrack
    name: LavalinkTrack
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.Skip*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.Skip
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_Skip_Discord_IGuild_Discord_ITextChannel_Lavalink4NET_Player_LavalinkPlayer_Discord_IInteractionContext_System_Int32_
  name: Skip
  nameWithType: MusicService.Skip
  fullName: Mewdeko.Modules.Music.Services.MusicService.Skip
- uid: Discord.IInteractionContext
  commentId: T:Discord.IInteractionContext
  parent: Discord
  isExternal: true
  name: IInteractionContext
  nameWithType: IInteractionContext
  fullName: Discord.IInteractionContext
- uid: Mewdeko.Modules.Music.Services.MusicService.Shuffle*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.Shuffle
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_Shuffle_Discord_IGuild_
  name: Shuffle
  nameWithType: MusicService.Shuffle
  fullName: Mewdeko.Modules.Music.Services.MusicService.Shuffle
- uid: Mewdeko.Modules.Music.Services.MusicService.QueueClear*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.QueueClear
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_QueueClear_System_UInt64_
  name: QueueClear
  nameWithType: MusicService.QueueClear
  fullName: Mewdeko.Modules.Music.Services.MusicService.QueueClear
- uid: Mewdeko.Modules.Music.Services.MusicService.GetVolume*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetVolume
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetVolume_System_UInt64_
  name: GetVolume
  nameWithType: MusicService.GetVolume
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetVolume
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetDefaultPlaylist_Discord_IUser_
  name: GetDefaultPlaylist
  nameWithType: MusicService.GetDefaultPlaylist
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetDefaultPlaylist
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlaylist}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlaylist}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MusicPlaylist>
  nameWithType: Task<MusicPlaylist>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.MusicPlaylist>
  nameWithType.vb: Task(Of MusicPlaylist)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.MusicPlaylist)
  name.vb: Task(Of MusicPlaylist)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.MusicPlaylist
    name: MusicPlaylist
    href: Mewdeko.Database.Models.MusicPlaylist.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.MusicPlaylist
    name: MusicPlaylist
    href: Mewdeko.Database.Models.MusicPlaylist.html
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.GetPlaylists*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetPlaylists
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetPlaylists_Discord_IUser_
  name: GetPlaylists
  nameWithType: MusicService.GetPlaylists
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetPlaylists
- uid: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.MusicPlaylist}
  commentId: T:System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.MusicPlaylist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<MusicPlaylist>
  nameWithType: IEnumerable<MusicPlaylist>
  fullName: System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.MusicPlaylist>
  nameWithType.vb: IEnumerable(Of MusicPlaylist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.MusicPlaylist)
  name.vb: IEnumerable(Of MusicPlaylist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mewdeko.Database.Models.MusicPlaylist
    name: MusicPlaylist
    href: Mewdeko.Database.Models.MusicPlaylist.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.MusicPlaylist
    name: MusicPlaylist
    href: Mewdeko.Database.Models.MusicPlaylist.html
  - name: )
- uid: Mewdeko.Database.Models.MusicPlayerSettings
  commentId: T:Mewdeko.Database.Models.MusicPlayerSettings
  href: Mewdeko.Database.Models.MusicPlayerSettings.html
  name: MusicPlayerSettings
  nameWithType: MusicPlayerSettings
  fullName: Mewdeko.Database.Models.MusicPlayerSettings
- uid: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_GetSettingsInternalAsync_System_UInt64_
  name: GetSettingsInternalAsync
  nameWithType: MusicService.GetSettingsInternalAsync
  fullName: Mewdeko.Modules.Music.Services.MusicService.GetSettingsInternalAsync
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlayerSettings}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.MusicPlayerSettings}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MusicPlayerSettings>
  nameWithType: Task<MusicPlayerSettings>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.MusicPlayerSettings>
  nameWithType.vb: Task(Of MusicPlayerSettings)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.MusicPlayerSettings)
  name.vb: Task(Of MusicPlayerSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.MusicPlayerSettings
    name: MusicPlayerSettings
    href: Mewdeko.Database.Models.MusicPlayerSettings.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.MusicPlayerSettings
    name: MusicPlayerSettings
    href: Mewdeko.Database.Models.MusicPlayerSettings.html
  - name: )
- uid: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync*
  commentId: Overload:Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync
  href: Mewdeko.Modules.Music.Services.MusicService.html#Mewdeko_Modules_Music_Services_MusicService_ModifySettingsInternalAsync__1_System_UInt64_System_Action_Mewdeko_Database_Models_MusicPlayerSettings___0____0_
  name: ModifySettingsInternalAsync
  nameWithType: MusicService.ModifySettingsInternalAsync
  fullName: Mewdeko.Modules.Music.Services.MusicService.ModifySettingsInternalAsync
- uid: System.Action{Mewdeko.Database.Models.MusicPlayerSettings,{TState}}
  commentId: T:System.Action{Mewdeko.Database.Models.MusicPlayerSettings,``0}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<MusicPlayerSettings, TState>
  nameWithType: Action<MusicPlayerSettings, TState>
  fullName: System.Action<Mewdeko.Database.Models.MusicPlayerSettings, TState>
  nameWithType.vb: Action(Of MusicPlayerSettings, TState)
  fullName.vb: System.Action(Of Mewdeko.Database.Models.MusicPlayerSettings, TState)
  name.vb: Action(Of MusicPlayerSettings, TState)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: Mewdeko.Database.Models.MusicPlayerSettings
    name: MusicPlayerSettings
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.MusicPlayerSettings
    name: MusicPlayerSettings
  - name: ','
  - name: " "
  - name: TState
  - name: )
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: TState
  commentId: '!:TState'
  name: TState
  nameWithType: TState
  fullName: TState
