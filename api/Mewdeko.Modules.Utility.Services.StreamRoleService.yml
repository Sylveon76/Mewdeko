### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService
  commentId: T:Mewdeko.Modules.Utility.Services.StreamRoleService
  id: StreamRoleService
  parent: Mewdeko.Modules.Utility.Services
  children:
  - Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType,Discord.IGuild,Mewdeko.Common.TypeReaders.AddRemove,System.UInt64,System.String)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword(System.UInt64)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword(Discord.IGuild,System.String)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole(Discord.IRole,Discord.IRole)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole(Discord.IGuild,System.Boolean)
  - Mewdeko.Modules.Utility.Services.StreamRoleService.Unload
  langs:
  - csharp
  - vb
  name: StreamRoleService
  nameWithType: StreamRoleService
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StreamRoleService
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Manages stream role assignments based on user streaming status and additional configurable conditions within guilds.
  example: []
  syntax:
    content: 'public class StreamRoleService : INService, IUnloadableService'
    content.vb: Public Class StreamRoleService Implements INService, IUnloadableService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  - Mewdeko.Services.IUnloadableService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Utility.Services.StreamRoleService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)'
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: StreamRoleService(DiscordSocketClient, DbService, EventHandler, Mewdeko)
  nameWithType: StreamRoleService.StreamRoleService(DiscordSocketClient, DbService, EventHandler, Mewdeko)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.StreamRoleService(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Mewdeko)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Utility.Services.StreamRoleService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public StreamRoleService(DiscordSocketClient client, DbService db, EventHandler eventHandler, Mewdeko bot)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client used to access guild and user information.
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service for storing and retrieving stream role settings.
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: Event handler for capturing and responding to guild member updates.
    - id: bot
      type: Mewdeko.Mewdeko
      description: The bot instance for initializing service with current guild configurations.
    content.vb: Public Sub New(client As DiscordSocketClient, db As DbService, eventHandler As EventHandler, bot As Mewdeko)
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor*
  nameWithType.vb: StreamRoleService.New(DiscordSocketClient, DbService, EventHandler, Mewdeko)
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.New(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Mewdeko)
  name.vb: New(DiscordSocketClient, DbService, EventHandler, Mewdeko)
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.Unload
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.Unload
  id: Unload
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: StreamRoleService.Unload()
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.Unload()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Unload
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Unloads the service, detaching event handlers to stop listening to guild member updates.
  example: []
  syntax:
    content: public Task Unload()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Unload() As Task
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.Unload*
  implements:
  - Mewdeko.Services.IUnloadableService.Unload
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType,Discord.IGuild,Mewdeko.Common.TypeReaders.AddRemove,System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType,Discord.IGuild,Mewdeko.Common.TypeReaders.AddRemove,System.UInt64,System.String)
  id: ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType,Discord.IGuild,Mewdeko.Common.TypeReaders.AddRemove,System.UInt64,System.String)
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: ApplyListAction(StreamRoleListType, IGuild, AddRemove, ulong, string)
  nameWithType: StreamRoleService.ApplyListAction(StreamRoleListType, IGuild, AddRemove, ulong, string)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType, Discord.IGuild, Mewdeko.Common.TypeReaders.AddRemove, ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ApplyListAction
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Adds or removes a user to/from a whitelist or blacklist for stream role management, and rescans users if successful.
  example: []
  syntax:
    content: public Task<bool> ApplyListAction(StreamRoleListType listType, IGuild guild, AddRemove action, ulong userId, string userName)
    parameters:
    - id: listType
      type: Mewdeko.Modules.Utility.Common.StreamRoleListType
      description: Specifies whether to modify the whitelist or blacklist.
    - id: guild
      type: Discord.IGuild
      description: The guild where the action is taking place.
    - id: action
      type: Mewdeko.Common.TypeReaders.AddRemove
      description: Specifies whether to add or remove the user from the list.
    - id: userId
      type: System.UInt64
      description: The ID of the user to add or remove.
    - id: userName
      type: System.String
      description: The name of the user to add or remove.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating the success of the action.
    content.vb: Public Function ApplyListAction(listType As StreamRoleListType, guild As IGuild, action As AddRemove, userId As ULong, userName As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction*
  nameWithType.vb: StreamRoleService.ApplyListAction(StreamRoleListType, IGuild, AddRemove, ULong, String)
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction(Mewdeko.Modules.Utility.Common.StreamRoleListType, Discord.IGuild, Mewdeko.Common.TypeReaders.AddRemove, ULong, String)
  name.vb: ApplyListAction(StreamRoleListType, IGuild, AddRemove, ULong, String)
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword(Discord.IGuild,System.String)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword(Discord.IGuild,System.String)
  id: SetKeyword(Discord.IGuild,System.String)
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: SetKeyword(IGuild, string?)
  nameWithType: StreamRoleService.SetKeyword(IGuild, string?)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword(Discord.IGuild, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetKeyword
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 149
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Sets keyword on a guild and updates the cache.
  example: []
  syntax:
    content: public Task<string> SetKeyword(IGuild guild, string? keyword)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: Guild Id
    - id: keyword
      type: System.String
      description: Keyword to set
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The keyword set
    content.vb: Public Function SetKeyword(guild As IGuild, keyword As String) As Task(Of String)
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword*
  nameWithType.vb: StreamRoleService.SetKeyword(IGuild, String)
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword(Discord.IGuild, String)
  name.vb: SetKeyword(IGuild, String)
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword(System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword(System.UInt64)
  id: GetKeyword(System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: GetKeyword(ulong)
  nameWithType: StreamRoleService.GetKeyword(ulong)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetKeyword
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 172
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Gets the currently set keyword on a guild.
  example: []
  syntax:
    content: public Task<string> GetKeyword(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: Guild Id
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The keyword set
    content.vb: Public Function GetKeyword(guildId As ULong) As Task(Of String)
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword*
  nameWithType.vb: StreamRoleService.GetKeyword(ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword(ULong)
  name.vb: GetKeyword(ULong)
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole(Discord.IRole,Discord.IRole)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole(Discord.IRole,Discord.IRole)
  id: SetStreamRole(Discord.IRole,Discord.IRole)
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: SetStreamRole(IRole, IRole)
  nameWithType: StreamRoleService.SetStreamRole(IRole, IRole)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole(Discord.IRole, Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetStreamRole
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 194
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: >-
    Sets the role to monitor, and a role to which to add to

    the user who starts streaming in the monitored role.
  example: []
  syntax:
    content: public Task SetStreamRole(IRole fromRole, IRole addRole)
    parameters:
    - id: fromRole
      type: Discord.IRole
      description: Role to monitor
    - id: addRole
      type: Discord.IRole
      description: Role to add to the user
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetStreamRole(fromRole As IRole, addRole As IRole) As Task
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole*
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole(Discord.IGuild,System.Boolean)
  commentId: M:Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole(Discord.IGuild,System.Boolean)
  id: StopStreamRole(Discord.IGuild,System.Boolean)
  parent: Mewdeko.Modules.Utility.Services.StreamRoleService
  langs:
  - csharp
  - vb
  name: StopStreamRole(IGuild, bool)
  nameWithType: StreamRoleService.StopStreamRole(IGuild, bool)
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole(Discord.IGuild, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StopStreamRole
    path: src/Mewdeko/Modules/Utility/Services/StreamRoleService.cs
    startLine: 228
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Stops the stream role management in a guild, optionally cleaning up by removing the stream role from all users.
  example: []
  syntax:
    content: public Task StopStreamRole(IGuild guild, bool cleanup = false)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild to stop stream role management in.
    - id: cleanup
      type: System.Boolean
      description: Whether to clean up by removing the stream role from all users.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function StopStreamRole(guild As IGuild, cleanup As Boolean = False) As Task
  overload: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole*
  nameWithType.vb: StreamRoleService.StopStreamRole(IGuild, Boolean)
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole(Discord.IGuild, Boolean)
  name.vb: StopStreamRole(IGuild, Boolean)
references:
- uid: Mewdeko.Modules.Utility.Services
  commentId: N:Mewdeko.Modules.Utility.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Utility.Services
  nameWithType: Mewdeko.Modules.Utility.Services
  fullName: Mewdeko.Modules.Utility.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Services
    name: Services
    href: Mewdeko.Modules.Utility.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Services
    name: Services
    href: Mewdeko.Modules.Utility.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: Mewdeko.Services.IUnloadableService
  commentId: T:Mewdeko.Services.IUnloadableService
  parent: Mewdeko.Services
  href: Mewdeko.Services.IUnloadableService.html
  name: IUnloadableService
  nameWithType: IUnloadableService
  fullName: Mewdeko.Services.IUnloadableService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<StreamRoleService>(StreamRoleService, string)
  nameWithType: Extensions.ThrowIfNull<StreamRoleService>(StreamRoleService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Utility.Services.StreamRoleService>(Mewdeko.Modules.Utility.Services.StreamRoleService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of StreamRoleService)(StreamRoleService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Utility.Services.StreamRoleService)(Mewdeko.Modules.Utility.Services.StreamRoleService, String)
  name.vb: ThrowIfNull(Of StreamRoleService)(StreamRoleService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Utility.Services.StreamRoleService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Utility.Services.StreamRoleService
    name: StreamRoleService
    href: Mewdeko.Modules.Utility.Services.StreamRoleService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Utility.Services.StreamRoleService
    name: StreamRoleService
    href: Mewdeko.Modules.Utility.Services.StreamRoleService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Utility.Services.StreamRoleService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Utility.Services.StreamRoleService
    name: StreamRoleService
    href: Mewdeko.Modules.Utility.Services.StreamRoleService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Utility.Services.StreamRoleService
    name: StreamRoleService
    href: Mewdeko.Modules.Utility.Services.StreamRoleService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService
  commentId: T:Mewdeko.Modules.Utility.Services.StreamRoleService
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html
  name: StreamRoleService
  nameWithType: StreamRoleService
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.#ctor
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService__ctor_Discord_WebSocket_DiscordSocketClient_Mewdeko_Database_DbService_Mewdeko_Services_Impl_EventHandler_Mewdeko_Mewdeko_
  name: StreamRoleService
  nameWithType: StreamRoleService.StreamRoleService
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.StreamRoleService
  nameWithType.vb: StreamRoleService.New
  fullName.vb: Mewdeko.Modules.Utility.Services.StreamRoleService.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Mewdeko
  commentId: T:Mewdeko.Mewdeko
  parent: Mewdeko
  href: Mewdeko.Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko.Mewdeko
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Mewdeko
  commentId: N:Mewdeko
  href: Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.Unload*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.Unload
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_Unload
  name: Unload
  nameWithType: StreamRoleService.Unload
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.Unload
- uid: Mewdeko.Services.IUnloadableService.Unload
  commentId: M:Mewdeko.Services.IUnloadableService.Unload
  parent: Mewdeko.Services.IUnloadableService
  href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  name: Unload()
  nameWithType: IUnloadableService.Unload()
  fullName: Mewdeko.Services.IUnloadableService.Unload()
  spec.csharp:
  - uid: Mewdeko.Services.IUnloadableService.Unload
    name: Unload
    href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  - name: (
  - name: )
  spec.vb:
  - uid: Mewdeko.Services.IUnloadableService.Unload
    name: Unload
    href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_ApplyListAction_Mewdeko_Modules_Utility_Common_StreamRoleListType_Discord_IGuild_Mewdeko_Common_TypeReaders_AddRemove_System_UInt64_System_String_
  name: ApplyListAction
  nameWithType: StreamRoleService.ApplyListAction
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.ApplyListAction
- uid: Mewdeko.Modules.Utility.Common.StreamRoleListType
  commentId: T:Mewdeko.Modules.Utility.Common.StreamRoleListType
  parent: Mewdeko.Modules.Utility.Common
  href: Mewdeko.Modules.Utility.Common.StreamRoleListType.html
  name: StreamRoleListType
  nameWithType: StreamRoleListType
  fullName: Mewdeko.Modules.Utility.Common.StreamRoleListType
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Mewdeko.Common.TypeReaders.AddRemove
  commentId: T:Mewdeko.Common.TypeReaders.AddRemove
  parent: Mewdeko.Common.TypeReaders
  href: Mewdeko.Common.TypeReaders.AddRemove.html
  name: AddRemove
  nameWithType: AddRemove
  fullName: Mewdeko.Common.TypeReaders.AddRemove
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Utility.Common
  commentId: N:Mewdeko.Modules.Utility.Common
  href: Mewdeko.html
  name: Mewdeko.Modules.Utility.Common
  nameWithType: Mewdeko.Modules.Utility.Common
  fullName: Mewdeko.Modules.Utility.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Common
    name: Common
    href: Mewdeko.Modules.Utility.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Common
    name: Common
    href: Mewdeko.Modules.Utility.Common.html
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Common.TypeReaders
  commentId: N:Mewdeko.Common.TypeReaders
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders
  nameWithType: Mewdeko.Common.TypeReaders
  fullName: Mewdeko.Common.TypeReaders
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_SetKeyword_Discord_IGuild_System_String_
  name: SetKeyword
  nameWithType: StreamRoleService.SetKeyword
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.SetKeyword
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_GetKeyword_System_UInt64_
  name: GetKeyword
  nameWithType: StreamRoleService.GetKeyword
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.GetKeyword
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_SetStreamRole_Discord_IRole_Discord_IRole_
  name: SetStreamRole
  nameWithType: StreamRoleService.SetStreamRole
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.SetStreamRole
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole*
  commentId: Overload:Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole
  href: Mewdeko.Modules.Utility.Services.StreamRoleService.html#Mewdeko_Modules_Utility_Services_StreamRoleService_StopStreamRole_Discord_IGuild_System_Boolean_
  name: StopStreamRole
  nameWithType: StreamRoleService.StopStreamRole
  fullName: Mewdeko.Modules.Utility.Services.StreamRoleService.StopStreamRole
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
