### YamlMime:ManagedReference
items:
- uid: Mewdeko.Extensions.StringExtensions
  commentId: T:Mewdeko.Extensions.StringExtensions
  id: StringExtensions
  parent: Mewdeko.Extensions
  children:
  - Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl(System.String)
  - Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable(System.String)
  - Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff(System.String)
  - Mewdeko.Extensions.StringExtensions.GenerateSecureString(System.Int32)
  - Mewdeko.Extensions.StringExtensions.GetHexFromColorName(System.String)
  - Mewdeko.Extensions.StringExtensions.GetInitials(System.String,System.String)
  - Mewdeko.Extensions.StringExtensions.GetUserMentions(System.String)
  - Mewdeko.Extensions.StringExtensions.IsAlphaNumeric(System.String)
  - Mewdeko.Extensions.StringExtensions.IsDiscordInvite(System.String)
  - Mewdeko.Extensions.StringExtensions.IsImage(System.String)
  - Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)
  - Mewdeko.Extensions.StringExtensions.LevenshteinDistance(System.String,System.String)
  - Mewdeko.Extensions.StringExtensions.MapJson``1(System.String)
  - Mewdeko.Extensions.StringExtensions.PadBoth(System.String,System.Int32)
  - Mewdeko.Extensions.StringExtensions.RemoveUrls(System.String)
  - Mewdeko.Extensions.StringExtensions.RemoveUserMentions(System.String)
  - Mewdeko.Extensions.StringExtensions.SanitizeAllMentions(System.String)
  - Mewdeko.Extensions.StringExtensions.SanitizeMentions(System.String,System.Boolean)
  - Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions(System.String)
  - Mewdeko.Extensions.StringExtensions.SnPl(System.String,System.Nullable{System.Int32},System.Boolean)
  - Mewdeko.Extensions.StringExtensions.StripHtml(System.String)
  - Mewdeko.Extensions.StringExtensions.ToBase64(System.String)
  - Mewdeko.Extensions.StringExtensions.ToStream(System.String)
  - Mewdeko.Extensions.StringExtensions.ToTitleCase(System.String)
  - Mewdeko.Extensions.StringExtensions.TryFormat(System.String,System.Object[],System.String@)
  - Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints(System.String)
  - Mewdeko.Extensions.StringExtensions.UserMentionsRegex
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: Mewdeko.Extensions.StringExtensions
  type: Class
  source:
    id: StringExtensions
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 259
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Extension methods for many, MANY things used in the bot related to strings.
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Extensions.StringExtensions.UserMentionsRegex
  commentId: F:Mewdeko.Extensions.StringExtensions.UserMentionsRegex
  id: UserMentionsRegex
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: UserMentionsRegex
  nameWithType: StringExtensions.UserMentionsRegex
  fullName: Mewdeko.Extensions.StringExtensions.UserMentionsRegex
  type: Field
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserMentionsRegex
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 39
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: User mentions are matched using this regex pattern.
  example: []
  syntax:
    content: public static readonly Regex UserMentionsRegex
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly UserMentionsRegex As Regex
- uid: Mewdeko.Extensions.StringExtensions.GetHexFromColorName(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.GetHexFromColorName(System.String)
  id: GetHexFromColorName(System.String)
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: GetHexFromColorName(string)
  nameWithType: StringExtensions.GetHexFromColorName(string)
  fullName: Mewdeko.Extensions.StringExtensions.GetHexFromColorName(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHexFromColorName
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 478
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: >-
    Retrieves the hexadecimal color code corresponding to the given color name.

    Returns null if the color name is not found in the mapping.
  example: []
  syntax:
    content: public static string? GetHexFromColorName(string colorName)
    parameters:
    - id: colorName
      type: System.String
      description: The name of the color to retrieve the hexadecimal code for.
    return:
      type: System.String
      description: The hexadecimal color code, or null if not found.
    content.vb: Public Shared Function GetHexFromColorName(colorName As String) As String
  overload: Mewdeko.Extensions.StringExtensions.GetHexFromColorName*
  nameWithType.vb: StringExtensions.GetHexFromColorName(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.GetHexFromColorName(String)
  name.vb: GetHexFromColorName(String)
- uid: Mewdeko.Extensions.StringExtensions.GenerateSecureString(System.Int32)
  commentId: M:Mewdeko.Extensions.StringExtensions.GenerateSecureString(System.Int32)
  id: GenerateSecureString(System.Int32)
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: GenerateSecureString(int)
  nameWithType: StringExtensions.GenerateSecureString(int)
  fullName: Mewdeko.Extensions.StringExtensions.GenerateSecureString(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GenerateSecureString
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 488
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Generates a secure string of the specified length using alphanumeric characters.
  example: []
  syntax:
    content: public static string GenerateSecureString(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The length of the secure string to generate.
    return:
      type: System.String
      description: A secure string of the specified length.
    content.vb: Public Shared Function GenerateSecureString(length As Integer) As String
  overload: Mewdeko.Extensions.StringExtensions.GenerateSecureString*
  nameWithType.vb: StringExtensions.GenerateSecureString(Integer)
  fullName.vb: Mewdeko.Extensions.StringExtensions.GenerateSecureString(Integer)
  name.vb: GenerateSecureString(Integer)
- uid: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)
  id: IsNullOrWhiteSpace(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrWhiteSpace(string)
  nameWithType: StringExtensions.IsNullOrWhiteSpace(string)
  fullName: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsNullOrWhiteSpace
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 509
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Indicates whether the specified string is null, empty, or consists only of white-space characters.
  example: []
  syntax:
    content: public static bool IsNullOrWhiteSpace(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: True if the string is null, empty, or contains only white-space characters; otherwise, false.
    content.vb: Public Shared Function IsNullOrWhiteSpace(str As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace*
  nameWithType.vb: StringExtensions.IsNullOrWhiteSpace(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace(String)
  name.vb: IsNullOrWhiteSpace(String)
- uid: Mewdeko.Extensions.StringExtensions.PadBoth(System.String,System.Int32)
  commentId: M:Mewdeko.Extensions.StringExtensions.PadBoth(System.String,System.Int32)
  id: PadBoth(System.String,System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: PadBoth(string, int)
  nameWithType: StringExtensions.PadBoth(string, int)
  fullName: Mewdeko.Extensions.StringExtensions.PadBoth(string, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PadBoth
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 517
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Pads both sides of the string to make it centered within the specified length.
  example: []
  syntax:
    content: public static string PadBoth(this string str, int length)
    parameters:
    - id: str
      type: System.String
      description: The string to pad.
    - id: length
      type: System.Int32
      description: The total length of the padded string.
    return:
      type: System.String
      description: A string padded on both sides to center it within the specified length.
    content.vb: Public Shared Function PadBoth(str As String, length As Integer) As String
  overload: Mewdeko.Extensions.StringExtensions.PadBoth*
  nameWithType.vb: StringExtensions.PadBoth(String, Integer)
  fullName.vb: Mewdeko.Extensions.StringExtensions.PadBoth(String, Integer)
  name.vb: PadBoth(String, Integer)
- uid: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints(System.String)
  id: UnescapeUnicodeCodePoints(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: UnescapeUnicodeCodePoints(string)
  nameWithType: StringExtensions.UnescapeUnicodeCodePoints(string)
  fullName: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnescapeUnicodeCodePoints
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 529
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Replaces Unicode code point placeholders in the string with their corresponding characters.
  example: []
  syntax:
    content: public static string UnescapeUnicodeCodePoints(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string containing Unicode code point placeholders.
    return:
      type: System.String
      description: The string with Unicode code point placeholders replaced by their corresponding characters.
    content.vb: Public Shared Function UnescapeUnicodeCodePoints(input As String) As String
  overload: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints*
  nameWithType.vb: StringExtensions.UnescapeUnicodeCodePoints(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints(String)
  name.vb: UnescapeUnicodeCodePoints(String)
- uid: Mewdeko.Extensions.StringExtensions.IsImage(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.IsImage(System.String)
  id: IsImage(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsImage(string)
  nameWithType: StringExtensions.IsImage(string)
  fullName: Mewdeko.Extensions.StringExtensions.IsImage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsImage
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 541
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Checks if the specified string represents an image file based on its file extension.
  example: []
  syntax:
    content: public static bool IsImage(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string representing the file name or path.
    return:
      type: System.Boolean
      description: True if the string represents an image file; otherwise, false.
    content.vb: Public Shared Function IsImage(input As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.IsImage*
  nameWithType.vb: StringExtensions.IsImage(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.IsImage(String)
  name.vb: IsImage(String)
- uid: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl(System.String)
  id: CheckIfMusicUrl(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: CheckIfMusicUrl(string)
  nameWithType: StringExtensions.CheckIfMusicUrl(string)
  fullName: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckIfMusicUrl
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 552
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Checks if the specified string represents a music file URL based on its file extension.
  example: []
  syntax:
    content: public static bool CheckIfMusicUrl(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string representing the URL.
    return:
      type: System.Boolean
      description: True if the string represents a music file URL; otherwise, false.
    content.vb: Public Shared Function CheckIfMusicUrl(input As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl*
  nameWithType.vb: StringExtensions.CheckIfMusicUrl(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl(String)
  name.vb: CheckIfMusicUrl(String)
- uid: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable(System.String)
  id: CheckIfNotEmbeddable(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: CheckIfNotEmbeddable(string)
  nameWithType: StringExtensions.CheckIfNotEmbeddable(string)
  fullName: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckIfNotEmbeddable
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 571
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Checks if the specified string represents a file format that cannot be embedded in a message.
  example: []
  syntax:
    content: public static bool CheckIfNotEmbeddable(this string input)
    parameters:
    - id: input
      type: System.String
      description: The string representing the file name or format.
    return:
      type: System.Boolean
      description: True if the string represents a non-embeddable file format; otherwise, false.
    content.vb: Public Shared Function CheckIfNotEmbeddable(input As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable*
  nameWithType.vb: StringExtensions.CheckIfNotEmbeddable(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable(String)
  name.vb: CheckIfNotEmbeddable(String)
- uid: Mewdeko.Extensions.StringExtensions.MapJson``1(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.MapJson``1(System.String)
  id: MapJson``1(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: MapJson<T>(string)
  nameWithType: StringExtensions.MapJson<T>(string)
  fullName: Mewdeko.Extensions.StringExtensions.MapJson<T>(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MapJson
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 581
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Deserializes a JSON string into an object of the specified type.
  example: []
  syntax:
    content: public static T MapJson<T>(this string str)
    parameters:
    - id: str
      type: System.String
      description: The JSON string to deserialize.
    typeParameters:
    - id: T
      description: The type of object to deserialize into.
    return:
      type: '{T}'
      description: The deserialized object.
    content.vb: Public Shared Function MapJson(Of T)(str As String) As T
  overload: Mewdeko.Extensions.StringExtensions.MapJson*
  nameWithType.vb: StringExtensions.MapJson(Of T)(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.MapJson(Of T)(String)
  name.vb: MapJson(Of T)(String)
- uid: Mewdeko.Extensions.StringExtensions.StripHtml(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.StripHtml(System.String)
  id: StripHtml(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: StripHtml(string)
  nameWithType: StringExtensions.StripHtml(string)
  fullName: Mewdeko.Extensions.StringExtensions.StripHtml(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StripHtml
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 588
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Removes HTML tags from the specified input string.
  example: []
  syntax:
    content: public static string StripHtml(this string input)
    parameters:
    - id: input
      type: System.String
      description: The input string containing HTML tags.
    return:
      type: System.String
      description: The input string with HTML tags removed.
    content.vb: Public Shared Function StripHtml(input As String) As String
  overload: Mewdeko.Extensions.StringExtensions.StripHtml*
  nameWithType.vb: StringExtensions.StripHtml(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.StripHtml(String)
  name.vb: StripHtml(String)
- uid: Mewdeko.Extensions.StringExtensions.ToTitleCase(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.ToTitleCase(System.String)
  id: ToTitleCase(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToTitleCase(string)
  nameWithType: StringExtensions.ToTitleCase(string)
  fullName: Mewdeko.Extensions.StringExtensions.ToTitleCase(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToTitleCase
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 596
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts the input string to title case.
  example: []
  syntax:
    content: public static string ToTitleCase(this string str)
    parameters:
    - id: str
      type: System.String
      description: The input string to convert.
    return:
      type: System.String
      description: The input string converted to title case.
    content.vb: Public Shared Function ToTitleCase(str As String) As String
  overload: Mewdeko.Extensions.StringExtensions.ToTitleCase*
  nameWithType.vb: StringExtensions.ToTitleCase(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.ToTitleCase(String)
  name.vb: ToTitleCase(String)
- uid: Mewdeko.Extensions.StringExtensions.SnPl(System.String,System.Nullable{System.Int32},System.Boolean)
  commentId: M:Mewdeko.Extensions.StringExtensions.SnPl(System.String,System.Nullable{System.Int32},System.Boolean)
  id: SnPl(System.String,System.Nullable{System.Int32},System.Boolean)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: SnPl(string?, int?, bool)
  nameWithType: StringExtensions.SnPl(string?, int?, bool)
  fullName: Mewdeko.Extensions.StringExtensions.SnPl(string?, int?, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SnPl
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 621
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Removes trailing 'S' or 'ES' (if specified) on the given string if the number is 1.
  example: []
  syntax:
    content: public static string SnPl(this string? str, int? num, bool es = false)
    parameters:
    - id: str
      type: System.String
      description: The input string.
    - id: num
      type: System.Nullable{System.Int32}
      description: The number associated with the string.
    - id: es
      type: System.Boolean
      description: Specifies whether to remove 'ES' instead of 'S'.
    return:
      type: System.String
      description: The string with the correct singular/plural form.
    content.vb: Public Shared Function SnPl(str As String, num As Integer?, es As Boolean = False) As String
  overload: Mewdeko.Extensions.StringExtensions.SnPl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the input string or number is null.
  nameWithType.vb: StringExtensions.SnPl(String, Integer?, Boolean)
  fullName.vb: Mewdeko.Extensions.StringExtensions.SnPl(String, Integer?, Boolean)
  name.vb: SnPl(String, Integer?, Boolean)
- uid: Mewdeko.Extensions.StringExtensions.LevenshteinDistance(System.String,System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.LevenshteinDistance(System.String,System.String)
  id: LevenshteinDistance(System.String,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: LevenshteinDistance(string?, string)
  nameWithType: StringExtensions.LevenshteinDistance(string?, string)
  fullName: Mewdeko.Extensions.StringExtensions.LevenshteinDistance(string?, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LevenshteinDistance
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 637
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Calculates the Levenshtein distance between two strings.
  example: []
  syntax:
    content: public static int LevenshteinDistance(this string? s, string t)
    parameters:
    - id: s
      type: System.String
      description: The first string.
    - id: t
      type: System.String
      description: The second string.
    return:
      type: System.Int32
      description: The Levenshtein distance between the two strings.
    content.vb: Public Shared Function LevenshteinDistance(s As String, t As String) As Integer
  overload: Mewdeko.Extensions.StringExtensions.LevenshteinDistance*
  nameWithType.vb: StringExtensions.LevenshteinDistance(String, String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.LevenshteinDistance(String, String)
  name.vb: LevenshteinDistance(String, String)
- uid: Mewdeko.Extensions.StringExtensions.ToStream(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.ToStream(System.String)
  id: ToStream(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToStream(string)
  nameWithType: StringExtensions.ToStream(string)
  fullName: Mewdeko.Extensions.StringExtensions.ToStream(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToStream
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 678
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a string to a stream.
  example: []
  syntax:
    content: public static Task<Stream> ToStream(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to convert.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A stream containing the string data.
    content.vb: Public Shared Function ToStream(str As String) As Task(Of Stream)
  overload: Mewdeko.Extensions.StringExtensions.ToStream*
  nameWithType.vb: StringExtensions.ToStream(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.ToStream(String)
  name.vb: ToStream(String)
- uid: Mewdeko.Extensions.StringExtensions.IsDiscordInvite(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.IsDiscordInvite(System.String)
  id: IsDiscordInvite(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsDiscordInvite(string)
  nameWithType: StringExtensions.IsDiscordInvite(string)
  fullName: Mewdeko.Extensions.StringExtensions.IsDiscordInvite(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsDiscordInvite
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 693
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Checks if the string contains a Discord invite link.
  example: []
  syntax:
    content: public static bool IsDiscordInvite(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: True if the string contains a Discord invite link, false otherwise.
    content.vb: Public Shared Function IsDiscordInvite(str As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.IsDiscordInvite*
  nameWithType.vb: StringExtensions.IsDiscordInvite(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.IsDiscordInvite(String)
  name.vb: IsDiscordInvite(String)
- uid: Mewdeko.Extensions.StringExtensions.SanitizeMentions(System.String,System.Boolean)
  commentId: M:Mewdeko.Extensions.StringExtensions.SanitizeMentions(System.String,System.Boolean)
  id: SanitizeMentions(System.String,System.Boolean)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: SanitizeMentions(string?, bool)
  nameWithType: StringExtensions.SanitizeMentions(string?, bool)
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeMentions(string?, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SanitizeMentions
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 701
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Sanitizes mentions in the string.
  example: []
  syntax:
    content: public static string SanitizeMentions(this string? str, bool sanitizeRoleMentions = false)
    parameters:
    - id: str
      type: System.String
      description: The string to sanitize.
    - id: sanitizeRoleMentions
      type: System.Boolean
      description: A flag indicating whether to sanitize role mentions.
    return:
      type: System.String
      description: The sanitized string.
    content.vb: Public Shared Function SanitizeMentions(str As String, sanitizeRoleMentions As Boolean = False) As String
  overload: Mewdeko.Extensions.StringExtensions.SanitizeMentions*
  nameWithType.vb: StringExtensions.SanitizeMentions(String, Boolean)
  fullName.vb: Mewdeko.Extensions.StringExtensions.SanitizeMentions(String, Boolean)
  name.vb: SanitizeMentions(String, Boolean)
- uid: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions(System.String)
  id: SanitizeRoleMentions(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: SanitizeRoleMentions(string?)
  nameWithType: StringExtensions.SanitizeRoleMentions(string?)
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SanitizeRoleMentions
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 716
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Sanitizes role mentions in the string.
  example: []
  syntax:
    content: public static string SanitizeRoleMentions(this string? str)
    parameters:
    - id: str
      type: System.String
      description: The string to sanitize.
    return:
      type: System.String
      description: The sanitized string.
    content.vb: Public Shared Function SanitizeRoleMentions(str As String) As String
  overload: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions*
  nameWithType.vb: StringExtensions.SanitizeRoleMentions(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions(String)
  name.vb: SanitizeRoleMentions(String)
- uid: Mewdeko.Extensions.StringExtensions.RemoveUserMentions(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.RemoveUserMentions(System.String)
  id: RemoveUserMentions(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveUserMentions(string)
  nameWithType: StringExtensions.RemoveUserMentions(string)
  fullName: Mewdeko.Extensions.StringExtensions.RemoveUserMentions(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveUserMentions
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 724
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Removes user mentions from the string.
  example: []
  syntax:
    content: public static string RemoveUserMentions(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to process.
    return:
      type: System.String
      description: The string with user mentions removed.
    content.vb: Public Shared Function RemoveUserMentions(str As String) As String
  overload: Mewdeko.Extensions.StringExtensions.RemoveUserMentions*
  nameWithType.vb: StringExtensions.RemoveUserMentions(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.RemoveUserMentions(String)
  name.vb: RemoveUserMentions(String)
- uid: Mewdeko.Extensions.StringExtensions.GetUserMentions(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.GetUserMentions(System.String)
  id: GetUserMentions(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: GetUserMentions(string)
  nameWithType: StringExtensions.GetUserMentions(string)
  fullName: Mewdeko.Extensions.StringExtensions.GetUserMentions(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserMentions
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 732
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Retrieves user mentions from the string.
  example: []
  syntax:
    content: public static IEnumerable<ulong> GetUserMentions(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to search for user mentions.
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: An enumerable collection of user IDs.
    content.vb: Public Shared Function GetUserMentions(str As String) As IEnumerable(Of ULong)
  overload: Mewdeko.Extensions.StringExtensions.GetUserMentions*
  nameWithType.vb: StringExtensions.GetUserMentions(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.GetUserMentions(String)
  name.vb: GetUserMentions(String)
- uid: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.SanitizeAllMentions(System.String)
  id: SanitizeAllMentions(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: SanitizeAllMentions(string?)
  nameWithType: StringExtensions.SanitizeAllMentions(string?)
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SanitizeAllMentions
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 741
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Sanitizes all mentions in the string, including user and role mentions.
  example: []
  syntax:
    content: public static string SanitizeAllMentions(this string? str)
    parameters:
    - id: str
      type: System.String
      description: The string to sanitize.
    return:
      type: System.String
      description: The sanitized string.
    content.vb: Public Shared Function SanitizeAllMentions(str As String) As String
  overload: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions*
  nameWithType.vb: StringExtensions.SanitizeAllMentions(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions(String)
  name.vb: SanitizeAllMentions(String)
- uid: Mewdeko.Extensions.StringExtensions.ToBase64(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.ToBase64(System.String)
  id: ToBase64(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToBase64(string)
  nameWithType: StringExtensions.ToBase64(string)
  fullName: Mewdeko.Extensions.StringExtensions.ToBase64(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToBase64
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 748
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts the string to its Base64 representation.
  example: []
  syntax:
    content: public static string ToBase64(this string plainText)
    parameters:
    - id: plainText
      type: System.String
      description: The plain text string to encode.
    return:
      type: System.String
      description: The Base64-encoded string.
    content.vb: Public Shared Function ToBase64(plainText As String) As String
  overload: Mewdeko.Extensions.StringExtensions.ToBase64*
  nameWithType.vb: StringExtensions.ToBase64(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.ToBase64(String)
  name.vb: ToBase64(String)
- uid: Mewdeko.Extensions.StringExtensions.GetInitials(System.String,System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.GetInitials(System.String,System.String)
  id: GetInitials(System.String,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: GetInitials(string, string)
  nameWithType: StringExtensions.GetInitials(string, string)
  fullName: Mewdeko.Extensions.StringExtensions.GetInitials(string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetInitials
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 760
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Extracts initials from the string.
  example: []
  syntax:
    content: public static string GetInitials(this string txt, string glue = "")
    parameters:
    - id: txt
      type: System.String
      description: The input string.
    - id: glue
      type: System.String
      description: The glue string used to join the initials.
    return:
      type: System.String
      description: The extracted initials.
    content.vb: Public Shared Function GetInitials(txt As String, glue As String = "") As String
  overload: Mewdeko.Extensions.StringExtensions.GetInitials*
  nameWithType.vb: StringExtensions.GetInitials(String, String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.GetInitials(String, String)
  name.vb: GetInitials(String, String)
- uid: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.IsAlphaNumeric(System.String)
  id: IsAlphaNumeric(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsAlphaNumeric(string)
  nameWithType: StringExtensions.IsAlphaNumeric(string)
  fullName: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsAlphaNumeric
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 768
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Determines whether the string is alphanumeric.
  example: []
  syntax:
    content: public static bool IsAlphaNumeric(this string txt)
    parameters:
    - id: txt
      type: System.String
      description: The string to check.
    return:
      type: System.Boolean
      description: True if the string is alphanumeric, otherwise false.
    content.vb: Public Shared Function IsAlphaNumeric(txt As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric*
  nameWithType.vb: StringExtensions.IsAlphaNumeric(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric(String)
  name.vb: IsAlphaNumeric(String)
- uid: Mewdeko.Extensions.StringExtensions.RemoveUrls(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.RemoveUrls(System.String)
  id: RemoveUrls(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveUrls(string)
  nameWithType: StringExtensions.RemoveUrls(string)
  fullName: Mewdeko.Extensions.StringExtensions.RemoveUrls(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveUrls
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 775
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Removes URLs from the string.
  example: []
  syntax:
    content: public static string RemoveUrls(this string txt)
    parameters:
    - id: txt
      type: System.String
      description: The string to process.
    return:
      type: System.String
      description: The string with URLs removed.
    content.vb: Public Shared Function RemoveUrls(txt As String) As String
  overload: Mewdeko.Extensions.StringExtensions.RemoveUrls*
  nameWithType.vb: StringExtensions.RemoveUrls(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.RemoveUrls(String)
  name.vb: RemoveUrls(String)
- uid: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff(System.String)
  commentId: M:Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff(System.String)
  id: EscapeWeirdStuff(System.String)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: EscapeWeirdStuff(string)
  nameWithType: StringExtensions.EscapeWeirdStuff(string)
  fullName: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EscapeWeirdStuff
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 782
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Escapes special characters in the string.
  example: []
  syntax:
    content: public static string EscapeWeirdStuff(this string txt)
    parameters:
    - id: txt
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: The escaped string.
    content.vb: Public Shared Function EscapeWeirdStuff(txt As String) As String
  overload: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff*
  nameWithType.vb: StringExtensions.EscapeWeirdStuff(String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff(String)
  name.vb: EscapeWeirdStuff(String)
- uid: Mewdeko.Extensions.StringExtensions.TryFormat(System.String,System.Object[],System.String@)
  commentId: M:Mewdeko.Extensions.StringExtensions.TryFormat(System.String,System.Object[],System.String@)
  id: TryFormat(System.String,System.Object[],System.String@)
  parent: Mewdeko.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: TryFormat(string, object[], out string)
  nameWithType: StringExtensions.TryFormat(string, object[], out string)
  fullName: Mewdeko.Extensions.StringExtensions.TryFormat(string, object[], out string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/StringExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryFormat
    path: src/Mewdeko/Extensions/StringExtensions.cs
    startLine: 791
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Tries to format a string with the provided arguments.
  example: []
  syntax:
    content: public static bool TryFormat(string data, object[] args, out string output)
    parameters:
    - id: data
      type: System.String
      description: The format string.
    - id: args
      type: System.Object[]
      description: An array of objects to format.
    - id: output
      type: System.String
      description: The formatted string if successful, otherwise null.
    return:
      type: System.Boolean
      description: True if the formatting was successful, otherwise false.
    content.vb: Public Shared Function TryFormat(data As String, args As Object(), output As String) As Boolean
  overload: Mewdeko.Extensions.StringExtensions.TryFormat*
  nameWithType.vb: StringExtensions.TryFormat(String, Object(), String)
  fullName.vb: Mewdeko.Extensions.StringExtensions.TryFormat(String, Object(), String)
  name.vb: TryFormat(String, Object(), String)
references:
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: Mewdeko.Extensions.StringExtensions.GetHexFromColorName*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.GetHexFromColorName
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_GetHexFromColorName_System_String_
  name: GetHexFromColorName
  nameWithType: StringExtensions.GetHexFromColorName
  fullName: Mewdeko.Extensions.StringExtensions.GetHexFromColorName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Extensions.StringExtensions.GenerateSecureString*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.GenerateSecureString
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_GenerateSecureString_System_Int32_
  name: GenerateSecureString
  nameWithType: StringExtensions.GenerateSecureString
  fullName: Mewdeko.Extensions.StringExtensions.GenerateSecureString
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_IsNullOrWhiteSpace_System_String_
  name: IsNullOrWhiteSpace
  nameWithType: StringExtensions.IsNullOrWhiteSpace
  fullName: Mewdeko.Extensions.StringExtensions.IsNullOrWhiteSpace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Extensions.StringExtensions.PadBoth*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.PadBoth
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_PadBoth_System_String_System_Int32_
  name: PadBoth
  nameWithType: StringExtensions.PadBoth
  fullName: Mewdeko.Extensions.StringExtensions.PadBoth
- uid: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_UnescapeUnicodeCodePoints_System_String_
  name: UnescapeUnicodeCodePoints
  nameWithType: StringExtensions.UnescapeUnicodeCodePoints
  fullName: Mewdeko.Extensions.StringExtensions.UnescapeUnicodeCodePoints
- uid: Mewdeko.Extensions.StringExtensions.IsImage*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.IsImage
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_IsImage_System_String_
  name: IsImage
  nameWithType: StringExtensions.IsImage
  fullName: Mewdeko.Extensions.StringExtensions.IsImage
- uid: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_CheckIfMusicUrl_System_String_
  name: CheckIfMusicUrl
  nameWithType: StringExtensions.CheckIfMusicUrl
  fullName: Mewdeko.Extensions.StringExtensions.CheckIfMusicUrl
- uid: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_CheckIfNotEmbeddable_System_String_
  name: CheckIfNotEmbeddable
  nameWithType: StringExtensions.CheckIfNotEmbeddable
  fullName: Mewdeko.Extensions.StringExtensions.CheckIfNotEmbeddable
- uid: Mewdeko.Extensions.StringExtensions.MapJson*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.MapJson
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_MapJson__1_System_String_
  name: MapJson
  nameWithType: StringExtensions.MapJson
  fullName: Mewdeko.Extensions.StringExtensions.MapJson
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mewdeko.Extensions.StringExtensions.StripHtml*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.StripHtml
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_StripHtml_System_String_
  name: StripHtml
  nameWithType: StringExtensions.StripHtml
  fullName: Mewdeko.Extensions.StringExtensions.StripHtml
- uid: Mewdeko.Extensions.StringExtensions.ToTitleCase*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.ToTitleCase
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_ToTitleCase_System_String_
  name: ToTitleCase
  nameWithType: StringExtensions.ToTitleCase
  fullName: Mewdeko.Extensions.StringExtensions.ToTitleCase
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Mewdeko.Extensions.StringExtensions.SnPl*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.SnPl
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_SnPl_System_String_System_Nullable_System_Int32__System_Boolean_
  name: SnPl
  nameWithType: StringExtensions.SnPl
  fullName: Mewdeko.Extensions.StringExtensions.SnPl
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Extensions.StringExtensions.LevenshteinDistance*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.LevenshteinDistance
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_LevenshteinDistance_System_String_System_String_
  name: LevenshteinDistance
  nameWithType: StringExtensions.LevenshteinDistance
  fullName: Mewdeko.Extensions.StringExtensions.LevenshteinDistance
- uid: Mewdeko.Extensions.StringExtensions.ToStream*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.ToStream
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_ToStream_System_String_
  name: ToStream
  nameWithType: StringExtensions.ToStream
  fullName: Mewdeko.Extensions.StringExtensions.ToStream
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Extensions.StringExtensions.IsDiscordInvite*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.IsDiscordInvite
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_IsDiscordInvite_System_String_
  name: IsDiscordInvite
  nameWithType: StringExtensions.IsDiscordInvite
  fullName: Mewdeko.Extensions.StringExtensions.IsDiscordInvite
- uid: Mewdeko.Extensions.StringExtensions.SanitizeMentions*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.SanitizeMentions
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_SanitizeMentions_System_String_System_Boolean_
  name: SanitizeMentions
  nameWithType: StringExtensions.SanitizeMentions
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeMentions
- uid: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_SanitizeRoleMentions_System_String_
  name: SanitizeRoleMentions
  nameWithType: StringExtensions.SanitizeRoleMentions
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeRoleMentions
- uid: Mewdeko.Extensions.StringExtensions.RemoveUserMentions*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.RemoveUserMentions
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_RemoveUserMentions_System_String_
  name: RemoveUserMentions
  nameWithType: StringExtensions.RemoveUserMentions
  fullName: Mewdeko.Extensions.StringExtensions.RemoveUserMentions
- uid: Mewdeko.Extensions.StringExtensions.GetUserMentions*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.GetUserMentions
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_GetUserMentions_System_String_
  name: GetUserMentions
  nameWithType: StringExtensions.GetUserMentions
  fullName: Mewdeko.Extensions.StringExtensions.GetUserMentions
- uid: System.Collections.Generic.IEnumerable{System.UInt64}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ulong>
  nameWithType: IEnumerable<ulong>
  fullName: System.Collections.Generic.IEnumerable<ulong>
  nameWithType.vb: IEnumerable(Of ULong)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ULong)
  name.vb: IEnumerable(Of ULong)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.SanitizeAllMentions
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_SanitizeAllMentions_System_String_
  name: SanitizeAllMentions
  nameWithType: StringExtensions.SanitizeAllMentions
  fullName: Mewdeko.Extensions.StringExtensions.SanitizeAllMentions
- uid: Mewdeko.Extensions.StringExtensions.ToBase64*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.ToBase64
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_ToBase64_System_String_
  name: ToBase64
  nameWithType: StringExtensions.ToBase64
  fullName: Mewdeko.Extensions.StringExtensions.ToBase64
- uid: Mewdeko.Extensions.StringExtensions.GetInitials*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.GetInitials
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_GetInitials_System_String_System_String_
  name: GetInitials
  nameWithType: StringExtensions.GetInitials
  fullName: Mewdeko.Extensions.StringExtensions.GetInitials
- uid: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.IsAlphaNumeric
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_IsAlphaNumeric_System_String_
  name: IsAlphaNumeric
  nameWithType: StringExtensions.IsAlphaNumeric
  fullName: Mewdeko.Extensions.StringExtensions.IsAlphaNumeric
- uid: Mewdeko.Extensions.StringExtensions.RemoveUrls*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.RemoveUrls
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_RemoveUrls_System_String_
  name: RemoveUrls
  nameWithType: StringExtensions.RemoveUrls
  fullName: Mewdeko.Extensions.StringExtensions.RemoveUrls
- uid: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_EscapeWeirdStuff_System_String_
  name: EscapeWeirdStuff
  nameWithType: StringExtensions.EscapeWeirdStuff
  fullName: Mewdeko.Extensions.StringExtensions.EscapeWeirdStuff
- uid: Mewdeko.Extensions.StringExtensions.TryFormat*
  commentId: Overload:Mewdeko.Extensions.StringExtensions.TryFormat
  href: Mewdeko.Extensions.StringExtensions.html#Mewdeko_Extensions_StringExtensions_TryFormat_System_String_System_Object___System_String__
  name: TryFormat
  nameWithType: StringExtensions.TryFormat
  fullName: Mewdeko.Extensions.StringExtensions.TryFormat
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
