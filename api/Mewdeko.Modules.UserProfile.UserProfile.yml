### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.UserProfile.UserProfile
  commentId: T:Mewdeko.Modules.UserProfile.UserProfile
  id: UserProfile
  parent: Mewdeko.Modules.UserProfile
  children:
  - Mewdeko.Modules.UserProfile.UserProfile.#ctor(Mewdeko.Database.DbService)
  - Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData
  - Mewdeko.Modules.UserProfile.UserProfile.Profile(Discord.IUser)
  - Mewdeko.Modules.UserProfile.UserProfile.Pronouns(Discord.IUser)
  - Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(Discord.IUser,System.Boolean,System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(System.UInt64,System.Boolean,System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.SetBio(System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.SetBirthday(System.DateTime)
  - Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy(Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  - Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy(Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  - Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor(SkiaSharp.SKColor)
  - Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage(System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.SetPronouns(System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc(System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.SetZodiac(System.String)
  - Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut
  langs:
  - csharp
  - vb
  name: UserProfile
  nameWithType: UserProfile
  fullName: Mewdeko.Modules.UserProfile.UserProfile
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserProfile
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 11
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Handles text commands for user profiles, providing functionalities to view and manage user profile details.
  example: []
  syntax:
    content: 'public class UserProfile : MewdekoModuleBase<UserProfileService>, IModuleBase'
    content.vb: Public Class UserProfile Inherits MewdekoModuleBase(Of UserProfileService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.UserProfile.UserProfile.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.#ctor(Mewdeko.Database.DbService)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.#ctor(Mewdeko.Database.DbService)
  id: '#ctor(Mewdeko.Database.DbService)'
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: UserProfile(DbService)
  nameWithType: UserProfile.UserProfile(DbService)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.UserProfile(Mewdeko.Database.DbService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 11
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Handles text commands for user profiles, providing functionalities to view and manage user profile details.
  example: []
  syntax:
    content: public UserProfile(DbService db)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
    content.vb: Public Sub New(db As DbService)
  overload: Mewdeko.Modules.UserProfile.UserProfile.#ctor*
  nameWithType.vb: UserProfile.New(DbService)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.New(Mewdeko.Database.DbService)
  name.vb: New(DbService)
- uid: Mewdeko.Modules.UserProfile.UserProfile.Profile(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.Profile(Discord.IUser)
  id: Profile(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: Profile(IUser)
  nameWithType: UserProfile.Profile(IUser)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.Profile(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Profile
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Shows the user's profile or another user's profile if specified.
  example: []
  syntax:
    content: >-
      [Cmd("Profile")]

      [Aliases("Profile")]

      public Task Profile(IUser user = null)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user whose profile is to be shown. If null, shows the caller's profile.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Profile")>

      <Aliases("Profile")>

      Public Function Profile(user As IUser = Nothing) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.Profile*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Profile
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Profile
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBio(System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetBio(System.String)
  id: SetBio(System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetBio(string)
  nameWithType: UserProfile.SetBio(string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBio(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBio
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets or updates the biography in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetBio")]

      [Aliases("SetBio")]

      public Task SetBio(string bio)
    parameters:
    - id: bio
      type: System.String
      description: The biography text. Must be under 2048 characters.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetBio")>

      <Aliases("SetBio")>

      Public Function SetBio(bio As String) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetBio*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBio
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBio
  nameWithType.vb: UserProfile.SetBio(String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetBio(String)
  name.vb: SetBio(String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac(System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetZodiac(System.String)
  id: SetZodiac(System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetZodiac(string)
  nameWithType: UserProfile.SetZodiac(string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetZodiac
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 49
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the zodiac sign in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetZodiac")]

      [Aliases("SetZodiac")]

      public Task SetZodiac(string zodiac)
    parameters:
    - id: zodiac
      type: System.String
      description: The zodiac sign to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetZodiac")>

      <Aliases("SetZodiac")>

      Public Function SetZodiac(zodiac As String) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetZodiac
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetZodiac
  nameWithType.vb: UserProfile.SetZodiac(String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac(String)
  name.vb: SetZodiac(String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor(SkiaSharp.SKColor)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor(SkiaSharp.SKColor)
  id: SetProfileColor(SkiaSharp.SKColor)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetProfileColor(SKColor)
  nameWithType: UserProfile.SetProfileColor(SKColor)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor(SkiaSharp.SKColor)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetProfileColor
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 63
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the profile color based on an SKColor input.
  example: []
  syntax:
    content: >-
      [Cmd("SetProfileColor")]

      [Aliases("SetProfileColor")]

      public Task SetProfileColor(SKColor input)
    parameters:
    - id: input
      type: SkiaSharp.SKColor
      description: The SKColor representing the desired profile color.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetProfileColor")>

      <Aliases("SetProfileColor")>

      Public Function SetProfileColor(input As SKColor) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetProfileColor
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetProfileColor
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday(System.DateTime)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetBirthday(System.DateTime)
  id: SetBirthday(System.DateTime)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetBirthday(DateTime)
  nameWithType: UserProfile.SetBirthday(DateTime)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBirthday
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 75
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the birthday in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetBirthday")]

      [Aliases("SetBirthday")]

      public Task SetBirthday(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: The birthday date.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetBirthday")>

      <Aliases("SetBirthday")>

      Public Function SetBirthday(dateTime As Date) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBirthday
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBirthday
  nameWithType.vb: UserProfile.SetBirthday(Date)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday(Date)
  name.vb: SetBirthday(Date)
- uid: Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut
  id: UserStatsOptOut
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: UserStatsOptOut()
  nameWithType: UserProfile.UserStatsOptOut()
  fullName: Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserStatsOptOut
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 85
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Toggles the user's opt-out status for command statistics collection.
  example: []
  syntax:
    content: >-
      [Cmd("UserStatsOptOut")]

      [Aliases("UserStatsOptOut")]

      public Task UserStatsOptOut()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("UserStatsOptOut")>

      <Aliases("UserStatsOptOut")>

      Public Function UserStatsOptOut() As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: UserStatsOptOut
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UserStatsOptOut
- uid: Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData
  id: DeleteUserStatsData
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: DeleteUserStatsData()
  nameWithType: UserProfile.DeleteUserStatsData()
  fullName: Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DeleteUserStatsData
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 99
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Deletes the user's command statistics data.
  example: []
  syntax:
    content: >-
      [Cmd("DeleteUserStatsData")]

      [Aliases("DeleteUserStatsData")]

      [Ratelimit(3600)]

      public Task DeleteUserStatsData()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("DeleteUserStatsData")>

      <Aliases("DeleteUserStatsData")>

      <Ratelimit(3600)>

      Public Function DeleteUserStatsData() As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeleteUserStatsData
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeleteUserStatsData
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3600
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy(Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy(Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  id: SetBirthdayPrivacy(Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetBirthdayPrivacy(BirthdayDisplayModeEnum)
  nameWithType: UserProfile.SetBirthdayPrivacy(DiscordUser.BirthdayDisplayModeEnum)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy(Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetBirthdayPrivacy
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 116
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the birthday privacy mode in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetBirthdayPrivacy")]

      [Aliases("SetBirthdayPrivacy")]

      public Task SetBirthdayPrivacy(DiscordUser.BirthdayDisplayModeEnum birthdayDisplayModeEnum)
    parameters:
    - id: birthdayDisplayModeEnum
      type: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
      description: The birthday display mode to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetBirthdayPrivacy")>

      <Aliases("SetBirthdayPrivacy")>

      Public Function SetBirthdayPrivacy(birthdayDisplayModeEnum As DiscordUser.BirthdayDisplayModeEnum) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBirthdayPrivacy
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetBirthdayPrivacy
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage(System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage(System.String)
  id: SetProfileImage(System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetProfileImage(string)
  nameWithType: UserProfile.SetProfileImage(string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetProfileImage
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 128
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the profile image URL in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetProfileImage")]

      [Aliases("SetProfileImage")]

      public Task SetProfileImage(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the image to set as the profile image.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetProfileImage")>

      <Aliases("SetProfileImage")>

      Public Function SetProfileImage(url As String) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetProfileImage
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetProfileImage
  nameWithType.vb: UserProfile.SetProfileImage(String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage(String)
  name.vb: SetProfileImage(String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy(Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy(Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  id: SetPrivacy(Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetPrivacy(ProfilePrivacyEnum)
  nameWithType: UserProfile.SetPrivacy(DiscordUser.ProfilePrivacyEnum)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy(Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetPrivacy
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 148
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets the privacy level of the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetPrivacy")]

      [Aliases("SetPrivacy")]

      public Task SetPrivacy(DiscordUser.ProfilePrivacyEnum privacyEnum)
    parameters:
    - id: privacyEnum
      type: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
      description: The privacy setting to apply.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetPrivacy")>

      <Aliases("SetPrivacy")>

      Public Function SetPrivacy(privacyEnum As DiscordUser.ProfilePrivacyEnum) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetPrivacy
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetPrivacy
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc(System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc(System.String)
  id: SetSwitchFc(System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetSwitchFc(string)
  nameWithType: UserProfile.SetSwitchFc(string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetSwitchFc
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 159
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets or clears the Nintendo Switch friend code in the user's profile.
  example: []
  syntax:
    content: >-
      [Cmd("SetSwitchFc")]

      [Aliases("SetSwitchFc")]

      public Task SetSwitchFc(string switchFc = "")
    parameters:
    - id: switchFc
      type: System.String
      description: The Nintendo Switch friend code. If blank, clears the existing code.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetSwitchFc")>

      <Aliases("SetSwitchFc")>

      Public Function SetSwitchFc(switchFc As String = "") As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetSwitchFc
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetSwitchFc
  nameWithType.vb: UserProfile.SetSwitchFc(String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc(String)
  name.vb: SetSwitchFc(String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.Pronouns(Discord.IUser)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.Pronouns(Discord.IUser)
  id: Pronouns(Discord.IUser)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: Pronouns(IUser?)
  nameWithType: UserProfile.Pronouns(IUser?)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.Pronouns(Discord.IUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pronouns
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 180
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Displays the pronouns of the specified user or the command caller if no user is specified.
  example: []
  syntax:
    content: >-
      [Cmd("Pronouns")]

      [Aliases("Pronouns")]

      public Task Pronouns(IUser? user = null)
    parameters:
    - id: user
      type: Discord.IUser
      description: Optional. The user whose pronouns are to be displayed.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Pronouns")>

      <Aliases("Pronouns")>

      Public Function Pronouns(user As IUser = Nothing) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.Pronouns*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pronouns
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pronouns
  nameWithType.vb: UserProfile.Pronouns(IUser)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.Pronouns(Discord.IUser)
  name.vb: Pronouns(IUser)
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns(System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.SetPronouns(System.String)
  id: SetPronouns(System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: SetPronouns(string?)
  nameWithType: UserProfile.SetPronouns(string?)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetPronouns
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 204
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Sets or clears the pronouns for the user.
  example: []
  syntax:
    content: >-
      [Cmd("SetPronouns")]

      [Aliases("SetPronouns")]

      public Task SetPronouns(string? pronouns = null)
    parameters:
    - id: pronouns
      type: System.String
      description: The pronouns to set. If null or empty, clears any existing pronouns.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetPronouns")>

      <Aliases("SetPronouns")>

      Public Function SetPronouns(pronouns As String = Nothing) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetPronouns
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetPronouns
  nameWithType.vb: UserProfile.SetPronouns(String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns(String)
  name.vb: SetPronouns(String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(Discord.IUser,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(Discord.IUser,System.Boolean,System.String)
  id: PronounsForceClear(Discord.IUser,System.Boolean,System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: PronounsForceClear(IUser?, bool, string)
  nameWithType: UserProfile.PronounsForceClear(IUser?, bool, string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(Discord.IUser?, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PronounsForceClear
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 244
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Force-clears the pronouns for a user, optionally marking them as disabled due to abuse.
  example: []
  syntax:
    content: >-
      [Cmd("PronounsForceClear")]

      [Aliases("PronounsForceClear")]

      [OwnerOnly]

      public Task PronounsForceClear(IUser? user, bool pronounsDisabledAbuse, string reason)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user whose pronouns are to be cleared.
    - id: pronounsDisabledAbuse
      type: System.Boolean
      description: Whether the pronouns are being disabled due to abuse.
    - id: reason
      type: System.String
      description: The reason for the action.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("PronounsForceClear")>

      <Aliases("PronounsForceClear")>

      <OwnerOnly>

      Public Function PronounsForceClear(user As IUser, pronounsDisabledAbuse As Boolean, reason As String) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: PronounsForceClear
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: PronounsForceClear
  - type: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute.#ctor
    arguments: []
  nameWithType.vb: UserProfile.PronounsForceClear(IUser, Boolean, String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(Discord.IUser, Boolean, String)
  name.vb: PronounsForceClear(IUser, Boolean, String)
- uid: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(System.UInt64,System.Boolean,System.String)
  commentId: M:Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(System.UInt64,System.Boolean,System.String)
  id: PronounsForceClear(System.UInt64,System.Boolean,System.String)
  parent: Mewdeko.Modules.UserProfile.UserProfile
  langs:
  - csharp
  - vb
  name: PronounsForceClear(ulong, bool, string)
  nameWithType: UserProfile.PronounsForceClear(ulong, bool, string)
  fullName: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(ulong, bool, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PronounsForceClear
    path: src/Mewdeko/Modules/UserProfile/UserProfile.cs
    startLine: 263
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.UserProfile
  summary: Force-clears the pronouns for a user by ID, optionally marking them as disabled due to abuse.
  example: []
  syntax:
    content: >-
      [Cmd("PronounsForceClear")]

      [Aliases("PronounsForceClear")]

      [OwnerOnly]

      public Task PronounsForceClear(ulong user, bool pronounsDisabledAbuse, string reason)
    parameters:
    - id: user
      type: System.UInt64
      description: The user ID of the user whose pronouns are to be cleared.
    - id: pronounsDisabledAbuse
      type: System.Boolean
      description: Whether the pronouns are being disabled due to abuse.
    - id: reason
      type: System.String
      description: The reason for the action.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("PronounsForceClear")>

      <Aliases("PronounsForceClear")>

      <OwnerOnly>

      Public Function PronounsForceClear(user As ULong, pronounsDisabledAbuse As Boolean, reason As String) As Task
  overload: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: PronounsForceClear
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: PronounsForceClear
  - type: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.OwnerOnlyAttribute.#ctor
    arguments: []
  nameWithType.vb: UserProfile.PronounsForceClear(ULong, Boolean, String)
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear(ULong, Boolean, String)
  name.vb: PronounsForceClear(ULong, Boolean, String)
references:
- uid: Mewdeko.Modules.UserProfile
  commentId: N:Mewdeko.Modules.UserProfile
  href: Mewdeko.html
  name: Mewdeko.Modules.UserProfile
  nameWithType: Mewdeko.Modules.UserProfile
  fullName: Mewdeko.Modules.UserProfile
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<UserProfileService>
  nameWithType: MewdekoModuleBase<UserProfileService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.UserProfile.Services.UserProfileService>
  nameWithType.vb: MewdekoModuleBase(Of UserProfileService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.UserProfile.Services.UserProfileService)
  name.vb: MewdekoModuleBase(Of UserProfileService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.Services.UserProfileService
    name: UserProfileService
    href: Mewdeko.Modules.UserProfile.Services.UserProfileService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.UserProfile.Services.UserProfileService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<UserProfileService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.UserProfile.Services.UserProfileService>.Service
  nameWithType.vb: MewdekoModuleBase(Of UserProfileService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.UserProfile.Services.UserProfileService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.UserProfile.UserProfile.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserProfile>(UserProfile, string)
  nameWithType: Extensions.ThrowIfNull<UserProfile>(UserProfile, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.UserProfile.UserProfile>(Mewdeko.Modules.UserProfile.UserProfile, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of UserProfile)(UserProfile, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.UserProfile.UserProfile)(Mewdeko.Modules.UserProfile.UserProfile, String)
  name.vb: ThrowIfNull(Of UserProfile)(UserProfile, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.UserProfile.UserProfile,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.UserProfile.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.UserProfile.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.UserProfile.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.UserProfile.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.UserProfile.UserProfile,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.UserProfile.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.UserProfile.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.UserProfile.UserProfile
    name: UserProfile
    href: Mewdeko.Modules.UserProfile.UserProfile.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.UserProfile.UserProfile.#ctor*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.#ctor
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile__ctor_Mewdeko_Database_DbService_
  name: UserProfile
  nameWithType: UserProfile.UserProfile
  fullName: Mewdeko.Modules.UserProfile.UserProfile.UserProfile
  nameWithType.vb: UserProfile.New
  fullName.vb: Mewdeko.Modules.UserProfile.UserProfile.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Modules.UserProfile.UserProfile.Profile*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.Profile
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_Profile_Discord_IUser_
  name: Profile
  nameWithType: UserProfile.Profile
  fullName: Mewdeko.Modules.UserProfile.UserProfile.Profile
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBio*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetBio
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetBio_System_String_
  name: SetBio
  nameWithType: UserProfile.SetBio
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBio
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetZodiac
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetZodiac_System_String_
  name: SetZodiac
  nameWithType: UserProfile.SetZodiac
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetZodiac
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetProfileColor_SkiaSharp_SKColor_
  name: SetProfileColor
  nameWithType: UserProfile.SetProfileColor
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetProfileColor
- uid: SkiaSharp.SKColor
  commentId: T:SkiaSharp.SKColor
  parent: SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp.skcolor
  name: SKColor
  nameWithType: SKColor
  fullName: SkiaSharp.SKColor
- uid: SkiaSharp
  commentId: N:SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp
  name: SkiaSharp
  nameWithType: SkiaSharp
  fullName: SkiaSharp
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetBirthday
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetBirthday_System_DateTime_
  name: SetBirthday
  nameWithType: UserProfile.SetBirthday
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBirthday
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_UserStatsOptOut
  name: UserStatsOptOut
  nameWithType: UserProfile.UserStatsOptOut
  fullName: Mewdeko.Modules.UserProfile.UserProfile.UserStatsOptOut
- uid: Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_DeleteUserStatsData
  name: DeleteUserStatsData
  nameWithType: UserProfile.DeleteUserStatsData
  fullName: Mewdeko.Modules.UserProfile.UserProfile.DeleteUserStatsData
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetBirthdayPrivacy_Mewdeko_Database_Models_DiscordUser_BirthdayDisplayModeEnum_
  name: SetBirthdayPrivacy
  nameWithType: UserProfile.SetBirthdayPrivacy
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetBirthdayPrivacy
- uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  commentId: T:Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser.BirthdayDisplayModeEnum
  nameWithType: DiscordUser.BirthdayDisplayModeEnum
  fullName: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
  spec.csharp:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
    name: BirthdayDisplayModeEnum
    href: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum.html
  spec.vb:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum
    name: BirthdayDisplayModeEnum
    href: Mewdeko.Database.Models.DiscordUser.BirthdayDisplayModeEnum.html
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetProfileImage_System_String_
  name: SetProfileImage
  nameWithType: UserProfile.SetProfileImage
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetProfileImage
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetPrivacy_Mewdeko_Database_Models_DiscordUser_ProfilePrivacyEnum_
  name: SetPrivacy
  nameWithType: UserProfile.SetPrivacy
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetPrivacy
- uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  commentId: T:Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser.ProfilePrivacyEnum
  nameWithType: DiscordUser.ProfilePrivacyEnum
  fullName: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
  spec.csharp:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
    href: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum.html
  spec.vb:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: .
  - uid: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum
    name: ProfilePrivacyEnum
    href: Mewdeko.Database.Models.DiscordUser.ProfilePrivacyEnum.html
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetSwitchFc_System_String_
  name: SetSwitchFc
  nameWithType: UserProfile.SetSwitchFc
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetSwitchFc
- uid: Mewdeko.Modules.UserProfile.UserProfile.Pronouns*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.Pronouns
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_Pronouns_Discord_IUser_
  name: Pronouns
  nameWithType: UserProfile.Pronouns
  fullName: Mewdeko.Modules.UserProfile.UserProfile.Pronouns
- uid: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.SetPronouns
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_SetPronouns_System_String_
  name: SetPronouns
  nameWithType: UserProfile.SetPronouns
  fullName: Mewdeko.Modules.UserProfile.UserProfile.SetPronouns
- uid: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear*
  commentId: Overload:Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear
  href: Mewdeko.Modules.UserProfile.UserProfile.html#Mewdeko_Modules_UserProfile_UserProfile_PronounsForceClear_Discord_IUser_System_Boolean_System_String_
  name: PronounsForceClear
  nameWithType: UserProfile.PronounsForceClear
  fullName: Mewdeko.Modules.UserProfile.UserProfile.PronounsForceClear
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
