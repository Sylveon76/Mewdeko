### YamlMime:ManagedReference
items:
- uid: Mewdeko.Services.ICoordinator
  commentId: T:Mewdeko.Services.ICoordinator
  id: ICoordinator
  parent: Mewdeko.Services
  children:
  - Mewdeko.Services.ICoordinator.Die
  - Mewdeko.Services.ICoordinator.GetAllShardStatuses
  - Mewdeko.Services.ICoordinator.GetGuildCount
  - Mewdeko.Services.ICoordinator.GetUserCount
  - Mewdeko.Services.ICoordinator.RestartBot
  - Mewdeko.Services.ICoordinator.RestartShard(System.Int32)
  langs:
  - csharp
  - vb
  name: ICoordinator
  nameWithType: ICoordinator
  fullName: Mewdeko.Services.ICoordinator
  type: Interface
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ICoordinator
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 5
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Interface for coordinating bot actions and retrieving shard information.
  example: []
  syntax:
    content: public interface ICoordinator
    content.vb: Public Interface ICoordinator
  extensionMethods:
  - Mewdeko.Services.ICoordinator.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Services.ICoordinator.RestartBot
  commentId: M:Mewdeko.Services.ICoordinator.RestartBot
  id: RestartBot
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: RestartBot()
  nameWithType: ICoordinator.RestartBot()
  fullName: Mewdeko.Services.ICoordinator.RestartBot()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartBot
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 11
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Restarts the entire bot.
  example: []
  syntax:
    content: bool RestartBot()
    return:
      type: System.Boolean
      description: True if the restart was successful, otherwise false.
    content.vb: Function RestartBot() As Boolean
  overload: Mewdeko.Services.ICoordinator.RestartBot*
- uid: Mewdeko.Services.ICoordinator.Die
  commentId: M:Mewdeko.Services.ICoordinator.Die
  id: Die
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: Die()
  nameWithType: ICoordinator.Die()
  fullName: Mewdeko.Services.ICoordinator.Die()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Die
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 16
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Shuts down the bot.
  example: []
  syntax:
    content: void Die()
    content.vb: Sub Die()
  overload: Mewdeko.Services.ICoordinator.Die*
- uid: Mewdeko.Services.ICoordinator.RestartShard(System.Int32)
  commentId: M:Mewdeko.Services.ICoordinator.RestartShard(System.Int32)
  id: RestartShard(System.Int32)
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: RestartShard(int)
  nameWithType: ICoordinator.RestartShard(int)
  fullName: Mewdeko.Services.ICoordinator.RestartShard(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartShard
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 23
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Restarts the specified shard.
  example: []
  syntax:
    content: bool RestartShard(int shardId)
    parameters:
    - id: shardId
      type: System.Int32
      description: The ID of the shard to restart.
    return:
      type: System.Boolean
      description: True if the restart was successful, otherwise false.
    content.vb: Function RestartShard(shardId As Integer) As Boolean
  overload: Mewdeko.Services.ICoordinator.RestartShard*
  nameWithType.vb: ICoordinator.RestartShard(Integer)
  fullName.vb: Mewdeko.Services.ICoordinator.RestartShard(Integer)
  name.vb: RestartShard(Integer)
- uid: Mewdeko.Services.ICoordinator.GetAllShardStatuses
  commentId: M:Mewdeko.Services.ICoordinator.GetAllShardStatuses
  id: GetAllShardStatuses
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: GetAllShardStatuses()
  nameWithType: ICoordinator.GetAllShardStatuses()
  fullName: Mewdeko.Services.ICoordinator.GetAllShardStatuses()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllShardStatuses
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 29
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Retrieves the status of all shards.
  example: []
  syntax:
    content: IList<ShardStatus> GetAllShardStatuses()
    return:
      type: System.Collections.Generic.IList{Mewdeko.Services.ShardStatus}
      description: A list of <xref href="Mewdeko.Services.ShardStatus" data-throw-if-not-resolved="false"></xref> objects representing the status of each shard.
    content.vb: Function GetAllShardStatuses() As IList(Of ShardStatus)
  overload: Mewdeko.Services.ICoordinator.GetAllShardStatuses*
- uid: Mewdeko.Services.ICoordinator.GetGuildCount
  commentId: M:Mewdeko.Services.ICoordinator.GetGuildCount
  id: GetGuildCount
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: GetGuildCount()
  nameWithType: ICoordinator.GetGuildCount()
  fullName: Mewdeko.Services.ICoordinator.GetGuildCount()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetGuildCount
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Retrieves the total number of guilds across all shards.
  example: []
  syntax:
    content: int GetGuildCount()
    return:
      type: System.Int32
      description: The total number of guilds.
    content.vb: Function GetGuildCount() As Integer
  overload: Mewdeko.Services.ICoordinator.GetGuildCount*
- uid: Mewdeko.Services.ICoordinator.GetUserCount
  commentId: M:Mewdeko.Services.ICoordinator.GetUserCount
  id: GetUserCount
  parent: Mewdeko.Services.ICoordinator
  langs:
  - csharp
  - vb
  name: GetUserCount()
  nameWithType: ICoordinator.GetUserCount()
  fullName: Mewdeko.Services.ICoordinator.GetUserCount()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/ICoordinator.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserCount
    path: src/Mewdeko/Services/ICoordinator.cs
    startLine: 41
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Retrieves the total number of users across all shards.
  example: []
  syntax:
    content: int GetUserCount()
    return:
      type: System.Int32
      description: The total number of users.
    content.vb: Function GetUserCount() As Integer
  overload: Mewdeko.Services.ICoordinator.GetUserCount*
references:
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Services.ICoordinator.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ICoordinator>(ICoordinator, string)
  nameWithType: Extensions.ThrowIfNull<ICoordinator>(ICoordinator, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Services.ICoordinator>(Mewdeko.Services.ICoordinator, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of ICoordinator)(ICoordinator, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Services.ICoordinator)(Mewdeko.Services.ICoordinator, String)
  name.vb: ThrowIfNull(Of ICoordinator)(ICoordinator, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.ICoordinator,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Services.ICoordinator
    name: ICoordinator
    href: Mewdeko.Services.ICoordinator.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Services.ICoordinator
    name: ICoordinator
    href: Mewdeko.Services.ICoordinator.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.ICoordinator,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.ICoordinator
    name: ICoordinator
    href: Mewdeko.Services.ICoordinator.html
  - name: )
  - name: (
  - uid: Mewdeko.Services.ICoordinator
    name: ICoordinator
    href: Mewdeko.Services.ICoordinator.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.ICoordinator.RestartBot*
  commentId: Overload:Mewdeko.Services.ICoordinator.RestartBot
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_RestartBot
  name: RestartBot
  nameWithType: ICoordinator.RestartBot
  fullName: Mewdeko.Services.ICoordinator.RestartBot
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services.ICoordinator.Die*
  commentId: Overload:Mewdeko.Services.ICoordinator.Die
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_Die
  name: Die
  nameWithType: ICoordinator.Die
  fullName: Mewdeko.Services.ICoordinator.Die
- uid: Mewdeko.Services.ICoordinator.RestartShard*
  commentId: Overload:Mewdeko.Services.ICoordinator.RestartShard
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_RestartShard_System_Int32_
  name: RestartShard
  nameWithType: ICoordinator.RestartShard
  fullName: Mewdeko.Services.ICoordinator.RestartShard
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Services.ShardStatus
  commentId: T:Mewdeko.Services.ShardStatus
  href: Mewdeko.Services.ShardStatus.html
  name: ShardStatus
  nameWithType: ShardStatus
  fullName: Mewdeko.Services.ShardStatus
- uid: Mewdeko.Services.ICoordinator.GetAllShardStatuses*
  commentId: Overload:Mewdeko.Services.ICoordinator.GetAllShardStatuses
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_GetAllShardStatuses
  name: GetAllShardStatuses
  nameWithType: ICoordinator.GetAllShardStatuses
  fullName: Mewdeko.Services.ICoordinator.GetAllShardStatuses
- uid: System.Collections.Generic.IList{Mewdeko.Services.ShardStatus}
  commentId: T:System.Collections.Generic.IList{Mewdeko.Services.ShardStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<ShardStatus>
  nameWithType: IList<ShardStatus>
  fullName: System.Collections.Generic.IList<Mewdeko.Services.ShardStatus>
  nameWithType.vb: IList(Of ShardStatus)
  fullName.vb: System.Collections.Generic.IList(Of Mewdeko.Services.ShardStatus)
  name.vb: IList(Of ShardStatus)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Mewdeko.Services.ShardStatus
    name: ShardStatus
    href: Mewdeko.Services.ShardStatus.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.ShardStatus
    name: ShardStatus
    href: Mewdeko.Services.ShardStatus.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Services.ICoordinator.GetGuildCount*
  commentId: Overload:Mewdeko.Services.ICoordinator.GetGuildCount
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_GetGuildCount
  name: GetGuildCount
  nameWithType: ICoordinator.GetGuildCount
  fullName: Mewdeko.Services.ICoordinator.GetGuildCount
- uid: Mewdeko.Services.ICoordinator.GetUserCount*
  commentId: Overload:Mewdeko.Services.ICoordinator.GetUserCount
  href: Mewdeko.Services.ICoordinator.html#Mewdeko_Services_ICoordinator_GetUserCount
  name: GetUserCount
  nameWithType: ICoordinator.GetUserCount
  fullName: Mewdeko.Services.ICoordinator.GetUserCount
