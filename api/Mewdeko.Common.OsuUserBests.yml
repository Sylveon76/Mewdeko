### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.OsuUserBests
  commentId: T:Mewdeko.Common.OsuUserBests
  id: OsuUserBests
  parent: Mewdeko.Common
  children:
  - Mewdeko.Common.OsuUserBests.BeatmapId
  - Mewdeko.Common.OsuUserBests.Count100
  - Mewdeko.Common.OsuUserBests.Count300
  - Mewdeko.Common.OsuUserBests.Count50
  - Mewdeko.Common.OsuUserBests.Countgeki
  - Mewdeko.Common.OsuUserBests.Countkatu
  - Mewdeko.Common.OsuUserBests.Countmiss
  - Mewdeko.Common.OsuUserBests.Date
  - Mewdeko.Common.OsuUserBests.EnabledMods
  - Mewdeko.Common.OsuUserBests.Maxcombo
  - Mewdeko.Common.OsuUserBests.Perfect
  - Mewdeko.Common.OsuUserBests.Pp
  - Mewdeko.Common.OsuUserBests.Rank
  - Mewdeko.Common.OsuUserBests.ReplayAvailable
  - Mewdeko.Common.OsuUserBests.Score
  - Mewdeko.Common.OsuUserBests.ScoreId
  - Mewdeko.Common.OsuUserBests.UserId
  langs:
  - csharp
  - vb
  name: OsuUserBests
  nameWithType: OsuUserBests
  fullName: Mewdeko.Common.OsuUserBests
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OsuUserBests
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Represents a user's best performance on an Osu! map.
  example: []
  syntax:
    content: public class OsuUserBests
    content.vb: Public Class OsuUserBests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Common.OsuUserBests.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Common.OsuUserBests.BeatmapId
  commentId: P:Mewdeko.Common.OsuUserBests.BeatmapId
  id: BeatmapId
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: BeatmapId
  nameWithType: OsuUserBests.BeatmapId
  fullName: Mewdeko.Common.OsuUserBests.BeatmapId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BeatmapId
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the beatmap ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("beatmap_id")]

      public string BeatmapId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("beatmap_id")>

      Public Property BeatmapId As String
  overload: Mewdeko.Common.OsuUserBests.BeatmapId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: beatmap_id
- uid: Mewdeko.Common.OsuUserBests.ScoreId
  commentId: P:Mewdeko.Common.OsuUserBests.ScoreId
  id: ScoreId
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: ScoreId
  nameWithType: OsuUserBests.ScoreId
  fullName: Mewdeko.Common.OsuUserBests.ScoreId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ScoreId
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 18
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the score ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("score_id")]

      public string ScoreId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("score_id")>

      Public Property ScoreId As String
  overload: Mewdeko.Common.OsuUserBests.ScoreId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: score_id
- uid: Mewdeko.Common.OsuUserBests.Score
  commentId: P:Mewdeko.Common.OsuUserBests.Score
  id: Score
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: OsuUserBests.Score
  fullName: Mewdeko.Common.OsuUserBests.Score
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Score
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the score achieved.
  example: []
  syntax:
    content: >-
      [JsonProperty("score")]

      public string Score { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("score")>

      Public Property Score As String
  overload: Mewdeko.Common.OsuUserBests.Score*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: score
- uid: Mewdeko.Common.OsuUserBests.Maxcombo
  commentId: P:Mewdeko.Common.OsuUserBests.Maxcombo
  id: Maxcombo
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Maxcombo
  nameWithType: OsuUserBests.Maxcombo
  fullName: Mewdeko.Common.OsuUserBests.Maxcombo
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Maxcombo
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 30
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the maximum combo achieved.
  example: []
  syntax:
    content: >-
      [JsonProperty("maxcombo")]

      public string Maxcombo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("maxcombo")>

      Public Property Maxcombo As String
  overload: Mewdeko.Common.OsuUserBests.Maxcombo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxcombo
- uid: Mewdeko.Common.OsuUserBests.Count50
  commentId: P:Mewdeko.Common.OsuUserBests.Count50
  id: Count50
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Count50
  nameWithType: OsuUserBests.Count50
  fullName: Mewdeko.Common.OsuUserBests.Count50
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Count50
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 36
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of 50s.
  example: []
  syntax:
    content: >-
      [JsonProperty("count50")]

      public double Count50 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("count50")>

      Public Property Count50 As Double
  overload: Mewdeko.Common.OsuUserBests.Count50*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: count50
- uid: Mewdeko.Common.OsuUserBests.Count100
  commentId: P:Mewdeko.Common.OsuUserBests.Count100
  id: Count100
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Count100
  nameWithType: OsuUserBests.Count100
  fullName: Mewdeko.Common.OsuUserBests.Count100
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Count100
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 42
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of 100s.
  example: []
  syntax:
    content: >-
      [JsonProperty("count100")]

      public double Count100 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("count100")>

      Public Property Count100 As Double
  overload: Mewdeko.Common.OsuUserBests.Count100*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: count100
- uid: Mewdeko.Common.OsuUserBests.Count300
  commentId: P:Mewdeko.Common.OsuUserBests.Count300
  id: Count300
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Count300
  nameWithType: OsuUserBests.Count300
  fullName: Mewdeko.Common.OsuUserBests.Count300
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Count300
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 48
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of 300s.
  example: []
  syntax:
    content: >-
      [JsonProperty("count300")]

      public double Count300 { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("count300")>

      Public Property Count300 As Double
  overload: Mewdeko.Common.OsuUserBests.Count300*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: count300
- uid: Mewdeko.Common.OsuUserBests.Countmiss
  commentId: P:Mewdeko.Common.OsuUserBests.Countmiss
  id: Countmiss
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Countmiss
  nameWithType: OsuUserBests.Countmiss
  fullName: Mewdeko.Common.OsuUserBests.Countmiss
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Countmiss
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of misses.
  example: []
  syntax:
    content: >-
      [JsonProperty("countmiss")]

      public int Countmiss { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("countmiss")>

      Public Property Countmiss As Integer
  overload: Mewdeko.Common.OsuUserBests.Countmiss*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: countmiss
- uid: Mewdeko.Common.OsuUserBests.Countkatu
  commentId: P:Mewdeko.Common.OsuUserBests.Countkatu
  id: Countkatu
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Countkatu
  nameWithType: OsuUserBests.Countkatu
  fullName: Mewdeko.Common.OsuUserBests.Countkatu
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Countkatu
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 60
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of katus.
  example: []
  syntax:
    content: >-
      [JsonProperty("countkatu")]

      public double Countkatu { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("countkatu")>

      Public Property Countkatu As Double
  overload: Mewdeko.Common.OsuUserBests.Countkatu*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: countkatu
- uid: Mewdeko.Common.OsuUserBests.Countgeki
  commentId: P:Mewdeko.Common.OsuUserBests.Countgeki
  id: Countgeki
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Countgeki
  nameWithType: OsuUserBests.Countgeki
  fullName: Mewdeko.Common.OsuUserBests.Countgeki
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Countgeki
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 66
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the number of gekis.
  example: []
  syntax:
    content: >-
      [JsonProperty("countgeki")]

      public double Countgeki { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("countgeki")>

      Public Property Countgeki As Double
  overload: Mewdeko.Common.OsuUserBests.Countgeki*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: countgeki
- uid: Mewdeko.Common.OsuUserBests.Perfect
  commentId: P:Mewdeko.Common.OsuUserBests.Perfect
  id: Perfect
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Perfect
  nameWithType: OsuUserBests.Perfect
  fullName: Mewdeko.Common.OsuUserBests.Perfect
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Perfect
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets whether the performance was perfect.
  example: []
  syntax:
    content: >-
      [JsonProperty("perfect")]

      public string Perfect { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("perfect")>

      Public Property Perfect As String
  overload: Mewdeko.Common.OsuUserBests.Perfect*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: perfect
- uid: Mewdeko.Common.OsuUserBests.EnabledMods
  commentId: P:Mewdeko.Common.OsuUserBests.EnabledMods
  id: EnabledMods
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: EnabledMods
  nameWithType: OsuUserBests.EnabledMods
  fullName: Mewdeko.Common.OsuUserBests.EnabledMods
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EnabledMods
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 78
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the enabled mods.
  example: []
  syntax:
    content: >-
      [JsonProperty("enabled_mods")]

      public int EnabledMods { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("enabled_mods")>

      Public Property EnabledMods As Integer
  overload: Mewdeko.Common.OsuUserBests.EnabledMods*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enabled_mods
- uid: Mewdeko.Common.OsuUserBests.UserId
  commentId: P:Mewdeko.Common.OsuUserBests.UserId
  id: UserId
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: OsuUserBests.UserId
  fullName: Mewdeko.Common.OsuUserBests.UserId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserId
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 84
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the user ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("user_id")]

      public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("user_id")>

      Public Property UserId As String
  overload: Mewdeko.Common.OsuUserBests.UserId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: user_id
- uid: Mewdeko.Common.OsuUserBests.Date
  commentId: P:Mewdeko.Common.OsuUserBests.Date
  id: Date
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: OsuUserBests.Date
  fullName: Mewdeko.Common.OsuUserBests.Date
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Date
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 90
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the date of the performance.
  example: []
  syntax:
    content: >-
      [JsonProperty("date")]

      public string Date { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("date")>

      Public Property [Date] As String
  overload: Mewdeko.Common.OsuUserBests.Date*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: date
- uid: Mewdeko.Common.OsuUserBests.Rank
  commentId: P:Mewdeko.Common.OsuUserBests.Rank
  id: Rank
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: OsuUserBests.Rank
  fullName: Mewdeko.Common.OsuUserBests.Rank
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Rank
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 96
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the rank achieved.
  example: []
  syntax:
    content: >-
      [JsonProperty("rank")]

      public string Rank { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("rank")>

      Public Property Rank As String
  overload: Mewdeko.Common.OsuUserBests.Rank*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rank
- uid: Mewdeko.Common.OsuUserBests.Pp
  commentId: P:Mewdeko.Common.OsuUserBests.Pp
  id: Pp
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: Pp
  nameWithType: OsuUserBests.Pp
  fullName: Mewdeko.Common.OsuUserBests.Pp
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pp
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 102
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets the performance points (pp) earned.
  example: []
  syntax:
    content: >-
      [JsonProperty("pp")]

      public double Pp { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("pp")>

      Public Property Pp As Double
  overload: Mewdeko.Common.OsuUserBests.Pp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pp
- uid: Mewdeko.Common.OsuUserBests.ReplayAvailable
  commentId: P:Mewdeko.Common.OsuUserBests.ReplayAvailable
  id: ReplayAvailable
  parent: Mewdeko.Common.OsuUserBests
  langs:
  - csharp
  - vb
  name: ReplayAvailable
  nameWithType: OsuUserBests.ReplayAvailable
  fullName: Mewdeko.Common.OsuUserBests.ReplayAvailable
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/OsuUserBets.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReplayAvailable
    path: src/Mewdeko/Common/OsuUserBets.cs
    startLine: 108
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets or sets whether the replay is available.
  example: []
  syntax:
    content: >-
      [JsonProperty("replay_available")]

      public string ReplayAvailable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("replay_available")>

      Public Property ReplayAvailable As String
  overload: Mewdeko.Common.OsuUserBests.ReplayAvailable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: replay_available
references:
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.OsuUserBests.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<OsuUserBests>(OsuUserBests, string)
  nameWithType: Extensions.ThrowIfNull<OsuUserBests>(OsuUserBests, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.OsuUserBests>(Mewdeko.Common.OsuUserBests, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of OsuUserBests)(OsuUserBests, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.OsuUserBests)(Mewdeko.Common.OsuUserBests, String)
  name.vb: ThrowIfNull(Of OsuUserBests)(OsuUserBests, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.OsuUserBests,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.OsuUserBests
    name: OsuUserBests
    href: Mewdeko.Common.OsuUserBests.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.OsuUserBests
    name: OsuUserBests
    href: Mewdeko.Common.OsuUserBests.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.OsuUserBests,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.OsuUserBests
    name: OsuUserBests
    href: Mewdeko.Common.OsuUserBests.html
  - name: )
  - name: (
  - uid: Mewdeko.Common.OsuUserBests
    name: OsuUserBests
    href: Mewdeko.Common.OsuUserBests.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.OsuUserBests.BeatmapId*
  commentId: Overload:Mewdeko.Common.OsuUserBests.BeatmapId
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_BeatmapId
  name: BeatmapId
  nameWithType: OsuUserBests.BeatmapId
  fullName: Mewdeko.Common.OsuUserBests.BeatmapId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Common.OsuUserBests.ScoreId*
  commentId: Overload:Mewdeko.Common.OsuUserBests.ScoreId
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_ScoreId
  name: ScoreId
  nameWithType: OsuUserBests.ScoreId
  fullName: Mewdeko.Common.OsuUserBests.ScoreId
- uid: Mewdeko.Common.OsuUserBests.Score*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Score
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Score
  name: Score
  nameWithType: OsuUserBests.Score
  fullName: Mewdeko.Common.OsuUserBests.Score
- uid: Mewdeko.Common.OsuUserBests.Maxcombo*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Maxcombo
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Maxcombo
  name: Maxcombo
  nameWithType: OsuUserBests.Maxcombo
  fullName: Mewdeko.Common.OsuUserBests.Maxcombo
- uid: Mewdeko.Common.OsuUserBests.Count50*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Count50
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Count50
  name: Count50
  nameWithType: OsuUserBests.Count50
  fullName: Mewdeko.Common.OsuUserBests.Count50
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mewdeko.Common.OsuUserBests.Count100*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Count100
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Count100
  name: Count100
  nameWithType: OsuUserBests.Count100
  fullName: Mewdeko.Common.OsuUserBests.Count100
- uid: Mewdeko.Common.OsuUserBests.Count300*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Count300
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Count300
  name: Count300
  nameWithType: OsuUserBests.Count300
  fullName: Mewdeko.Common.OsuUserBests.Count300
- uid: Mewdeko.Common.OsuUserBests.Countmiss*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Countmiss
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Countmiss
  name: Countmiss
  nameWithType: OsuUserBests.Countmiss
  fullName: Mewdeko.Common.OsuUserBests.Countmiss
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Common.OsuUserBests.Countkatu*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Countkatu
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Countkatu
  name: Countkatu
  nameWithType: OsuUserBests.Countkatu
  fullName: Mewdeko.Common.OsuUserBests.Countkatu
- uid: Mewdeko.Common.OsuUserBests.Countgeki*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Countgeki
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Countgeki
  name: Countgeki
  nameWithType: OsuUserBests.Countgeki
  fullName: Mewdeko.Common.OsuUserBests.Countgeki
- uid: Mewdeko.Common.OsuUserBests.Perfect*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Perfect
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Perfect
  name: Perfect
  nameWithType: OsuUserBests.Perfect
  fullName: Mewdeko.Common.OsuUserBests.Perfect
- uid: Mewdeko.Common.OsuUserBests.EnabledMods*
  commentId: Overload:Mewdeko.Common.OsuUserBests.EnabledMods
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_EnabledMods
  name: EnabledMods
  nameWithType: OsuUserBests.EnabledMods
  fullName: Mewdeko.Common.OsuUserBests.EnabledMods
- uid: Mewdeko.Common.OsuUserBests.UserId*
  commentId: Overload:Mewdeko.Common.OsuUserBests.UserId
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_UserId
  name: UserId
  nameWithType: OsuUserBests.UserId
  fullName: Mewdeko.Common.OsuUserBests.UserId
- uid: Mewdeko.Common.OsuUserBests.Date*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Date
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Date
  name: Date
  nameWithType: OsuUserBests.Date
  fullName: Mewdeko.Common.OsuUserBests.Date
- uid: Mewdeko.Common.OsuUserBests.Rank*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Rank
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Rank
  name: Rank
  nameWithType: OsuUserBests.Rank
  fullName: Mewdeko.Common.OsuUserBests.Rank
- uid: Mewdeko.Common.OsuUserBests.Pp*
  commentId: Overload:Mewdeko.Common.OsuUserBests.Pp
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_Pp
  name: Pp
  nameWithType: OsuUserBests.Pp
  fullName: Mewdeko.Common.OsuUserBests.Pp
- uid: Mewdeko.Common.OsuUserBests.ReplayAvailable*
  commentId: Overload:Mewdeko.Common.OsuUserBests.ReplayAvailable
  href: Mewdeko.Common.OsuUserBests.html#Mewdeko_Common_OsuUserBests_ReplayAvailable
  name: ReplayAvailable
  nameWithType: OsuUserBests.ReplayAvailable
  fullName: Mewdeko.Common.OsuUserBests.ReplayAvailable
