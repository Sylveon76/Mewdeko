### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands
  commentId: T:Mewdeko.Modules.Searches.Searches.ActionCommands
  id: Searches.ActionCommands
  parent: Mewdeko.Modules.Searches
  children:
  - Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor(NekosBestApiNet.NekosBestApi)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Baka(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Bite(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Blush(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Bored(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Cry(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Dance(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Feed(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Happy(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Hug(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Pat(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Poke(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Pout(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Punch(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Slap(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Smile(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Smug(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Stare(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Think(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Wave(System.String)
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Wink(System.String)
  langs:
  - csharp
  - vb
  name: Searches.ActionCommands
  nameWithType: Searches.ActionCommands
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ActionCommands
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 13
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Submodule containing action commands.
  example: []
  syntax:
    content: 'public class Searches.ActionCommands : MewdekoSubmodule, IModuleBase'
    content.vb: Public Class Searches.ActionCommands Inherits MewdekoSubmodule Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoSubmodule
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.Config
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Searches.Searches.ActionCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor(NekosBestApiNet.NekosBestApi)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor(NekosBestApiNet.NekosBestApi)
  id: '#ctor(NekosBestApiNet.NekosBestApi)'
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: ActionCommands(NekosBestApi)
  nameWithType: Searches.ActionCommands.ActionCommands(NekosBestApi)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.ActionCommands(NekosBestApiNet.NekosBestApi)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 13
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Submodule containing action commands.
  example: []
  syntax:
    content: public ActionCommands(NekosBestApi nekosBestApi)
    parameters:
    - id: nekosBestApi
      type: NekosBestApiNet.NekosBestApi
    content.vb: Public Sub New(nekosBestApi As NekosBestApi)
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor*
  nameWithType.vb: Searches.ActionCommands.New(NekosBestApi)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.New(NekosBestApiNet.NekosBestApi)
  name.vb: New(NekosBestApi)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot(System.String)
  id: Shoot(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Shoot(string)
  nameWithType: Searches.ActionCommands.Shoot(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Shoot
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Shoots someone.
  example:
  - .shoot @user
  syntax:
    content: >-
      [Cmd("Shoot")]

      [Aliases("Shoot")]

      public Task Shoot(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to shoot.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Shoot")>

      <Aliases("Shoot")>

      Public Function Shoot(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shoot
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shoot
  nameWithType.vb: Searches.ActionCommands.Shoot(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot(String)
  name.vb: Shoot(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold(System.String)
  id: Handhold(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Handhold(string)
  nameWithType: Searches.ActionCommands.Handhold(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Handhold
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 34
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Holds someone's hand.
  example:
  - .handhold @user
  syntax:
    content: >-
      [Cmd("Handhold")]

      [Aliases("Handhold")]

      public Task Handhold(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to hold hands with.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Handhold")>

      <Aliases("Handhold")>

      Public Function Handhold(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Handhold
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Handhold
  nameWithType.vb: Searches.ActionCommands.Handhold(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold(String)
  name.vb: Handhold(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Punch(System.String)
  id: Punch(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Punch(string)
  nameWithType: Searches.ActionCommands.Punch(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Punch
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 46
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Punches someone.
  example:
  - .punch @user
  syntax:
    content: >-
      [Cmd("Punch")]

      [Aliases("Punch")]

      public Task Punch(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to punch.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Punch")>

      <Aliases("Punch")>

      Public Function Punch(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Punch
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Punch
  nameWithType.vb: Searches.ActionCommands.Punch(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch(String)
  name.vb: Punch(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Hug(System.String)
  id: Hug(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Hug(string)
  nameWithType: Searches.ActionCommands.Hug(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Hug
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 58
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Hugs someone.
  example:
  - .hug @user
  syntax:
    content: >-
      [Cmd("Hug")]

      [Aliases("Hug")]

      public Task Hug(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to hug.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Hug")>

      <Aliases("Hug")>

      Public Function Hug(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Hug
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Hug
  nameWithType.vb: Searches.ActionCommands.Hug(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug(String)
  name.vb: Hug(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss(System.String)
  id: Kiss(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Kiss(string)
  nameWithType: Searches.ActionCommands.Kiss(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kiss
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 70
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Kisses someone.
  example:
  - .kiss @user
  syntax:
    content: >-
      [Cmd("Kiss")]

      [Aliases("Kiss")]

      public Task Kiss(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to kiss.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Kiss")>

      <Aliases("Kiss")>

      Public Function Kiss(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kiss
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Kiss
  nameWithType.vb: Searches.ActionCommands.Kiss(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss(String)
  name.vb: Kiss(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Pat(System.String)
  id: Pat(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Pat(string)
  nameWithType: Searches.ActionCommands.Pat(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pat
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Pats someone.
  example:
  - .pat @user
  syntax:
    content: >-
      [Cmd("Pat")]

      [Aliases("Pat")]

      public Task Pat(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to pat.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Pat")>

      <Aliases("Pat")>

      Public Function Pat(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pat
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pat
  nameWithType.vb: Searches.ActionCommands.Pat(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat(String)
  name.vb: Pat(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle(System.String)
  id: Tickle(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Tickle(string)
  nameWithType: Searches.ActionCommands.Tickle(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Tickle
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 94
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Tickles someone.
  example:
  - .tickle @user
  syntax:
    content: >-
      [Cmd("Tickle")]

      [Aliases("Tickle")]

      public Task Tickle(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to tickle.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Tickle")>

      <Aliases("Tickle")>

      Public Function Tickle(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Tickle
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Tickle
  nameWithType.vb: Searches.ActionCommands.Tickle(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle(String)
  name.vb: Tickle(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Slap(System.String)
  id: Slap(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Slap(string)
  nameWithType: Searches.ActionCommands.Slap(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Slap
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 106
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Slaps someone.
  example:
  - .slap @user
  syntax:
    content: >-
      [Cmd("Slap")]

      [Aliases("Slap")]

      public Task Slap(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to slap.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Slap")>

      <Aliases("Slap")>

      Public Function Slap(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Slap
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Slap
  nameWithType.vb: Searches.ActionCommands.Slap(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap(String)
  name.vb: Slap(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle(System.String)
  id: Cuddle(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Cuddle(string)
  nameWithType: Searches.ActionCommands.Cuddle(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Cuddle
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 118
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Cuddles with someone.
  example:
  - .cuddle @user
  syntax:
    content: >-
      [Cmd("Cuddle")]

      [Aliases("Cuddle")]

      public Task Cuddle(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to cuddle with.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Cuddle")>

      <Aliases("Cuddle")>

      Public Function Cuddle(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Cuddle
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Cuddle
  nameWithType.vb: Searches.ActionCommands.Cuddle(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle(String)
  name.vb: Cuddle(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Poke(System.String)
  id: Poke(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Poke(string)
  nameWithType: Searches.ActionCommands.Poke(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Poke
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 130
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Pokes someone.
  example:
  - .poke @user
  syntax:
    content: >-
      [Cmd("Poke")]

      [Aliases("Poke")]

      public Task Poke(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to poke.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Poke")>

      <Aliases("Poke")>

      Public Function Poke(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Poke
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Poke
  nameWithType.vb: Searches.ActionCommands.Poke(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke(String)
  name.vb: Poke(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Feed(System.String)
  id: Feed(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Feed(string)
  nameWithType: Searches.ActionCommands.Feed(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Feed
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 142
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Feeds someone.
  example:
  - .feed @user
  syntax:
    content: >-
      [Cmd("Feed")]

      [Aliases("Feed")]

      public Task Feed(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to feed.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Feed")>

      <Aliases("Feed")>

      Public Function Feed(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Feed
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Feed
  nameWithType.vb: Searches.ActionCommands.Feed(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed(String)
  name.vb: Feed(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Baka(System.String)
  id: Baka(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Baka(string)
  nameWithType: Searches.ActionCommands.Baka(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Baka
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 154
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Calls someone a baka.
  example:
  - .baka @user
  syntax:
    content: >-
      [Cmd("Baka")]

      [Aliases("Baka")]

      public Task Baka(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to call baka.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Baka")>

      <Aliases("Baka")>

      Public Function Baka(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Baka
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Baka
  nameWithType.vb: Searches.ActionCommands.Baka(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka(String)
  name.vb: Baka(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Bite(System.String)
  id: Bite(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Bite(string)
  nameWithType: Searches.ActionCommands.Bite(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Bite
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 166
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Bites someone.
  example:
  - .bite @user
  syntax:
    content: >-
      [Cmd("Bite")]

      [Aliases("Bite")]

      public Task Bite(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to bite.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Bite")>

      <Aliases("Bite")>

      Public Function Bite(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bite
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bite
  nameWithType.vb: Searches.ActionCommands.Bite(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite(String)
  name.vb: Bite(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Blush(System.String)
  id: Blush(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Blush(string)
  nameWithType: Searches.ActionCommands.Blush(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Blush
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 178
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Blushes.
  example:
  - .blush
  syntax:
    content: >-
      [Cmd("Blush")]

      [Aliases("Blush")]

      public Task Blush(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Blush")>

      <Aliases("Blush")>

      Public Function Blush(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Blush
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Blush
  nameWithType.vb: Searches.ActionCommands.Blush(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush(String)
  name.vb: Blush(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Bored(System.String)
  id: Bored(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Bored(string)
  nameWithType: Searches.ActionCommands.Bored(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Bored
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 190
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Indicates boredom.
  example:
  - .bored
  syntax:
    content: >-
      [Cmd("Bored")]

      [Aliases("Bored")]

      public Task Bored(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Bored")>

      <Aliases("Bored")>

      Public Function Bored(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bored
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bored
  nameWithType.vb: Searches.ActionCommands.Bored(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored(String)
  name.vb: Bored(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Cry(System.String)
  id: Cry(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Cry(string)
  nameWithType: Searches.ActionCommands.Cry(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Cry
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 202
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Cries.
  example:
  - .cry
  syntax:
    content: >-
      [Cmd("Cry")]

      [Aliases("Cry")]

      public Task Cry(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Cry")>

      <Aliases("Cry")>

      Public Function Cry(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Cry
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Cry
  nameWithType.vb: Searches.ActionCommands.Cry(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry(String)
  name.vb: Cry(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Dance(System.String)
  id: Dance(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Dance(string)
  nameWithType: Searches.ActionCommands.Dance(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Dance
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 214
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Dances.
  example:
  - .dance
  syntax:
    content: >-
      [Cmd("Dance")]

      [Aliases("Dance")]

      public Task Dance(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Dance")>

      <Aliases("Dance")>

      Public Function Dance(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dance
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dance
  nameWithType.vb: Searches.ActionCommands.Dance(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance(String)
  name.vb: Dance(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm(System.String)
  id: Facepalm(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Facepalm(string)
  nameWithType: Searches.ActionCommands.Facepalm(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Facepalm
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 226
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Facepalms.
  example:
  - .facepalm
  syntax:
    content: >-
      [Cmd("Facepalm")]

      [Aliases("Facepalm")]

      public Task Facepalm(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Facepalm")>

      <Aliases("Facepalm")>

      Public Function Facepalm(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Facepalm
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Facepalm
  nameWithType.vb: Searches.ActionCommands.Facepalm(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm(String)
  name.vb: Facepalm(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Happy(System.String)
  id: Happy(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Happy(string)
  nameWithType: Searches.ActionCommands.Happy(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Happy
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 238
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Expresses happiness.
  example:
  - .happy
  syntax:
    content: >-
      [Cmd("Happy")]

      [Aliases("Happy")]

      public Task Happy(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Happy")>

      <Aliases("Happy")>

      Public Function Happy(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Happy
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Happy
  nameWithType.vb: Searches.ActionCommands.Happy(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy(String)
  name.vb: Happy(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive(System.String)
  id: HighFive(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: HighFive(string)
  nameWithType: Searches.ActionCommands.HighFive(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HighFive
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 250
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Gives someone a high-five.
  example:
  - .highfive @user
  syntax:
    content: >-
      [Cmd("HighFive")]

      [Aliases("HighFive")]

      public Task HighFive(string toShow)
    parameters:
    - id: toShow
      type: System.String
      description: The person to give a high-five.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("HighFive")>

      <Aliases("HighFive")>

      Public Function HighFive(toShow As String) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: HighFive
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: HighFive
  nameWithType.vb: Searches.ActionCommands.HighFive(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive(String)
  name.vb: HighFive(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh(System.String)
  id: Laugh(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Laugh(string)
  nameWithType: Searches.ActionCommands.Laugh(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Laugh
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 262
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Laughs.
  example:
  - .laugh
  syntax:
    content: >-
      [Cmd("Laugh")]

      [Aliases("Laugh")]

      public Task Laugh(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Laugh")>

      <Aliases("Laugh")>

      Public Function Laugh(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Laugh
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Laugh
  nameWithType.vb: Searches.ActionCommands.Laugh(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh(String)
  name.vb: Laugh(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Pout(System.String)
  id: Pout(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Pout(string)
  nameWithType: Searches.ActionCommands.Pout(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pout
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 274
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Pouts.
  example:
  - .pout
  syntax:
    content: >-
      [Cmd("Pout")]

      [Aliases("Pout")]

      public Task Pout(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Pout")>

      <Aliases("Pout")>

      Public Function Pout(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pout
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Pout
  nameWithType.vb: Searches.ActionCommands.Pout(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout(String)
  name.vb: Pout(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug(System.String)
  id: Shrug(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Shrug(string)
  nameWithType: Searches.ActionCommands.Shrug(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Shrug
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 286
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Shrugs.
  example:
  - .shrug
  syntax:
    content: >-
      [Cmd("Shrug")]

      [Aliases("Shrug")]

      public Task Shrug(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Shrug")>

      <Aliases("Shrug")>

      Public Function Shrug(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shrug
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shrug
  nameWithType.vb: Searches.ActionCommands.Shrug(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug(String)
  name.vb: Shrug(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep(System.String)
  id: Sleep(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Sleep(string)
  nameWithType: Searches.ActionCommands.Sleep(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Sleep
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 298
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Sleeps.
  example:
  - .sleep
  syntax:
    content: >-
      [Cmd("Sleep")]

      [Aliases("Sleep")]

      public Task Sleep(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Sleep")>

      <Aliases("Sleep")>

      Public Function Sleep(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sleep
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sleep
  nameWithType.vb: Searches.ActionCommands.Sleep(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep(String)
  name.vb: Sleep(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Smile(System.String)
  id: Smile(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Smile(string)
  nameWithType: Searches.ActionCommands.Smile(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Smile
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 310
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Smiles.
  example:
  - .smile
  syntax:
    content: >-
      [Cmd("Smile")]

      [Aliases("Smile")]

      public Task Smile(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Smile")>

      <Aliases("Smile")>

      Public Function Smile(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Smile
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Smile
  nameWithType.vb: Searches.ActionCommands.Smile(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile(String)
  name.vb: Smile(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Smug(System.String)
  id: Smug(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Smug(string)
  nameWithType: Searches.ActionCommands.Smug(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Smug
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 322
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Is smug.
  example:
  - .smug
  syntax:
    content: >-
      [Cmd("Smug")]

      [Aliases("Smug")]

      public Task Smug(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Smug")>

      <Aliases("Smug")>

      Public Function Smug(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Smug
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Smug
  nameWithType.vb: Searches.ActionCommands.Smug(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug(String)
  name.vb: Smug(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Stare(System.String)
  id: Stare(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Stare(string)
  nameWithType: Searches.ActionCommands.Stare(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Stare
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 334
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Stares.
  example:
  - .stare
  syntax:
    content: >-
      [Cmd("Stare")]

      [Aliases("Stare")]

      public Task Stare(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Stare")>

      <Aliases("Stare")>

      Public Function Stare(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Stare
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Stare
  nameWithType.vb: Searches.ActionCommands.Stare(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare(String)
  name.vb: Stare(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Think(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Think(System.String)
  id: Think(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Think(string)
  nameWithType: Searches.ActionCommands.Think(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Think(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Think
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 346
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Thinks.
  example:
  - .think
  syntax:
    content: >-
      [Cmd("Think")]

      [Aliases("Think")]

      public Task Think(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Think")>

      <Aliases("Think")>

      Public Function Think(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Think*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Think
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Think
  nameWithType.vb: Searches.ActionCommands.Think(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Think(String)
  name.vb: Think(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp(System.String)
  id: ThumbsUp(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: ThumbsUp(string)
  nameWithType: Searches.ActionCommands.ThumbsUp(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThumbsUp
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 358
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Gives a thumbs-up.
  example:
  - .thumbsup
  syntax:
    content: >-
      [Cmd("ThumbsUp")]

      [Aliases("ThumbsUp")]

      public Task ThumbsUp(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("ThumbsUp")>

      <Aliases("ThumbsUp")>

      Public Function ThumbsUp(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: ThumbsUp
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ThumbsUp
  nameWithType.vb: Searches.ActionCommands.ThumbsUp(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp(String)
  name.vb: ThumbsUp(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Wave(System.String)
  id: Wave(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Wave(string)
  nameWithType: Searches.ActionCommands.Wave(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Wave
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 370
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Waves.
  example:
  - .wave
  syntax:
    content: >-
      [Cmd("Wave")]

      [Aliases("Wave")]

      public Task Wave(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Wave")>

      <Aliases("Wave")>

      Public Function Wave(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wave
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wave
  nameWithType.vb: Searches.ActionCommands.Wave(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave(String)
  name.vb: Wave(String)
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink(System.String)
  commentId: M:Mewdeko.Modules.Searches.Searches.ActionCommands.Wink(System.String)
  id: Wink(System.String)
  parent: Mewdeko.Modules.Searches.Searches.ActionCommands
  langs:
  - csharp
  - vb
  name: Wink(string)
  nameWithType: Searches.ActionCommands.Wink(string)
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/ActionCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Wink
    path: src/Mewdeko/Modules/Searches/ActionCommands.cs
    startLine: 382
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches
  summary: Winks.
  example:
  - .wink
  syntax:
    content: >-
      [Cmd("Wink")]

      [Aliases("Wink")]

      public Task Wink(string toShow = null)
    parameters:
    - id: toShow
      type: System.String
      description: Additional text (optional).
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Wink")>

      <Aliases("Wink")>

      Public Function Wink(toShow As String = Nothing) As Task
  overload: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wink
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wink
  nameWithType.vb: Searches.ActionCommands.Wink(String)
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink(String)
  name.vb: Wink(String)
references:
- uid: Mewdeko.Modules.Searches
  commentId: N:Mewdeko.Modules.Searches
  href: Mewdeko.html
  name: Mewdeko.Modules.Searches
  nameWithType: Mewdeko.Modules.Searches
  fullName: Mewdeko.Modules.Searches
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Searches
    name: Searches
    href: Mewdeko.Modules.Searches.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Searches
    name: Searches
    href: Mewdeko.Modules.Searches.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoSubmodule
  commentId: T:Mewdeko.Common.MewdekoSubmodule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoSubmodule.html
  name: MewdekoSubmodule
  nameWithType: MewdekoSubmodule
  fullName: Mewdeko.Common.MewdekoSubmodule
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.Config
  commentId: P:Mewdeko.Common.MewdekoModule.Config
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Config
  name: Config
  nameWithType: MewdekoModule.Config
  fullName: Mewdeko.Common.MewdekoModule.Config
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ActionCommands>(ActionCommands, string)
  nameWithType: Extensions.ThrowIfNull<Searches.ActionCommands>(Searches.ActionCommands, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Searches.Searches.ActionCommands>(Mewdeko.Modules.Searches.Searches.ActionCommands, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Searches.ActionCommands)(Searches.ActionCommands, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Searches.Searches.ActionCommands)(Mewdeko.Modules.Searches.Searches.ActionCommands, String)
  name.vb: ThrowIfNull(Of ActionCommands)(ActionCommands, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Searches.Searches.ActionCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Searches.Searches.ActionCommands
    name: ActionCommands
    href: Mewdeko.Modules.Searches.Searches.ActionCommands.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Searches.Searches.ActionCommands
    name: ActionCommands
    href: Mewdeko.Modules.Searches.Searches.ActionCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Searches.Searches.ActionCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Searches.Searches.ActionCommands
    name: ActionCommands
    href: Mewdeko.Modules.Searches.Searches.ActionCommands.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Searches.Searches.ActionCommands
    name: ActionCommands
    href: Mewdeko.Modules.Searches.Searches.ActionCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.#ctor
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands__ctor_NekosBestApiNet_NekosBestApi_
  name: ActionCommands
  nameWithType: Searches.ActionCommands.ActionCommands
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.ActionCommands
  nameWithType.vb: Searches.ActionCommands.New
  fullName.vb: Mewdeko.Modules.Searches.Searches.ActionCommands.New
  name.vb: New
- uid: NekosBestApiNet.NekosBestApi
  commentId: T:NekosBestApiNet.NekosBestApi
  parent: NekosBestApiNet
  isExternal: true
  name: NekosBestApi
  nameWithType: NekosBestApi
  fullName: NekosBestApiNet.NekosBestApi
- uid: NekosBestApiNet
  commentId: N:NekosBestApiNet
  isExternal: true
  name: NekosBestApiNet
  nameWithType: NekosBestApiNet
  fullName: NekosBestApiNet
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Shoot_System_String_
  name: Shoot
  nameWithType: Searches.ActionCommands.Shoot
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Shoot
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Handhold_System_String_
  name: Handhold
  nameWithType: Searches.ActionCommands.Handhold
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Handhold
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Punch
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Punch_System_String_
  name: Punch
  nameWithType: Searches.ActionCommands.Punch
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Punch
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Hug
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Hug_System_String_
  name: Hug
  nameWithType: Searches.ActionCommands.Hug
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Hug
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Kiss_System_String_
  name: Kiss
  nameWithType: Searches.ActionCommands.Kiss
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Kiss
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Pat
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Pat_System_String_
  name: Pat
  nameWithType: Searches.ActionCommands.Pat
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Pat
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Tickle_System_String_
  name: Tickle
  nameWithType: Searches.ActionCommands.Tickle
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Tickle
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Slap
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Slap_System_String_
  name: Slap
  nameWithType: Searches.ActionCommands.Slap
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Slap
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Cuddle_System_String_
  name: Cuddle
  nameWithType: Searches.ActionCommands.Cuddle
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Cuddle
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Poke
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Poke_System_String_
  name: Poke
  nameWithType: Searches.ActionCommands.Poke
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Poke
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Feed
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Feed_System_String_
  name: Feed
  nameWithType: Searches.ActionCommands.Feed
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Feed
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Baka
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Baka_System_String_
  name: Baka
  nameWithType: Searches.ActionCommands.Baka
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Baka
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Bite
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Bite_System_String_
  name: Bite
  nameWithType: Searches.ActionCommands.Bite
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Bite
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Blush
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Blush_System_String_
  name: Blush
  nameWithType: Searches.ActionCommands.Blush
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Blush
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Bored
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Bored_System_String_
  name: Bored
  nameWithType: Searches.ActionCommands.Bored
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Bored
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Cry
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Cry_System_String_
  name: Cry
  nameWithType: Searches.ActionCommands.Cry
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Cry
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Dance
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Dance_System_String_
  name: Dance
  nameWithType: Searches.ActionCommands.Dance
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Dance
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Facepalm_System_String_
  name: Facepalm
  nameWithType: Searches.ActionCommands.Facepalm
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Facepalm
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Happy
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Happy_System_String_
  name: Happy
  nameWithType: Searches.ActionCommands.Happy
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Happy
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_HighFive_System_String_
  name: HighFive
  nameWithType: Searches.ActionCommands.HighFive
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.HighFive
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Laugh_System_String_
  name: Laugh
  nameWithType: Searches.ActionCommands.Laugh
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Laugh
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Pout
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Pout_System_String_
  name: Pout
  nameWithType: Searches.ActionCommands.Pout
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Pout
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Shrug_System_String_
  name: Shrug
  nameWithType: Searches.ActionCommands.Shrug
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Shrug
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Sleep_System_String_
  name: Sleep
  nameWithType: Searches.ActionCommands.Sleep
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Sleep
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Smile
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Smile_System_String_
  name: Smile
  nameWithType: Searches.ActionCommands.Smile
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Smile
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Smug
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Smug_System_String_
  name: Smug
  nameWithType: Searches.ActionCommands.Smug
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Smug
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Stare
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Stare_System_String_
  name: Stare
  nameWithType: Searches.ActionCommands.Stare
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Stare
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Think*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Think
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Think_System_String_
  name: Think
  nameWithType: Searches.ActionCommands.Think
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Think
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_ThumbsUp_System_String_
  name: ThumbsUp
  nameWithType: Searches.ActionCommands.ThumbsUp
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.ThumbsUp
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Wave
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Wave_System_String_
  name: Wave
  nameWithType: Searches.ActionCommands.Wave
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Wave
- uid: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink*
  commentId: Overload:Mewdeko.Modules.Searches.Searches.ActionCommands.Wink
  href: Mewdeko.Modules.Searches.Searches.ActionCommands.html#Mewdeko_Modules_Searches_Searches_ActionCommands_Wink_System_String_
  name: Wink
  nameWithType: Searches.ActionCommands.Wink
  fullName: Mewdeko.Modules.Searches.Searches.ActionCommands.Wink
