### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Votes.Services.VoteService
  commentId: T:Mewdeko.Modules.Votes.Services.VoteService
  id: VoteService
  parent: Mewdeko.Modules.Votes.Services
  children:
  - Mewdeko.Modules.Votes.Services.VoteService.#ctor(Mewdeko.Common.PubSub.IPubSub,Mewdeko.Database.DbService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Modules.Moderation.Services.MuteService)
  - Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole(System.UInt64,System.UInt64,System.Int32)
  - Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles(System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes(Discord.IUser,Discord.IGuild)
  - Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage(System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles(System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage(System.UInt64,System.String)
  - Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword(System.UInt64,System.String)
  - Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer(System.UInt64,System.Int32)
  langs:
  - csharp
  - vb
  name: VoteService
  nameWithType: VoteService
  fullName: Mewdeko.Modules.Votes.Services.VoteService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: VoteService
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Manages voting functionality within the bot, handling vote configuration, processing, and reward distribution.
  example: []
  syntax:
    content: 'public class VoteService : INService'
    content.vb: Public Class VoteService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Votes.Services.VoteService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Votes.Services.VoteService.#ctor(Mewdeko.Common.PubSub.IPubSub,Mewdeko.Database.DbService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Modules.Moderation.Services.MuteService)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.#ctor(Mewdeko.Common.PubSub.IPubSub,Mewdeko.Database.DbService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Modules.Moderation.Services.MuteService)
  id: '#ctor(Mewdeko.Common.PubSub.IPubSub,Mewdeko.Database.DbService,Discord.WebSocket.DiscordSocketClient,Mewdeko.Modules.Moderation.Services.MuteService)'
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: VoteService(IPubSub, DbService, DiscordSocketClient, MuteService)
  nameWithType: VoteService.VoteService(IPubSub, DbService, DiscordSocketClient, MuteService)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.VoteService(Mewdeko.Common.PubSub.IPubSub, Mewdeko.Database.DbService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Modules.Moderation.Services.MuteService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 23
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Votes.Services.VoteService" data-throw-if-not-resolved="false"></xref> class, setting up dependencies and subscribing to voting-related pub/sub events.
  example: []
  syntax:
    content: public VoteService(IPubSub pubSub, DbService db, DiscordSocketClient client, MuteService muteService)
    parameters:
    - id: pubSub
      type: Mewdeko.Common.PubSub.IPubSub
      description: The pub/sub system for event handling.
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service for data access.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client for interacting with the Discord API.
    - id: muteService
      type: Mewdeko.Modules.Moderation.Services.MuteService
      description: The service for managing mutes within the bot.
    content.vb: Public Sub New(pubSub As IPubSub, db As DbService, client As DiscordSocketClient, muteService As MuteService)
  overload: Mewdeko.Modules.Votes.Services.VoteService.#ctor*
  nameWithType.vb: VoteService.New(IPubSub, DbService, DiscordSocketClient, MuteService)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.New(Mewdeko.Common.PubSub.IPubSub, Mewdeko.Database.DbService, Discord.WebSocket.DiscordSocketClient, Mewdeko.Modules.Moderation.Services.MuteService)
  name.vb: New(IPubSub, DbService, DiscordSocketClient, MuteService)
- uid: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole(System.UInt64,System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole(System.UInt64,System.UInt64,System.Int32)
  id: AddVoteRole(System.UInt64,System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: AddVoteRole(ulong, ulong, int)
  nameWithType: VoteService.AddVoteRole(ulong, ulong, int)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole(ulong, ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddVoteRole
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 140
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Adds a vote role to the guild configuration, setting a timer for automatic role removal if specified.
  example: []
  syntax:
    content: public Task<(bool, string)> AddVoteRole(ulong guildId, ulong roleId, int seconds = 0)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild where the role is to be added.
    - id: roleId
      type: System.UInt64
      description: The ID of the role to be added as a vote role.
    - id: seconds
      type: System.Int32
      description: The duration in seconds after which the role should be automatically removed. Zero for indefinite.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A tuple indicating success status and an optional error message.
    content.vb: Public Function AddVoteRole(guildId As ULong, roleId As ULong, seconds As Integer = 0) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole*
  nameWithType.vb: VoteService.AddVoteRole(ULong, ULong, Integer)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole(ULong, ULong, Integer)
  name.vb: AddVoteRole(ULong, ULong, Integer)
- uid: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole(System.UInt64,System.UInt64)
  id: RemoveVoteRole(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: RemoveVoteRole(ulong, ulong)
  nameWithType: VoteService.RemoveVoteRole(ulong, ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveVoteRole
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 167
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Removes a vote role from the guild configuration.
  example: []
  syntax:
    content: public Task<(bool, string)> RemoveVoteRole(ulong guildId, ulong roleId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild from which the role is to be removed.
    - id: roleId
      type: System.UInt64
      description: The ID of the role to be removed from vote roles.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A tuple indicating success status and an optional error message.
    content.vb: Public Function RemoveVoteRole(guildId As ULong, roleId As ULong) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole*
  nameWithType.vb: VoteService.RemoveVoteRole(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole(ULong, ULong)
  name.vb: RemoveVoteRole(ULong, ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer(System.UInt64,System.Int32)
  id: UpdateTimer(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: UpdateTimer(ulong, int)
  nameWithType: VoteService.UpdateTimer(ulong, int)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateTimer
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 189
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Updates the timer for automatic role removal for a vote role in the guild configuration.
  example: []
  syntax:
    content: public Task<(bool, string)> UpdateTimer(ulong roleId, int seconds)
    parameters:
    - id: roleId
      type: System.UInt64
      description: The ID of the role whose timer is to be updated.
    - id: seconds
      type: System.Int32
      description: The new duration in seconds after which the role should be automatically removed.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A tuple indicating success status and an optional error message.
    content.vb: Public Function UpdateTimer(roleId As ULong, seconds As Integer) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer*
  nameWithType.vb: VoteService.UpdateTimer(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer(ULong, Integer)
  name.vb: UpdateTimer(ULong, Integer)
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles(System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles(System.UInt64)
  id: GetVoteRoles(System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: GetVoteRoles(ulong)
  nameWithType: VoteService.GetVoteRoles(ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVoteRoles
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 208
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Retrieves all vote roles configured for a guild.
  example: []
  syntax:
    content: public Task<IList<VoteRoles>> GetVoteRoles(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which vote roles are requested.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Mewdeko.Database.Models.VoteRoles}}
      description: A list of vote roles.
    content.vb: Public Function GetVoteRoles(guildId As ULong) As Task(Of IList(Of VoteRoles))
  overload: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles*
  nameWithType.vb: VoteService.GetVoteRoles(ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles(ULong)
  name.vb: GetVoteRoles(ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage(System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage(System.UInt64)
  id: GetVoteMessage(System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: GetVoteMessage(ulong)
  nameWithType: VoteService.GetVoteMessage(ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVoteMessage
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 219
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Gets the custom vote message configured for a guild.
  example: []
  syntax:
    content: public Task<string> GetVoteMessage(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which the vote message is requested.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The custom vote message, if any.
    content.vb: Public Function GetVoteMessage(guildId As ULong) As Task(Of String)
  overload: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage*
  nameWithType.vb: VoteService.GetVoteMessage(ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage(ULong)
  name.vb: GetVoteMessage(ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles(System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles(System.UInt64)
  id: ClearVoteRoles(System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: ClearVoteRoles(ulong)
  nameWithType: VoteService.ClearVoteRoles(ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClearVoteRoles
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 231
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Clears all vote roles configured for a guild.
  example: []
  syntax:
    content: public Task<(bool, string)> ClearVoteRoles(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild whose vote roles are to be cleared.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A tuple indicating success status and an optional error message.
    content.vb: Public Function ClearVoteRoles(guildId As ULong) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles*
  nameWithType.vb: VoteService.ClearVoteRoles(ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles(ULong)
  name.vb: ClearVoteRoles(ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage(System.UInt64,System.String)
  id: SetVoteMessage(System.UInt64,System.String)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: SetVoteMessage(ulong, string)
  nameWithType: VoteService.SetVoteMessage(ulong, string)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetVoteMessage
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 248
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Sets or updates the custom vote message for a guild.
  example: []
  syntax:
    content: public Task SetVoteMessage(ulong guildId, string message)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which the vote message is to be set.
    - id: message
      type: System.String
      description: The new custom vote message.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function SetVoteMessage(guildId As ULong, message As String) As Task
  overload: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage*
  nameWithType.vb: VoteService.SetVoteMessage(ULong, String)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage(ULong, String)
  name.vb: SetVoteMessage(ULong, String)
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword(System.UInt64,System.String)
  id: SetVotePassword(System.UInt64,System.String)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: SetVotePassword(ulong, string)
  nameWithType: VoteService.SetVotePassword(ulong, string)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetVotePassword
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 262
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Sets or updates the password required for vote validation in a guild.
  example: []
  syntax:
    content: public Task SetVotePassword(ulong guildId, string password)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which the vote password is to be set.
    - id: password
      type: System.String
      description: The new password for vote validation.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function SetVotePassword(guildId As ULong, password As String) As Task
  overload: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword*
  nameWithType.vb: VoteService.SetVotePassword(ULong, String)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword(ULong, String)
  name.vb: SetVotePassword(ULong, String)
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel(System.UInt64,System.UInt64)
  id: SetVoteChannel(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: SetVoteChannel(ulong, ulong)
  nameWithType: VoteService.SetVoteChannel(ulong, ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetVoteChannel
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 276
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Sets or updates the channel ID where vote acknowledgements should be sent in a guild.
  example: []
  syntax:
    content: public Task SetVoteChannel(ulong guildId, ulong channel)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which the vote channel is to be set.
    - id: channel
      type: System.UInt64
      description: The ID of the channel for vote acknowledgements.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Function SetVoteChannel(guildId As ULong, channel As ULong) As Task
  overload: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel*
  nameWithType.vb: VoteService.SetVoteChannel(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel(ULong, ULong)
  name.vb: SetVoteChannel(ULong, ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64,System.UInt64)
  id: GetVotes(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: GetVotes(ulong, ulong)
  nameWithType: VoteService.GetVotes(ulong, ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVotes
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 290
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Retrieves all votes cast by a user in a guild.
  example: []
  syntax:
    content: public Task<List<Votes>> GetVotes(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    - id: userId
      type: System.UInt64
      description: The ID of the user.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.Votes}}
      description: A list of votes.
    content.vb: Public Function GetVotes(guildId As ULong, userId As ULong) As Task(Of List(Of Votes))
  overload: Mewdeko.Modules.Votes.Services.VoteService.GetVotes*
  nameWithType.vb: VoteService.GetVotes(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(ULong, ULong)
  name.vb: GetVotes(ULong, ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.GetVotes(System.UInt64)
  id: GetVotes(System.UInt64)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: GetVotes(ulong)
  nameWithType: VoteService.GetVotes(ulong)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVotes
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 301
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Retrieves all votes cast in a guild.
  example: []
  syntax:
    content: public Task<List<Votes>> GetVotes(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.Votes}}
      description: A list of votes.
    content.vb: Public Function GetVotes(guildId As ULong) As Task(Of List(Of Votes))
  overload: Mewdeko.Modules.Votes.Services.VoteService.GetVotes*
  nameWithType.vb: VoteService.GetVotes(ULong)
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.GetVotes(ULong)
  name.vb: GetVotes(ULong)
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes(Discord.IUser,Discord.IGuild)
  commentId: M:Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes(Discord.IUser,Discord.IGuild)
  id: GetTotalVotes(Discord.IUser,Discord.IGuild)
  parent: Mewdeko.Modules.Votes.Services.VoteService
  langs:
  - csharp
  - vb
  name: GetTotalVotes(IUser, IGuild)
  nameWithType: VoteService.GetTotalVotes(IUser, IGuild)
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes(Discord.IUser, Discord.IGuild)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetTotalVotes
    path: src/Mewdeko/Modules/Votes/Services/VoteService.cs
    startLine: 313
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Votes.Services
  summary: Generates an embed with vote statistics for a user in a guild, including total votes and votes this month.
  example: []
  syntax:
    content: public Task<EmbedBuilder> GetTotalVotes(IUser user, IGuild guild)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user for whom vote stats are generated.
    - id: guild
      type: Discord.IGuild
      description: The guild in which the votes were cast.
    return:
      type: System.Threading.Tasks.Task{Discord.EmbedBuilder}
      description: An embed builder populated with vote statistics.
    content.vb: Public Function GetTotalVotes(user As IUser, guild As IGuild) As Task(Of EmbedBuilder)
  overload: Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes*
references:
- uid: Mewdeko.Modules.Votes.Services
  commentId: N:Mewdeko.Modules.Votes.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Votes.Services
  nameWithType: Mewdeko.Modules.Votes.Services
  fullName: Mewdeko.Modules.Votes.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Votes
    name: Votes
    href: Mewdeko.Modules.Votes.html
  - name: .
  - uid: Mewdeko.Modules.Votes.Services
    name: Services
    href: Mewdeko.Modules.Votes.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Votes
    name: Votes
    href: Mewdeko.Modules.Votes.html
  - name: .
  - uid: Mewdeko.Modules.Votes.Services
    name: Services
    href: Mewdeko.Modules.Votes.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Votes.Services.VoteService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<VoteService>(VoteService, string)
  nameWithType: Extensions.ThrowIfNull<VoteService>(VoteService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Votes.Services.VoteService>(Mewdeko.Modules.Votes.Services.VoteService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of VoteService)(VoteService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Votes.Services.VoteService)(Mewdeko.Modules.Votes.Services.VoteService, String)
  name.vb: ThrowIfNull(Of VoteService)(VoteService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Votes.Services.VoteService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Votes.Services.VoteService
    name: VoteService
    href: Mewdeko.Modules.Votes.Services.VoteService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Votes.Services.VoteService
    name: VoteService
    href: Mewdeko.Modules.Votes.Services.VoteService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Votes.Services.VoteService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Votes.Services.VoteService
    name: VoteService
    href: Mewdeko.Modules.Votes.Services.VoteService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Votes.Services.VoteService
    name: VoteService
    href: Mewdeko.Modules.Votes.Services.VoteService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Votes.Services.VoteService
  commentId: T:Mewdeko.Modules.Votes.Services.VoteService
  href: Mewdeko.Modules.Votes.Services.VoteService.html
  name: VoteService
  nameWithType: VoteService
  fullName: Mewdeko.Modules.Votes.Services.VoteService
- uid: Mewdeko.Modules.Votes.Services.VoteService.#ctor*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.#ctor
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService__ctor_Mewdeko_Common_PubSub_IPubSub_Mewdeko_Database_DbService_Discord_WebSocket_DiscordSocketClient_Mewdeko_Modules_Moderation_Services_MuteService_
  name: VoteService
  nameWithType: VoteService.VoteService
  fullName: Mewdeko.Modules.Votes.Services.VoteService.VoteService
  nameWithType.vb: VoteService.New
  fullName.vb: Mewdeko.Modules.Votes.Services.VoteService.New
  name.vb: New
- uid: Mewdeko.Common.PubSub.IPubSub
  commentId: T:Mewdeko.Common.PubSub.IPubSub
  parent: Mewdeko.Common.PubSub
  href: Mewdeko.Common.PubSub.IPubSub.html
  name: IPubSub
  nameWithType: IPubSub
  fullName: Mewdeko.Common.PubSub.IPubSub
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Modules.Moderation.Services.MuteService
  commentId: T:Mewdeko.Modules.Moderation.Services.MuteService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.MuteService.html
  name: MuteService
  nameWithType: MuteService
  fullName: Mewdeko.Modules.Moderation.Services.MuteService
- uid: Mewdeko.Common.PubSub
  commentId: N:Mewdeko.Common.PubSub
  href: Mewdeko.html
  name: Mewdeko.Common.PubSub
  nameWithType: Mewdeko.Common.PubSub
  fullName: Mewdeko.Common.PubSub
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.PubSub
    name: PubSub
    href: Mewdeko.Common.PubSub.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.PubSub
    name: PubSub
    href: Mewdeko.Common.PubSub.html
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Modules.Moderation.Services
  commentId: N:Mewdeko.Modules.Moderation.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation.Services
  nameWithType: Mewdeko.Modules.Moderation.Services
  fullName: Mewdeko.Modules.Moderation.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
- uid: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_AddVoteRole_System_UInt64_System_UInt64_System_Int32_
  name: AddVoteRole
  nameWithType: VoteService.AddVoteRole
  fullName: Mewdeko.Modules.Votes.Services.VoteService.AddVoteRole
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool, string)>
  nameWithType: Task<(bool, string)>
  fullName: System.Threading.Tasks.Task<(bool, string)>
  nameWithType.vb: Task(Of (Boolean, String))
  fullName.vb: System.Threading.Tasks.Task(Of (Boolean, String))
  name.vb: Task(Of (Boolean, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_RemoveVoteRole_System_UInt64_System_UInt64_
  name: RemoveVoteRole
  nameWithType: VoteService.RemoveVoteRole
  fullName: Mewdeko.Modules.Votes.Services.VoteService.RemoveVoteRole
- uid: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_UpdateTimer_System_UInt64_System_Int32_
  name: UpdateTimer
  nameWithType: VoteService.UpdateTimer
  fullName: Mewdeko.Modules.Votes.Services.VoteService.UpdateTimer
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_GetVoteRoles_System_UInt64_
  name: GetVoteRoles
  nameWithType: VoteService.GetVoteRoles
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVoteRoles
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Mewdeko.Database.Models.VoteRoles}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Mewdeko.Database.Models.VoteRoles}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IList<VoteRoles>>
  nameWithType: Task<IList<VoteRoles>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Mewdeko.Database.Models.VoteRoles>>
  nameWithType.vb: Task(Of IList(Of VoteRoles))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Mewdeko.Database.Models.VoteRoles))
  name.vb: Task(Of IList(Of VoteRoles))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Mewdeko.Database.Models.VoteRoles
    name: VoteRoles
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.VoteRoles
    name: VoteRoles
  - name: )
  - name: )
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_GetVoteMessage_System_UInt64_
  name: GetVoteMessage
  nameWithType: VoteService.GetVoteMessage
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVoteMessage
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_ClearVoteRoles_System_UInt64_
  name: ClearVoteRoles
  nameWithType: VoteService.ClearVoteRoles
  fullName: Mewdeko.Modules.Votes.Services.VoteService.ClearVoteRoles
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_SetVoteMessage_System_UInt64_System_String_
  name: SetVoteMessage
  nameWithType: VoteService.SetVoteMessage
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVoteMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_SetVotePassword_System_UInt64_System_String_
  name: SetVotePassword
  nameWithType: VoteService.SetVotePassword
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVotePassword
- uid: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_SetVoteChannel_System_UInt64_System_UInt64_
  name: SetVoteChannel
  nameWithType: VoteService.SetVoteChannel
  fullName: Mewdeko.Modules.Votes.Services.VoteService.SetVoteChannel
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetVotes*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.GetVotes
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_GetVotes_System_UInt64_System_UInt64_
  name: GetVotes
  nameWithType: VoteService.GetVotes
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetVotes
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.Votes}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.Votes}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<Votes>>
  nameWithType: Task<List<Votes>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Database.Models.Votes>>
  nameWithType.vb: Task(Of List(Of Votes))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Database.Models.Votes))
  name.vb: Task(Of List(Of Votes))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.Votes
    name: Votes
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Votes
    name: Votes
  - name: )
  - name: )
- uid: Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes*
  commentId: Overload:Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes
  href: Mewdeko.Modules.Votes.Services.VoteService.html#Mewdeko_Modules_Votes_Services_VoteService_GetTotalVotes_Discord_IUser_Discord_IGuild_
  name: GetTotalVotes
  nameWithType: VoteService.GetTotalVotes
  fullName: Mewdeko.Modules.Votes.Services.VoteService.GetTotalVotes
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: System.Threading.Tasks.Task{Discord.EmbedBuilder}
  commentId: T:System.Threading.Tasks.Task{Discord.EmbedBuilder}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<EmbedBuilder>
  nameWithType: Task<EmbedBuilder>
  fullName: System.Threading.Tasks.Task<Discord.EmbedBuilder>
  nameWithType.vb: Task(Of EmbedBuilder)
  fullName.vb: System.Threading.Tasks.Task(Of Discord.EmbedBuilder)
  name.vb: Task(Of EmbedBuilder)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: )
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
