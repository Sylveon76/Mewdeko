### YamlMime:ManagedReference
items:
- uid: Mewdeko.Services.IBotCredentials
  commentId: T:Mewdeko.Services.IBotCredentials
  id: IBotCredentials
  parent: Mewdeko.Services
  children:
  - Mewdeko.Services.IBotCredentials.CfClearance
  - Mewdeko.Services.IBotCredentials.ChatSavePath
  - Mewdeko.Services.IBotCredentials.CleverbotApiKey
  - Mewdeko.Services.IBotCredentials.ClientSecret
  - Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  - Mewdeko.Services.IBotCredentials.CsrfToken
  - Mewdeko.Services.IBotCredentials.GeniusKey
  - Mewdeko.Services.IBotCredentials.GoogleApiKey
  - Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  - Mewdeko.Services.IBotCredentials.LocationIqApiKey
  - Mewdeko.Services.IBotCredentials.MashapeKey
  - Mewdeko.Services.IBotCredentials.OsuApiKey
  - Mewdeko.Services.IBotCredentials.OwnerIds
  - Mewdeko.Services.IBotCredentials.RedisOptions
  - Mewdeko.Services.IBotCredentials.RestartCommand
  - Mewdeko.Services.IBotCredentials.ShardRunPort
  - Mewdeko.Services.IBotCredentials.SpotifyClientId
  - Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  - Mewdeko.Services.IBotCredentials.StatcordKey
  - Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  - Mewdeko.Services.IBotCredentials.Token
  - Mewdeko.Services.IBotCredentials.TotalShards
  - Mewdeko.Services.IBotCredentials.TrovoClientId
  - Mewdeko.Services.IBotCredentials.TwitchClientId
  - Mewdeko.Services.IBotCredentials.TwitchClientSecret
  - Mewdeko.Services.IBotCredentials.UserAgent
  - Mewdeko.Services.IBotCredentials.VotesToken
  langs:
  - csharp
  - vb
  name: IBotCredentials
  nameWithType: IBotCredentials
  fullName: Mewdeko.Services.IBotCredentials
  type: Interface
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IBotCredentials
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Represents credentials required for the bot's functionality.
  example: []
  syntax:
    content: public interface IBotCredentials
    content.vb: Public Interface IBotCredentials
  extensionMethods:
  - Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.RedisKey
  - Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Services.IBotCredentials.Token
  commentId: P:Mewdeko.Services.IBotCredentials.Token
  id: Token
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: IBotCredentials.Token
  fullName: Mewdeko.Services.IBotCredentials.Token
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Token
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's token.
  example: []
  syntax:
    content: string Token { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Token As String
  overload: Mewdeko.Services.IBotCredentials.Token*
- uid: Mewdeko.Services.IBotCredentials.ClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.ClientSecret
  id: ClientSecret
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: IBotCredentials.ClientSecret
  fullName: Mewdeko.Services.IBotCredentials.ClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClientSecret
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's client secret.
  example: []
  syntax:
    content: string ClientSecret { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ClientSecret As String
  overload: Mewdeko.Services.IBotCredentials.ClientSecret*
- uid: Mewdeko.Services.IBotCredentials.GoogleApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.GoogleApiKey
  id: GoogleApiKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: GoogleApiKey
  nameWithType: IBotCredentials.GoogleApiKey
  fullName: Mewdeko.Services.IBotCredentials.GoogleApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GoogleApiKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Google API key.
  example: []
  syntax:
    content: string GoogleApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property GoogleApiKey As String
  overload: Mewdeko.Services.IBotCredentials.GoogleApiKey*
- uid: Mewdeko.Services.IBotCredentials.OwnerIds
  commentId: P:Mewdeko.Services.IBotCredentials.OwnerIds
  id: OwnerIds
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: OwnerIds
  nameWithType: IBotCredentials.OwnerIds
  fullName: Mewdeko.Services.IBotCredentials.OwnerIds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OwnerIds
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 27
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the IDs of the bot's owners.
  example: []
  syntax:
    content: ImmutableArray<ulong> OwnerIds { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.UInt64}
    content.vb: ReadOnly Property OwnerIds As ImmutableArray(Of ULong)
  overload: Mewdeko.Services.IBotCredentials.OwnerIds*
- uid: Mewdeko.Services.IBotCredentials.GeniusKey
  commentId: P:Mewdeko.Services.IBotCredentials.GeniusKey
  id: GeniusKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: GeniusKey
  nameWithType: IBotCredentials.GeniusKey
  fullName: Mewdeko.Services.IBotCredentials.GeniusKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GeniusKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Genius API key.
  example: []
  syntax:
    content: string GeniusKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property GeniusKey As String
  overload: Mewdeko.Services.IBotCredentials.GeniusKey*
- uid: Mewdeko.Services.IBotCredentials.StatcordKey
  commentId: P:Mewdeko.Services.IBotCredentials.StatcordKey
  id: StatcordKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: StatcordKey
  nameWithType: IBotCredentials.StatcordKey
  fullName: Mewdeko.Services.IBotCredentials.StatcordKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StatcordKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 37
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Statcord key.
  example: []
  syntax:
    content: string StatcordKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property StatcordKey As String
  overload: Mewdeko.Services.IBotCredentials.StatcordKey*
- uid: Mewdeko.Services.IBotCredentials.MashapeKey
  commentId: P:Mewdeko.Services.IBotCredentials.MashapeKey
  id: MashapeKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: MashapeKey
  nameWithType: IBotCredentials.MashapeKey
  fullName: Mewdeko.Services.IBotCredentials.MashapeKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MashapeKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 42
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Mashape key.
  example: []
  syntax:
    content: string MashapeKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property MashapeKey As String
  overload: Mewdeko.Services.IBotCredentials.MashapeKey*
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientId
  commentId: P:Mewdeko.Services.IBotCredentials.SpotifyClientId
  id: SpotifyClientId
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: SpotifyClientId
  nameWithType: IBotCredentials.SpotifyClientId
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SpotifyClientId
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 47
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Spotify client ID.
  example: []
  syntax:
    content: string SpotifyClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SpotifyClientId As String
  overload: Mewdeko.Services.IBotCredentials.SpotifyClientId*
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  id: SpotifyClientSecret
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: SpotifyClientSecret
  nameWithType: IBotCredentials.SpotifyClientSecret
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SpotifyClientSecret
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 52
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Spotify client secret.
  example: []
  syntax:
    content: string SpotifyClientSecret { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property SpotifyClientSecret As String
  overload: Mewdeko.Services.IBotCredentials.SpotifyClientSecret*
- uid: Mewdeko.Services.IBotCredentials.OsuApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.OsuApiKey
  id: OsuApiKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: OsuApiKey
  nameWithType: IBotCredentials.OsuApiKey
  fullName: Mewdeko.Services.IBotCredentials.OsuApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OsuApiKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 57
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's osu! API key.
  example: []
  syntax:
    content: string OsuApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property OsuApiKey As String
  overload: Mewdeko.Services.IBotCredentials.OsuApiKey*
- uid: Mewdeko.Services.IBotCredentials.ShardRunPort
  commentId: P:Mewdeko.Services.IBotCredentials.ShardRunPort
  id: ShardRunPort
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: ShardRunPort
  nameWithType: IBotCredentials.ShardRunPort
  fullName: Mewdeko.Services.IBotCredentials.ShardRunPort
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShardRunPort
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 62
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the port on which the client coordinator is running.
  example: []
  syntax:
    content: string ShardRunPort { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ShardRunPort As String
  overload: Mewdeko.Services.IBotCredentials.ShardRunPort*
- uid: Mewdeko.Services.IBotCredentials.ChatSavePath
  commentId: P:Mewdeko.Services.IBotCredentials.ChatSavePath
  id: ChatSavePath
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: ChatSavePath
  nameWithType: IBotCredentials.ChatSavePath
  fullName: Mewdeko.Services.IBotCredentials.ChatSavePath
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatSavePath
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 67
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the path where chat logs are saved.
  example: []
  syntax:
    content: string ChatSavePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ChatSavePath As String
  overload: Mewdeko.Services.IBotCredentials.ChatSavePath*
- uid: Mewdeko.Services.IBotCredentials.TotalShards
  commentId: P:Mewdeko.Services.IBotCredentials.TotalShards
  id: TotalShards
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: TotalShards
  nameWithType: IBotCredentials.TotalShards
  fullName: Mewdeko.Services.IBotCredentials.TotalShards
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TotalShards
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the total number of shards the bot has.
  example: []
  syntax:
    content: int TotalShards { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property TotalShards As Integer
  overload: Mewdeko.Services.IBotCredentials.TotalShards*
- uid: Mewdeko.Services.IBotCredentials.TwitchClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.TwitchClientSecret
  id: TwitchClientSecret
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: TwitchClientSecret
  nameWithType: IBotCredentials.TwitchClientSecret
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TwitchClientSecret
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 77
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Twitch client secret.
  example: []
  syntax:
    content: string TwitchClientSecret { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TwitchClientSecret As String
  overload: Mewdeko.Services.IBotCredentials.TwitchClientSecret*
- uid: Mewdeko.Services.IBotCredentials.TrovoClientId
  commentId: P:Mewdeko.Services.IBotCredentials.TrovoClientId
  id: TrovoClientId
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: TrovoClientId
  nameWithType: IBotCredentials.TrovoClientId
  fullName: Mewdeko.Services.IBotCredentials.TrovoClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TrovoClientId
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Trovo client ID.
  example: []
  syntax:
    content: string TrovoClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TrovoClientId As String
  overload: Mewdeko.Services.IBotCredentials.TrovoClientId*
- uid: Mewdeko.Services.IBotCredentials.CleverbotApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.CleverbotApiKey
  id: CleverbotApiKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: CleverbotApiKey
  nameWithType: IBotCredentials.CleverbotApiKey
  fullName: Mewdeko.Services.IBotCredentials.CleverbotApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CleverbotApiKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 87
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Cleverbot API key.
  example: []
  syntax:
    content: string CleverbotApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CleverbotApiKey As String
  overload: Mewdeko.Services.IBotCredentials.CleverbotApiKey*
- uid: Mewdeko.Services.IBotCredentials.RestartCommand
  commentId: P:Mewdeko.Services.IBotCredentials.RestartCommand
  id: RestartCommand
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: RestartCommand
  nameWithType: IBotCredentials.RestartCommand
  fullName: Mewdeko.Services.IBotCredentials.RestartCommand
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartCommand
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 92
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the command used to restart the bot.
  example: []
  syntax:
    content: RestartConfig RestartCommand { get; }
    parameters: []
    return:
      type: Mewdeko.Services.RestartConfig
    content.vb: ReadOnly Property RestartCommand As RestartConfig
  overload: Mewdeko.Services.IBotCredentials.RestartCommand*
- uid: Mewdeko.Services.IBotCredentials.VotesToken
  commentId: P:Mewdeko.Services.IBotCredentials.VotesToken
  id: VotesToken
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: VotesToken
  nameWithType: IBotCredentials.VotesToken
  fullName: Mewdeko.Services.IBotCredentials.VotesToken
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: VotesToken
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 97
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the token used for voting.
  example: []
  syntax:
    content: string VotesToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property VotesToken As String
  overload: Mewdeko.Services.IBotCredentials.VotesToken*
- uid: Mewdeko.Services.IBotCredentials.TwitchClientId
  commentId: P:Mewdeko.Services.IBotCredentials.TwitchClientId
  id: TwitchClientId
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: TwitchClientId
  nameWithType: IBotCredentials.TwitchClientId
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TwitchClientId
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 102
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Twitch client ID.
  example: []
  syntax:
    content: string TwitchClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TwitchClientId As String
  overload: Mewdeko.Services.IBotCredentials.TwitchClientId*
- uid: Mewdeko.Services.IBotCredentials.RedisOptions
  commentId: P:Mewdeko.Services.IBotCredentials.RedisOptions
  id: RedisOptions
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: RedisOptions
  nameWithType: IBotCredentials.RedisOptions
  fullName: Mewdeko.Services.IBotCredentials.RedisOptions
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RedisOptions
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 107
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the Redis options.
  example: []
  syntax:
    content: string RedisOptions { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property RedisOptions As String
  overload: Mewdeko.Services.IBotCredentials.RedisOptions*
- uid: Mewdeko.Services.IBotCredentials.LocationIqApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.LocationIqApiKey
  id: LocationIqApiKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: LocationIqApiKey
  nameWithType: IBotCredentials.LocationIqApiKey
  fullName: Mewdeko.Services.IBotCredentials.LocationIqApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LocationIqApiKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 112
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the LocationIQ API key.
  example: []
  syntax:
    content: string LocationIqApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LocationIqApiKey As String
  overload: Mewdeko.Services.IBotCredentials.LocationIqApiKey*
- uid: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  id: TimezoneDbApiKey
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: TimezoneDbApiKey
  nameWithType: IBotCredentials.TimezoneDbApiKey
  fullName: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TimezoneDbApiKey
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 117
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the TimezoneDB API key.
  example: []
  syntax:
    content: string TimezoneDbApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property TimezoneDbApiKey As String
  overload: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey*
- uid: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  commentId: P:Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  id: ConfessionReportChannelId
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: ConfessionReportChannelId
  nameWithType: IBotCredentials.ConfessionReportChannelId
  fullName: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConfessionReportChannelId
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 122
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the channel ID for confession reports.
  example: []
  syntax:
    content: ulong ConfessionReportChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property ConfessionReportChannelId As ULong
  overload: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId*
- uid: Mewdeko.Services.IBotCredentials.CfClearance
  commentId: P:Mewdeko.Services.IBotCredentials.CfClearance
  id: CfClearance
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: CfClearance
  nameWithType: IBotCredentials.CfClearance
  fullName: Mewdeko.Services.IBotCredentials.CfClearance
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CfClearance
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 127
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's Cloudflare clearance cookie.
  example: []
  syntax:
    content: string CfClearance { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CfClearance As String
  overload: Mewdeko.Services.IBotCredentials.CfClearance*
- uid: Mewdeko.Services.IBotCredentials.UserAgent
  commentId: P:Mewdeko.Services.IBotCredentials.UserAgent
  id: UserAgent
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: UserAgent
  nameWithType: IBotCredentials.UserAgent
  fullName: Mewdeko.Services.IBotCredentials.UserAgent
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserAgent
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's user agent used for bypassing Cloudflare.
  example: []
  syntax:
    content: string UserAgent { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property UserAgent As String
  overload: Mewdeko.Services.IBotCredentials.UserAgent*
- uid: Mewdeko.Services.IBotCredentials.CsrfToken
  commentId: P:Mewdeko.Services.IBotCredentials.CsrfToken
  id: CsrfToken
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: CsrfToken
  nameWithType: IBotCredentials.CsrfToken
  fullName: Mewdeko.Services.IBotCredentials.CsrfToken
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CsrfToken
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 137
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the bot's CSRF token used for bypassing Cloudflare.
  example: []
  syntax:
    content: string CsrfToken { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property CsrfToken As String
  overload: Mewdeko.Services.IBotCredentials.CsrfToken*
- uid: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  commentId: M:Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  id: IsOwner(Discord.IUser)
  parent: Mewdeko.Services.IBotCredentials
  langs:
  - csharp
  - vb
  name: IsOwner(IUser)
  nameWithType: IBotCredentials.IsOwner(IUser)
  fullName: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IBotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsOwner
    path: src/Mewdeko/Services/IBotCredentials.cs
    startLine: 144
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Checks if the given user is an owner of the bot.
  example: []
  syntax:
    content: bool IsOwner(IUser u)
    parameters:
    - id: u
      type: Discord.IUser
      description: The user to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the user is an owner; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Function IsOwner(u As IUser) As Boolean
  overload: Mewdeko.Services.IBotCredentials.IsOwner*
references:
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.RedisKey
  commentId: M:Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  name: RedisKey(IBotCredentials)
  nameWithType: Extensions.RedisKey(IBotCredentials)
  fullName: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
- uid: Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<IBotCredentials>(IBotCredentials, string)
  nameWithType: Extensions.ThrowIfNull<IBotCredentials>(IBotCredentials, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Services.IBotCredentials>(Mewdeko.Services.IBotCredentials, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of IBotCredentials)(IBotCredentials, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Services.IBotCredentials)(Mewdeko.Services.IBotCredentials, String)
  name.vb: ThrowIfNull(Of IBotCredentials)(IBotCredentials, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.IBotCredentials,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.IBotCredentials,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  commentId: M:Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  name: RedisKey(IBotCredentials)
  nameWithType: Extensions.RedisKey(IBotCredentials)
  fullName: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.IBotCredentials.Token*
  commentId: Overload:Mewdeko.Services.IBotCredentials.Token
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_Token
  name: Token
  nameWithType: IBotCredentials.Token
  fullName: Mewdeko.Services.IBotCredentials.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services.IBotCredentials.ClientSecret*
  commentId: Overload:Mewdeko.Services.IBotCredentials.ClientSecret
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ClientSecret
  name: ClientSecret
  nameWithType: IBotCredentials.ClientSecret
  fullName: Mewdeko.Services.IBotCredentials.ClientSecret
- uid: Mewdeko.Services.IBotCredentials.GoogleApiKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.GoogleApiKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_GoogleApiKey
  name: GoogleApiKey
  nameWithType: IBotCredentials.GoogleApiKey
  fullName: Mewdeko.Services.IBotCredentials.GoogleApiKey
- uid: Mewdeko.Services.IBotCredentials.OwnerIds*
  commentId: Overload:Mewdeko.Services.IBotCredentials.OwnerIds
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_OwnerIds
  name: OwnerIds
  nameWithType: IBotCredentials.OwnerIds
  fullName: Mewdeko.Services.IBotCredentials.OwnerIds
- uid: System.Collections.Immutable.ImmutableArray{System.UInt64}
  commentId: T:System.Collections.Immutable.ImmutableArray{System.UInt64}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<ulong>
  nameWithType: ImmutableArray<ulong>
  fullName: System.Collections.Immutable.ImmutableArray<ulong>
  nameWithType.vb: ImmutableArray(Of ULong)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of ULong)
  name.vb: ImmutableArray(Of ULong)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: Mewdeko.Services.IBotCredentials.GeniusKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.GeniusKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_GeniusKey
  name: GeniusKey
  nameWithType: IBotCredentials.GeniusKey
  fullName: Mewdeko.Services.IBotCredentials.GeniusKey
- uid: Mewdeko.Services.IBotCredentials.StatcordKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.StatcordKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_StatcordKey
  name: StatcordKey
  nameWithType: IBotCredentials.StatcordKey
  fullName: Mewdeko.Services.IBotCredentials.StatcordKey
- uid: Mewdeko.Services.IBotCredentials.MashapeKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.MashapeKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_MashapeKey
  name: MashapeKey
  nameWithType: IBotCredentials.MashapeKey
  fullName: Mewdeko.Services.IBotCredentials.MashapeKey
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientId*
  commentId: Overload:Mewdeko.Services.IBotCredentials.SpotifyClientId
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_SpotifyClientId
  name: SpotifyClientId
  nameWithType: IBotCredentials.SpotifyClientId
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientId
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientSecret*
  commentId: Overload:Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_SpotifyClientSecret
  name: SpotifyClientSecret
  nameWithType: IBotCredentials.SpotifyClientSecret
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientSecret
- uid: Mewdeko.Services.IBotCredentials.OsuApiKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.OsuApiKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_OsuApiKey
  name: OsuApiKey
  nameWithType: IBotCredentials.OsuApiKey
  fullName: Mewdeko.Services.IBotCredentials.OsuApiKey
- uid: Mewdeko.Services.IBotCredentials.ShardRunPort*
  commentId: Overload:Mewdeko.Services.IBotCredentials.ShardRunPort
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ShardRunPort
  name: ShardRunPort
  nameWithType: IBotCredentials.ShardRunPort
  fullName: Mewdeko.Services.IBotCredentials.ShardRunPort
- uid: Mewdeko.Services.IBotCredentials.ChatSavePath*
  commentId: Overload:Mewdeko.Services.IBotCredentials.ChatSavePath
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ChatSavePath
  name: ChatSavePath
  nameWithType: IBotCredentials.ChatSavePath
  fullName: Mewdeko.Services.IBotCredentials.ChatSavePath
- uid: Mewdeko.Services.IBotCredentials.TotalShards*
  commentId: Overload:Mewdeko.Services.IBotCredentials.TotalShards
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TotalShards
  name: TotalShards
  nameWithType: IBotCredentials.TotalShards
  fullName: Mewdeko.Services.IBotCredentials.TotalShards
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Services.IBotCredentials.TwitchClientSecret*
  commentId: Overload:Mewdeko.Services.IBotCredentials.TwitchClientSecret
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TwitchClientSecret
  name: TwitchClientSecret
  nameWithType: IBotCredentials.TwitchClientSecret
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientSecret
- uid: Mewdeko.Services.IBotCredentials.TrovoClientId*
  commentId: Overload:Mewdeko.Services.IBotCredentials.TrovoClientId
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TrovoClientId
  name: TrovoClientId
  nameWithType: IBotCredentials.TrovoClientId
  fullName: Mewdeko.Services.IBotCredentials.TrovoClientId
- uid: Mewdeko.Services.IBotCredentials.CleverbotApiKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.CleverbotApiKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CleverbotApiKey
  name: CleverbotApiKey
  nameWithType: IBotCredentials.CleverbotApiKey
  fullName: Mewdeko.Services.IBotCredentials.CleverbotApiKey
- uid: Mewdeko.Services.IBotCredentials.RestartCommand*
  commentId: Overload:Mewdeko.Services.IBotCredentials.RestartCommand
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_RestartCommand
  name: RestartCommand
  nameWithType: IBotCredentials.RestartCommand
  fullName: Mewdeko.Services.IBotCredentials.RestartCommand
- uid: Mewdeko.Services.RestartConfig
  commentId: T:Mewdeko.Services.RestartConfig
  parent: Mewdeko.Services
  href: Mewdeko.Services.RestartConfig.html
  name: RestartConfig
  nameWithType: RestartConfig
  fullName: Mewdeko.Services.RestartConfig
- uid: Mewdeko.Services.IBotCredentials.VotesToken*
  commentId: Overload:Mewdeko.Services.IBotCredentials.VotesToken
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_VotesToken
  name: VotesToken
  nameWithType: IBotCredentials.VotesToken
  fullName: Mewdeko.Services.IBotCredentials.VotesToken
- uid: Mewdeko.Services.IBotCredentials.TwitchClientId*
  commentId: Overload:Mewdeko.Services.IBotCredentials.TwitchClientId
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TwitchClientId
  name: TwitchClientId
  nameWithType: IBotCredentials.TwitchClientId
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientId
- uid: Mewdeko.Services.IBotCredentials.RedisOptions*
  commentId: Overload:Mewdeko.Services.IBotCredentials.RedisOptions
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_RedisOptions
  name: RedisOptions
  nameWithType: IBotCredentials.RedisOptions
  fullName: Mewdeko.Services.IBotCredentials.RedisOptions
- uid: Mewdeko.Services.IBotCredentials.LocationIqApiKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.LocationIqApiKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_LocationIqApiKey
  name: LocationIqApiKey
  nameWithType: IBotCredentials.LocationIqApiKey
  fullName: Mewdeko.Services.IBotCredentials.LocationIqApiKey
- uid: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey*
  commentId: Overload:Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TimezoneDbApiKey
  name: TimezoneDbApiKey
  nameWithType: IBotCredentials.TimezoneDbApiKey
  fullName: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
- uid: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId*
  commentId: Overload:Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ConfessionReportChannelId
  name: ConfessionReportChannelId
  nameWithType: IBotCredentials.ConfessionReportChannelId
  fullName: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Services.IBotCredentials.CfClearance*
  commentId: Overload:Mewdeko.Services.IBotCredentials.CfClearance
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CfClearance
  name: CfClearance
  nameWithType: IBotCredentials.CfClearance
  fullName: Mewdeko.Services.IBotCredentials.CfClearance
- uid: Mewdeko.Services.IBotCredentials.UserAgent*
  commentId: Overload:Mewdeko.Services.IBotCredentials.UserAgent
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_UserAgent
  name: UserAgent
  nameWithType: IBotCredentials.UserAgent
  fullName: Mewdeko.Services.IBotCredentials.UserAgent
- uid: Mewdeko.Services.IBotCredentials.CsrfToken*
  commentId: Overload:Mewdeko.Services.IBotCredentials.CsrfToken
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CsrfToken
  name: CsrfToken
  nameWithType: IBotCredentials.CsrfToken
  fullName: Mewdeko.Services.IBotCredentials.CsrfToken
- uid: Mewdeko.Services.IBotCredentials.IsOwner*
  commentId: Overload:Mewdeko.Services.IBotCredentials.IsOwner
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_IsOwner_Discord_IUser_
  name: IsOwner
  nameWithType: IBotCredentials.IsOwner
  fullName: Mewdeko.Services.IBotCredentials.IsOwner
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
