### YamlMime:ManagedReference
items:
- uid: Mewdeko.Extensions.NumberExtensions
  commentId: T:Mewdeko.Extensions.NumberExtensions
  id: NumberExtensions
  parent: Mewdeko.Extensions
  children:
  - Mewdeko.Extensions.NumberExtensions.Gb(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.Gb(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.GiB(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.GiB(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.IsInteger(System.Decimal)
  - Mewdeko.Extensions.NumberExtensions.Kb(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.Kb(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.KiB(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.KiB(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.Mb(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.Mb(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.MiB(System.Int32)
  - Mewdeko.Extensions.NumberExtensions.MiB(System.UInt64)
  - Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp(System.Double)
  langs:
  - csharp
  - vb
  name: NumberExtensions
  nameWithType: NumberExtensions
  fullName: Mewdeko.Extensions.NumberExtensions
  type: Class
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NumberExtensions
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 5
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Provides extension methods for numeric types.
  example: []
  syntax:
    content: public static class NumberExtensions
    content.vb: Public Module NumberExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Extensions.NumberExtensions.KiB(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.KiB(System.Int32)
  id: KiB(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: KiB(int)
  nameWithType: NumberExtensions.KiB(int)
  fullName: Mewdeko.Extensions.NumberExtensions.KiB(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: KiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to kilobytes.
  example: []
  syntax:
    content: public static int KiB(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function KiB(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.KiB*
  nameWithType.vb: NumberExtensions.KiB(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.KiB(Integer)
  name.vb: KiB(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.Kb(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Kb(System.Int32)
  id: Kb(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Kb(int)
  nameWithType: NumberExtensions.Kb(int)
  fullName: Mewdeko.Extensions.NumberExtensions.Kb(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to kilobits.
  example: []
  syntax:
    content: public static int Kb(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Kb(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.Kb*
  nameWithType.vb: NumberExtensions.Kb(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Kb(Integer)
  name.vb: Kb(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.MiB(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.MiB(System.Int32)
  id: MiB(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: MiB(int)
  nameWithType: NumberExtensions.MiB(int)
  fullName: Mewdeko.Extensions.NumberExtensions.MiB(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 20
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to megabytes.
  example: []
  syntax:
    content: public static int MiB(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function MiB(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.MiB*
  nameWithType.vb: NumberExtensions.MiB(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.MiB(Integer)
  name.vb: MiB(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.Mb(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Mb(System.Int32)
  id: Mb(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Mb(int)
  nameWithType: NumberExtensions.Mb(int)
  fullName: Mewdeko.Extensions.NumberExtensions.Mb(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Mb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to megabits.
  example: []
  syntax:
    content: public static int Mb(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Mb(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.Mb*
  nameWithType.vb: NumberExtensions.Mb(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Mb(Integer)
  name.vb: Mb(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.GiB(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.GiB(System.Int32)
  id: GiB(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: GiB(int)
  nameWithType: NumberExtensions.GiB(int)
  fullName: Mewdeko.Extensions.NumberExtensions.GiB(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 30
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to gigabytes.
  example: []
  syntax:
    content: public static int GiB(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GiB(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.GiB*
  nameWithType.vb: NumberExtensions.GiB(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.GiB(Integer)
  name.vb: GiB(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.Gb(System.Int32)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Gb(System.Int32)
  id: Gb(System.Int32)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Gb(int)
  nameWithType: NumberExtensions.Gb(int)
  fullName: Mewdeko.Extensions.NumberExtensions.Gb(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Gb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to gigabits.
  example: []
  syntax:
    content: public static int Gb(this int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Gb(value As Integer) As Integer
  overload: Mewdeko.Extensions.NumberExtensions.Gb*
  nameWithType.vb: NumberExtensions.Gb(Integer)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Gb(Integer)
  name.vb: Gb(Integer)
- uid: Mewdeko.Extensions.NumberExtensions.KiB(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.KiB(System.UInt64)
  id: KiB(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: KiB(ulong)
  nameWithType: NumberExtensions.KiB(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.KiB(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: KiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 40
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to kilobytes.
  example: []
  syntax:
    content: public static ulong KiB(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function KiB(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.KiB*
  nameWithType.vb: NumberExtensions.KiB(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.KiB(ULong)
  name.vb: KiB(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.Kb(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Kb(System.UInt64)
  id: Kb(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Kb(ulong)
  nameWithType: NumberExtensions.Kb(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.Kb(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Kb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 45
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to kilobits.
  example: []
  syntax:
    content: public static ulong Kb(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function Kb(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.Kb*
  nameWithType.vb: NumberExtensions.Kb(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Kb(ULong)
  name.vb: Kb(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.MiB(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.MiB(System.UInt64)
  id: MiB(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: MiB(ulong)
  nameWithType: NumberExtensions.MiB(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.MiB(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 50
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to megabytes.
  example: []
  syntax:
    content: public static ulong MiB(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function MiB(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.MiB*
  nameWithType.vb: NumberExtensions.MiB(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.MiB(ULong)
  name.vb: MiB(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.Mb(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Mb(System.UInt64)
  id: Mb(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Mb(ulong)
  nameWithType: NumberExtensions.Mb(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.Mb(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Mb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 55
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to megabits.
  example: []
  syntax:
    content: public static ulong Mb(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function Mb(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.Mb*
  nameWithType.vb: NumberExtensions.Mb(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Mb(ULong)
  name.vb: Mb(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.GiB(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.GiB(System.UInt64)
  id: GiB(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: GiB(ulong)
  nameWithType: NumberExtensions.GiB(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.GiB(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GiB
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 60
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to gigabytes.
  example: []
  syntax:
    content: public static ulong GiB(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function GiB(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.GiB*
  nameWithType.vb: NumberExtensions.GiB(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.GiB(ULong)
  name.vb: GiB(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.Gb(System.UInt64)
  commentId: M:Mewdeko.Extensions.NumberExtensions.Gb(System.UInt64)
  id: Gb(System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: Gb(ulong)
  nameWithType: NumberExtensions.Gb(ulong)
  fullName: Mewdeko.Extensions.NumberExtensions.Gb(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Gb
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 65
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a value to gigabits.
  example: []
  syntax:
    content: public static ulong Gb(this ulong value)
    parameters:
    - id: value
      type: System.UInt64
    return:
      type: System.UInt64
    content.vb: Public Shared Function Gb(value As ULong) As ULong
  overload: Mewdeko.Extensions.NumberExtensions.Gb*
  nameWithType.vb: NumberExtensions.Gb(ULong)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.Gb(ULong)
  name.vb: Gb(ULong)
- uid: Mewdeko.Extensions.NumberExtensions.IsInteger(System.Decimal)
  commentId: M:Mewdeko.Extensions.NumberExtensions.IsInteger(System.Decimal)
  id: IsInteger(System.Decimal)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: IsInteger(decimal)
  nameWithType: NumberExtensions.IsInteger(decimal)
  fullName: Mewdeko.Extensions.NumberExtensions.IsInteger(decimal)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsInteger
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 70
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Determines whether a decimal number is an integer.
  example: []
  syntax:
    content: public static bool IsInteger(this decimal number)
    parameters:
    - id: number
      type: System.Decimal
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsInteger(number As Decimal) As Boolean
  overload: Mewdeko.Extensions.NumberExtensions.IsInteger*
  nameWithType.vb: NumberExtensions.IsInteger(Decimal)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.IsInteger(Decimal)
  name.vb: IsInteger(Decimal)
- uid: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp(System.Double)
  commentId: M:Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp(System.Double)
  id: ToUnixTimestamp(System.Double)
  isExtensionMethod: true
  parent: Mewdeko.Extensions.NumberExtensions
  langs:
  - csharp
  - vb
  name: ToUnixTimestamp(double)
  nameWithType: NumberExtensions.ToUnixTimestamp(double)
  fullName: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp(double)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Extensions/NumberExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToUnixTimestamp
    path: src/Mewdeko/Extensions/NumberExtensions.cs
    startLine: 75
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Extensions
  summary: Converts a Unix timestamp (seconds since epoch) to a <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DateTimeOffset ToUnixTimestamp(this double number)
    parameters:
    - id: number
      type: System.Double
    return:
      type: System.DateTimeOffset
    content.vb: Public Shared Function ToUnixTimestamp(number As Double) As DateTimeOffset
  overload: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp*
  nameWithType.vb: NumberExtensions.ToUnixTimestamp(Double)
  fullName.vb: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp(Double)
  name.vb: ToUnixTimestamp(Double)
references:
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.NumberExtensions.KiB*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.KiB
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_KiB_System_Int32_
  name: KiB
  nameWithType: NumberExtensions.KiB
  fullName: Mewdeko.Extensions.NumberExtensions.KiB
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Extensions.NumberExtensions.Kb*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.Kb
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_Kb_System_Int32_
  name: Kb
  nameWithType: NumberExtensions.Kb
  fullName: Mewdeko.Extensions.NumberExtensions.Kb
- uid: Mewdeko.Extensions.NumberExtensions.MiB*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.MiB
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_MiB_System_Int32_
  name: MiB
  nameWithType: NumberExtensions.MiB
  fullName: Mewdeko.Extensions.NumberExtensions.MiB
- uid: Mewdeko.Extensions.NumberExtensions.Mb*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.Mb
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_Mb_System_Int32_
  name: Mb
  nameWithType: NumberExtensions.Mb
  fullName: Mewdeko.Extensions.NumberExtensions.Mb
- uid: Mewdeko.Extensions.NumberExtensions.GiB*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.GiB
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_GiB_System_Int32_
  name: GiB
  nameWithType: NumberExtensions.GiB
  fullName: Mewdeko.Extensions.NumberExtensions.GiB
- uid: Mewdeko.Extensions.NumberExtensions.Gb*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.Gb
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_Gb_System_Int32_
  name: Gb
  nameWithType: NumberExtensions.Gb
  fullName: Mewdeko.Extensions.NumberExtensions.Gb
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Extensions.NumberExtensions.IsInteger*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.IsInteger
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_IsInteger_System_Decimal_
  name: IsInteger
  nameWithType: NumberExtensions.IsInteger
  fullName: Mewdeko.Extensions.NumberExtensions.IsInteger
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp*
  commentId: Overload:Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp
  href: Mewdeko.Extensions.NumberExtensions.html#Mewdeko_Extensions_NumberExtensions_ToUnixTimestamp_System_Double_
  name: ToUnixTimestamp
  nameWithType: NumberExtensions.ToUnixTimestamp
  fullName: Mewdeko.Extensions.NumberExtensions.ToUnixTimestamp
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
