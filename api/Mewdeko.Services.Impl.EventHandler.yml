### YamlMime:ManagedReference
items:
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  id: EventHandler
  parent: Mewdeko.Services.Impl
  children:
  - Mewdeko.Services.Impl.EventHandler.#ctor(Discord.WebSocket.DiscordSocketClient)
  - Mewdeko.Services.Impl.EventHandler.AuditLogCreated
  - Mewdeko.Services.Impl.EventHandler.ChannelCreated
  - Mewdeko.Services.Impl.EventHandler.ChannelDestroyed
  - Mewdeko.Services.Impl.EventHandler.ChannelUpdated
  - Mewdeko.Services.Impl.EventHandler.EventCreated
  - Mewdeko.Services.Impl.EventHandler.GuildMemberUpdated
  - Mewdeko.Services.Impl.EventHandler.GuildUpdated
  - Mewdeko.Services.Impl.EventHandler.InteractionCreated
  - Mewdeko.Services.Impl.EventHandler.JoinedGuild
  - Mewdeko.Services.Impl.EventHandler.MessageDeleted
  - Mewdeko.Services.Impl.EventHandler.MessageReceived
  - Mewdeko.Services.Impl.EventHandler.MessageUpdated
  - Mewdeko.Services.Impl.EventHandler.MessagesBulkDeleted
  - Mewdeko.Services.Impl.EventHandler.PresenceUpdated
  - Mewdeko.Services.Impl.EventHandler.ReactionAdded
  - Mewdeko.Services.Impl.EventHandler.ReactionRemoved
  - Mewdeko.Services.Impl.EventHandler.ReactionsCleared
  - Mewdeko.Services.Impl.EventHandler.Ready
  - Mewdeko.Services.Impl.EventHandler.RoleCreated
  - Mewdeko.Services.Impl.EventHandler.RoleDeleted
  - Mewdeko.Services.Impl.EventHandler.RoleUpdated
  - Mewdeko.Services.Impl.EventHandler.ThreadCreated
  - Mewdeko.Services.Impl.EventHandler.ThreadDeleted
  - Mewdeko.Services.Impl.EventHandler.ThreadMemberJoined
  - Mewdeko.Services.Impl.EventHandler.ThreadMemberLeft
  - Mewdeko.Services.Impl.EventHandler.ThreadUpdated
  - Mewdeko.Services.Impl.EventHandler.UserBanned
  - Mewdeko.Services.Impl.EventHandler.UserIsTyping
  - Mewdeko.Services.Impl.EventHandler.UserJoined
  - Mewdeko.Services.Impl.EventHandler.UserLeft
  - Mewdeko.Services.Impl.EventHandler.UserUnbanned
  - Mewdeko.Services.Impl.EventHandler.UserUpdated
  - Mewdeko.Services.Impl.EventHandler.UserVoiceStateUpdated
  langs:
  - csharp
  - vb
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
  type: Class
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EventHandler
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 5
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Used to combat discord.nets stupid non async event handlers.
  example: []
  syntax:
    content: public class EventHandler
    content.vb: Public Class EventHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Services.Impl.EventHandler.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Services.Impl.EventHandler.MessageReceived
  commentId: E:Mewdeko.Services.Impl.EventHandler.MessageReceived
  id: MessageReceived
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: MessageReceived
  nameWithType: EventHandler.MessageReceived
  fullName: Mewdeko.Services.Impl.EventHandler.MessageReceived
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MessageReceived
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 48
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a message is received.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketMessage>? MessageReceived
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketMessage}
    content.vb: Public Event MessageReceived As EventHandler.AsyncEventHandler(Of SocketMessage)
- uid: Mewdeko.Services.Impl.EventHandler.EventCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.EventCreated
  id: EventCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: EventCreated
  nameWithType: EventHandler.EventCreated
  fullName: Mewdeko.Services.Impl.EventHandler.EventCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EventCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 53
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a guild event is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketGuildEvent>? EventCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuildEvent}
    content.vb: Public Event EventCreated As EventHandler.AsyncEventHandler(Of SocketGuildEvent)
- uid: Mewdeko.Services.Impl.EventHandler.RoleCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.RoleCreated
  id: RoleCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: RoleCreated
  nameWithType: EventHandler.RoleCreated
  fullName: Mewdeko.Services.Impl.EventHandler.RoleCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 58
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a role is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketRole>? RoleCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole}
    content.vb: Public Event RoleCreated As EventHandler.AsyncEventHandler(Of SocketRole)
- uid: Mewdeko.Services.Impl.EventHandler.GuildUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.GuildUpdated
  id: GuildUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: GuildUpdated
  nameWithType: EventHandler.GuildUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.GuildUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GuildUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 63
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a guild is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketGuild, SocketGuild>? GuildUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuild,Discord.WebSocket.SocketGuild}
    content.vb: Public Event GuildUpdated As EventHandler.AsyncEventHandler(Of SocketGuild, SocketGuild)
- uid: Mewdeko.Services.Impl.EventHandler.UserJoined
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserJoined
  id: UserJoined
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserJoined
  nameWithType: EventHandler.UserJoined
  fullName: Mewdeko.Services.Impl.EventHandler.UserJoined
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserJoined
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 68
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user joins a guild.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<IGuildUser>? UserJoined
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuildUser}
    content.vb: Public Event UserJoined As EventHandler.AsyncEventHandler(Of IGuildUser)
- uid: Mewdeko.Services.Impl.EventHandler.RoleUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.RoleUpdated
  id: RoleUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: RoleUpdated
  nameWithType: EventHandler.RoleUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.RoleUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 73
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a role is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketRole, SocketRole>? RoleUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole,Discord.WebSocket.SocketRole}
    content.vb: Public Event RoleUpdated As EventHandler.AsyncEventHandler(Of SocketRole, SocketRole)
- uid: Mewdeko.Services.Impl.EventHandler.UserLeft
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserLeft
  id: UserLeft
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserLeft
  nameWithType: EventHandler.UserLeft
  fullName: Mewdeko.Services.Impl.EventHandler.UserLeft
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserLeft
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 78
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user leaves a guild.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<IGuild, IUser>? UserLeft
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild,Discord.IUser}
    content.vb: Public Event UserLeft As EventHandler.AsyncEventHandler(Of IGuild, IUser)
- uid: Mewdeko.Services.Impl.EventHandler.MessageDeleted
  commentId: E:Mewdeko.Services.Impl.EventHandler.MessageDeleted
  id: MessageDeleted
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: MessageDeleted
  nameWithType: EventHandler.MessageDeleted
  fullName: Mewdeko.Services.Impl.EventHandler.MessageDeleted
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MessageDeleted
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 83
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a message is deleted.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, Cacheable<IMessageChannel, ulong>>? MessageDeleted
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
    content.vb: Public Event MessageDeleted As EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), Cacheable(Of IMessageChannel, ULong))
- uid: Mewdeko.Services.Impl.EventHandler.GuildMemberUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.GuildMemberUpdated
  id: GuildMemberUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: GuildMemberUpdated
  nameWithType: EventHandler.GuildMemberUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.GuildMemberUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GuildMemberUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 88
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a guild member is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<SocketGuildUser, ulong>, SocketGuildUser>? GuildMemberUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketGuildUser,System.UInt64},Discord.WebSocket.SocketGuildUser}
    content.vb: Public Event GuildMemberUpdated As EventHandler.AsyncEventHandler(Of Cacheable(Of SocketGuildUser, ULong), SocketGuildUser)
- uid: Mewdeko.Services.Impl.EventHandler.MessageUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.MessageUpdated
  id: MessageUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: MessageUpdated
  nameWithType: EventHandler.MessageUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.MessageUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MessageUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 93
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a message is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, SocketMessage, ISocketMessageChannel>? MessageUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.WebSocket.SocketMessage,Discord.WebSocket.ISocketMessageChannel}
    content.vb: Public Event MessageUpdated As EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), SocketMessage, ISocketMessageChannel)
- uid: Mewdeko.Services.Impl.EventHandler.MessagesBulkDeleted
  commentId: E:Mewdeko.Services.Impl.EventHandler.MessagesBulkDeleted
  id: MessagesBulkDeleted
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: MessagesBulkDeleted
  nameWithType: EventHandler.MessagesBulkDeleted
  fullName: Mewdeko.Services.Impl.EventHandler.MessagesBulkDeleted
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MessagesBulkDeleted
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 99
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a collection of messages are bulk deleted.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<IReadOnlyCollection<Cacheable<IMessage, ulong>>, Cacheable<IMessageChannel, ulong>>? MessagesBulkDeleted
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{System.Collections.Generic.IReadOnlyCollection{Discord.Cacheable{Discord.IMessage,System.UInt64}},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
    content.vb: Public Event MessagesBulkDeleted As EventHandler.AsyncEventHandler(Of IReadOnlyCollection(Of Cacheable(Of IMessage, ULong)), Cacheable(Of IMessageChannel, ULong))
- uid: Mewdeko.Services.Impl.EventHandler.UserBanned
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserBanned
  id: UserBanned
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserBanned
  nameWithType: EventHandler.UserBanned
  fullName: Mewdeko.Services.Impl.EventHandler.UserBanned
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserBanned
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 104
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user is banned.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketUser, SocketGuild>? UserBanned
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketGuild}
    content.vb: Public Event UserBanned As EventHandler.AsyncEventHandler(Of SocketUser, SocketGuild)
- uid: Mewdeko.Services.Impl.EventHandler.UserUnbanned
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserUnbanned
  id: UserUnbanned
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserUnbanned
  nameWithType: EventHandler.UserUnbanned
  fullName: Mewdeko.Services.Impl.EventHandler.UserUnbanned
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserUnbanned
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 109
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user is unbanned.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketUser, SocketGuild>? UserUnbanned
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketGuild}
    content.vb: Public Event UserUnbanned As EventHandler.AsyncEventHandler(Of SocketUser, SocketGuild)
- uid: Mewdeko.Services.Impl.EventHandler.UserUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserUpdated
  id: UserUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserUpdated
  nameWithType: EventHandler.UserUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.UserUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 114
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user's voice state is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketUser, SocketUser>? UserUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketUser}
    content.vb: Public Event UserUpdated As EventHandler.AsyncEventHandler(Of SocketUser, SocketUser)
- uid: Mewdeko.Services.Impl.EventHandler.UserVoiceStateUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserVoiceStateUpdated
  id: UserVoiceStateUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserVoiceStateUpdated
  nameWithType: EventHandler.UserVoiceStateUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.UserVoiceStateUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserVoiceStateUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 119
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user's voice state is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketUser, SocketVoiceState, SocketVoiceState>? UserVoiceStateUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketVoiceState,Discord.WebSocket.SocketVoiceState}
    content.vb: Public Event UserVoiceStateUpdated As EventHandler.AsyncEventHandler(Of SocketUser, SocketVoiceState, SocketVoiceState)
- uid: Mewdeko.Services.Impl.EventHandler.ChannelCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.ChannelCreated
  id: ChannelCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ChannelCreated
  nameWithType: EventHandler.ChannelCreated
  fullName: Mewdeko.Services.Impl.EventHandler.ChannelCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChannelCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 124
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a channel is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketChannel>? ChannelCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel}
    content.vb: Public Event ChannelCreated As EventHandler.AsyncEventHandler(Of SocketChannel)
- uid: Mewdeko.Services.Impl.EventHandler.ChannelDestroyed
  commentId: E:Mewdeko.Services.Impl.EventHandler.ChannelDestroyed
  id: ChannelDestroyed
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ChannelDestroyed
  nameWithType: EventHandler.ChannelDestroyed
  fullName: Mewdeko.Services.Impl.EventHandler.ChannelDestroyed
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChannelDestroyed
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 129
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a channel is destroyed.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketChannel>? ChannelDestroyed
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel}
    content.vb: Public Event ChannelDestroyed As EventHandler.AsyncEventHandler(Of SocketChannel)
- uid: Mewdeko.Services.Impl.EventHandler.ChannelUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.ChannelUpdated
  id: ChannelUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ChannelUpdated
  nameWithType: EventHandler.ChannelUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.ChannelUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChannelUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 134
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: '\Occurs when a channel is updated.'
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketChannel, SocketChannel>? ChannelUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel,Discord.WebSocket.SocketChannel}
    content.vb: Public Event ChannelUpdated As EventHandler.AsyncEventHandler(Of SocketChannel, SocketChannel)
- uid: Mewdeko.Services.Impl.EventHandler.RoleDeleted
  commentId: E:Mewdeko.Services.Impl.EventHandler.RoleDeleted
  id: RoleDeleted
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: RoleDeleted
  nameWithType: EventHandler.RoleDeleted
  fullName: Mewdeko.Services.Impl.EventHandler.RoleDeleted
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleDeleted
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 139
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a role is deleted.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketRole>? RoleDeleted
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole}
    content.vb: Public Event RoleDeleted As EventHandler.AsyncEventHandler(Of SocketRole)
- uid: Mewdeko.Services.Impl.EventHandler.ReactionAdded
  commentId: E:Mewdeko.Services.Impl.EventHandler.ReactionAdded
  id: ReactionAdded
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ReactionAdded
  nameWithType: EventHandler.ReactionAdded
  fullName: Mewdeko.Services.Impl.EventHandler.ReactionAdded
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReactionAdded
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 145
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a reaction is added to a message.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>, SocketReaction>? ReactionAdded
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64},Discord.WebSocket.SocketReaction}
    content.vb: Public Event ReactionAdded As EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong), SocketReaction)
- uid: Mewdeko.Services.Impl.EventHandler.ReactionRemoved
  commentId: E:Mewdeko.Services.Impl.EventHandler.ReactionRemoved
  id: ReactionRemoved
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ReactionRemoved
  nameWithType: EventHandler.ReactionRemoved
  fullName: Mewdeko.Services.Impl.EventHandler.ReactionRemoved
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReactionRemoved
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 151
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a reaction is removed from a message.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>, SocketReaction>? ReactionRemoved
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64},Discord.WebSocket.SocketReaction}
    content.vb: Public Event ReactionRemoved As EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong), SocketReaction)
- uid: Mewdeko.Services.Impl.EventHandler.ReactionsCleared
  commentId: E:Mewdeko.Services.Impl.EventHandler.ReactionsCleared
  id: ReactionsCleared
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ReactionsCleared
  nameWithType: EventHandler.ReactionsCleared
  fullName: Mewdeko.Services.Impl.EventHandler.ReactionsCleared
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReactionsCleared
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 156
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when reactions are cleared from a message.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>>? ReactionsCleared
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
    content.vb: Public Event ReactionsCleared As EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong))
- uid: Mewdeko.Services.Impl.EventHandler.InteractionCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.InteractionCreated
  id: InteractionCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: InteractionCreated
  nameWithType: EventHandler.InteractionCreated
  fullName: Mewdeko.Services.Impl.EventHandler.InteractionCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: InteractionCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 161
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when an interaction is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketInteraction>? InteractionCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketInteraction}
    content.vb: Public Event InteractionCreated As EventHandler.AsyncEventHandler(Of SocketInteraction)
- uid: Mewdeko.Services.Impl.EventHandler.UserIsTyping
  commentId: E:Mewdeko.Services.Impl.EventHandler.UserIsTyping
  id: UserIsTyping
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: UserIsTyping
  nameWithType: EventHandler.UserIsTyping
  fullName: Mewdeko.Services.Impl.EventHandler.UserIsTyping
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserIsTyping
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 166
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user starts typing.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<IUser, ulong>, Cacheable<IMessageChannel, ulong>>? UserIsTyping
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUser,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
    content.vb: Public Event UserIsTyping As EventHandler.AsyncEventHandler(Of Cacheable(Of IUser, ULong), Cacheable(Of IMessageChannel, ULong))
- uid: Mewdeko.Services.Impl.EventHandler.PresenceUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.PresenceUpdated
  id: PresenceUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: PresenceUpdated
  nameWithType: EventHandler.PresenceUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.PresenceUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PresenceUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 171
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a users presence is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketUser, SocketPresence, SocketPresence>? PresenceUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketPresence,Discord.WebSocket.SocketPresence}
    content.vb: Public Event PresenceUpdated As EventHandler.AsyncEventHandler(Of SocketUser, SocketPresence, SocketPresence)
- uid: Mewdeko.Services.Impl.EventHandler.JoinedGuild
  commentId: E:Mewdeko.Services.Impl.EventHandler.JoinedGuild
  id: JoinedGuild
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: JoinedGuild
  nameWithType: EventHandler.JoinedGuild
  fullName: Mewdeko.Services.Impl.EventHandler.JoinedGuild
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: JoinedGuild
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 176
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when the bot joins a guild.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<IGuild>? JoinedGuild
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild}
    content.vb: Public Event JoinedGuild As EventHandler.AsyncEventHandler(Of IGuild)
- uid: Mewdeko.Services.Impl.EventHandler.ThreadCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.ThreadCreated
  id: ThreadCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ThreadCreated
  nameWithType: EventHandler.ThreadCreated
  fullName: Mewdeko.Services.Impl.EventHandler.ThreadCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThreadCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 181
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a thread is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketThreadChannel>? ThreadCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadChannel}
    content.vb: Public Event ThreadCreated As EventHandler.AsyncEventHandler(Of SocketThreadChannel)
- uid: Mewdeko.Services.Impl.EventHandler.ThreadUpdated
  commentId: E:Mewdeko.Services.Impl.EventHandler.ThreadUpdated
  id: ThreadUpdated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ThreadUpdated
  nameWithType: EventHandler.ThreadUpdated
  fullName: Mewdeko.Services.Impl.EventHandler.ThreadUpdated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThreadUpdated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 186
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a thread is updated.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>, SocketThreadChannel>? ThreadUpdated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64},Discord.WebSocket.SocketThreadChannel}
    content.vb: Public Event ThreadUpdated As EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong), SocketThreadChannel)
- uid: Mewdeko.Services.Impl.EventHandler.ThreadDeleted
  commentId: E:Mewdeko.Services.Impl.EventHandler.ThreadDeleted
  id: ThreadDeleted
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ThreadDeleted
  nameWithType: EventHandler.ThreadDeleted
  fullName: Mewdeko.Services.Impl.EventHandler.ThreadDeleted
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThreadDeleted
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 191
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a thread is deleted.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>>? ThreadDeleted
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64}}
    content.vb: Public Event ThreadDeleted As EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong))
- uid: Mewdeko.Services.Impl.EventHandler.ThreadMemberJoined
  commentId: E:Mewdeko.Services.Impl.EventHandler.ThreadMemberJoined
  id: ThreadMemberJoined
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ThreadMemberJoined
  nameWithType: EventHandler.ThreadMemberJoined
  fullName: Mewdeko.Services.Impl.EventHandler.ThreadMemberJoined
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThreadMemberJoined
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 196
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user joins a thread.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketThreadUser>? ThreadMemberJoined
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadUser}
    content.vb: Public Event ThreadMemberJoined As EventHandler.AsyncEventHandler(Of SocketThreadUser)
- uid: Mewdeko.Services.Impl.EventHandler.ThreadMemberLeft
  commentId: E:Mewdeko.Services.Impl.EventHandler.ThreadMemberLeft
  id: ThreadMemberLeft
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: ThreadMemberLeft
  nameWithType: EventHandler.ThreadMemberLeft
  fullName: Mewdeko.Services.Impl.EventHandler.ThreadMemberLeft
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ThreadMemberLeft
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 201
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when a user leaves a thread.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketThreadUser>? ThreadMemberLeft
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadUser}
    content.vb: Public Event ThreadMemberLeft As EventHandler.AsyncEventHandler(Of SocketThreadUser)
- uid: Mewdeko.Services.Impl.EventHandler.AuditLogCreated
  commentId: E:Mewdeko.Services.Impl.EventHandler.AuditLogCreated
  id: AuditLogCreated
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: AuditLogCreated
  nameWithType: EventHandler.AuditLogCreated
  fullName: Mewdeko.Services.Impl.EventHandler.AuditLogCreated
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AuditLogCreated
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 206
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when an audit log event is created.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<SocketAuditLogEntry, SocketGuild>? AuditLogCreated
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketAuditLogEntry,Discord.WebSocket.SocketGuild}
    content.vb: Public Event AuditLogCreated As EventHandler.AsyncEventHandler(Of SocketAuditLogEntry, SocketGuild)
- uid: Mewdeko.Services.Impl.EventHandler.Ready
  commentId: E:Mewdeko.Services.Impl.EventHandler.Ready
  id: Ready
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: Ready
  nameWithType: EventHandler.Ready
  fullName: Mewdeko.Services.Impl.EventHandler.Ready
  type: Event
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Ready
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 211
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Occurs when the client is ready.
  example: []
  syntax:
    content: public event EventHandler.AsyncEventHandler<DiscordSocketClient>? Ready
    return:
      type: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.DiscordSocketClient}
    content.vb: Public Event Ready As EventHandler.AsyncEventHandler(Of DiscordSocketClient)
- uid: Mewdeko.Services.Impl.EventHandler.#ctor(Discord.WebSocket.DiscordSocketClient)
  commentId: M:Mewdeko.Services.Impl.EventHandler.#ctor(Discord.WebSocket.DiscordSocketClient)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient)'
  parent: Mewdeko.Services.Impl.EventHandler
  langs:
  - csharp
  - vb
  name: EventHandler(DiscordSocketClient)
  nameWithType: EventHandler.EventHandler(DiscordSocketClient)
  fullName: Mewdeko.Services.Impl.EventHandler.EventHandler(Discord.WebSocket.DiscordSocketClient)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Services/Impl/EventHandler.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Services/Impl/EventHandler.cs
    startLine: 222
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Initializes a new instance of the <xref href="Mewdeko.Services.Impl.EventHandler" data-throw-if-not-resolved="false"></xref> class. Used to combat discord.nets stupid non async event handlers.
  example: []
  syntax:
    content: public EventHandler(DiscordSocketClient client)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The discord client.
    content.vb: Public Sub New(client As DiscordSocketClient)
  overload: Mewdeko.Services.Impl.EventHandler.#ctor*
  nameWithType.vb: EventHandler.New(DiscordSocketClient)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.New(Discord.WebSocket.DiscordSocketClient)
  name.vb: New(DiscordSocketClient)
references:
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<EventHandler>(EventHandler, string)
  nameWithType: Extensions.ThrowIfNull<EventHandler>(EventHandler, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Services.Impl.EventHandler>(Mewdeko.Services.Impl.EventHandler, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of EventHandler)(EventHandler, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Services.Impl.EventHandler)(Mewdeko.Services.Impl.EventHandler, String)
  name.vb: ThrowIfNull(Of EventHandler)(EventHandler, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.Impl.EventHandler,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.Impl.EventHandler,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: )
  - name: (
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketMessage}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketMessage}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketMessage>
  nameWithType: EventHandler.AsyncEventHandler<SocketMessage>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketMessage>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketMessage)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketMessage)
  name.vb: EventHandler.AsyncEventHandler(Of SocketMessage)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketMessage
    name: SocketMessage
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketMessage
    name: SocketMessage
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<TEventArgs>
  nameWithType: EventHandler.AsyncEventHandler<TEventArgs>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<TEventArgs>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of TEventArgs)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of TEventArgs)
  name.vb: EventHandler.AsyncEventHandler(Of TEventArgs)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuildEvent}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuildEvent}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketGuildEvent>
  nameWithType: EventHandler.AsyncEventHandler<SocketGuildEvent>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketGuildEvent>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketGuildEvent)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketGuildEvent)
  name.vb: EventHandler.AsyncEventHandler(Of SocketGuildEvent)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketGuildEvent
    name: SocketGuildEvent
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketGuildEvent
    name: SocketGuildEvent
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketRole>
  nameWithType: EventHandler.AsyncEventHandler<SocketRole>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketRole>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketRole)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketRole)
  name.vb: EventHandler.AsyncEventHandler(Of SocketRole)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuild,Discord.WebSocket.SocketGuild}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketGuild,Discord.WebSocket.SocketGuild}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketGuild, SocketGuild>
  nameWithType: EventHandler.AsyncEventHandler<SocketGuild, SocketGuild>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketGuild, Discord.WebSocket.SocketGuild>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketGuild, SocketGuild)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketGuild, Discord.WebSocket.SocketGuild)
  name.vb: EventHandler.AsyncEventHandler(Of SocketGuild, SocketGuild)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<TEventArgs, TArgs>
  nameWithType: EventHandler.AsyncEventHandler<TEventArgs, TArgs>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<TEventArgs, TArgs>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of TEventArgs, TArgs)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of TEventArgs, TArgs)
  name.vb: EventHandler.AsyncEventHandler(Of TEventArgs, TArgs)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - name: TEventArgs
  - name: ','
  - name: " "
  - name: TArgs
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: ','
  - name: " "
  - name: TArgs
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuildUser}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuildUser}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<IGuildUser>
  nameWithType: EventHandler.AsyncEventHandler<IGuildUser>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.IGuildUser>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of IGuildUser)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.IGuildUser)
  name.vb: EventHandler.AsyncEventHandler(Of IGuildUser)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole,Discord.WebSocket.SocketRole}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketRole,Discord.WebSocket.SocketRole}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketRole, SocketRole>
  nameWithType: EventHandler.AsyncEventHandler<SocketRole, SocketRole>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketRole, Discord.WebSocket.SocketRole>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketRole, SocketRole)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketRole, Discord.WebSocket.SocketRole)
  name.vb: EventHandler.AsyncEventHandler(Of SocketRole, SocketRole)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild,Discord.IUser}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild,Discord.IUser}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<IGuild, IUser>
  nameWithType: EventHandler.AsyncEventHandler<IGuild, IUser>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.IGuild, Discord.IUser>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of IGuild, IUser)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.IGuild, Discord.IUser)
  name.vb: EventHandler.AsyncEventHandler(Of IGuild, IUser)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, Cacheable<IMessageChannel, ulong>>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, Cacheable<IMessageChannel, ulong>>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.IMessage, ulong>, Discord.Cacheable<Discord.IMessageChannel, ulong>>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), Cacheable(Of IMessageChannel, ULong))
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.IMessage, ULong), Discord.Cacheable(Of Discord.IMessageChannel, ULong))
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), Cacheable(Of IMessageChannel, ULong))
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketGuildUser,System.UInt64},Discord.WebSocket.SocketGuildUser}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketGuildUser,System.UInt64},Discord.WebSocket.SocketGuildUser}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<SocketGuildUser, ulong>, SocketGuildUser>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<SocketGuildUser, ulong>, SocketGuildUser>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.WebSocket.SocketGuildUser, ulong>, Discord.WebSocket.SocketGuildUser>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketGuildUser, ULong), SocketGuildUser)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.WebSocket.SocketGuildUser, ULong), Discord.WebSocket.SocketGuildUser)
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketGuildUser, ULong), SocketGuildUser)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.WebSocket.SocketGuildUser
    name: SocketGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuildUser
    name: SocketGuildUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketGuildUser
    name: SocketGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuildUser
    name: SocketGuildUser
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.WebSocket.SocketMessage,Discord.WebSocket.ISocketMessageChannel}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IMessage,System.UInt64},Discord.WebSocket.SocketMessage,Discord.WebSocket.ISocketMessageChannel}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, SocketMessage, ISocketMessageChannel>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<IMessage, ulong>, SocketMessage, ISocketMessageChannel>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.IMessage, ulong>, Discord.WebSocket.SocketMessage, Discord.WebSocket.ISocketMessageChannel>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), SocketMessage, ISocketMessageChannel)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.IMessage, ULong), Discord.WebSocket.SocketMessage, Discord.WebSocket.ISocketMessageChannel)
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IMessage, ULong), SocketMessage, ISocketMessageChannel)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketMessage
    name: SocketMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.ISocketMessageChannel
    name: ISocketMessageChannel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketMessage
    name: SocketMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.ISocketMessageChannel
    name: ISocketMessageChannel
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<TEventArgs, TArgs, TEvent>
  nameWithType: EventHandler.AsyncEventHandler<TEventArgs, TArgs, TEvent>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<TEventArgs, TArgs, TEvent>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of TEventArgs, TArgs, TEvent)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of TEventArgs, TArgs, TEvent)
  name.vb: EventHandler.AsyncEventHandler(Of TEventArgs, TArgs, TEvent)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: <
  - name: TEventArgs
  - name: ','
  - name: " "
  - name: TArgs
  - name: ','
  - name: " "
  - name: TEvent
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: ','
  - name: " "
  - name: TArgs
  - name: ','
  - name: " "
  - name: TEvent
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{System.Collections.Generic.IReadOnlyCollection{Discord.Cacheable{Discord.IMessage,System.UInt64}},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{System.Collections.Generic.IReadOnlyCollection{Discord.Cacheable{Discord.IMessage,System.UInt64}},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<IReadOnlyCollection<Cacheable<IMessage, ulong>>, Cacheable<IMessageChannel, ulong>>
  nameWithType: EventHandler.AsyncEventHandler<IReadOnlyCollection<Cacheable<IMessage, ulong>>, Cacheable<IMessageChannel, ulong>>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<System.Collections.Generic.IReadOnlyCollection<Discord.Cacheable<Discord.IMessage, ulong>>, Discord.Cacheable<Discord.IMessageChannel, ulong>>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of IReadOnlyCollection(Of Cacheable(Of IMessage, ULong)), Cacheable(Of IMessageChannel, ULong))
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of System.Collections.Generic.IReadOnlyCollection(Of Discord.Cacheable(Of Discord.IMessage, ULong)), Discord.Cacheable(Of Discord.IMessageChannel, ULong))
  name.vb: EventHandler.AsyncEventHandler(Of IReadOnlyCollection(Of Cacheable(Of IMessage, ULong)), Cacheable(Of IMessageChannel, ULong))
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketGuild}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketGuild}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketUser, SocketGuild>
  nameWithType: EventHandler.AsyncEventHandler<SocketUser, SocketGuild>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketUser, Discord.WebSocket.SocketGuild>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketGuild)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketUser, Discord.WebSocket.SocketGuild)
  name.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketGuild)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketUser}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketUser}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketUser, SocketUser>
  nameWithType: EventHandler.AsyncEventHandler<SocketUser, SocketUser>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketUser, Discord.WebSocket.SocketUser>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketUser)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketUser, Discord.WebSocket.SocketUser)
  name.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketUser)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketVoiceState,Discord.WebSocket.SocketVoiceState}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketVoiceState,Discord.WebSocket.SocketVoiceState}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketUser, SocketVoiceState, SocketVoiceState>
  nameWithType: EventHandler.AsyncEventHandler<SocketUser, SocketVoiceState, SocketVoiceState>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketUser, Discord.WebSocket.SocketVoiceState, Discord.WebSocket.SocketVoiceState>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketVoiceState, SocketVoiceState)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketUser, Discord.WebSocket.SocketVoiceState, Discord.WebSocket.SocketVoiceState)
  name.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketVoiceState, SocketVoiceState)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: <
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketChannel>
  nameWithType: EventHandler.AsyncEventHandler<SocketChannel>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketChannel>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketChannel)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketChannel)
  name.vb: EventHandler.AsyncEventHandler(Of SocketChannel)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel,Discord.WebSocket.SocketChannel}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketChannel,Discord.WebSocket.SocketChannel}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketChannel, SocketChannel>
  nameWithType: EventHandler.AsyncEventHandler<SocketChannel, SocketChannel>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketChannel, Discord.WebSocket.SocketChannel>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketChannel, SocketChannel)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketChannel, Discord.WebSocket.SocketChannel)
  name.vb: EventHandler.AsyncEventHandler(Of SocketChannel, SocketChannel)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketChannel
    name: SocketChannel
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64},Discord.WebSocket.SocketReaction}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64},Discord.WebSocket.SocketReaction}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>, SocketReaction>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>, SocketReaction>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.IUserMessage, ulong>, Discord.Cacheable<Discord.IMessageChannel, ulong>, Discord.WebSocket.SocketReaction>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong), SocketReaction)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.IUserMessage, ULong), Discord.Cacheable(Of Discord.IMessageChannel, ULong), Discord.WebSocket.SocketReaction)
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong), SocketReaction)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketReaction
    name: SocketReaction
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketReaction
    name: SocketReaction
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUserMessage,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<IUserMessage, ulong>, Cacheable<IMessageChannel, ulong>>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.IUserMessage, ulong>, Discord.Cacheable<Discord.IMessageChannel, ulong>>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong))
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.IUserMessage, ULong), Discord.Cacheable(Of Discord.IMessageChannel, ULong))
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUserMessage, ULong), Cacheable(Of IMessageChannel, ULong))
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketInteraction}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketInteraction}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketInteraction>
  nameWithType: EventHandler.AsyncEventHandler<SocketInteraction>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketInteraction>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketInteraction)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketInteraction)
  name.vb: EventHandler.AsyncEventHandler(Of SocketInteraction)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketInteraction
    name: SocketInteraction
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketInteraction
    name: SocketInteraction
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUser,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.IUser,System.UInt64},Discord.Cacheable{Discord.IMessageChannel,System.UInt64}}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<IUser, ulong>, Cacheable<IMessageChannel, ulong>>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<IUser, ulong>, Cacheable<IMessageChannel, ulong>>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.IUser, ulong>, Discord.Cacheable<Discord.IMessageChannel, ulong>>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUser, ULong), Cacheable(Of IMessageChannel, ULong))
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.IUser, ULong), Discord.Cacheable(Of Discord.IMessageChannel, ULong))
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of IUser, ULong), Cacheable(Of IMessageChannel, ULong))
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageChannel
    name: IMessageChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketPresence,Discord.WebSocket.SocketPresence}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketUser,Discord.WebSocket.SocketPresence,Discord.WebSocket.SocketPresence}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketUser, SocketPresence, SocketPresence>
  nameWithType: EventHandler.AsyncEventHandler<SocketUser, SocketPresence, SocketPresence>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketUser, Discord.WebSocket.SocketPresence, Discord.WebSocket.SocketPresence>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketPresence, SocketPresence)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketUser, Discord.WebSocket.SocketPresence, Discord.WebSocket.SocketPresence)
  name.vb: EventHandler.AsyncEventHandler(Of SocketUser, SocketPresence, SocketPresence)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: <
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketPresence
    name: SocketPresence
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketPresence
    name: SocketPresence
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`3
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-3.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketUser
    name: SocketUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketPresence
    name: SocketPresence
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketPresence
    name: SocketPresence
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.IGuild}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<IGuild>
  nameWithType: EventHandler.AsyncEventHandler<IGuild>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.IGuild>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of IGuild)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.IGuild)
  name.vb: EventHandler.AsyncEventHandler(Of IGuild)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadChannel}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadChannel}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketThreadChannel>
  nameWithType: EventHandler.AsyncEventHandler<SocketThreadChannel>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketThreadChannel>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketThreadChannel)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketThreadChannel)
  name.vb: EventHandler.AsyncEventHandler(Of SocketThreadChannel)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64},Discord.WebSocket.SocketThreadChannel}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64},Discord.WebSocket.SocketThreadChannel}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>, SocketThreadChannel>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>, SocketThreadChannel>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.WebSocket.SocketThreadChannel, ulong>, Discord.WebSocket.SocketThreadChannel>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong), SocketThreadChannel)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.WebSocket.SocketThreadChannel, ULong), Discord.WebSocket.SocketThreadChannel)
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong), SocketThreadChannel)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64}}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.Cacheable{Discord.WebSocket.SocketThreadChannel,System.UInt64}}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>>
  nameWithType: EventHandler.AsyncEventHandler<Cacheable<SocketThreadChannel, ulong>>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.Cacheable<Discord.WebSocket.SocketThreadChannel, ulong>>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong))
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.Cacheable(Of Discord.WebSocket.SocketThreadChannel, ULong))
  name.vb: EventHandler.AsyncEventHandler(Of Cacheable(Of SocketThreadChannel, ULong))
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: <
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Cacheable`2
    name: Cacheable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketThreadChannel
    name: SocketThreadChannel
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadUser}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketThreadUser}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketThreadUser>
  nameWithType: EventHandler.AsyncEventHandler<SocketThreadUser>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketThreadUser>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketThreadUser)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketThreadUser)
  name.vb: EventHandler.AsyncEventHandler(Of SocketThreadUser)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.SocketThreadUser
    name: SocketThreadUser
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketThreadUser
    name: SocketThreadUser
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketAuditLogEntry,Discord.WebSocket.SocketGuild}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.SocketAuditLogEntry,Discord.WebSocket.SocketGuild}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<SocketAuditLogEntry, SocketGuild>
  nameWithType: EventHandler.AsyncEventHandler<SocketAuditLogEntry, SocketGuild>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.SocketAuditLogEntry, Discord.WebSocket.SocketGuild>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of SocketAuditLogEntry, SocketGuild)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.SocketAuditLogEntry, Discord.WebSocket.SocketGuild)
  name.vb: EventHandler.AsyncEventHandler(Of SocketAuditLogEntry, SocketGuild)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: <
  - uid: Discord.WebSocket.SocketAuditLogEntry
    name: SocketAuditLogEntry
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`2
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.SocketAuditLogEntry
    name: SocketAuditLogEntry
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.WebSocket.SocketGuild
    name: SocketGuild
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.DiscordSocketClient}
  commentId: T:Mewdeko.Services.Impl.EventHandler.AsyncEventHandler{Discord.WebSocket.DiscordSocketClient}
  parent: Mewdeko.Services.Impl
  definition: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler.AsyncEventHandler<DiscordSocketClient>
  nameWithType: EventHandler.AsyncEventHandler<DiscordSocketClient>
  fullName: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler<Discord.WebSocket.DiscordSocketClient>
  nameWithType.vb: EventHandler.AsyncEventHandler(Of DiscordSocketClient)
  fullName.vb: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler(Of Discord.WebSocket.DiscordSocketClient)
  name.vb: EventHandler.AsyncEventHandler(Of DiscordSocketClient)
  spec.csharp:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: <
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Services.Impl.EventHandler
    name: EventHandler
    href: Mewdeko.Services.Impl.EventHandler.html
  - name: .
  - uid: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler`1
    name: AsyncEventHandler
    href: Mewdeko.Services.Impl.EventHandler.AsyncEventHandler-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: )
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Services.Impl.EventHandler.#ctor*
  commentId: Overload:Mewdeko.Services.Impl.EventHandler.#ctor
  href: Mewdeko.Services.Impl.EventHandler.html#Mewdeko_Services_Impl_EventHandler__ctor_Discord_WebSocket_DiscordSocketClient_
  name: EventHandler
  nameWithType: EventHandler.EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler.EventHandler
  nameWithType.vb: EventHandler.New
  fullName.vb: Mewdeko.Services.Impl.EventHandler.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
