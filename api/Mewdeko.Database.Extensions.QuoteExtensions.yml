### YamlMime:ManagedReference
items:
- uid: Mewdeko.Database.Extensions.QuoteExtensions
  commentId: T:Mewdeko.Database.Extensions.QuoteExtensions
  id: QuoteExtensions
  parent: Mewdeko.Database.Extensions
  children:
  - Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64)
  - Mewdeko.Database.Extensions.QuoteExtensions.GetGroup(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.Int32,Mewdeko.Database.Models.OrderType)
  - Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  - Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  - Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String,System.String)
  langs:
  - csharp
  - vb
  name: QuoteExtensions
  nameWithType: QuoteExtensions
  fullName: Mewdeko.Database.Extensions.QuoteExtensions
  type: Class
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: QuoteExtensions
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 5
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static class QuoteExtensions
    content.vb: Public Module QuoteExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64)
  commentId: M:Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64)
  id: GetForGuild(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64)
  isExtensionMethod: true
  parent: Mewdeko.Database.Extensions.QuoteExtensions
  langs:
  - csharp
  - vb
  name: GetForGuild(DbSet<Quote>, ulong)
  nameWithType: QuoteExtensions.GetForGuild(DbSet<Quote>, ulong)
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild(Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetForGuild
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 7
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static IEnumerable<Quote> GetForGuild(this DbSet<Quote> quotes, ulong guildId)
    parameters:
    - id: quotes
      type: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
    - id: guildId
      type: System.UInt64
    return:
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Quote}
    content.vb: Public Shared Function GetForGuild(quotes As DbSet(Of Quote), guildId As ULong) As IEnumerable(Of Quote)
  overload: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild*
  nameWithType.vb: QuoteExtensions.GetForGuild(DbSet(Of Quote), ULong)
  fullName.vb: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild(Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote), ULong)
  name.vb: GetForGuild(DbSet(Of Quote), ULong)
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.Int32,Mewdeko.Database.Models.OrderType)
  commentId: M:Mewdeko.Database.Extensions.QuoteExtensions.GetGroup(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.Int32,Mewdeko.Database.Models.OrderType)
  id: GetGroup(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.Int32,Mewdeko.Database.Models.OrderType)
  isExtensionMethod: true
  parent: Mewdeko.Database.Extensions.QuoteExtensions
  langs:
  - csharp
  - vb
  name: GetGroup(DbSet<Quote>, ulong, int, OrderType)
  nameWithType: QuoteExtensions.GetGroup(DbSet<Quote>, ulong, int, OrderType)
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup(Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>, ulong, int, Mewdeko.Database.Models.OrderType)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetGroup
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 9
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static IEnumerable<Quote> GetGroup(this DbSet<Quote> quotes, ulong guildId, int page, OrderType order)
    parameters:
    - id: quotes
      type: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
    - id: guildId
      type: System.UInt64
    - id: page
      type: System.Int32
    - id: order
      type: Mewdeko.Database.Models.OrderType
    return:
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Quote}
    content.vb: Public Shared Function GetGroup(quotes As DbSet(Of Quote), guildId As ULong, page As Integer, order As OrderType) As IEnumerable(Of Quote)
  overload: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup*
  nameWithType.vb: QuoteExtensions.GetGroup(DbSet(Of Quote), ULong, Integer, OrderType)
  fullName.vb: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup(Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote), ULong, Integer, Mewdeko.Database.Models.OrderType)
  name.vb: GetGroup(DbSet(Of Quote), ULong, Integer, OrderType)
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  commentId: M:Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  id: GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Database.Extensions.QuoteExtensions
  langs:
  - csharp
  - vb
  name: GetRandomQuoteByKeywordAsync(DbSet<Quote>, ulong, string)
  nameWithType: QuoteExtensions.GetRandomQuoteByKeywordAsync(DbSet<Quote>, ulong, string)
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>, ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetRandomQuoteByKeywordAsync
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 20
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static Task<Quote> GetRandomQuoteByKeywordAsync(this DbSet<Quote> quotes, ulong guildId, string keyword)
    parameters:
    - id: quotes
      type: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
    - id: guildId
      type: System.UInt64
    - id: keyword
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.Quote}
    content.vb: Public Shared Function GetRandomQuoteByKeywordAsync(quotes As DbSet(Of Quote), guildId As ULong, keyword As String) As Task(Of Quote)
  overload: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync*
  nameWithType.vb: QuoteExtensions.GetRandomQuoteByKeywordAsync(DbSet(Of Quote), ULong, String)
  fullName.vb: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync(Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote), ULong, String)
  name.vb: GetRandomQuoteByKeywordAsync(DbSet(Of Quote), ULong, String)
- uid: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String,System.String)
  commentId: M:Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String,System.String)
  id: SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Database.Extensions.QuoteExtensions
  langs:
  - csharp
  - vb
  name: SearchQuoteKeywordTextAsync(DbSet<Quote>, ulong, string, string)
  nameWithType: QuoteExtensions.SearchQuoteKeywordTextAsync(DbSet<Quote>, ulong, string, string)
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>, ulong, string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SearchQuoteKeywordTextAsync
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 28
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static Task<Quote> SearchQuoteKeywordTextAsync(this DbSet<Quote> quotes, ulong guildId, string keyword, string text)
    parameters:
    - id: quotes
      type: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
    - id: guildId
      type: System.UInt64
    - id: keyword
      type: System.String
    - id: text
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.Quote}
    content.vb: Public Shared Function SearchQuoteKeywordTextAsync(quotes As DbSet(Of Quote), guildId As ULong, keyword As String, text As String) As Task(Of Quote)
  overload: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync*
  nameWithType.vb: QuoteExtensions.SearchQuoteKeywordTextAsync(DbSet(Of Quote), ULong, String, String)
  fullName.vb: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync(Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote), ULong, String, String)
  name.vb: SearchQuoteKeywordTextAsync(DbSet(Of Quote), ULong, String, String)
- uid: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  commentId: M:Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  id: RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote},System.UInt64,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Database.Extensions.QuoteExtensions
  langs:
  - csharp
  - vb
  name: RemoveAllByKeyword(DbSet<Quote>, ulong, string)
  nameWithType: QuoteExtensions.RemoveAllByKeyword(DbSet<Quote>, ulong, string)
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>, ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveAllByKeyword
    path: src/Mewdeko.Database/Extensions/QuoteExtensions.cs
    startLine: 40
  assemblies:
  - Mewdeko.Database
  namespace: Mewdeko.Database.Extensions
  syntax:
    content: public static void RemoveAllByKeyword(this DbSet<Quote> quotes, ulong guildId, string keyword)
    parameters:
    - id: quotes
      type: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
    - id: guildId
      type: System.UInt64
    - id: keyword
      type: System.String
    content.vb: Public Shared Sub RemoveAllByKeyword(quotes As DbSet(Of Quote), guildId As ULong, keyword As String)
  overload: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword*
  nameWithType.vb: QuoteExtensions.RemoveAllByKeyword(DbSet(Of Quote), ULong, String)
  fullName.vb: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword(Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote), ULong, String)
  name.vb: RemoveAllByKeyword(DbSet(Of Quote), ULong, String)
references:
- uid: Mewdeko.Database.Extensions
  commentId: N:Mewdeko.Database.Extensions
  href: Mewdeko.html
  name: Mewdeko.Database.Extensions
  nameWithType: Mewdeko.Database.Extensions
  fullName: Mewdeko.Database.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Extensions
    name: Extensions
    href: Mewdeko.Database.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Extensions
    name: Extensions
    href: Mewdeko.Database.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild*
  commentId: Overload:Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild
  href: Mewdeko.Database.Extensions.QuoteExtensions.html#Mewdeko_Database_Extensions_QuoteExtensions_GetForGuild_Microsoft_EntityFrameworkCore_DbSet_Mewdeko_Database_Models_Quote__System_UInt64_
  name: GetForGuild
  nameWithType: QuoteExtensions.GetForGuild
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetForGuild
- uid: Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Mewdeko.Database.Models.Quote}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<Quote>
  nameWithType: DbSet<Quote>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Mewdeko.Database.Models.Quote>
  nameWithType.vb: DbSet(Of Quote)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Mewdeko.Database.Models.Quote)
  name.vb: DbSet(Of Quote)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Quote}
  commentId: T:System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Quote}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Quote>
  nameWithType: IEnumerable<Quote>
  fullName: System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.Quote>
  nameWithType.vb: IEnumerable(Of Quote)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.Quote)
  name.vb: IEnumerable(Of Quote)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbset-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.EntityFrameworkCore
    name: EntityFrameworkCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup*
  commentId: Overload:Mewdeko.Database.Extensions.QuoteExtensions.GetGroup
  href: Mewdeko.Database.Extensions.QuoteExtensions.html#Mewdeko_Database_Extensions_QuoteExtensions_GetGroup_Microsoft_EntityFrameworkCore_DbSet_Mewdeko_Database_Models_Quote__System_UInt64_System_Int32_Mewdeko_Database_Models_OrderType_
  name: GetGroup
  nameWithType: QuoteExtensions.GetGroup
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetGroup
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Database.Models.OrderType
  commentId: T:Mewdeko.Database.Models.OrderType
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.OrderType.html
  name: OrderType
  nameWithType: OrderType
  fullName: Mewdeko.Database.Models.OrderType
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync*
  commentId: Overload:Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync
  href: Mewdeko.Database.Extensions.QuoteExtensions.html#Mewdeko_Database_Extensions_QuoteExtensions_GetRandomQuoteByKeywordAsync_Microsoft_EntityFrameworkCore_DbSet_Mewdeko_Database_Models_Quote__System_UInt64_System_String_
  name: GetRandomQuoteByKeywordAsync
  nameWithType: QuoteExtensions.GetRandomQuoteByKeywordAsync
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.GetRandomQuoteByKeywordAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.Quote}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.Quote}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Quote>
  nameWithType: Task<Quote>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.Quote>
  nameWithType.vb: Task(Of Quote)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.Quote)
  name.vb: Task(Of Quote)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Quote
    name: Quote
    href: Mewdeko.Database.Models.Quote.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync*
  commentId: Overload:Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync
  href: Mewdeko.Database.Extensions.QuoteExtensions.html#Mewdeko_Database_Extensions_QuoteExtensions_SearchQuoteKeywordTextAsync_Microsoft_EntityFrameworkCore_DbSet_Mewdeko_Database_Models_Quote__System_UInt64_System_String_System_String_
  name: SearchQuoteKeywordTextAsync
  nameWithType: QuoteExtensions.SearchQuoteKeywordTextAsync
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.SearchQuoteKeywordTextAsync
- uid: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword*
  commentId: Overload:Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword
  href: Mewdeko.Database.Extensions.QuoteExtensions.html#Mewdeko_Database_Extensions_QuoteExtensions_RemoveAllByKeyword_Microsoft_EntityFrameworkCore_DbSet_Mewdeko_Database_Models_Quote__System_UInt64_System_String_
  name: RemoveAllByKeyword
  nameWithType: QuoteExtensions.RemoveAllByKeyword
  fullName: Mewdeko.Database.Extensions.QuoteExtensions.RemoveAllByKeyword
