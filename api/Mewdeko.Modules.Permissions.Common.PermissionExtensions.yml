### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  commentId: T:Mewdeko.Modules.Permissions.Common.PermissionExtensions
  id: PermissionExtensions
  parent: Mewdeko.Modules.Permissions.Common
  children:
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable(Mewdeko.Database.Models.Permission)
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission(Mewdeko.Database.Models.Permissionv2,Discord.IUserMessage,System.String,System.String)
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},Discord.IUserMessage,System.String,System.String,System.Int32@)
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission(Mewdeko.Database.Models.Permissionv2,System.String,Discord.IUser,System.String,Discord.IMessageChannel)
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},System.String,System.String,Discord.IUser,Discord.IMessageChannel,System.Int32@)
  - Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand(Mewdeko.Database.Models.Permissionv2,System.String,Discord.WebSocket.SocketGuild)
  langs:
  - csharp
  - vb
  name: PermissionExtensions
  nameWithType: PermissionExtensions
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PermissionExtensions
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: >-
    Provides extension methods for handling permissions within the Mewdeko permissions system.

    These methods extend the functionality of Permissionv2 objects and collections thereof,

    allowing for checks against messages, users, and specific command or module permissions.
  example: []
  syntax:
    content: public static class PermissionExtensions
    content.vb: Public Module PermissionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},Discord.IUserMessage,System.String,System.String,System.Int32@)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},Discord.IUserMessage,System.String,System.String,System.Int32@)
  id: CheckPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},Discord.IUserMessage,System.String,System.String,System.Int32@)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: CheckPermissions(IEnumerable<Permissionv2>, IUserMessage, string, string, out int)
  nameWithType: PermissionExtensions.CheckPermissions(IEnumerable<Permissionv2>, IUserMessage, string, string, out int)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions(System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.Permissionv2>, Discord.IUserMessage, string, string, out int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckPermissions
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 21
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Checks if the permissions allow for the execution of a specified command within a message context.
  remarks: This method evaluates the permissions in reverse order to prioritize more specific permissions over general ones.
  example: []
  syntax:
    content: public static bool CheckPermissions(this IEnumerable<Permissionv2> permsEnumerable, IUserMessage message, string commandName, string moduleName, out int permIndex)
    parameters:
    - id: permsEnumerable
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2}
      description: An enumerable collection of Permissionv2 objects.
    - id: message
      type: Discord.IUserMessage
      description: The message that potentially triggers the command.
    - id: commandName
      type: System.String
      description: The name of the command to check permissions against.
    - id: moduleName
      type: System.String
      description: The name of the module containing the command.
    - id: permIndex
      type: System.Int32
      description: Outputs the index of the permission that allowed or denied the command, if applicable.
    return:
      type: System.Boolean
      description: True if the command is allowed by the permissions; otherwise, false.
    content.vb: Public Shared Function CheckPermissions(permsEnumerable As IEnumerable(Of Permissionv2), message As IUserMessage, commandName As String, moduleName As String, permIndex As Integer) As Boolean
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions*
  nameWithType.vb: PermissionExtensions.CheckPermissions(IEnumerable(Of Permissionv2), IUserMessage, String, String, Integer)
  fullName.vb: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions(System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.Permissionv2), Discord.IUserMessage, String, String, Integer)
  name.vb: CheckPermissions(IEnumerable(Of Permissionv2), IUserMessage, String, String, Integer)
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},System.String,System.String,Discord.IUser,Discord.IMessageChannel,System.Int32@)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},System.String,System.String,Discord.IUser,Discord.IMessageChannel,System.Int32@)
  id: CheckSlashPermissions(System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2},System.String,System.String,Discord.IUser,Discord.IMessageChannel,System.Int32@)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: CheckSlashPermissions(IEnumerable<Permissionv2>, string, string, IUser, IMessageChannel, out int)
  nameWithType: PermissionExtensions.CheckSlashPermissions(IEnumerable<Permissionv2>, string, string, IUser, IMessageChannel, out int)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions(System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.Permissionv2>, string, string, Discord.IUser, Discord.IMessageChannel, out int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckSlashPermissions
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Checks if slash command permissions allow for the execution of a specified command.
  remarks: Similar to CheckPermissions, but tailored for slash commands and their distinct context.
  example: []
  syntax:
    content: public static bool CheckSlashPermissions(this IEnumerable<Permissionv2> permsEnumerable, string moduleName, string commandName, IUser user, IMessageChannel chan, out int permIndex)
    parameters:
    - id: permsEnumerable
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2}
      description: An enumerable collection of Permissionv2 objects.
    - id: moduleName
      type: System.String
      description: The name of the module containing the slash command.
    - id: commandName
      type: System.String
      description: The name of the slash command to check permissions against.
    - id: user
      type: Discord.IUser
      description: The user attempting to execute the slash command.
    - id: chan
      type: Discord.IMessageChannel
      description: The channel in which the slash command was invoked.
    - id: permIndex
      type: System.Int32
      description: Outputs the index of the permission that allowed or denied the command, if applicable.
    return:
      type: System.Boolean
      description: True if the slash command is allowed by the permissions; otherwise, false.
    content.vb: Public Shared Function CheckSlashPermissions(permsEnumerable As IEnumerable(Of Permissionv2), moduleName As String, commandName As String, user As IUser, chan As IMessageChannel, permIndex As Integer) As Boolean
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions*
  nameWithType.vb: PermissionExtensions.CheckSlashPermissions(IEnumerable(Of Permissionv2), String, String, IUser, IMessageChannel, Integer)
  fullName.vb: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions(System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.Permissionv2), String, String, Discord.IUser, Discord.IMessageChannel, Integer)
  name.vb: CheckSlashPermissions(IEnumerable(Of Permissionv2), String, String, IUser, IMessageChannel, Integer)
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission(Mewdeko.Database.Models.Permissionv2,Discord.IUserMessage,System.String,System.String)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission(Mewdeko.Database.Models.Permissionv2,Discord.IUserMessage,System.String,System.String)
  id: CheckPermission(Mewdeko.Database.Models.Permissionv2,Discord.IUserMessage,System.String,System.String)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: CheckPermission(Permissionv2, IUserMessage, string, string)
  nameWithType: PermissionExtensions.CheckPermission(Permissionv2, IUserMessage, string, string)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission(Mewdeko.Database.Models.Permissionv2, Discord.IUserMessage, string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckPermission
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Checks if a specific message has permission based on the detailed permission settings.
  example: []
  syntax:
    content: public static bool? CheckPermission(this Permissionv2 perm, IUserMessage message, string commandName, string moduleName)
    parameters:
    - id: perm
      type: Mewdeko.Database.Models.Permissionv2
      description: The permission to check against the message.
    - id: message
      type: Discord.IUserMessage
      description: The message that potentially triggers the command.
    - id: commandName
      type: System.String
      description: The command name to check permissions against.
    - id: moduleName
      type: System.String
      description: The module name to check permissions against.
    return:
      type: System.Nullable{System.Boolean}
      description: True if the permission is applicable and allowed, false if not allowed, or null if not applicable.
    content.vb: Public Shared Function CheckPermission(perm As Permissionv2, message As IUserMessage, commandName As String, moduleName As String) As Boolean?
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission*
  nameWithType.vb: PermissionExtensions.CheckPermission(Permissionv2, IUserMessage, String, String)
  fullName.vb: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission(Mewdeko.Database.Models.Permissionv2, Discord.IUserMessage, String, String)
  name.vb: CheckPermission(Permissionv2, IUserMessage, String, String)
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission(Mewdeko.Database.Models.Permissionv2,System.String,Discord.IUser,System.String,Discord.IMessageChannel)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission(Mewdeko.Database.Models.Permissionv2,System.String,Discord.IUser,System.String,Discord.IMessageChannel)
  id: CheckSlashPermission(Mewdeko.Database.Models.Permissionv2,System.String,Discord.IUser,System.String,Discord.IMessageChannel)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: CheckSlashPermission(Permissionv2, string, IUser, string, IMessageChannel)
  nameWithType: PermissionExtensions.CheckSlashPermission(Permissionv2, string, IUser, string, IMessageChannel)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission(Mewdeko.Database.Models.Permissionv2, string, Discord.IUser, string, Discord.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckSlashPermission
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 134
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Checks if a user has permission to execute a slash command based on specific permission settings.
  example: []
  syntax:
    content: public static bool? CheckSlashPermission(this Permissionv2 perm, string moduleName, IUser user, string commandName, IMessageChannel chan)
    parameters:
    - id: perm
      type: Mewdeko.Database.Models.Permissionv2
      description: The permission to check against the slash command.
    - id: moduleName
      type: System.String
      description: The module name containing the slash command.
    - id: user
      type: Discord.IUser
      description: The user attempting to execute the slash command.
    - id: commandName
      type: System.String
      description: The name of the slash command to check permissions against.
    - id: chan
      type: Discord.IMessageChannel
      description: The channel in which the slash command was invoked.
    return:
      type: System.Nullable{System.Boolean}
      description: True if the permission is applicable and allowed, false if not allowed, or null if not applicable.
    content.vb: Public Shared Function CheckSlashPermission(perm As Permissionv2, moduleName As String, user As IUser, commandName As String, chan As IMessageChannel) As Boolean?
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission*
  nameWithType.vb: PermissionExtensions.CheckSlashPermission(Permissionv2, String, IUser, String, IMessageChannel)
  fullName.vb: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission(Mewdeko.Database.Models.Permissionv2, String, Discord.IUser, String, Discord.IMessageChannel)
  name.vb: CheckSlashPermission(Permissionv2, String, IUser, String, IMessageChannel)
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand(Mewdeko.Database.Models.Permissionv2,System.String,Discord.WebSocket.SocketGuild)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand(Mewdeko.Database.Models.Permissionv2,System.String,Discord.WebSocket.SocketGuild)
  id: GetCommand(Mewdeko.Database.Models.Permissionv2,System.String,Discord.WebSocket.SocketGuild)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: GetCommand(Permissionv2, string?, SocketGuild?)
  nameWithType: PermissionExtensions.GetCommand(Permissionv2, string?, SocketGuild?)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand(Mewdeko.Database.Models.Permissionv2, string?, Discord.WebSocket.SocketGuild?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetCommand
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 184
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Constructs a command string based on the permission settings.
  example: []
  syntax:
    content: public static string GetCommand(this Permissionv2 perm, string? prefix, SocketGuild? guild = null)
    parameters:
    - id: perm
      type: Mewdeko.Database.Models.Permissionv2
      description: The permission for which to construct the command string.
    - id: prefix
      type: System.String
      description: The command prefix used by the bot.
    - id: guild
      type: Discord.WebSocket.SocketGuild
      description: Optional. The guild within which the command is relevant. This parameter can affect how user or role identifiers are resolved.
    return:
      type: System.String
      description: A string representing the constructed command based on the permission settings.
    content.vb: Public Shared Function GetCommand(perm As Permissionv2, prefix As String, guild As SocketGuild = Nothing) As String
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand*
  nameWithType.vb: PermissionExtensions.GetCommand(Permissionv2, String, SocketGuild)
  fullName.vb: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand(Mewdeko.Database.Models.Permissionv2, String, Discord.WebSocket.SocketGuild)
  name.vb: GetCommand(Permissionv2, String, SocketGuild)
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable(Mewdeko.Database.Models.Permission)
  commentId: M:Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable(Mewdeko.Database.Models.Permission)
  id: AsEnumerable(Mewdeko.Database.Models.Permission)
  isExtensionMethod: true
  parent: Mewdeko.Modules.Permissions.Common.PermissionExtensions
  langs:
  - csharp
  - vb
  name: AsEnumerable(Permission)
  nameWithType: PermissionExtensions.AsEnumerable(Permission)
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable(Mewdeko.Database.Models.Permission)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AsEnumerable
    path: src/Mewdeko/Modules/Permissions/Common/PermissionExtensions.cs
    startLine: 251
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Common
  summary: Enumerates through a linked list of permissions starting from the specified permission.
  example: []
  syntax:
    content: public static IEnumerable<Permission> AsEnumerable(this Permission perm)
    parameters:
    - id: perm
      type: Mewdeko.Database.Models.Permission
      description: The starting permission from which to begin enumeration.
    return:
      type: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permission}
      description: An enumerable sequence of permissions, including the starting permission and all subsequent linked permissions.
    content.vb: Public Shared Function AsEnumerable(perm As Permission) As IEnumerable(Of Permission)
  overload: Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable*
references:
- uid: Mewdeko.Modules.Permissions.Common
  commentId: N:Mewdeko.Modules.Permissions.Common
  href: Mewdeko.html
  name: Mewdeko.Modules.Permissions.Common
  nameWithType: Mewdeko.Modules.Permissions.Common
  fullName: Mewdeko.Modules.Permissions.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Common
    name: Common
    href: Mewdeko.Modules.Permissions.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Common
    name: Common
    href: Mewdeko.Modules.Permissions.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_CheckPermissions_System_Collections_Generic_IEnumerable_Mewdeko_Database_Models_Permissionv2__Discord_IUserMessage_System_String_System_String_System_Int32__
  name: CheckPermissions
  nameWithType: PermissionExtensions.CheckPermissions
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermissions
- uid: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2}
  commentId: T:System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permissionv2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Permissionv2>
  nameWithType: IEnumerable<Permissionv2>
  fullName: System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.Permissionv2>
  nameWithType.vb: IEnumerable(Of Permissionv2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.Permissionv2)
  name.vb: IEnumerable(Of Permissionv2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mewdeko.Database.Models.Permissionv2
    name: Permissionv2
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Permissionv2
    name: Permissionv2
  - name: )
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  isExternal: true
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_CheckSlashPermissions_System_Collections_Generic_IEnumerable_Mewdeko_Database_Models_Permissionv2__System_String_System_String_Discord_IUser_Discord_IMessageChannel_System_Int32__
  name: CheckSlashPermissions
  nameWithType: PermissionExtensions.CheckSlashPermissions
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermissions
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  isExternal: true
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_CheckPermission_Mewdeko_Database_Models_Permissionv2_Discord_IUserMessage_System_String_System_String_
  name: CheckPermission
  nameWithType: PermissionExtensions.CheckPermission
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckPermission
- uid: Mewdeko.Database.Models.Permissionv2
  commentId: T:Mewdeko.Database.Models.Permissionv2
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.Permissionv2.html
  name: Permissionv2
  nameWithType: Permissionv2
  fullName: Mewdeko.Database.Models.Permissionv2
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_CheckSlashPermission_Mewdeko_Database_Models_Permissionv2_System_String_Discord_IUser_System_String_Discord_IMessageChannel_
  name: CheckSlashPermission
  nameWithType: PermissionExtensions.CheckSlashPermission
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.CheckSlashPermission
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_GetCommand_Mewdeko_Database_Models_Permissionv2_System_String_Discord_WebSocket_SocketGuild_
  name: GetCommand
  nameWithType: PermissionExtensions.GetCommand
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.GetCommand
- uid: Discord.WebSocket.SocketGuild
  commentId: T:Discord.WebSocket.SocketGuild
  parent: Discord.WebSocket
  isExternal: true
  name: SocketGuild
  nameWithType: SocketGuild
  fullName: Discord.WebSocket.SocketGuild
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable*
  commentId: Overload:Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable
  href: Mewdeko.Modules.Permissions.Common.PermissionExtensions.html#Mewdeko_Modules_Permissions_Common_PermissionExtensions_AsEnumerable_Mewdeko_Database_Models_Permission_
  name: AsEnumerable
  nameWithType: PermissionExtensions.AsEnumerable
  fullName: Mewdeko.Modules.Permissions.Common.PermissionExtensions.AsEnumerable
- uid: Mewdeko.Database.Models.Permission
  commentId: T:Mewdeko.Database.Models.Permission
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.Permission.html
  name: Permission
  nameWithType: Permission
  fullName: Mewdeko.Database.Models.Permission
- uid: System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permission}
  commentId: T:System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.Permission}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Permission>
  nameWithType: IEnumerable<Permission>
  fullName: System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.Permission>
  nameWithType.vb: IEnumerable(Of Permission)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.Permission)
  name.vb: IEnumerable(Of Permission)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mewdeko.Database.Models.Permission
    name: Permission
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Permission
    name: Permission
  - name: )
