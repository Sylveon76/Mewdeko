### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService
  commentId: T:Mewdeko.Modules.Utility.Services.AutoPublishService
  id: AutoPublishService
  parent: Mewdeko.Modules.Utility.Services
  children:
  - Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Discord.WebSocket.DiscordSocketClient)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist(System.UInt64,System.String)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists(System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes(System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck(Discord.INewsChannel)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist(System.UInt64,System.String)
  langs:
  - csharp
  - vb
  name: AutoPublishService
  nameWithType: AutoPublishService
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoPublishService
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: >-
    Provides functionality to automatically publish messages in Discord news channels

    according to specific rules, including channel, user, and word blacklists.
  example: []
  syntax:
    content: 'public class AutoPublishService : INService'
    content.vb: Public Class AutoPublishService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Utility.Services.AutoPublishService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Discord.WebSocket.DiscordSocketClient)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Discord.WebSocket.DiscordSocketClient)
  id: '#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Discord.WebSocket.DiscordSocketClient)'
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: AutoPublishService(DbService, EventHandler, DiscordSocketClient)
  nameWithType: AutoPublishService.AutoPublishService(DbService, EventHandler, DiscordSocketClient)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AutoPublishService(Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Discord.WebSocket.DiscordSocketClient)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 20
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Utility.Services.AutoPublishService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AutoPublishService(DbService service, EventHandler handler, DiscordSocketClient client)
    parameters:
    - id: service
      type: Mewdeko.Database.DbService
      description: The database service for accessing and storing configuration.
    - id: handler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler for subscribing to message received events.
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client for interacting with the Discord API.
    content.vb: Public Sub New(service As DbService, handler As EventHandler, client As DiscordSocketClient)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor*
  nameWithType.vb: AutoPublishService.New(DbService, EventHandler, DiscordSocketClient)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.New(Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Discord.WebSocket.DiscordSocketClient)
  name.vb: New(DbService, EventHandler, DiscordSocketClient)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish(System.UInt64,System.UInt64)
  id: AddAutoPublish(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: AddAutoPublish(ulong, ulong)
  nameWithType: AutoPublishService.AddAutoPublish(ulong, ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddAutoPublish
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 89
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Adds a channel to the list of auto-publish channels.
  example: []
  syntax:
    content: public Task<bool> AddAutoPublish(ulong guildId, ulong channelId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild where the channel resides.
    - id: channelId
      type: System.UInt64
      description: The ID of the channel to auto-publish.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function AddAutoPublish(guildId As ULong, channelId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish*
  nameWithType.vb: AutoPublishService.AddAutoPublish(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish(ULong, ULong)
  name.vb: AddAutoPublish(ULong, ULong)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes(System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes(System.UInt64)
  id: GetAutoPublishes(System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: GetAutoPublishes(ulong)
  nameWithType: AutoPublishService.GetAutoPublishes(ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAutoPublishes
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 113
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Retrieves the auto-publish configurations for a guild.
  example: []
  syntax:
    content: public Task<List<(AutoPublish?, List<PublishUserBlacklist?>, List<PublishWordBlacklist?>)>> GetAutoPublishes(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild to retrieve configurations for.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.ValueTuple{Mewdeko.Database.Models.AutoPublish,System.Collections.Generic.List{Mewdeko.Database.Models.PublishUserBlacklist},System.Collections.Generic.List{Mewdeko.Database.Models.PublishWordBlacklist}}}}
      description: A list of configurations for auto-publishing.
    content.vb: Public Function GetAutoPublishes(guildId As ULong) As Task(Of List(Of (AutoPublish, List(Of PublishUserBlacklist), List(Of PublishWordBlacklist))))
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes*
  nameWithType.vb: AutoPublishService.GetAutoPublishes(ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes(ULong)
  name.vb: GetAutoPublishes(ULong)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck(Discord.INewsChannel)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck(Discord.INewsChannel)
  id: PermCheck(Discord.INewsChannel)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: PermCheck(INewsChannel)
  nameWithType: AutoPublishService.PermCheck(INewsChannel)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck(Discord.INewsChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PermCheck
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Checks if the bot has the necessary permissions to auto-publish in a channel.
  example: []
  syntax:
    content: public Task<bool> PermCheck(INewsChannel channel)
    parameters:
    - id: channel
      type: Discord.INewsChannel
      description: The news channel to check permissions for.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the bot has the necessary permissions, false otherwise.
    content.vb: Public Function PermCheck(channel As INewsChannel) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck*
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish(System.UInt64,System.UInt64)
  id: RemoveAutoPublish(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: RemoveAutoPublish(ulong, ulong)
  nameWithType: AutoPublishService.RemoveAutoPublish(ulong, ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveAutoPublish
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 148
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Removes a channel from the list of auto-publish channels.
  example: []
  syntax:
    content: public Task<bool> RemoveAutoPublish(ulong guildId, ulong channelId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild where the channel resides.
    - id: channelId
      type: System.UInt64
      description: The ID of the channel to stop auto-publishing.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function RemoveAutoPublish(guildId As ULong, channelId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish*
  nameWithType.vb: AutoPublishService.RemoveAutoPublish(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish(ULong, ULong)
  name.vb: RemoveAutoPublish(ULong, ULong)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist(System.UInt64,System.UInt64)
  id: AddUserToBlacklist(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: AddUserToBlacklist(ulong, ulong)
  nameWithType: AutoPublishService.AddUserToBlacklist(ulong, ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddUserToBlacklist
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 168
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Adds a user to the blacklist, preventing their messages from being auto-published.
  example: []
  syntax:
    content: public Task<bool> AddUserToBlacklist(ulong channelId, ulong userId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel where the blacklist applies.
    - id: userId
      type: System.UInt64
      description: The ID of the user to blacklist.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function AddUserToBlacklist(channelId As ULong, userId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist*
  nameWithType.vb: AutoPublishService.AddUserToBlacklist(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist(ULong, ULong)
  name.vb: AddUserToBlacklist(ULong, ULong)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist(System.UInt64,System.UInt64)
  id: RemoveUserFromBlacklist(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: RemoveUserFromBlacklist(ulong, ulong)
  nameWithType: AutoPublishService.RemoveUserFromBlacklist(ulong, ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveUserFromBlacklist
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 194
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Removes a user from the blacklist, allowing their messages to be auto-published again.
  example: []
  syntax:
    content: public Task<bool> RemoveUserFromBlacklist(ulong channelId, ulong userId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel where the blacklist applies.
    - id: userId
      type: System.UInt64
      description: The ID of the user to remove from the blacklist.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function RemoveUserFromBlacklist(channelId As ULong, userId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist*
  nameWithType.vb: AutoPublishService.RemoveUserFromBlacklist(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist(ULong, ULong)
  name.vb: RemoveUserFromBlacklist(ULong, ULong)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist(System.UInt64,System.String)
  id: AddWordToBlacklist(System.UInt64,System.String)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: AddWordToBlacklist(ulong, string)
  nameWithType: AutoPublishService.AddWordToBlacklist(ulong, string)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddWordToBlacklist
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 216
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Adds a word to the blacklist, preventing messages containing it from being auto-published.
  example: []
  syntax:
    content: public Task<bool> AddWordToBlacklist(ulong channelId, string word)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel where the blacklist applies.
    - id: word
      type: System.String
      description: The word to blacklist.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function AddWordToBlacklist(channelId As ULong, word As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist*
  nameWithType.vb: AutoPublishService.AddWordToBlacklist(ULong, String)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist(ULong, String)
  name.vb: AddWordToBlacklist(ULong, String)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist(System.UInt64,System.String)
  id: RemoveWordFromBlacklist(System.UInt64,System.String)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: RemoveWordFromBlacklist(ulong, string)
  nameWithType: AutoPublishService.RemoveWordFromBlacklist(ulong, string)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveWordFromBlacklist
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 242
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Removes a word from the blacklist, allowing messages containing it to be auto-published again.
  example: []
  syntax:
    content: public Task<bool> RemoveWordFromBlacklist(ulong channelId, string word)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel where the blacklist applies.
    - id: word
      type: System.String
      description: The word to remove from the blacklist.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the operation was successful, false otherwise.
    content.vb: Public Function RemoveWordFromBlacklist(channelId As ULong, word As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist*
  nameWithType.vb: AutoPublishService.RemoveWordFromBlacklist(ULong, String)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist(ULong, String)
  name.vb: RemoveWordFromBlacklist(ULong, String)
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists(System.UInt64)
  commentId: M:Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists(System.UInt64)
  id: CheckIfExists(System.UInt64)
  parent: Mewdeko.Modules.Utility.Services.AutoPublishService
  langs:
  - csharp
  - vb
  name: CheckIfExists(ulong)
  nameWithType: AutoPublishService.CheckIfExists(ulong)
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckIfExists
    path: src/Mewdeko/Modules/Utility/Services/AutoPublishService.cs
    startLine: 263
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Utility.Services
  summary: Checks if an auto-publish configuration exists for a given channel.
  example: []
  syntax:
    content: public Task<bool> CheckIfExists(ulong channelId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel to check.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if an auto-publish configuration exists, false otherwise.
    content.vb: Public Function CheckIfExists(channelId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists*
  nameWithType.vb: AutoPublishService.CheckIfExists(ULong)
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists(ULong)
  name.vb: CheckIfExists(ULong)
references:
- uid: Mewdeko.Modules.Utility.Services
  commentId: N:Mewdeko.Modules.Utility.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Utility.Services
  nameWithType: Mewdeko.Modules.Utility.Services
  fullName: Mewdeko.Modules.Utility.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Services
    name: Services
    href: Mewdeko.Modules.Utility.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Utility
    name: Utility
    href: Mewdeko.Modules.Utility.html
  - name: .
  - uid: Mewdeko.Modules.Utility.Services
    name: Services
    href: Mewdeko.Modules.Utility.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<AutoPublishService>(AutoPublishService, string)
  nameWithType: Extensions.ThrowIfNull<AutoPublishService>(AutoPublishService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Utility.Services.AutoPublishService>(Mewdeko.Modules.Utility.Services.AutoPublishService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of AutoPublishService)(AutoPublishService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Utility.Services.AutoPublishService)(Mewdeko.Modules.Utility.Services.AutoPublishService, String)
  name.vb: ThrowIfNull(Of AutoPublishService)(AutoPublishService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Utility.Services.AutoPublishService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Utility.Services.AutoPublishService
    name: AutoPublishService
    href: Mewdeko.Modules.Utility.Services.AutoPublishService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Utility.Services.AutoPublishService
    name: AutoPublishService
    href: Mewdeko.Modules.Utility.Services.AutoPublishService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Utility.Services.AutoPublishService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Utility.Services.AutoPublishService
    name: AutoPublishService
    href: Mewdeko.Modules.Utility.Services.AutoPublishService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Utility.Services.AutoPublishService
    name: AutoPublishService
    href: Mewdeko.Modules.Utility.Services.AutoPublishService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService
  commentId: T:Mewdeko.Modules.Utility.Services.AutoPublishService
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html
  name: AutoPublishService
  nameWithType: AutoPublishService
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.#ctor
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService__ctor_Mewdeko_Database_DbService_Mewdeko_Services_Impl_EventHandler_Discord_WebSocket_DiscordSocketClient_
  name: AutoPublishService
  nameWithType: AutoPublishService.AutoPublishService
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AutoPublishService
  nameWithType.vb: AutoPublishService.New
  fullName.vb: Mewdeko.Modules.Utility.Services.AutoPublishService.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_AddAutoPublish_System_UInt64_System_UInt64_
  name: AddAutoPublish
  nameWithType: AutoPublishService.AddAutoPublish
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddAutoPublish
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_GetAutoPublishes_System_UInt64_
  name: GetAutoPublishes
  nameWithType: AutoPublishService.GetAutoPublishes
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.GetAutoPublishes
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.ValueTuple{Mewdeko.Database.Models.AutoPublish,System.Collections.Generic.List{Mewdeko.Database.Models.PublishUserBlacklist},System.Collections.Generic.List{Mewdeko.Database.Models.PublishWordBlacklist}}}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.ValueTuple{Mewdeko.Database.Models.AutoPublish,System.Collections.Generic.List{Mewdeko.Database.Models.PublishUserBlacklist},System.Collections.Generic.List{Mewdeko.Database.Models.PublishWordBlacklist}}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<(AutoPublish, List<PublishUserBlacklist>, List<PublishWordBlacklist>)>>
  nameWithType: Task<List<(AutoPublish, List<PublishUserBlacklist>, List<PublishWordBlacklist>)>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<(Mewdeko.Database.Models.AutoPublish, System.Collections.Generic.List<Mewdeko.Database.Models.PublishUserBlacklist>, System.Collections.Generic.List<Mewdeko.Database.Models.PublishWordBlacklist>)>>
  nameWithType.vb: Task(Of List(Of (AutoPublish, List(Of PublishUserBlacklist), List(Of PublishWordBlacklist))))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of (Mewdeko.Database.Models.AutoPublish, System.Collections.Generic.List(Of Mewdeko.Database.Models.PublishUserBlacklist), System.Collections.Generic.List(Of Mewdeko.Database.Models.PublishWordBlacklist))))
  name.vb: Task(Of List(Of (AutoPublish, List(Of PublishUserBlacklist), List(Of PublishWordBlacklist))))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: (
  - uid: Mewdeko.Database.Models.AutoPublish
    name: AutoPublish
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.PublishUserBlacklist
    name: PublishUserBlacklist
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.PublishWordBlacklist
    name: PublishWordBlacklist
  - name: '>'
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: Mewdeko.Database.Models.AutoPublish
    name: AutoPublish
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.PublishUserBlacklist
    name: PublishUserBlacklist
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.PublishWordBlacklist
    name: PublishWordBlacklist
  - name: )
  - name: )
  - name: )
  - name: )
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_PermCheck_Discord_INewsChannel_
  name: PermCheck
  nameWithType: AutoPublishService.PermCheck
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.PermCheck
- uid: Discord.INewsChannel
  commentId: T:Discord.INewsChannel
  parent: Discord
  isExternal: true
  name: INewsChannel
  nameWithType: INewsChannel
  fullName: Discord.INewsChannel
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_RemoveAutoPublish_System_UInt64_System_UInt64_
  name: RemoveAutoPublish
  nameWithType: AutoPublishService.RemoveAutoPublish
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveAutoPublish
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_AddUserToBlacklist_System_UInt64_System_UInt64_
  name: AddUserToBlacklist
  nameWithType: AutoPublishService.AddUserToBlacklist
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddUserToBlacklist
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_RemoveUserFromBlacklist_System_UInt64_System_UInt64_
  name: RemoveUserFromBlacklist
  nameWithType: AutoPublishService.RemoveUserFromBlacklist
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveUserFromBlacklist
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_AddWordToBlacklist_System_UInt64_System_String_
  name: AddWordToBlacklist
  nameWithType: AutoPublishService.AddWordToBlacklist
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.AddWordToBlacklist
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_RemoveWordFromBlacklist_System_UInt64_System_String_
  name: RemoveWordFromBlacklist
  nameWithType: AutoPublishService.RemoveWordFromBlacklist
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.RemoveWordFromBlacklist
- uid: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists*
  commentId: Overload:Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists
  href: Mewdeko.Modules.Utility.Services.AutoPublishService.html#Mewdeko_Modules_Utility_Services_AutoPublishService_CheckIfExists_System_UInt64_
  name: CheckIfExists
  nameWithType: AutoPublishService.CheckIfExists
  fullName: Mewdeko.Modules.Utility.Services.AutoPublishService.CheckIfExists
