### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.ShmartNumber
  commentId: T:Mewdeko.Common.ShmartNumber
  id: ShmartNumber
  parent: Mewdeko.Common
  children:
  - Mewdeko.Common.ShmartNumber.#ctor(System.UInt64,System.String)
  - Mewdeko.Common.ShmartNumber.Equals(Mewdeko.Common.ShmartNumber)
  - Mewdeko.Common.ShmartNumber.Equals(System.Object)
  - Mewdeko.Common.ShmartNumber.GetHashCode
  - Mewdeko.Common.ShmartNumber.Input
  - Mewdeko.Common.ShmartNumber.ToString
  - Mewdeko.Common.ShmartNumber.Value
  - Mewdeko.Common.ShmartNumber.op_Equality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  - Mewdeko.Common.ShmartNumber.op_Implicit(Mewdeko.Common.ShmartNumber)~System.UInt64
  - Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt32)~Mewdeko.Common.ShmartNumber
  - Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt64)~Mewdeko.Common.ShmartNumber
  - Mewdeko.Common.ShmartNumber.op_Inequality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  langs:
  - csharp
  - vb
  name: ShmartNumber
  nameWithType: ShmartNumber
  fullName: Mewdeko.Common.ShmartNumber
  type: Struct
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShmartNumber
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 5
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Represents a smart number that can be implicitly converted to and from ulong and uint.
  example: []
  syntax:
    content: 'public readonly struct ShmartNumber : IEquatable<ShmartNumber>'
    content.vb: Public Structure ShmartNumber Implements IEquatable(Of ShmartNumber)
  implements:
  - System.IEquatable{Mewdeko.Common.ShmartNumber}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Mewdeko.Common.ShmartNumber.Value
  commentId: P:Mewdeko.Common.ShmartNumber.Value
  id: Value
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ShmartNumber.Value
  fullName: Mewdeko.Common.ShmartNumber.Value
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Value
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets the value of the ShmartNumber.
  example: []
  syntax:
    content: public ulong Value { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Value As ULong
  overload: Mewdeko.Common.ShmartNumber.Value*
- uid: Mewdeko.Common.ShmartNumber.Input
  commentId: P:Mewdeko.Common.ShmartNumber.Input
  id: Input
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: ShmartNumber.Input
  fullName: Mewdeko.Common.ShmartNumber.Input
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Input
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets the input string of the ShmartNumber.
  example: []
  syntax:
    content: public string Input { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Input As String
  overload: Mewdeko.Common.ShmartNumber.Input*
- uid: Mewdeko.Common.ShmartNumber.#ctor(System.UInt64,System.String)
  commentId: M:Mewdeko.Common.ShmartNumber.#ctor(System.UInt64,System.String)
  id: '#ctor(System.UInt64,System.String)'
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: ShmartNumber(ulong, string?)
  nameWithType: ShmartNumber.ShmartNumber(ulong, string?)
  fullName: Mewdeko.Common.ShmartNumber.ShmartNumber(ulong, string?)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Initializes a new instance of the ShmartNumber struct with the specified value and input string.
  example: []
  syntax:
    content: public ShmartNumber(ulong val, string? input = null)
    parameters:
    - id: val
      type: System.UInt64
      description: The value of the ShmartNumber.
    - id: input
      type: System.String
      description: The input string of the ShmartNumber.
    content.vb: Public Sub New(val As ULong, input As String = Nothing)
  overload: Mewdeko.Common.ShmartNumber.#ctor*
  nameWithType.vb: ShmartNumber.New(ULong, String)
  fullName.vb: Mewdeko.Common.ShmartNumber.New(ULong, String)
  name.vb: New(ULong, String)
- uid: Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt64)~Mewdeko.Common.ShmartNumber
  commentId: M:Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt64)~Mewdeko.Common.ShmartNumber
  id: op_Implicit(System.UInt64)~Mewdeko.Common.ShmartNumber
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: implicit operator ShmartNumber(ulong)
  nameWithType: ShmartNumber.implicit operator ShmartNumber(ulong)
  fullName: Mewdeko.Common.ShmartNumber.implicit operator Mewdeko.Common.ShmartNumber(ulong)
  type: Operator
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Implicit
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 31
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Implicitly converts an unsigned long integer to a ShmartNumber.
  example: []
  syntax:
    content: public static implicit operator ShmartNumber(ulong num)
    parameters:
    - id: num
      type: System.UInt64
    return:
      type: Mewdeko.Common.ShmartNumber
    content.vb: Public Shared Widening Operator CType(num As ULong) As ShmartNumber
  overload: Mewdeko.Common.ShmartNumber.op_Implicit*
  nameWithType.vb: ShmartNumber.CType(ULong)
  fullName.vb: Mewdeko.Common.ShmartNumber.CType(ULong)
  name.vb: CType(ULong)
- uid: Mewdeko.Common.ShmartNumber.op_Implicit(Mewdeko.Common.ShmartNumber)~System.UInt64
  commentId: M:Mewdeko.Common.ShmartNumber.op_Implicit(Mewdeko.Common.ShmartNumber)~System.UInt64
  id: op_Implicit(Mewdeko.Common.ShmartNumber)~System.UInt64
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: implicit operator ulong(ShmartNumber)
  nameWithType: ShmartNumber.implicit operator ulong(ShmartNumber)
  fullName: Mewdeko.Common.ShmartNumber.implicit operator ulong(Mewdeko.Common.ShmartNumber)
  type: Operator
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Implicit
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 36
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Implicitly converts a ShmartNumber to an unsigned long integer.
  example: []
  syntax:
    content: public static implicit operator ulong(ShmartNumber num)
    parameters:
    - id: num
      type: Mewdeko.Common.ShmartNumber
    return:
      type: System.UInt64
    content.vb: Public Shared Widening Operator CType(num As ShmartNumber) As ULong
  overload: Mewdeko.Common.ShmartNumber.op_Implicit*
  nameWithType.vb: ShmartNumber.CType(ShmartNumber)
  fullName.vb: Mewdeko.Common.ShmartNumber.CType(Mewdeko.Common.ShmartNumber)
  name.vb: CType(ShmartNumber)
- uid: Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt32)~Mewdeko.Common.ShmartNumber
  commentId: M:Mewdeko.Common.ShmartNumber.op_Implicit(System.UInt32)~Mewdeko.Common.ShmartNumber
  id: op_Implicit(System.UInt32)~Mewdeko.Common.ShmartNumber
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: implicit operator ShmartNumber(uint)
  nameWithType: ShmartNumber.implicit operator ShmartNumber(uint)
  fullName: Mewdeko.Common.ShmartNumber.implicit operator Mewdeko.Common.ShmartNumber(uint)
  type: Operator
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Implicit
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 41
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Implicitly converts an unsigned integer to a ShmartNumber.
  example: []
  syntax:
    content: public static implicit operator ShmartNumber(uint num)
    parameters:
    - id: num
      type: System.UInt32
    return:
      type: Mewdeko.Common.ShmartNumber
    content.vb: Public Shared Widening Operator CType(num As UInteger) As ShmartNumber
  overload: Mewdeko.Common.ShmartNumber.op_Implicit*
  nameWithType.vb: ShmartNumber.CType(UInteger)
  fullName.vb: Mewdeko.Common.ShmartNumber.CType(UInteger)
  name.vb: CType(UInteger)
- uid: Mewdeko.Common.ShmartNumber.ToString
  commentId: M:Mewdeko.Common.ShmartNumber.ToString
  id: ToString
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ShmartNumber.ToString()
  fullName: Mewdeko.Common.ShmartNumber.ToString()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToString
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 46
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Returns a string that represents the current ShmartNumber.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Mewdeko.Common.ShmartNumber.ToString*
- uid: Mewdeko.Common.ShmartNumber.Equals(System.Object)
  commentId: M:Mewdeko.Common.ShmartNumber.Equals(System.Object)
  id: Equals(System.Object)
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: ShmartNumber.Equals(object?)
  fullName: Mewdeko.Common.ShmartNumber.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Equals
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 51
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Determines whether the specified object is equal to the current ShmartNumber.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Mewdeko.Common.ShmartNumber.Equals*
  nameWithType.vb: ShmartNumber.Equals(Object)
  fullName.vb: Mewdeko.Common.ShmartNumber.Equals(Object)
  name.vb: Equals(Object)
- uid: Mewdeko.Common.ShmartNumber.Equals(Mewdeko.Common.ShmartNumber)
  commentId: M:Mewdeko.Common.ShmartNumber.Equals(Mewdeko.Common.ShmartNumber)
  id: Equals(Mewdeko.Common.ShmartNumber)
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: Equals(ShmartNumber)
  nameWithType: ShmartNumber.Equals(ShmartNumber)
  fullName: Mewdeko.Common.ShmartNumber.Equals(Mewdeko.Common.ShmartNumber)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Equals
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 56
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Indicates whether the current ShmartNumber is equal to another ShmartNumber.
  example: []
  syntax:
    content: public bool Equals(ShmartNumber other)
    parameters:
    - id: other
      type: Mewdeko.Common.ShmartNumber
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As ShmartNumber) As Boolean
  overload: Mewdeko.Common.ShmartNumber.Equals*
  implements:
  - System.IEquatable{Mewdeko.Common.ShmartNumber}.Equals(Mewdeko.Common.ShmartNumber)
- uid: Mewdeko.Common.ShmartNumber.GetHashCode
  commentId: M:Mewdeko.Common.ShmartNumber.GetHashCode
  id: GetHashCode
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ShmartNumber.GetHashCode()
  fullName: Mewdeko.Common.ShmartNumber.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHashCode
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 61
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Returns the hash code for the current ShmartNumber.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Mewdeko.Common.ShmartNumber.GetHashCode*
- uid: Mewdeko.Common.ShmartNumber.op_Equality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  commentId: M:Mewdeko.Common.ShmartNumber.op_Equality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  id: op_Equality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: operator ==(ShmartNumber, ShmartNumber)
  nameWithType: ShmartNumber.operator ==(ShmartNumber, ShmartNumber)
  fullName: Mewdeko.Common.ShmartNumber.operator ==(Mewdeko.Common.ShmartNumber, Mewdeko.Common.ShmartNumber)
  type: Operator
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Equality
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 66
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Determines whether two ShmartNumber objects are equal.
  example: []
  syntax:
    content: public static bool operator ==(ShmartNumber left, ShmartNumber right)
    parameters:
    - id: left
      type: Mewdeko.Common.ShmartNumber
    - id: right
      type: Mewdeko.Common.ShmartNumber
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As ShmartNumber, right As ShmartNumber) As Boolean
  overload: Mewdeko.Common.ShmartNumber.op_Equality*
  nameWithType.vb: ShmartNumber.=(ShmartNumber, ShmartNumber)
  fullName.vb: Mewdeko.Common.ShmartNumber.=(Mewdeko.Common.ShmartNumber, Mewdeko.Common.ShmartNumber)
  name.vb: =(ShmartNumber, ShmartNumber)
- uid: Mewdeko.Common.ShmartNumber.op_Inequality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  commentId: M:Mewdeko.Common.ShmartNumber.op_Inequality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  id: op_Inequality(Mewdeko.Common.ShmartNumber,Mewdeko.Common.ShmartNumber)
  parent: Mewdeko.Common.ShmartNumber
  langs:
  - csharp
  - vb
  name: operator !=(ShmartNumber, ShmartNumber)
  nameWithType: ShmartNumber.operator !=(ShmartNumber, ShmartNumber)
  fullName: Mewdeko.Common.ShmartNumber.operator !=(Mewdeko.Common.ShmartNumber, Mewdeko.Common.ShmartNumber)
  type: Operator
  source:
    remote:
      path: src/Mewdeko/Common/ShmartNumber.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: op_Inequality
    path: src/Mewdeko/Common/ShmartNumber.cs
    startLine: 71
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Determines whether two ShmartNumber objects are not equal.
  example: []
  syntax:
    content: public static bool operator !=(ShmartNumber left, ShmartNumber right)
    parameters:
    - id: left
      type: Mewdeko.Common.ShmartNumber
    - id: right
      type: Mewdeko.Common.ShmartNumber
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As ShmartNumber, right As ShmartNumber) As Boolean
  overload: Mewdeko.Common.ShmartNumber.op_Inequality*
  nameWithType.vb: ShmartNumber.<>(ShmartNumber, ShmartNumber)
  fullName.vb: Mewdeko.Common.ShmartNumber.<>(Mewdeko.Common.ShmartNumber, Mewdeko.Common.ShmartNumber)
  name.vb: <>(ShmartNumber, ShmartNumber)
references:
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: System.IEquatable{Mewdeko.Common.ShmartNumber}
  commentId: T:System.IEquatable{Mewdeko.Common.ShmartNumber}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ShmartNumber>
  nameWithType: IEquatable<ShmartNumber>
  fullName: System.IEquatable<Mewdeko.Common.ShmartNumber>
  nameWithType.vb: IEquatable(Of ShmartNumber)
  fullName.vb: System.IEquatable(Of Mewdeko.Common.ShmartNumber)
  name.vb: IEquatable(Of ShmartNumber)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Mewdeko.Common.ShmartNumber
    name: ShmartNumber
    href: Mewdeko.Common.ShmartNumber.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.ShmartNumber
    name: ShmartNumber
    href: Mewdeko.Common.ShmartNumber.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Common.ShmartNumber.Value*
  commentId: Overload:Mewdeko.Common.ShmartNumber.Value
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_Value
  name: Value
  nameWithType: ShmartNumber.Value
  fullName: Mewdeko.Common.ShmartNumber.Value
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Common.ShmartNumber.Input*
  commentId: Overload:Mewdeko.Common.ShmartNumber.Input
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_Input
  name: Input
  nameWithType: ShmartNumber.Input
  fullName: Mewdeko.Common.ShmartNumber.Input
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Common.ShmartNumber.#ctor*
  commentId: Overload:Mewdeko.Common.ShmartNumber.#ctor
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber__ctor_System_UInt64_System_String_
  name: ShmartNumber
  nameWithType: ShmartNumber.ShmartNumber
  fullName: Mewdeko.Common.ShmartNumber.ShmartNumber
  nameWithType.vb: ShmartNumber.New
  fullName.vb: Mewdeko.Common.ShmartNumber.New
  name.vb: New
- uid: Mewdeko.Common.ShmartNumber.op_Implicit*
  commentId: Overload:Mewdeko.Common.ShmartNumber.op_Implicit
  name: implicit operator
  nameWithType: ShmartNumber.implicit operator
  fullName: Mewdeko.Common.ShmartNumber.implicit operator
  nameWithType.vb: ShmartNumber.CType
  fullName.vb: Mewdeko.Common.ShmartNumber.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Mewdeko.Common.ShmartNumber
  commentId: T:Mewdeko.Common.ShmartNumber
  parent: Mewdeko.Common
  href: Mewdeko.Common.ShmartNumber.html
  name: ShmartNumber
  nameWithType: ShmartNumber
  fullName: Mewdeko.Common.ShmartNumber
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.ShmartNumber.ToString*
  commentId: Overload:Mewdeko.Common.ShmartNumber.ToString
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_ToString
  name: ToString
  nameWithType: ShmartNumber.ToString
  fullName: Mewdeko.Common.ShmartNumber.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Mewdeko.Common.ShmartNumber.Equals*
  commentId: Overload:Mewdeko.Common.ShmartNumber.Equals
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_Equals_System_Object_
  name: Equals
  nameWithType: ShmartNumber.Equals
  fullName: Mewdeko.Common.ShmartNumber.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{Mewdeko.Common.ShmartNumber}.Equals(Mewdeko.Common.ShmartNumber)
  commentId: M:System.IEquatable{Mewdeko.Common.ShmartNumber}.Equals(Mewdeko.Common.ShmartNumber)
  parent: System.IEquatable{Mewdeko.Common.ShmartNumber}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ShmartNumber)
  nameWithType: IEquatable<ShmartNumber>.Equals(ShmartNumber)
  fullName: System.IEquatable<Mewdeko.Common.ShmartNumber>.Equals(Mewdeko.Common.ShmartNumber)
  nameWithType.vb: IEquatable(Of ShmartNumber).Equals(ShmartNumber)
  fullName.vb: System.IEquatable(Of Mewdeko.Common.ShmartNumber).Equals(Mewdeko.Common.ShmartNumber)
  spec.csharp:
  - uid: System.IEquatable{Mewdeko.Common.ShmartNumber}.Equals(Mewdeko.Common.ShmartNumber)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Mewdeko.Common.ShmartNumber
    name: ShmartNumber
    href: Mewdeko.Common.ShmartNumber.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Mewdeko.Common.ShmartNumber}.Equals(Mewdeko.Common.ShmartNumber)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Mewdeko.Common.ShmartNumber
    name: ShmartNumber
    href: Mewdeko.Common.ShmartNumber.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Mewdeko.Common.ShmartNumber.GetHashCode*
  commentId: Overload:Mewdeko.Common.ShmartNumber.GetHashCode
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_GetHashCode
  name: GetHashCode
  nameWithType: ShmartNumber.GetHashCode
  fullName: Mewdeko.Common.ShmartNumber.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Common.ShmartNumber.op_Equality*
  commentId: Overload:Mewdeko.Common.ShmartNumber.op_Equality
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_op_Equality_Mewdeko_Common_ShmartNumber_Mewdeko_Common_ShmartNumber_
  name: operator ==
  nameWithType: ShmartNumber.operator ==
  fullName: Mewdeko.Common.ShmartNumber.operator ==
  nameWithType.vb: ShmartNumber.=
  fullName.vb: Mewdeko.Common.ShmartNumber.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Mewdeko.Common.ShmartNumber.op_Equality*
    name: ==
    href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_op_Equality_Mewdeko_Common_ShmartNumber_Mewdeko_Common_ShmartNumber_
- uid: Mewdeko.Common.ShmartNumber.op_Inequality*
  commentId: Overload:Mewdeko.Common.ShmartNumber.op_Inequality
  href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_op_Inequality_Mewdeko_Common_ShmartNumber_Mewdeko_Common_ShmartNumber_
  name: operator !=
  nameWithType: ShmartNumber.operator !=
  fullName: Mewdeko.Common.ShmartNumber.operator !=
  nameWithType.vb: ShmartNumber.<>
  fullName.vb: Mewdeko.Common.ShmartNumber.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Mewdeko.Common.ShmartNumber.op_Inequality*
    name: '!='
    href: Mewdeko.Common.ShmartNumber.html#Mewdeko_Common_ShmartNumber_op_Inequality_Mewdeko_Common_ShmartNumber_Mewdeko_Common_ShmartNumber_
