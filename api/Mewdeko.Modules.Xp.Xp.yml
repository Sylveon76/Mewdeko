### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Xp.Xp
  commentId: T:Mewdeko.Modules.Xp.Xp
  id: Xp
  parent: Mewdeko.Modules.Xp
  children:
  - Mewdeko.Modules.Xp.Xp.#ctor(Mewdeko.Common.DownloadTracker,Mewdeko.Modules.Xp.Services.XpConfigService,Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Database.DbService)
  - Mewdeko.Modules.Xp.Xp.Experience(Discord.IGuildUser)
  - Mewdeko.Modules.Xp.Xp.SetXpImage(System.String)
  - Mewdeko.Modules.Xp.Xp.SyncRewards
  - Mewdeko.Modules.Xp.Xp.TemplateConfig(System.String,System.String,System.String)
  - Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,Discord.IGuildUser)
  - Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,System.UInt64)
  - Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Channel,Discord.IChannel)
  - Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Role,Discord.IRole)
  - Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Server)
  - Mewdeko.Modules.Xp.Xp.XpExclusionList
  - Mewdeko.Modules.Xp.Xp.XpLeaderboard(System.String[])
  - Mewdeko.Modules.Xp.Xp.XpLevelUpRewards
  - Mewdeko.Modules.Xp.Xp.XpNotify
  - Mewdeko.Modules.Xp.Xp.XpNotify(Mewdeko.Modules.Xp.Xp.NotifyPlace,Mewdeko.Database.Models.XpNotificationLocation)
  - Mewdeko.Modules.Xp.Xp.XpRoleReward(System.Int32,Discord.IRole)
  - Mewdeko.Modules.Xp.Xp.XpSetting(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: Xp
  nameWithType: Xp
  fullName: Mewdeko.Modules.Xp.Xp
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Xp
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Represents the XP module of the bot, handling various XP-related commands and configurations.
  remarks: >-
    The XP module includes commands for setting up XP earning rates, managing XP roles and rewards,

    adjusting notification settings, excluding users/roles/channels from earning XP, and more.
  example: []
  syntax:
    content: 'public class Xp : MewdekoModuleBase<XpService>, IModuleBase'
    content.vb: Public Class Xp Inherits MewdekoModuleBase(Of XpService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Xp.Xp.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Xp.Xp.#ctor(Mewdeko.Common.DownloadTracker,Mewdeko.Modules.Xp.Services.XpConfigService,Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Database.DbService)
  commentId: M:Mewdeko.Modules.Xp.Xp.#ctor(Mewdeko.Common.DownloadTracker,Mewdeko.Modules.Xp.Services.XpConfigService,Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Database.DbService)
  id: '#ctor(Mewdeko.Common.DownloadTracker,Mewdeko.Modules.Xp.Services.XpConfigService,Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService,Mewdeko.Database.DbService)'
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: Xp(DownloadTracker, XpConfigService, InteractiveService, BotConfigService, DbService)
  nameWithType: Xp.Xp(DownloadTracker, XpConfigService, InteractiveService, BotConfigService, DbService)
  fullName: Mewdeko.Modules.Xp.Xp.Xp(Mewdeko.Common.DownloadTracker, Mewdeko.Modules.Xp.Services.XpConfigService, Fergun.Interactive.InteractiveService, Mewdeko.Services.Settings.BotConfigService, Mewdeko.Database.DbService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Represents the XP module of the bot, handling various XP-related commands and configurations.
  remarks: >-
    The XP module includes commands for setting up XP earning rates, managing XP roles and rewards,

    adjusting notification settings, excluding users/roles/channels from earning XP, and more.
  example: []
  syntax:
    content: public Xp(DownloadTracker tracker, XpConfigService xpconfig, InteractiveService serv, BotConfigService bss, DbService db)
    parameters:
    - id: tracker
      type: Mewdeko.Common.DownloadTracker
      description: A service for tracking downloads.
    - id: xpconfig
      type: Mewdeko.Modules.Xp.Services.XpConfigService
      description: A service for managing XP configuration settings.
    - id: serv
      type: Fergun.Interactive.InteractiveService
      description: An interactive service for creating interactive prompts and pagination.
    - id: bss
      type: Mewdeko.Services.Settings.BotConfigService
      description: A service for accessing and managing bot configurations.
    - id: db
      type: Mewdeko.Database.DbService
      description: A service for interacting with the database.
    content.vb: Public Sub New(tracker As DownloadTracker, xpconfig As XpConfigService, serv As InteractiveService, bss As BotConfigService, db As DbService)
  overload: Mewdeko.Modules.Xp.Xp.#ctor*
  nameWithType.vb: Xp.New(DownloadTracker, XpConfigService, InteractiveService, BotConfigService, DbService)
  fullName.vb: Mewdeko.Modules.Xp.Xp.New(Mewdeko.Common.DownloadTracker, Mewdeko.Modules.Xp.Services.XpConfigService, Fergun.Interactive.InteractiveService, Mewdeko.Services.Settings.BotConfigService, Mewdeko.Database.DbService)
  name.vb: New(DownloadTracker, XpConfigService, InteractiveService, BotConfigService, DbService)
- uid: Mewdeko.Modules.Xp.Xp.SetXpImage(System.String)
  commentId: M:Mewdeko.Modules.Xp.Xp.SetXpImage(System.String)
  id: SetXpImage(System.String)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: SetXpImage(string)
  nameWithType: Xp.SetXpImage(string)
  fullName: Mewdeko.Modules.Xp.Xp.SetXpImage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetXpImage
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 121
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Sets the XP image for the server.
  remarks: >-
    This command allows server administrators to set a custom image that is displayed in XP-related messages.

    If a URL is not provided, the command looks for an image attachment in the message.
  example: []
  syntax:
    content: >-
      [Cmd("SetXpImage")]

      [Aliases("SetXpImage")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task SetXpImage(string url = null)
    parameters:
    - id: url
      type: System.String
      description: The URL of the image to set as the XP image. If null, the method attempts to use an attachment from the message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of setting the XP image.
    content.vb: >-
      <Cmd("SetXpImage")>

      <Aliases("SetXpImage")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function SetXpImage(url As String = Nothing) As Task
  overload: Mewdeko.Modules.Xp.Xp.SetXpImage*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetXpImage
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetXpImage
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Xp.SetXpImage(String)
  fullName.vb: Mewdeko.Modules.Xp.Xp.SetXpImage(String)
  name.vb: SetXpImage(String)
- uid: Mewdeko.Modules.Xp.Xp.SyncRewards
  commentId: M:Mewdeko.Modules.Xp.Xp.SyncRewards
  id: SyncRewards
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: SyncRewards()
  nameWithType: Xp.SyncRewards()
  fullName: Mewdeko.Modules.Xp.Xp.SyncRewards()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SyncRewards
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 162
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Synchronizes the role rewards for the user based on their current XP level.
  remarks: >-
    This command checks the user's current XP level and applies any role rewards they should have based on that level.

    It's useful for ensuring users have all the roles they are entitled to according to their XP level.
  example: []
  syntax:
    content: >-
      [Cmd("SyncRewards")]

      [Aliases("SyncRewards")]

      [RequireContext(ContextType.Guild)]

      [Ratelimit(60)]

      public Task SyncRewards()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of syncing XP role rewards.
    content.vb: >-
      <Cmd("SyncRewards")>

      <Aliases("SyncRewards")>

      <RequireContext(ContextType.Guild)>

      <Ratelimit(60)>

      Public Function SyncRewards() As Task
  overload: Mewdeko.Modules.Xp.Xp.SyncRewards*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SyncRewards
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SyncRewards
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 60
- uid: Mewdeko.Modules.Xp.Xp.XpSetting(System.String,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpSetting(System.String,System.Int32)
  id: XpSetting(System.String,System.Int32)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpSetting(string?, int)
  nameWithType: Xp.XpSetting(string?, int)
  fullName: Mewdeko.Modules.Xp.Xp.XpSetting(string?, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpSetting
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 239
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Updates XP settings for the server or displays the current settings if no parameters are specified.
  remarks: >-
    This command allows for the adjustment of various XP-related settings, such as the rate at which XP is earned.

    If no parameters are specified, it displays the current XP settings for the server.
  example: []
  syntax:
    content: >-
      [Cmd("XpSetting")]

      [Aliases("XpSetting")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task XpSetting(string? setting = null, int value = 999999999)
    parameters:
    - id: setting
      type: System.String
      description: The setting to update. Can be null to display current settings.
    - id: value
      type: System.Int32
      description: The new value for the setting. Use 999999999 as a default placeholder to indicate no change.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of updating or displaying XP settings.
    content.vb: >-
      <Cmd("XpSetting")>

      <Aliases("XpSetting")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function XpSetting(setting As String = Nothing, value As Integer = 999999999) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpSetting*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpSetting
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpSetting
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Xp.XpSetting(String, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpSetting(String, Integer)
  name.vb: XpSetting(String, Integer)
- uid: Mewdeko.Modules.Xp.Xp.Experience(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Xp.Xp.Experience(Discord.IGuildUser)
  id: Experience(Discord.IGuildUser)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: Experience(IGuildUser?)
  nameWithType: Xp.Experience(IGuildUser?)
  fullName: Mewdeko.Modules.Xp.Xp.Experience(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Experience
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 346
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Generates and sends an XP image for a specified user.
  remarks: >-
    This command creates an image displaying the user's current XP level and other related information,

    then sends this image to the channel where the command was invoked.
  example: []
  syntax:
    content: >-
      [Cmd("Experience")]

      [Aliases("Experience")]

      [RequireContext(ContextType.Guild)]

      public Task Experience(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user for whom to generate the XP image. If null, the XP image is generated for the command invoker.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of generating and sending the XP image.
    content.vb: >-
      <Cmd("Experience")>

      <Aliases("Experience")>

      <RequireContext(ContextType.Guild)>

      Public Function Experience(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Xp.Xp.Experience*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Experience
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Experience
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  nameWithType.vb: Xp.Experience(IGuildUser)
  fullName.vb: Mewdeko.Modules.Xp.Xp.Experience(Discord.IGuildUser)
  name.vb: Experience(IGuildUser)
- uid: Mewdeko.Modules.Xp.Xp.XpLevelUpRewards
  commentId: M:Mewdeko.Modules.Xp.Xp.XpLevelUpRewards
  id: XpLevelUpRewards
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpLevelUpRewards()
  nameWithType: Xp.XpLevelUpRewards()
  fullName: Mewdeko.Modules.Xp.Xp.XpLevelUpRewards()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpLevelUpRewards
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 374
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Displays the XP level-up rewards for the server.
  remarks: This command lists all the roles that users can receive as rewards for reaching certain XP levels within the server.
  example: []
  syntax:
    content: >-
      [Cmd("XpLevelUpRewards")]

      [Aliases("XpLevelUpRewards")]

      [RequireContext(ContextType.Guild)]

      public Task XpLevelUpRewards()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of displaying XP level-up rewards.
    content.vb: >-
      <Cmd("XpLevelUpRewards")>

      <Aliases("XpLevelUpRewards")>

      <RequireContext(ContextType.Guild)>

      Public Function XpLevelUpRewards() As Task
  overload: Mewdeko.Modules.Xp.Xp.XpLevelUpRewards*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpLevelUpRewards
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpLevelUpRewards
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Xp.Xp.XpRoleReward(System.Int32,Discord.IRole)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpRoleReward(System.Int32,Discord.IRole)
  id: XpRoleReward(System.Int32,Discord.IRole)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpRoleReward(int, IRole?)
  nameWithType: Xp.XpRoleReward(int, IRole?)
  fullName: Mewdeko.Modules.Xp.Xp.XpRoleReward(int, Discord.IRole?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpRoleReward
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 436
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Sets or clears an XP role reward for reaching a specified level.
  remarks: This command allows server administrators to configure roles as rewards for users reaching specific XP levels.
  example: []
  syntax:
    content: >-
      [Cmd("XpRoleReward")]

      [Aliases("XpRoleReward")]

      [UserPerm(GuildPermission.Administrator)]

      [RequireContext(ContextType.Guild)]

      public Task XpRoleReward(int level, IRole? role = null)
    parameters:
    - id: level
      type: System.Int32
      description: The XP level for which to set or clear the reward.
    - id: role
      type: Discord.IRole
      description: The role to set as a reward for reaching the specified level. If null, the reward for the level is cleared.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of setting or clearing an XP role reward.
    content.vb: >-
      <Cmd("XpRoleReward")>

      <Aliases("XpRoleReward")>

      <UserPerm(GuildPermission.Administrator)>

      <RequireContext(ContextType.Guild)>

      Public Function XpRoleReward(level As Integer, role As IRole = Nothing) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpRoleReward*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpRoleReward
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpRoleReward
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  nameWithType.vb: Xp.XpRoleReward(Integer, IRole)
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpRoleReward(Integer, Discord.IRole)
  name.vb: XpRoleReward(Integer, IRole)
- uid: Mewdeko.Modules.Xp.Xp.XpNotify
  commentId: M:Mewdeko.Modules.Xp.Xp.XpNotify
  id: XpNotify
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpNotify()
  nameWithType: Xp.XpNotify()
  fullName: Mewdeko.Modules.Xp.Xp.XpNotify()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpNotify
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 474
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Sets or gets the notification setting for XP level-ups.
  remarks: >-
    Without parameters, this command displays the current notification setting for XP level-ups.

    With parameters, it updates the notification setting to either notify in a server channel, via DM, or disable notifications altogether.
  example: []
  syntax:
    content: >-
      [Cmd("XpNotify")]

      [Aliases("XpNotify")]

      [RequireContext(ContextType.Guild)]

      public Task XpNotify()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of setting or getting the XP notification setting.
    content.vb: >-
      <Cmd("XpNotify")>

      <Aliases("XpNotify")>

      <RequireContext(ContextType.Guild)>

      Public Function XpNotify() As Task
  overload: Mewdeko.Modules.Xp.Xp.XpNotify*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpNotify
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpNotify
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Xp.Xp.XpNotify(Mewdeko.Modules.Xp.Xp.NotifyPlace,Mewdeko.Database.Models.XpNotificationLocation)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpNotify(Mewdeko.Modules.Xp.Xp.NotifyPlace,Mewdeko.Database.Models.XpNotificationLocation)
  id: XpNotify(Mewdeko.Modules.Xp.Xp.NotifyPlace,Mewdeko.Database.Models.XpNotificationLocation)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpNotify(NotifyPlace, XpNotificationLocation)
  nameWithType: Xp.XpNotify(Xp.NotifyPlace, XpNotificationLocation)
  fullName: Mewdeko.Modules.Xp.Xp.XpNotify(Mewdeko.Modules.Xp.Xp.NotifyPlace, Mewdeko.Database.Models.XpNotificationLocation)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpNotify
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 496
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Sets the notification setting for XP level-ups.
  remarks: >-
    This command allows users to set the notification preferences for XP level-ups,

    either for the current server or globally across all servers where the bot is present.
  example: []
  syntax:
    content: >-
      [Cmd("XpNotify")]

      [Aliases("XpNotify")]

      [RequireContext(ContextType.Guild)]

      public Task XpNotify(Xp.NotifyPlace place, XpNotificationLocation type)
    parameters:
    - id: place
      type: Mewdeko.Modules.Xp.Xp.NotifyPlace
      description: The place to set the notification setting for. Can be Server (Guild) or Global.
    - id: type
      type: Mewdeko.Database.Models.XpNotificationLocation
      description: The type of notification to set. Can be Server (Guild) or Global.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of setting the XP notification.
    content.vb: >-
      <Cmd("XpNotify")>

      <Aliases("XpNotify")>

      <RequireContext(ContextType.Guild)>

      Public Function XpNotify(place As Xp.NotifyPlace, type As XpNotificationLocation) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpNotify*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpNotify
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpNotify
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Server)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Server)
  id: XpExclude(Mewdeko.Modules.Xp.Xp.Server)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpExclude(Server)
  nameWithType: Xp.XpExclude(Xp.Server)
  fullName: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Server)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpExclude
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 514
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Toggles whether the server is excluded from earning XP.
  remarks: This command allows server administrators to toggle whether the server is excluded from earning XP.
  example: []
  syntax:
    content: >-
      [Cmd("XpExclude")]

      [Aliases("XpExclude")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task XpExclude(Xp.Server _)
    parameters:
    - id: _
      type: Mewdeko.Modules.Xp.Xp.Server
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of toggling server XP exclusion.
    content.vb: >-
      <Cmd("XpExclude")>

      <Aliases("XpExclude")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function XpExclude(_ As Xp.Server) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpExclude*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Role,Discord.IRole)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Role,Discord.IRole)
  id: XpExclude(Mewdeko.Modules.Xp.Xp.Role,Discord.IRole)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpExclude(Role, IRole)
  nameWithType: Xp.XpExclude(Xp.Role, IRole)
  fullName: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Role, Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpExclude
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 532
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Toggles whether a role is excluded from earning XP.
  remarks: This command allows server administrators to toggle whether a specific role is excluded from earning XP.
  example: []
  syntax:
    content: >-
      [Cmd("XpExclude")]

      [Aliases("XpExclude")]

      [UserPerm(GuildPermission.ManageRoles)]

      [RequireContext(ContextType.Guild)]

      public Task XpExclude(Xp.Role _, IRole role)
    parameters:
    - id: _
      type: Mewdeko.Modules.Xp.Xp.Role
    - id: role
      type: Discord.IRole
      description: The role to toggle exclusion for.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of toggling role XP exclusion.
    content.vb: >-
      <Cmd("XpExclude")>

      <Aliases("XpExclude")>

      <UserPerm(GuildPermission.ManageRoles)>

      <RequireContext(ContextType.Guild)>

      Public Function XpExclude(_ As Xp.Role, role As IRole) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpExclude*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "268435456"
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Channel,Discord.IChannel)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Channel,Discord.IChannel)
  id: XpExclude(Mewdeko.Modules.Xp.Xp.Channel,Discord.IChannel)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpExclude(Channel, IChannel?)
  nameWithType: Xp.XpExclude(Xp.Channel, IChannel?)
  fullName: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Channel, Discord.IChannel?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpExclude
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 551
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Toggles whether a channel is excluded from earning XP.
  remarks: >-
    This command allows server administrators to toggle whether a specific channel is excluded from earning XP.

    If no channel is specified, the command applies to the current channel where it was invoked.
  example: []
  syntax:
    content: >-
      [Cmd("XpExclude")]

      [Aliases("XpExclude")]

      [UserPerm(GuildPermission.ManageChannels)]

      [RequireContext(ContextType.Guild)]

      public Task XpExclude(Xp.Channel _, IChannel? channel = null)
    parameters:
    - id: _
      type: Mewdeko.Modules.Xp.Xp.Channel
    - id: channel
      type: Discord.IChannel
      description: The channel to toggle exclusion for. If null, the current channel is used.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of toggling channel XP exclusion.
    content.vb: >-
      <Cmd("XpExclude")>

      <Aliases("XpExclude")>

      <UserPerm(GuildPermission.ManageChannels)>

      <RequireContext(ContextType.Guild)>

      Public Function XpExclude(_ As Xp.Channel, channel As IChannel = Nothing) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpExclude*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclude
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  nameWithType.vb: Xp.XpExclude(Xp.Channel, IChannel)
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpExclude(Mewdeko.Modules.Xp.Xp.Channel, Discord.IChannel)
  name.vb: XpExclude(Channel, IChannel)
- uid: Mewdeko.Modules.Xp.Xp.XpExclusionList
  commentId: M:Mewdeko.Modules.Xp.Xp.XpExclusionList
  id: XpExclusionList
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpExclusionList()
  nameWithType: Xp.XpExclusionList()
  fullName: Mewdeko.Modules.Xp.Xp.XpExclusionList()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpExclusionList
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 571
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Displays a list of excluded users, roles, and channels from earning XP.
  remarks: This command lists all users, roles, and channels that are currently excluded from earning XP in the server.
  example: []
  syntax:
    content: >-
      [Cmd("XpExclusionList")]

      [Aliases("XpExclusionList")]

      [RequireContext(ContextType.Guild)]

      public Task XpExclusionList()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of displaying the XP exclusion list.
    content.vb: >-
      <Cmd("XpExclusionList")>

      <Aliases("XpExclusionList")>

      <RequireContext(ContextType.Guild)>

      Public Function XpExclusionList() As Task
  overload: Mewdeko.Modules.Xp.Xp.XpExclusionList*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclusionList
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpExclusionList
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
- uid: Mewdeko.Modules.Xp.Xp.XpLeaderboard(System.String[])
  commentId: M:Mewdeko.Modules.Xp.Xp.XpLeaderboard(System.String[])
  id: XpLeaderboard(System.String[])
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpLeaderboard(params string[])
  nameWithType: Xp.XpLeaderboard(params string[])
  fullName: Mewdeko.Modules.Xp.Xp.XpLeaderboard(params string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpLeaderboard
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 627
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Displays the server leaderboard based on XP levels.
  remarks: >-
    This command shows a leaderboard of users in the server ranked by their XP levels.

    It allows for customization of the leaderboard display using various arguments.
  example: []
  syntax:
    content: >-
      [Cmd("XpLeaderboard")]

      [Aliases("XpLeaderboard")]

      [MewdekoOptions(typeof(LbOpts))]

      [Priority(1)]

      [RequireContext(ContextType.Guild)]

      public Task XpLeaderboard(params string[] args)
    parameters:
    - id: args
      type: System.String[]
      description: Arguments for customizing the leaderboard display.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of displaying the server XP leaderboard.
    content.vb: >-
      <Cmd("XpLeaderboard")>

      <Aliases("XpLeaderboard")>

      <MewdekoOptions(GetType(LbOpts))>

      <Priority(1)>

      <RequireContext(ContextType.Guild)>

      Public Function XpLeaderboard(ParamArray args As String()) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpLeaderboard*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpLeaderboard
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpLeaderboard
  - type: Mewdeko.Common.Attributes.TextCommands.MewdekoOptionsAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.MewdekoOptionsAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Mewdeko.Common.LbOpts
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  nameWithType.vb: Xp.XpLeaderboard(ParamArray String())
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpLeaderboard(ParamArray String())
  name.vb: XpLeaderboard(ParamArray String())
- uid: Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,System.UInt64)
  id: XpAdd(System.Int32,System.UInt64)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpAdd(int, ulong)
  nameWithType: Xp.XpAdd(int, ulong)
  fullName: Mewdeko.Modules.Xp.Xp.XpAdd(int, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpAdd
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 710
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Adds a specified amount of XP to a user.
  remarks: This command allows server administrators to manually add XP to a user's account.
  example: []
  syntax:
    content: >-
      [Cmd("XpAdd")]

      [Aliases("XpAdd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task XpAdd(int amount, ulong userId)
    parameters:
    - id: amount
      type: System.Int32
      description: The amount of XP to add to the user.
    - id: userId
      type: System.UInt64
      description: The ID of the user to add XP to.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of adding XP to the user.
    content.vb: >-
      <Cmd("XpAdd")>

      <Aliases("XpAdd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function XpAdd(amount As Integer, userId As ULong) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpAdd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpAdd
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpAdd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Xp.XpAdd(Integer, ULong)
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpAdd(Integer, ULong)
  name.vb: XpAdd(Integer, ULong)
- uid: Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Xp.Xp.XpAdd(System.Int32,Discord.IGuildUser)
  id: XpAdd(System.Int32,Discord.IGuildUser)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: XpAdd(int, IGuildUser)
  nameWithType: Xp.XpAdd(int, IGuildUser)
  fullName: Mewdeko.Modules.Xp.Xp.XpAdd(int, Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpAdd
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 733
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Adds a specified amount of XP to a user.
  remarks: This command allows server administrators to manually add XP to a user's account.
  example: []
  syntax:
    content: >-
      [Cmd("XpAdd")]

      [Aliases("XpAdd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task XpAdd(int amount, IGuildUser user)
    parameters:
    - id: amount
      type: System.Int32
      description: The amount of XP to add to the user.
    - id: user
      type: Discord.IGuildUser
      description: The user to add XP to.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of adding XP to the user.
    content.vb: >-
      <Cmd("XpAdd")>

      <Aliases("XpAdd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function XpAdd(amount As Integer, user As IGuildUser) As Task
  overload: Mewdeko.Modules.Xp.Xp.XpAdd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpAdd
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: XpAdd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Xp.XpAdd(Integer, IGuildUser)
  fullName.vb: Mewdeko.Modules.Xp.Xp.XpAdd(Integer, Discord.IGuildUser)
  name.vb: XpAdd(Integer, IGuildUser)
- uid: Mewdeko.Modules.Xp.Xp.TemplateConfig(System.String,System.String,System.String)
  commentId: M:Mewdeko.Modules.Xp.Xp.TemplateConfig(System.String,System.String,System.String)
  id: TemplateConfig(System.String,System.String,System.String)
  parent: Mewdeko.Modules.Xp.Xp
  langs:
  - csharp
  - vb
  name: TemplateConfig(string, string, string)
  nameWithType: Xp.TemplateConfig(string, string, string)
  fullName: Mewdeko.Modules.Xp.Xp.TemplateConfig(string, string, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Xp.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TemplateConfig
    path: src/Mewdeko/Modules/Xp/Xp.cs
    startLine: 747
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp
  summary: Updates or displays the template configuration for the server.
  remarks: This command allows server administrators to view and modify various configuration settings related to templates.
  example: []
  syntax:
    content: >-
      [Cmd("TemplateConfig")]

      [Aliases("TemplateConfig")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task TemplateConfig(string property = null, string subProperty = null, string value = null)
    parameters:
    - id: property
      type: System.String
      description: The property to update or display. Can be null to display all properties.
    - id: subProperty
      type: System.String
      description: The subproperty to update within the specified property. Can be null.
    - id: value
      type: System.String
      description: The value to set for the property or subproperty. Can be null if no value is provided.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation of updating or displaying the template configuration.
    content.vb: >-
      <Cmd("TemplateConfig")>

      <Aliases("TemplateConfig")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function TemplateConfig([property] As String = Nothing, subProperty As String = Nothing, value As String = Nothing) As Task
  overload: Mewdeko.Modules.Xp.Xp.TemplateConfig*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: TemplateConfig
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TemplateConfig
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Xp.TemplateConfig(String, String, String)
  fullName.vb: Mewdeko.Modules.Xp.Xp.TemplateConfig(String, String, String)
  name.vb: TemplateConfig(String, String, String)
references:
- uid: Mewdeko.Modules.Xp
  commentId: N:Mewdeko.Modules.Xp
  href: Mewdeko.html
  name: Mewdeko.Modules.Xp
  nameWithType: Mewdeko.Modules.Xp
  fullName: Mewdeko.Modules.Xp
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<XpService>
  nameWithType: MewdekoModuleBase<XpService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Xp.Services.XpService>
  nameWithType.vb: MewdekoModuleBase(Of XpService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Xp.Services.XpService)
  name.vb: MewdekoModuleBase(Of XpService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Xp.Services.XpService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<XpService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Xp.Services.XpService>.Service
  nameWithType.vb: MewdekoModuleBase(Of XpService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Xp.Services.XpService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Xp.Xp.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<Xp>(Xp, string)
  nameWithType: Extensions.ThrowIfNull<Xp>(Xp, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Xp.Xp>(Mewdeko.Modules.Xp.Xp, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Xp)(Xp, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Xp.Xp)(Mewdeko.Modules.Xp.Xp, String)
  name.vb: ThrowIfNull(Of Xp)(Xp, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Xp,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Xp,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Xp.Xp.#ctor*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.#ctor
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp__ctor_Mewdeko_Common_DownloadTracker_Mewdeko_Modules_Xp_Services_XpConfigService_Fergun_Interactive_InteractiveService_Mewdeko_Services_Settings_BotConfigService_Mewdeko_Database_DbService_
  name: Xp
  nameWithType: Xp.Xp
  fullName: Mewdeko.Modules.Xp.Xp.Xp
  nameWithType.vb: Xp.New
  fullName.vb: Mewdeko.Modules.Xp.Xp.New
  name.vb: New
- uid: Mewdeko.Common.DownloadTracker
  commentId: T:Mewdeko.Common.DownloadTracker
  parent: Mewdeko.Common
  href: Mewdeko.Common.DownloadTracker.html
  name: DownloadTracker
  nameWithType: DownloadTracker
  fullName: Mewdeko.Common.DownloadTracker
- uid: Mewdeko.Modules.Xp.Services.XpConfigService
  commentId: T:Mewdeko.Modules.Xp.Services.XpConfigService
  parent: Mewdeko.Modules.Xp.Services
  href: Mewdeko.Modules.Xp.Services.XpConfigService.html
  name: XpConfigService
  nameWithType: XpConfigService
  fullName: Mewdeko.Modules.Xp.Services.XpConfigService
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: Mewdeko.Services.Settings.BotConfigService
  commentId: T:Mewdeko.Services.Settings.BotConfigService
  parent: Mewdeko.Services.Settings
  href: Mewdeko.Services.Settings.BotConfigService.html
  name: BotConfigService
  nameWithType: BotConfigService
  fullName: Mewdeko.Services.Settings.BotConfigService
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Modules.Xp.Services
  commentId: N:Mewdeko.Modules.Xp.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Xp.Services
  nameWithType: Mewdeko.Modules.Xp.Services
  fullName: Mewdeko.Modules.Xp.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: Mewdeko.Services.Settings
  commentId: N:Mewdeko.Services.Settings
  href: Mewdeko.html
  name: Mewdeko.Services.Settings
  nameWithType: Mewdeko.Services.Settings
  fullName: Mewdeko.Services.Settings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Modules.Xp.Xp.SetXpImage*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.SetXpImage
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_SetXpImage_System_String_
  name: SetXpImage
  nameWithType: Xp.SetXpImage
  fullName: Mewdeko.Modules.Xp.Xp.SetXpImage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Xp.Xp.SyncRewards*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.SyncRewards
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_SyncRewards
  name: SyncRewards
  nameWithType: Xp.SyncRewards
  fullName: Mewdeko.Modules.Xp.Xp.SyncRewards
- uid: Mewdeko.Modules.Xp.Xp.XpSetting*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpSetting
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpSetting_System_String_System_Int32_
  name: XpSetting
  nameWithType: Xp.XpSetting
  fullName: Mewdeko.Modules.Xp.Xp.XpSetting
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Xp.Xp.Experience*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.Experience
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_Experience_Discord_IGuildUser_
  name: Experience
  nameWithType: Xp.Experience
  fullName: Mewdeko.Modules.Xp.Xp.Experience
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Xp.Xp.XpLevelUpRewards*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpLevelUpRewards
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpLevelUpRewards
  name: XpLevelUpRewards
  nameWithType: Xp.XpLevelUpRewards
  fullName: Mewdeko.Modules.Xp.Xp.XpLevelUpRewards
- uid: Mewdeko.Modules.Xp.Xp.XpRoleReward*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpRoleReward
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpRoleReward_System_Int32_Discord_IRole_
  name: XpRoleReward
  nameWithType: Xp.XpRoleReward
  fullName: Mewdeko.Modules.Xp.Xp.XpRoleReward
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Modules.Xp.Xp.XpNotify*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpNotify
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpNotify
  name: XpNotify
  nameWithType: Xp.XpNotify
  fullName: Mewdeko.Modules.Xp.Xp.XpNotify
- uid: Mewdeko.Modules.Xp.Xp.NotifyPlace
  commentId: T:Mewdeko.Modules.Xp.Xp.NotifyPlace
  parent: Mewdeko.Modules.Xp
  href: Mewdeko.Modules.Xp.Xp.html
  name: Xp.NotifyPlace
  nameWithType: Xp.NotifyPlace
  fullName: Mewdeko.Modules.Xp.Xp.NotifyPlace
  spec.csharp:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.NotifyPlace
    name: NotifyPlace
    href: Mewdeko.Modules.Xp.Xp.NotifyPlace.html
  spec.vb:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.NotifyPlace
    name: NotifyPlace
    href: Mewdeko.Modules.Xp.Xp.NotifyPlace.html
- uid: Mewdeko.Database.Models.XpNotificationLocation
  commentId: T:Mewdeko.Database.Models.XpNotificationLocation
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.XpNotificationLocation.html
  name: XpNotificationLocation
  nameWithType: XpNotificationLocation
  fullName: Mewdeko.Database.Models.XpNotificationLocation
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Xp.Xp.XpExclude*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpExclude
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpExclude_Mewdeko_Modules_Xp_Xp_Server_
  name: XpExclude
  nameWithType: Xp.XpExclude
  fullName: Mewdeko.Modules.Xp.Xp.XpExclude
- uid: Mewdeko.Modules.Xp.Xp.Server
  commentId: T:Mewdeko.Modules.Xp.Xp.Server
  parent: Mewdeko.Modules.Xp
  href: Mewdeko.Modules.Xp.Xp.html
  name: Xp.Server
  nameWithType: Xp.Server
  fullName: Mewdeko.Modules.Xp.Xp.Server
  spec.csharp:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Server
    name: Server
    href: Mewdeko.Modules.Xp.Xp.Server.html
  spec.vb:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Server
    name: Server
    href: Mewdeko.Modules.Xp.Xp.Server.html
- uid: Mewdeko.Modules.Xp.Xp.Role
  commentId: T:Mewdeko.Modules.Xp.Xp.Role
  parent: Mewdeko.Modules.Xp
  href: Mewdeko.Modules.Xp.Xp.html
  name: Xp.Role
  nameWithType: Xp.Role
  fullName: Mewdeko.Modules.Xp.Xp.Role
  spec.csharp:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Role
    name: Role
    href: Mewdeko.Modules.Xp.Xp.Role.html
  spec.vb:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Role
    name: Role
    href: Mewdeko.Modules.Xp.Xp.Role.html
- uid: Mewdeko.Modules.Xp.Xp.Channel
  commentId: T:Mewdeko.Modules.Xp.Xp.Channel
  parent: Mewdeko.Modules.Xp
  href: Mewdeko.Modules.Xp.Xp.html
  name: Xp.Channel
  nameWithType: Xp.Channel
  fullName: Mewdeko.Modules.Xp.Xp.Channel
  spec.csharp:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Channel
    name: Channel
    href: Mewdeko.Modules.Xp.Xp.Channel.html
  spec.vb:
  - uid: Mewdeko.Modules.Xp.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Xp.Channel
    name: Channel
    href: Mewdeko.Modules.Xp.Xp.Channel.html
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  isExternal: true
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
- uid: Mewdeko.Modules.Xp.Xp.XpExclusionList*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpExclusionList
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpExclusionList
  name: XpExclusionList
  nameWithType: Xp.XpExclusionList
  fullName: Mewdeko.Modules.Xp.Xp.XpExclusionList
- uid: Mewdeko.Modules.Xp.Xp.XpLeaderboard*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpLeaderboard
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpLeaderboard_System_String___
  name: XpLeaderboard
  nameWithType: Xp.XpLeaderboard
  fullName: Mewdeko.Modules.Xp.Xp.XpLeaderboard
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Mewdeko.Modules.Xp.Xp.XpAdd*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.XpAdd
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_XpAdd_System_Int32_System_UInt64_
  name: XpAdd
  nameWithType: Xp.XpAdd
  fullName: Mewdeko.Modules.Xp.Xp.XpAdd
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Modules.Xp.Xp.TemplateConfig*
  commentId: Overload:Mewdeko.Modules.Xp.Xp.TemplateConfig
  href: Mewdeko.Modules.Xp.Xp.html#Mewdeko_Modules_Xp_Xp_TemplateConfig_System_String_System_String_System_String_
  name: TemplateConfig
  nameWithType: Xp.TemplateConfig
  fullName: Mewdeko.Modules.Xp.Xp.TemplateConfig
