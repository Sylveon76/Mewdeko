### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.Configs.BotConfig
  commentId: T:Mewdeko.Common.Configs.BotConfig
  id: BotConfig
  parent: Mewdeko.Common.Configs
  children:
  - Mewdeko.Common.Configs.BotConfig.#ctor
  - Mewdeko.Common.Configs.BotConfig.Blocked
  - Mewdeko.Common.Configs.BotConfig.ChatGptChannel
  - Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
  - Mewdeko.Common.Configs.BotConfig.ChatGptKey
  - Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
  - Mewdeko.Common.Configs.BotConfig.ChatGptModel
  - Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
  - Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
  - Mewdeko.Common.Configs.BotConfig.CheckForUpdates
  - Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
  - Mewdeko.Common.Configs.BotConfig.Color
  - Mewdeko.Common.Configs.BotConfig.CommandLogChannel
  - Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
  - Mewdeko.Common.Configs.BotConfig.DefaultLocale
  - Mewdeko.Common.Configs.BotConfig.DmHelpText
  - Mewdeko.Common.Configs.BotConfig.ErrorEmote
  - Mewdeko.Common.Configs.BotConfig.ForwardMessages
  - Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
  - Mewdeko.Common.Configs.BotConfig.GroupGreets
  - Mewdeko.Common.Configs.BotConfig.HelpText
  - Mewdeko.Common.Configs.BotConfig.LoadingEmote
  - Mewdeko.Common.Configs.BotConfig.Prefix
  - Mewdeko.Common.Configs.BotConfig.QuarantineNotification
  - Mewdeko.Common.Configs.BotConfig.RedirectUrl
  - Mewdeko.Common.Configs.BotConfig.RotateStatuses
  - Mewdeko.Common.Configs.BotConfig.ShowInviteButton
  - Mewdeko.Common.Configs.BotConfig.SuccessEmote
  - Mewdeko.Common.Configs.BotConfig.SupportServer
  - Mewdeko.Common.Configs.BotConfig.UpdateBranch
  - Mewdeko.Common.Configs.BotConfig.Version
  - Mewdeko.Common.Configs.BotConfig.YoutubeSupport
  langs:
  - csharp
  - vb
  name: BotConfig
  nameWithType: BotConfig
  fullName: Mewdeko.Common.Configs.BotConfig
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BotConfig
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 11
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Yml configuration for the bot.
  example: []
  syntax:
    content: public sealed class BotConfig
    content.vb: Public NotInheritable Class BotConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Common.Configs.BotConfig.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Common.Configs.BotConfig.#ctor
  commentId: M:Mewdeko.Common.Configs.BotConfig.#ctor
  id: '#ctor'
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: BotConfig()
  nameWithType: BotConfig.BotConfig()
  fullName: Mewdeko.Common.Configs.BotConfig.BotConfig()
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 16
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Creates a new instance of <xref href="Mewdeko.Common.Configs.BotConfig" data-throw-if-not-resolved="false"></xref>. Sets default values.
  example: []
  syntax:
    content: public BotConfig()
    content.vb: Public Sub New()
  overload: Mewdeko.Common.Configs.BotConfig.#ctor*
  nameWithType.vb: BotConfig.New()
  fullName.vb: Mewdeko.Common.Configs.BotConfig.New()
  name.vb: New()
- uid: Mewdeko.Common.Configs.BotConfig.Version
  commentId: P:Mewdeko.Common.Configs.BotConfig.Version
  id: Version
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: BotConfig.Version
  fullName: Mewdeko.Common.Configs.BotConfig.Version
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Version
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 49
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the version of the bot configuration.
  example: []
  syntax:
    content: >-
      [Comment("DO NOT CHANGE")]

      public int Version { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Comment("DO NOT CHANGE")>

      Public Property Version As Integer
  overload: Mewdeko.Common.Configs.BotConfig.Version*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DO NOT CHANGE
- uid: Mewdeko.Common.Configs.BotConfig.Color
  commentId: P:Mewdeko.Common.Configs.BotConfig.Color
  id: Color
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: BotConfig.Color
  fullName: Mewdeko.Common.Configs.BotConfig.Color
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Color
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 55
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the color configuration for the bot. Used for embeds. See <xref href="Mewdeko.Common.Configs.ColorConfig" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Comment("Most commands, when executed, have a small colored line\r\nnext to the response. The color depends whether the command\r\nis completed, errored or in progress (pending)\r\nColor settings below are for the color of those lines.\r\nTo get color's hex, you can go here https://htmlcolorcodes.com/\r\nand copy the hex code fo your selected color (marked as #)")]

      public ColorConfig Color { get; set; }
    parameters: []
    return:
      type: Mewdeko.Common.Configs.ColorConfig
    content.vb: >-
      <Comment("Most commands, when executed, have a small colored line" & vbCrLf & "next to the response. The color depends whether the command" & vbCrLf & "is completed, errored or in progress (pending)" & vbCrLf & "Color settings below are for the color of those lines." & vbCrLf & "To get color's hex, you can go here https://htmlcolorcodes.com/" & vbCrLf & "and copy the hex code fo your selected color (marked as #)")>

      Public Property Color As ColorConfig
  overload: Mewdeko.Common.Configs.BotConfig.Color*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        Most commands, when executed, have a small colored line

        next to the response. The color depends whether the command

        is completed, errored or in progress (pending)

        Color settings below are for the color of those lines.

        To get color's hex, you can go here https://htmlcolorcodes.com/

        and copy the hex code fo your selected color (marked as #)
- uid: Mewdeko.Common.Configs.BotConfig.DefaultLocale
  commentId: P:Mewdeko.Common.Configs.BotConfig.DefaultLocale
  id: DefaultLocale
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: DefaultLocale
  nameWithType: BotConfig.DefaultLocale
  fullName: Mewdeko.Common.Configs.BotConfig.DefaultLocale
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DefaultLocale
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 66
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the default locale for the bot.
  example: []
  syntax:
    content: >-
      [Comment("Default bot language. It has to be in the list of supported languages (.langli)")]

      public CultureInfo? DefaultLocale { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: >-
      <Comment("Default bot language. It has to be in the list of supported languages (.langli)")>

      Public Property DefaultLocale As CultureInfo
  overload: Mewdeko.Common.Configs.BotConfig.DefaultLocale*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Default bot language. It has to be in the list of supported languages (.langli)
- uid: Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
  commentId: P:Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
  id: ConsoleOutputType
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ConsoleOutputType
  nameWithType: BotConfig.ConsoleOutputType
  fullName: Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConsoleOutputType
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the style in which executed commands will show up in the console.
  example: []
  syntax:
    content: >-
      [Comment("Style in which executed commands will show up in the console.\r\nAllowed values: Simple, Normal, None")]

      public ConsoleOutputType ConsoleOutputType { get; set; }
    parameters: []
    return:
      type: Mewdeko.Common.Configs.ConsoleOutputType
    content.vb: >-
      <Comment("Style in which executed commands will show up in the console." & vbCrLf & "Allowed values: Simple, Normal, None")>

      Public Property ConsoleOutputType As ConsoleOutputType
  overload: Mewdeko.Common.Configs.BotConfig.ConsoleOutputType*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        Style in which executed commands will show up in the console.

        Allowed values: Simple, Normal, None
- uid: Mewdeko.Common.Configs.BotConfig.CheckForUpdates
  commentId: P:Mewdeko.Common.Configs.BotConfig.CheckForUpdates
  id: CheckForUpdates
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: CheckForUpdates
  nameWithType: BotConfig.CheckForUpdates
  fullName: Mewdeko.Common.Configs.BotConfig.CheckForUpdates
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckForUpdates
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 79
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the type of updates the bot will check for.
  example: []
  syntax:
    content: >-
      [Comment("For what kind of updates will the bot check.\r\n    Allowed values: Release, Commit, None")]

      public UpdateCheckType CheckForUpdates { get; set; }
    parameters: []
    return:
      type: Mewdeko.Common.Configs.UpdateCheckType
    content.vb: >-
      <Comment("For what kind of updates will the bot check." & vbCrLf & "    Allowed values: Release, Commit, None")>

      Public Property CheckForUpdates As UpdateCheckType
  overload: Mewdeko.Common.Configs.BotConfig.CheckForUpdates*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        For what kind of updates will the bot check.
            Allowed values: Release, Commit, None
- uid: Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
  commentId: P:Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
  id: CheckUpdateInterval
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: CheckUpdateInterval
  nameWithType: BotConfig.CheckUpdateInterval
  fullName: Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckUpdateInterval
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 86
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the interval at which the bot will check for updates, in hours.
  example: []
  syntax:
    content: >-
      [Comment("How often will the bot check for updates, in hours")]

      public int CheckUpdateInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Comment("How often will the bot check for updates, in hours")>

      Public Property CheckUpdateInterval As Integer
  overload: Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How often will the bot check for updates, in hours
- uid: Mewdeko.Common.Configs.BotConfig.UpdateBranch
  commentId: P:Mewdeko.Common.Configs.BotConfig.UpdateBranch
  id: UpdateBranch
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: UpdateBranch
  nameWithType: BotConfig.UpdateBranch
  fullName: Mewdeko.Common.Configs.BotConfig.UpdateBranch
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateBranch
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 92
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the branch to check for updates. Default is "main".
  example: []
  syntax:
    content: >-
      [Comment("Set which branch to check for updates")]

      public string UpdateBranch { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Set which branch to check for updates")>

      Public Property UpdateBranch As String
  overload: Mewdeko.Common.Configs.BotConfig.UpdateBranch*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Set which branch to check for updates
- uid: Mewdeko.Common.Configs.BotConfig.ForwardMessages
  commentId: P:Mewdeko.Common.Configs.BotConfig.ForwardMessages
  id: ForwardMessages
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ForwardMessages
  nameWithType: BotConfig.ForwardMessages
  fullName: Mewdeko.Common.Configs.BotConfig.ForwardMessages
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ForwardMessages
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 98
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether messages sent by users in the bot's DM will be forwarded to the owner(s).
  example: []
  syntax:
    content: >-
      [Comment("Do you want any messages sent by users in Bot's DM to be forwarded to the owner(s)?")]

      public bool ForwardMessages { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Do you want any messages sent by users in Bot's DM to be forwarded to the owner(s)?")>

      Public Property ForwardMessages As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.ForwardMessages*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Do you want any messages sent by users in Bot's DM to be forwarded to the owner(s)?
- uid: Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
  commentId: P:Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
  id: ForwardToAllOwners
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ForwardToAllOwners
  nameWithType: BotConfig.ForwardToAllOwners
  fullName: Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ForwardToAllOwners
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 104
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether messages sent by users in the bot's DM will be forwarded to all owners.
  example: []
  syntax:
    content: >-
      [Comment("Do you want the message to be forwarded only to the first owner specified in the list of owners (in creds.yml),\r\nor all owners? (this might cause the bot to lag if there's a lot of owners specified)")]

      public bool ForwardToAllOwners { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Do you want the message to be forwarded only to the first owner specified in the list of owners (in creds.yml)," & vbCrLf & "or all owners? (this might cause the bot to lag if there's a lot of owners specified)")>

      Public Property ForwardToAllOwners As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        Do you want the message to be forwarded only to the first owner specified in the list of owners (in creds.yml),

        or all owners? (this might cause the bot to lag if there's a lot of owners specified)
- uid: Mewdeko.Common.Configs.BotConfig.DmHelpText
  commentId: P:Mewdeko.Common.Configs.BotConfig.DmHelpText
  id: DmHelpText
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: DmHelpText
  nameWithType: BotConfig.DmHelpText
  fullName: Mewdeko.Common.Configs.BotConfig.DmHelpText
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DmHelpText
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 112
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the message to send to users who DM the bot with a message that is not a command.
  example: []
  syntax:
    content: >-
      [Comment("When a user DMs the bot with a message which is not a command\r\nthey will receive this message. Leave empty for no response. The string which will be sent whenever someone DMs the bot.\r\nSupports embeds. How it looks: https://puu.sh/B0BLV.png")]

      [YamlMember(ScalarStyle = ScalarStyle.Literal)]

      public string? DmHelpText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("When a user DMs the bot with a message which is not a command" & vbCrLf & "they will receive this message. Leave empty for no response. The string which will be sent whenever someone DMs the bot." & vbCrLf & "Supports embeds. How it looks: https://puu.sh/B0BLV.png")>

      <YamlMember(ScalarStyle:=ScalarStyle.Literal)>

      Public Property DmHelpText As String
  overload: Mewdeko.Common.Configs.BotConfig.DmHelpText*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        When a user DMs the bot with a message which is not a command

        they will receive this message. Leave empty for no response. The string which will be sent whenever someone DMs the bot.

        Supports embeds. How it looks: https://puu.sh/B0BLV.png
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ScalarStyle
      type: YamlDotNet.Core.ScalarStyle
      value: 4
- uid: Mewdeko.Common.Configs.BotConfig.HelpText
  commentId: P:Mewdeko.Common.Configs.BotConfig.HelpText
  id: HelpText
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: HelpText
  nameWithType: BotConfig.HelpText
  fullName: Mewdeko.Common.Configs.BotConfig.HelpText
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: HelpText
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 120
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the help text for the .h command. Uses embed code.
  example: []
  syntax:
    content: >-
      [Comment("This is the response for the .h command")]

      [YamlMember(ScalarStyle = ScalarStyle.Literal)]

      public string HelpText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("This is the response for the .h command")>

      <YamlMember(ScalarStyle:=ScalarStyle.Literal)>

      Public Property HelpText As String
  overload: Mewdeko.Common.Configs.BotConfig.HelpText*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This is the response for the .h command
  - type: YamlDotNet.Serialization.YamlMemberAttribute
    ctor: YamlDotNet.Serialization.YamlMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ScalarStyle
      type: YamlDotNet.Core.ScalarStyle
      value: 4
- uid: Mewdeko.Common.Configs.BotConfig.Blocked
  commentId: P:Mewdeko.Common.Configs.BotConfig.Blocked
  id: Blocked
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: Blocked
  nameWithType: BotConfig.Blocked
  fullName: Mewdeko.Common.Configs.BotConfig.Blocked
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Blocked
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 126
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the list of modules and commands that are completely blocked on the bot. See <xref href="Mewdeko.Common.Configs.BlockedConfig" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Comment("List of modules and commands completely blocked on the bot")]

      public BlockedConfig? Blocked { get; set; }
    parameters: []
    return:
      type: Mewdeko.Common.Configs.BlockedConfig
    content.vb: >-
      <Comment("List of modules and commands completely blocked on the bot")>

      Public Property Blocked As BlockedConfig
  overload: Mewdeko.Common.Configs.BotConfig.Blocked*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: List of modules and commands completely blocked on the bot
- uid: Mewdeko.Common.Configs.BotConfig.Prefix
  commentId: P:Mewdeko.Common.Configs.BotConfig.Prefix
  id: Prefix
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: BotConfig.Prefix
  fullName: Mewdeko.Common.Configs.BotConfig.Prefix
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Prefix
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the default prefix for the bot.
  example: []
  syntax:
    content: >-
      [Comment("Which string will be used to recognize the commands")]

      public string Prefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Which string will be used to recognize the commands")>

      Public Property Prefix As String
  overload: Mewdeko.Common.Configs.BotConfig.Prefix*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Which string will be used to recognize the commands
- uid: Mewdeko.Common.Configs.BotConfig.GroupGreets
  commentId: P:Mewdeko.Common.Configs.BotConfig.GroupGreets
  id: GroupGreets
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: GroupGreets
  nameWithType: BotConfig.GroupGreets
  fullName: Mewdeko.Common.Configs.BotConfig.GroupGreets
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GroupGreets
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 138
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether the bot will group greet/bye messages into a single message every 5 seconds.
  example: []
  syntax:
    content: >-
      [Comment("Toggles whether your bot will group greet/bye messages into a single message every 5 seconds.\r\n1st user who joins will get greeted immediately\r\nIf more users join within the next 5 seconds, they will be greeted in groups of 5.\r\nThis will cause %user.mention% and other placeholders to be replaced with multiple users.\r\nKeep in mind this might break some of your embeds - for example if you have %user.avatar% in the thumbnail,\r\nit will become invalid, as it will resolve to a list of avatars of grouped users.\r\nnote: This setting is primarily used if you're afraid of raids, or you're running medium/large bots where some\r\n      servers might get hundreds of people join at once. This is used to prevent the bot from getting ratelimited,\r\n      and (slightly) reduce the greet spam in those servers.")]

      public bool GroupGreets { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Toggles whether your bot will group greet/bye messages into a single message every 5 seconds." & vbCrLf & "1st user who joins will get greeted immediately" & vbCrLf & "If more users join within the next 5 seconds, they will be greeted in groups of 5." & vbCrLf & "This will cause %user.mention% and other placeholders to be replaced with multiple users." & vbCrLf & "Keep in mind this might break some of your embeds - for example if you have %user.avatar% in the thumbnail," & vbCrLf & "it will become invalid, as it will resolve to a list of avatars of grouped users." & vbCrLf & "note: This setting is primarily used if you're afraid of raids, or you're running medium/large bots where some" & vbCrLf & "      servers might get hundreds of people join at once. This is used to prevent the bot from getting ratelimited," & vbCrLf & "      and (slightly) reduce the greet spam in those servers.")>

      Public Property GroupGreets As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.GroupGreets*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        Toggles whether your bot will group greet/bye messages into a single message every 5 seconds.

        1st user who joins will get greeted immediately

        If more users join within the next 5 seconds, they will be greeted in groups of 5.

        This will cause %user.mention% and other placeholders to be replaced with multiple users.

        Keep in mind this might break some of your embeds - for example if you have %user.avatar% in the thumbnail,

        it will become invalid, as it will resolve to a list of avatars of grouped users.

        note: This setting is primarily used if you're afraid of raids, or you're running medium/large bots where some
              servers might get hundreds of people join at once. This is used to prevent the bot from getting ratelimited,
              and (slightly) reduce the greet spam in those servers.
- uid: Mewdeko.Common.Configs.BotConfig.RotateStatuses
  commentId: P:Mewdeko.Common.Configs.BotConfig.RotateStatuses
  id: RotateStatuses
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: RotateStatuses
  nameWithType: BotConfig.RotateStatuses
  fullName: Mewdeko.Common.Configs.BotConfig.RotateStatuses
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RotateStatuses
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 152
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether the bot will rotate through all specified statuses.
  example: []
  syntax:
    content: >-
      [Comment("Whether the bot will rotate through all specified statuses.\r\nThis setting can be changed via .rots command.\r\nSee RotatingStatuses submodule in Administration.")]

      public bool RotateStatuses { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Whether the bot will rotate through all specified statuses." & vbCrLf & "This setting can be changed via .rots command." & vbCrLf & "See RotatingStatuses submodule in Administration.")>

      Public Property RotateStatuses As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.RotateStatuses*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: >-
        Whether the bot will rotate through all specified statuses.

        This setting can be changed via .rots command.

        See RotatingStatuses submodule in Administration.
- uid: Mewdeko.Common.Configs.BotConfig.CommandLogChannel
  commentId: P:Mewdeko.Common.Configs.BotConfig.CommandLogChannel
  id: CommandLogChannel
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: CommandLogChannel
  nameWithType: BotConfig.CommandLogChannel
  fullName: Mewdeko.Common.Configs.BotConfig.CommandLogChannel
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CommandLogChannel
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 160
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the channel ID for the gloal command log channel.
  example: []
  syntax:
    content: >-
      [Comment("Used for global command logs")]

      public ulong CommandLogChannel { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <Comment("Used for global command logs")>

      Public Property CommandLogChannel As ULong
  overload: Mewdeko.Common.Configs.BotConfig.CommandLogChannel*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used for global command logs
- uid: Mewdeko.Common.Configs.BotConfig.YoutubeSupport
  commentId: P:Mewdeko.Common.Configs.BotConfig.YoutubeSupport
  id: YoutubeSupport
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: YoutubeSupport
  nameWithType: BotConfig.YoutubeSupport
  fullName: Mewdeko.Common.Configs.BotConfig.YoutubeSupport
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: YoutubeSupport
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 166
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether the bot will support youtube links. (Or hides that it supports them lol)
  example: []
  syntax:
    content: >-
      [Comment("Enable or disable youtube support")]

      public bool YoutubeSupport { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Enable or disable youtube support")>

      Public Property YoutubeSupport As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.YoutubeSupport*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Enable or disable youtube support
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptKey
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptKey
  id: ChatGptKey
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptKey
  nameWithType: BotConfig.ChatGptKey
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptKey
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 172
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the ChatGPT API key.
  example: []
  syntax:
    content: >-
      [Comment("ChatGPT API Key")]

      public string ChatGptKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("ChatGPT API Key")>

      Public Property ChatGptKey As String
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptKey*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ChatGPT API Key
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptChannel
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptChannel
  id: ChatGptChannel
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptChannel
  nameWithType: BotConfig.ChatGptChannel
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptChannel
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptChannel
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 178
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the ChatGPT Channel ID.
  example: []
  syntax:
    content: >-
      [Comment("ChatGPT Channel ID")]

      public ulong ChatGptChannel { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: >-
      <Comment("ChatGPT Channel ID")>

      Public Property ChatGptChannel As ULong
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptChannel*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ChatGPT Channel ID
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
  id: ChatGptInitPrompt
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptInitPrompt
  nameWithType: BotConfig.ChatGptInitPrompt
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptInitPrompt
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 184
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the ChatGPT Initial prompt when starting a conversation with ChatGPT.
  example: []
  syntax:
    content: >-
      [Comment("ChatGPT Init Prompt. Used to set how chatgpt will act.")]

      public string ChatGptInitPrompt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("ChatGPT Init Prompt. Used to set how chatgpt will act.")>

      Public Property ChatGptInitPrompt As String
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ChatGPT Init Prompt. Used to set how chatgpt will act.
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
  id: ChatGptMaxTokens
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptMaxTokens
  nameWithType: BotConfig.ChatGptMaxTokens
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptMaxTokens
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 190
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the maximum number of tokens that ChatGPT can output.
  example: []
  syntax:
    content: >-
      [Comment("Max tokens that chatgpt can output")]

      public int ChatGptMaxTokens { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Comment("Max tokens that chatgpt can output")>

      Public Property ChatGptMaxTokens As Integer
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Max tokens that chatgpt can output
- uid: Mewdeko.Common.Configs.BotConfig.ShowInviteButton
  commentId: P:Mewdeko.Common.Configs.BotConfig.ShowInviteButton
  id: ShowInviteButton
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ShowInviteButton
  nameWithType: BotConfig.ShowInviteButton
  fullName: Mewdeko.Common.Configs.BotConfig.ShowInviteButton
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShowInviteButton
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 196
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether the invite and donation button will be shown on some commands.
  example: []
  syntax:
    content: >-
      [Comment("Used to enable or disable showing the invite button on some commands")]

      public bool ShowInviteButton { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Used to enable or disable showing the invite button on some commands")>

      Public Property ShowInviteButton As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.ShowInviteButton*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to enable or disable showing the invite button on some commands
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
  id: ChatGptWebhook
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptWebhook
  nameWithType: BotConfig.ChatGptWebhook
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptWebhook
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 202
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the webhook for ChatGPT.
  example: []
  syntax:
    content: >-
      [Comment("ChatGPT Webhook, used if you want to change the appearance of chatgpt messages.")]

      public string ChatGptWebhook { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("ChatGPT Webhook, used if you want to change the appearance of chatgpt messages.")>

      Public Property ChatGptWebhook As String
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptWebhook*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ChatGPT Webhook, used if you want to change the appearance of chatgpt messages.
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
  id: ChatGptTemperature
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptTemperature
  nameWithType: BotConfig.ChatGptTemperature
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptTemperature
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 208
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the temperature for ChatGPT.
  example: []
  syntax:
    content: >-
      [Comment("Sets the temperature for ChatGPT")]

      public double ChatGptTemperature { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <Comment("Sets the temperature for ChatGPT")>

      Public Property ChatGptTemperature As Double
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptTemperature*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sets the temperature for ChatGPT
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptModel
  commentId: P:Mewdeko.Common.Configs.BotConfig.ChatGptModel
  id: ChatGptModel
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ChatGptModel
  nameWithType: BotConfig.ChatGptModel
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptModel
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatGptModel
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 214
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the model to use for ChatGPT.
  example: []
  syntax:
    content: >-
      [Comment("The model to use for chatgpt")]

      public string ChatGptModel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("The model to use for chatgpt")>

      Public Property ChatGptModel As String
  overload: Mewdeko.Common.Configs.BotConfig.ChatGptModel*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The model to use for chatgpt
- uid: Mewdeko.Common.Configs.BotConfig.RedirectUrl
  commentId: P:Mewdeko.Common.Configs.BotConfig.RedirectUrl
  id: RedirectUrl
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: RedirectUrl
  nameWithType: BotConfig.RedirectUrl
  fullName: Mewdeko.Common.Configs.BotConfig.RedirectUrl
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RedirectUrl
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 220
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the redirect url for the auth command.
  example: []
  syntax:
    content: >-
      [Comment("The authorization redirect url for the auth command. This MUST be added to your valid redirect urls in the discord developer portal.")]

      public string RedirectUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("The authorization redirect url for the auth command. This MUST be added to your valid redirect urls in the discord developer portal.")>

      Public Property RedirectUrl As String
  overload: Mewdeko.Common.Configs.BotConfig.RedirectUrl*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The authorization redirect url for the auth command. This MUST be added to your valid redirect urls in the discord developer portal.
- uid: Mewdeko.Common.Configs.BotConfig.ErrorEmote
  commentId: P:Mewdeko.Common.Configs.BotConfig.ErrorEmote
  id: ErrorEmote
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: ErrorEmote
  nameWithType: BotConfig.ErrorEmote
  fullName: Mewdeko.Common.Configs.BotConfig.ErrorEmote
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ErrorEmote
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 227
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the error emote used across the bot.
  example: []
  syntax:
    content: >-
      [Comment("Used to set the error emote used across the bot.")]

      public string ErrorEmote { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Used to set the error emote used across the bot.")>

      Public Property ErrorEmote As String
  overload: Mewdeko.Common.Configs.BotConfig.ErrorEmote*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to set the error emote used across the bot.
- uid: Mewdeko.Common.Configs.BotConfig.SuccessEmote
  commentId: P:Mewdeko.Common.Configs.BotConfig.SuccessEmote
  id: SuccessEmote
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: SuccessEmote
  nameWithType: BotConfig.SuccessEmote
  fullName: Mewdeko.Common.Configs.BotConfig.SuccessEmote
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuccessEmote
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 233
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the success emote used across the bot.
  example: []
  syntax:
    content: >-
      [Comment("Used to set the success emote used across the bot.")]

      public string SuccessEmote { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Used to set the success emote used across the bot.")>

      Public Property SuccessEmote As String
  overload: Mewdeko.Common.Configs.BotConfig.SuccessEmote*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to set the success emote used across the bot.
- uid: Mewdeko.Common.Configs.BotConfig.LoadingEmote
  commentId: P:Mewdeko.Common.Configs.BotConfig.LoadingEmote
  id: LoadingEmote
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: LoadingEmote
  nameWithType: BotConfig.LoadingEmote
  fullName: Mewdeko.Common.Configs.BotConfig.LoadingEmote
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LoadingEmote
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 239
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the loading emote used across the bot.
  example: []
  syntax:
    content: >-
      [Comment("Used to set the loading emote for the bot.")]

      public string LoadingEmote { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Used to set the loading emote for the bot.")>

      Public Property LoadingEmote As String
  overload: Mewdeko.Common.Configs.BotConfig.LoadingEmote*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to set the loading emote for the bot.
- uid: Mewdeko.Common.Configs.BotConfig.SupportServer
  commentId: P:Mewdeko.Common.Configs.BotConfig.SupportServer
  id: SupportServer
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: SupportServer
  nameWithType: BotConfig.SupportServer
  fullName: Mewdeko.Common.Configs.BotConfig.SupportServer
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SupportServer
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 245
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets the support server invite on Mewdeko.
  example: []
  syntax:
    content: >-
      [Comment("Used to set the support server invite on Mewdeko")]

      public string SupportServer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Comment("Used to set the support server invite on Mewdeko")>

      Public Property SupportServer As String
  overload: Mewdeko.Common.Configs.BotConfig.SupportServer*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Used to set the support server invite on Mewdeko
- uid: Mewdeko.Common.Configs.BotConfig.QuarantineNotification
  commentId: P:Mewdeko.Common.Configs.BotConfig.QuarantineNotification
  id: QuarantineNotification
  parent: Mewdeko.Common.Configs.BotConfig
  langs:
  - csharp
  - vb
  name: QuarantineNotification
  nameWithType: BotConfig.QuarantineNotification
  fullName: Mewdeko.Common.Configs.BotConfig.QuarantineNotification
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/Configs/BotConfig.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: QuarantineNotification
    path: src/Mewdeko/Common/Configs/BotConfig.cs
    startLine: 251
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Configs
  summary: Gets or sets whether the bot will notify the owner when the bot gets quarantined.
  example: []
  syntax:
    content: >-
      [Comment("Notify the owner of the bot when the bot gets quarantined. Only dms first owner if ForwardMessages is enabled.")]

      public bool QuarantineNotification { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Comment("Notify the owner of the bot when the bot gets quarantined. Only dms first owner if ForwardMessages is enabled.")>

      Public Property QuarantineNotification As Boolean
  overload: Mewdeko.Common.Configs.BotConfig.QuarantineNotification*
  attributes:
  - type: Mewdeko.Common.Yml.CommentAttribute
    ctor: Mewdeko.Common.Yml.CommentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Notify the owner of the bot when the bot gets quarantined. Only dms first owner if ForwardMessages is enabled.
references:
- uid: Mewdeko.Common.Configs
  commentId: N:Mewdeko.Common.Configs
  href: Mewdeko.html
  name: Mewdeko.Common.Configs
  nameWithType: Mewdeko.Common.Configs
  fullName: Mewdeko.Common.Configs
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Configs
    name: Configs
    href: Mewdeko.Common.Configs.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Configs
    name: Configs
    href: Mewdeko.Common.Configs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.Configs.BotConfig.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<BotConfig>(BotConfig, string)
  nameWithType: Extensions.ThrowIfNull<BotConfig>(BotConfig, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.Configs.BotConfig>(Mewdeko.Common.Configs.BotConfig, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of BotConfig)(BotConfig, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.Configs.BotConfig)(Mewdeko.Common.Configs.BotConfig, String)
  name.vb: ThrowIfNull(Of BotConfig)(BotConfig, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.Configs.BotConfig,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.Configs.BotConfig
    name: BotConfig
    href: Mewdeko.Common.Configs.BotConfig.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.Configs.BotConfig
    name: BotConfig
    href: Mewdeko.Common.Configs.BotConfig.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.Configs.BotConfig,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.Configs.BotConfig
    name: BotConfig
    href: Mewdeko.Common.Configs.BotConfig.html
  - name: )
  - name: (
  - uid: Mewdeko.Common.Configs.BotConfig
    name: BotConfig
    href: Mewdeko.Common.Configs.BotConfig.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.Configs.BotConfig
  commentId: T:Mewdeko.Common.Configs.BotConfig
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.BotConfig.html
  name: BotConfig
  nameWithType: BotConfig
  fullName: Mewdeko.Common.Configs.BotConfig
- uid: Mewdeko.Common.Configs.BotConfig.#ctor*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.#ctor
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig__ctor
  name: BotConfig
  nameWithType: BotConfig.BotConfig
  fullName: Mewdeko.Common.Configs.BotConfig.BotConfig
  nameWithType.vb: BotConfig.New
  fullName.vb: Mewdeko.Common.Configs.BotConfig.New
  name.vb: New
- uid: Mewdeko.Common.Configs.BotConfig.Version*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.Version
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_Version
  name: Version
  nameWithType: BotConfig.Version
  fullName: Mewdeko.Common.Configs.BotConfig.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Common.Configs.ColorConfig
  commentId: T:Mewdeko.Common.Configs.ColorConfig
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.ColorConfig.html
  name: ColorConfig
  nameWithType: ColorConfig
  fullName: Mewdeko.Common.Configs.ColorConfig
- uid: Mewdeko.Common.Configs.BotConfig.Color*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.Color
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_Color
  name: Color
  nameWithType: BotConfig.Color
  fullName: Mewdeko.Common.Configs.BotConfig.Color
- uid: Mewdeko.Common.Configs.BotConfig.DefaultLocale*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.DefaultLocale
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_DefaultLocale
  name: DefaultLocale
  nameWithType: BotConfig.DefaultLocale
  fullName: Mewdeko.Common.Configs.BotConfig.DefaultLocale
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Mewdeko.Common.Configs.BotConfig.ConsoleOutputType*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ConsoleOutputType
  name: ConsoleOutputType
  nameWithType: BotConfig.ConsoleOutputType
  fullName: Mewdeko.Common.Configs.BotConfig.ConsoleOutputType
- uid: Mewdeko.Common.Configs.ConsoleOutputType
  commentId: T:Mewdeko.Common.Configs.ConsoleOutputType
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.ConsoleOutputType.html
  name: ConsoleOutputType
  nameWithType: ConsoleOutputType
  fullName: Mewdeko.Common.Configs.ConsoleOutputType
- uid: Mewdeko.Common.Configs.BotConfig.CheckForUpdates*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.CheckForUpdates
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_CheckForUpdates
  name: CheckForUpdates
  nameWithType: BotConfig.CheckForUpdates
  fullName: Mewdeko.Common.Configs.BotConfig.CheckForUpdates
- uid: Mewdeko.Common.Configs.UpdateCheckType
  commentId: T:Mewdeko.Common.Configs.UpdateCheckType
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.UpdateCheckType.html
  name: UpdateCheckType
  nameWithType: UpdateCheckType
  fullName: Mewdeko.Common.Configs.UpdateCheckType
- uid: Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_CheckUpdateInterval
  name: CheckUpdateInterval
  nameWithType: BotConfig.CheckUpdateInterval
  fullName: Mewdeko.Common.Configs.BotConfig.CheckUpdateInterval
- uid: Mewdeko.Common.Configs.BotConfig.UpdateBranch*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.UpdateBranch
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_UpdateBranch
  name: UpdateBranch
  nameWithType: BotConfig.UpdateBranch
  fullName: Mewdeko.Common.Configs.BotConfig.UpdateBranch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Common.Configs.BotConfig.ForwardMessages*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ForwardMessages
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ForwardMessages
  name: ForwardMessages
  nameWithType: BotConfig.ForwardMessages
  fullName: Mewdeko.Common.Configs.BotConfig.ForwardMessages
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ForwardToAllOwners
  name: ForwardToAllOwners
  nameWithType: BotConfig.ForwardToAllOwners
  fullName: Mewdeko.Common.Configs.BotConfig.ForwardToAllOwners
- uid: Mewdeko.Common.Configs.BotConfig.DmHelpText*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.DmHelpText
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_DmHelpText
  name: DmHelpText
  nameWithType: BotConfig.DmHelpText
  fullName: Mewdeko.Common.Configs.BotConfig.DmHelpText
- uid: Mewdeko.Common.Configs.BotConfig.HelpText*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.HelpText
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_HelpText
  name: HelpText
  nameWithType: BotConfig.HelpText
  fullName: Mewdeko.Common.Configs.BotConfig.HelpText
- uid: Mewdeko.Common.Configs.BlockedConfig
  commentId: T:Mewdeko.Common.Configs.BlockedConfig
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.BlockedConfig.html
  name: BlockedConfig
  nameWithType: BlockedConfig
  fullName: Mewdeko.Common.Configs.BlockedConfig
- uid: Mewdeko.Common.Configs.BotConfig.Blocked*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.Blocked
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_Blocked
  name: Blocked
  nameWithType: BotConfig.Blocked
  fullName: Mewdeko.Common.Configs.BotConfig.Blocked
- uid: Mewdeko.Common.Configs.BotConfig.Prefix*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.Prefix
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_Prefix
  name: Prefix
  nameWithType: BotConfig.Prefix
  fullName: Mewdeko.Common.Configs.BotConfig.Prefix
- uid: Mewdeko.Common.Configs.BotConfig.GroupGreets*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.GroupGreets
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_GroupGreets
  name: GroupGreets
  nameWithType: BotConfig.GroupGreets
  fullName: Mewdeko.Common.Configs.BotConfig.GroupGreets
- uid: Mewdeko.Common.Configs.BotConfig.RotateStatuses*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.RotateStatuses
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_RotateStatuses
  name: RotateStatuses
  nameWithType: BotConfig.RotateStatuses
  fullName: Mewdeko.Common.Configs.BotConfig.RotateStatuses
- uid: Mewdeko.Common.Configs.BotConfig.CommandLogChannel*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.CommandLogChannel
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_CommandLogChannel
  name: CommandLogChannel
  nameWithType: BotConfig.CommandLogChannel
  fullName: Mewdeko.Common.Configs.BotConfig.CommandLogChannel
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Common.Configs.BotConfig.YoutubeSupport*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.YoutubeSupport
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_YoutubeSupport
  name: YoutubeSupport
  nameWithType: BotConfig.YoutubeSupport
  fullName: Mewdeko.Common.Configs.BotConfig.YoutubeSupport
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptKey*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptKey
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptKey
  name: ChatGptKey
  nameWithType: BotConfig.ChatGptKey
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptKey
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptChannel*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptChannel
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptChannel
  name: ChatGptChannel
  nameWithType: BotConfig.ChatGptChannel
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptChannel
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptInitPrompt
  name: ChatGptInitPrompt
  nameWithType: BotConfig.ChatGptInitPrompt
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptInitPrompt
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptMaxTokens
  name: ChatGptMaxTokens
  nameWithType: BotConfig.ChatGptMaxTokens
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptMaxTokens
- uid: Mewdeko.Common.Configs.BotConfig.ShowInviteButton*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ShowInviteButton
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ShowInviteButton
  name: ShowInviteButton
  nameWithType: BotConfig.ShowInviteButton
  fullName: Mewdeko.Common.Configs.BotConfig.ShowInviteButton
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptWebhook*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptWebhook
  name: ChatGptWebhook
  nameWithType: BotConfig.ChatGptWebhook
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptWebhook
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptTemperature*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptTemperature
  name: ChatGptTemperature
  nameWithType: BotConfig.ChatGptTemperature
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptTemperature
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mewdeko.Common.Configs.BotConfig.ChatGptModel*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ChatGptModel
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ChatGptModel
  name: ChatGptModel
  nameWithType: BotConfig.ChatGptModel
  fullName: Mewdeko.Common.Configs.BotConfig.ChatGptModel
- uid: Mewdeko.Common.Configs.BotConfig.RedirectUrl*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.RedirectUrl
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_RedirectUrl
  name: RedirectUrl
  nameWithType: BotConfig.RedirectUrl
  fullName: Mewdeko.Common.Configs.BotConfig.RedirectUrl
- uid: Mewdeko.Common.Configs.BotConfig.ErrorEmote*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.ErrorEmote
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_ErrorEmote
  name: ErrorEmote
  nameWithType: BotConfig.ErrorEmote
  fullName: Mewdeko.Common.Configs.BotConfig.ErrorEmote
- uid: Mewdeko.Common.Configs.BotConfig.SuccessEmote*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.SuccessEmote
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_SuccessEmote
  name: SuccessEmote
  nameWithType: BotConfig.SuccessEmote
  fullName: Mewdeko.Common.Configs.BotConfig.SuccessEmote
- uid: Mewdeko.Common.Configs.BotConfig.LoadingEmote*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.LoadingEmote
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_LoadingEmote
  name: LoadingEmote
  nameWithType: BotConfig.LoadingEmote
  fullName: Mewdeko.Common.Configs.BotConfig.LoadingEmote
- uid: Mewdeko.Common.Configs.BotConfig.SupportServer*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.SupportServer
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_SupportServer
  name: SupportServer
  nameWithType: BotConfig.SupportServer
  fullName: Mewdeko.Common.Configs.BotConfig.SupportServer
- uid: Mewdeko.Common.Configs.BotConfig.QuarantineNotification*
  commentId: Overload:Mewdeko.Common.Configs.BotConfig.QuarantineNotification
  href: Mewdeko.Common.Configs.BotConfig.html#Mewdeko_Common_Configs_BotConfig_QuarantineNotification
  name: QuarantineNotification
  nameWithType: BotConfig.QuarantineNotification
  fullName: Mewdeko.Common.Configs.BotConfig.QuarantineNotification
