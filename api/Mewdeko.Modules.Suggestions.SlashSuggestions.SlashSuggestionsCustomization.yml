### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  commentId: T:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  id: SlashSuggestions.SlashSuggestionsCustomization
  parent: Mewdeko.Modules.Suggestions
  children:
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(Discord.ITextChannel)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(System.String)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(Discord.ITextChannel)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(System.String)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(Discord.ITextChannel)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(System.String)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(Discord.ITextChannel)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(System.String)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(System.Int32)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(System.Int32)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor(Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(System.String)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(System.Int32,Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode(Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum)
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType(Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType)
  langs:
  - csharp
  - vb
  name: SlashSuggestions.SlashSuggestionsCustomization
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SlashSuggestionsCustomization
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 14
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Manages the customization options for the suggestions system through slash commands.
  remarks: This class provides a set of slash commands designed for guild administrators to customize the suggestions system. It includes commands for setting custom messages for new, accepted, denied, considered, and implemented suggestions, configuring the suggestion length limits, defining the channels for posting suggestions based on their status, adjusting emote modes, and managing threads and archiving settings related to suggestions.
  example: []
  syntax:
    content: >-
      [Group("customize", "Manage suggestions!")]

      public class SlashSuggestions.SlashSuggestionsCustomization : MewdekoSlashSubmodule<SuggestionsService>, IInteractionModuleBase
    content.vb: >-
      <Group("customize", "Manage suggestions!")>

      Public Class SlashSuggestions.SlashSuggestionsCustomization Inherits MewdekoSlashSubmodule(Of SuggestionsService) Implements IInteractionModuleBase
  inheritance:
  - System.Object
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  - Discord.Interactions.InteractionModuleBase
  - Mewdeko.Common.MewdekoSlashCommandModule
  - Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  - Mewdeko.Common.MewdekoSlashSubmodule{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  implements:
  - Discord.Interactions.IInteractionModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}.Service
  - Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  - Mewdeko.Common.MewdekoSlashCommandModule.Strings
  - Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  - Mewdeko.Common.MewdekoSlashCommandModule.Localization
  - Mewdeko.Common.MewdekoSlashCommandModule.Config
  - Mewdeko.Common.MewdekoSlashCommandModule.ctx
  - Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  attributes:
  - type: Discord.Interactions.GroupAttribute
    ctor: Discord.Interactions.GroupAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: customize
    - type: System.String
      value: Manage suggestions!
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(System.String)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(System.String)
  id: SuggestMessage(System.String)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: SuggestMessage(string)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(string)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuggestMessage
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets a custom message template for new suggestions.
  example: []
  syntax:
    content: >-
      [SlashCommand("suggestmessage", "Allows to set a custom embed when suggesting.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task SuggestMessage(string embed)
    parameters:
    - id: embed
      type: System.String
      description: The message template. Use "-" to reset to the default message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("suggestmessage", "Allows to set a custom embed when suggesting.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function SuggestMessage(embed As String) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: suggestmessage
    - type: System.String
      value: Allows to set a custom embed when suggesting.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(String)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage(String)
  name.vb: SuggestMessage(String)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(System.Int32)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(System.Int32)
  id: MinSuggestionLength(System.Int32)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: MinSuggestionLength(int)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(int)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MinSuggestionLength
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 44
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the minimum length for suggestions.
  example: []
  syntax:
    content: >-
      [SlashCommand("suggestminlength", "Set the minimum suggestion length.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task MinSuggestionLength(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The minimum number of characters allowed in a suggestion.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("suggestminlength", "Set the minimum suggestion length.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function MinSuggestionLength(length As Integer) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: suggestminlength
    - type: System.String
      value: Set the minimum suggestion length.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(Integer)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength(Integer)
  name.vb: MinSuggestionLength(Integer)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(System.Int32)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(System.Int32)
  id: MaxSuggestionLength(System.Int32)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: MaxSuggestionLength(int)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(int)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MaxSuggestionLength
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 67
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the maximum length for suggestions.
  example: []
  syntax:
    content: >-
      [SlashCommand("suggestmaxlength", "Set the maximum suggestion length.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task MaxSuggestionLength(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The maximum number of characters allowed in a suggestion.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("suggestmaxlength", "Set the maximum suggestion length.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function MaxSuggestionLength(length As Integer) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: suggestmaxlength
    - type: System.String
      value: Set the maximum suggestion length.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(Integer)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength(Integer)
  name.vb: MaxSuggestionLength(Integer)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(System.String)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(System.String)
  id: AcceptMessage(System.String)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: AcceptMessage(string)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(string)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AcceptMessage
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 90
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets a custom message template for when a suggestion is accepted.
  example: []
  syntax:
    content: >-
      [SlashCommand("acceptmessage", "Allows to set a custom embed when a suggestion is accepted.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task AcceptMessage(string embed)
    parameters:
    - id: embed
      type: System.String
      description: The message template. Use "-" to reset to the default message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("acceptmessage", "Allows to set a custom embed when a suggestion is accepted.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function AcceptMessage(embed As String) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: acceptmessage
    - type: System.String
      value: Allows to set a custom embed when a suggestion is accepted.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(String)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage(String)
  name.vb: AcceptMessage(String)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(System.String)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(System.String)
  id: ImplementMessage(System.String)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ImplementMessage(string)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(string)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ImplementMessage
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 113
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets a custom message template for when a suggestion is implemented.
  example: []
  syntax:
    content: >-
      [SlashCommand("implementmessage", "Allows to set a custom embed when a suggestion is set implemented.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ImplementMessage(string embed)
    parameters:
    - id: embed
      type: System.String
      description: The message template. Use "-" to reset to the default message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("implementmessage", "Allows to set a custom embed when a suggestion is set implemented.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ImplementMessage(embed As String) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: implementmessage
    - type: System.String
      value: Allows to set a custom embed when a suggestion is set implemented.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(String)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage(String)
  name.vb: ImplementMessage(String)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(System.String)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(System.String)
  id: DenyMessage(System.String)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: DenyMessage(string)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(string)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DenyMessage
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 136
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets a custom message template for when a suggestion is denied.
  example: []
  syntax:
    content: >-
      [SlashCommand("denymessage", "Allows to set a custom embed when a suggestion is denied.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task DenyMessage(string embed)
    parameters:
    - id: embed
      type: System.String
      description: The message template. Use "-" to reset to the default message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("denymessage", "Allows to set a custom embed when a suggestion is denied.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function DenyMessage(embed As String) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: denymessage
    - type: System.String
      value: Allows to set a custom embed when a suggestion is denied.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(String)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage(String)
  name.vb: DenyMessage(String)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(System.String)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(System.String)
  id: ConsiderMessage(System.String)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ConsiderMessage(string)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(string)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConsiderMessage
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 159
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets a custom message template for when a suggestion is considered.
  example: []
  syntax:
    content: >-
      [SlashCommand("considermessage", "Allows to set a custom embed when a suggestion is considered.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ConsiderMessage(string embed)
    parameters:
    - id: embed
      type: System.String
      description: The message template. Use "-" to reset to the default message.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("considermessage", "Allows to set a custom embed when a suggestion is considered.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ConsiderMessage(embed As String) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: considermessage
    - type: System.String
      value: Allows to set a custom embed when a suggestion is considered.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(String)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage(String)
  name.vb: ConsiderMessage(String)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode(Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode(Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum)
  id: SuggestMotesMode(Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: SuggestMotesMode(SuggestEmoteModeEnum)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode(Suggestions.SuggestEmoteModeEnum)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode(Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuggestMotesMode
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 182
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the mode for suggestion emotes to either buttons or reactions.
  example: []
  syntax:
    content: >-
      [SlashCommand("emotesmode", "Set whether suggestmotes are buttons or reactions", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task SuggestMotesMode(Suggestions.SuggestEmoteModeEnum mode)
    parameters:
    - id: mode
      type: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
      description: The mode to set for suggestion emotes.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("emotesmode", "Set whether suggestmotes are buttons or reactions", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function SuggestMotesMode(mode As Suggestions.SuggestEmoteModeEnum) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: emotesmode
    - type: System.String
      value: Set whether suggestmotes are buttons or reactions
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor(Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor(Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  id: SuggestButtonColor(Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: SuggestButtonColor(ButtonType)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor(Suggestions.ButtonType)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor(Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuggestButtonColor
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 196
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Changes the color of the suggestion button.
  example: []
  syntax:
    content: >-
      [SlashCommand("buttoncolor", "Change the color of the suggestion button", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task SuggestButtonColor(Suggestions.ButtonType type)
    parameters:
    - id: type
      type: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
      description: The color type for the suggestion button.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("buttoncolor", "Change the color of the suggestion button", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function SuggestButtonColor(type As Suggestions.ButtonType) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: buttoncolor
    - type: System.String
      value: Change the color of the suggestion button
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(System.Int32,Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(System.Int32,Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  id: SuggestMoteColor(System.Int32,Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: SuggestMoteColor(int, ButtonType)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(int, Suggestions.ButtonType)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(int, Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuggestMoteColor
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 213
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the color for specific emote buttons on suggestions.
  example: []
  syntax:
    content: >-
      [SlashCommand("emotecolor", "Set the color of each button on a suggestion", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task SuggestMoteColor(int num, Suggestions.ButtonType type)
    parameters:
    - id: num
      type: System.Int32
      description: The button number to change.
      attributes:
      - type: Discord.Interactions.SummaryAttribute
        ctor: Discord.Interactions.SummaryAttribute.#ctor(System.String,System.String)
        arguments:
        - type: System.String
          value: number
        - type: System.String
          value: The number you want to change
    - id: type
      type: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
      description: The color type for the button.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("emotecolor", "Set the color of each button on a suggestion", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function SuggestMoteColor(num As Integer, type As Suggestions.ButtonType) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: emotecolor
    - type: System.String
      value: Set the color of each button on a suggestion
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(Integer, Suggestions.ButtonType)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor(Integer, Mewdeko.Modules.Suggestions.Suggestions.ButtonType)
  name.vb: SuggestMoteColor(Integer, ButtonType)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(Discord.ITextChannel)
  id: AcceptChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: AcceptChannel(ITextChannel?)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(ITextChannel?)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(Discord.ITextChannel?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AcceptChannel
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 229
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the channel where accepted suggestions are posted.
  example: []
  syntax:
    content: >-
      [SlashCommand("acceptchannel", "Set the channel accepted suggestions get sent to.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task AcceptChannel(ITextChannel? channel = null)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The channel for accepted suggestions. Null to disable.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("acceptchannel", "Set the channel accepted suggestions get sent to.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function AcceptChannel(channel As ITextChannel = Nothing) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: acceptchannel
    - type: System.String
      value: Set the channel accepted suggestions get sent to.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(ITextChannel)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel(Discord.ITextChannel)
  name.vb: AcceptChannel(ITextChannel)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(Discord.ITextChannel)
  id: DenyChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: DenyChannel(ITextChannel?)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(ITextChannel?)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(Discord.ITextChannel?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DenyChannel
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 247
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the channel where denied suggestions are posted.
  example: []
  syntax:
    content: >-
      [SlashCommand("denychannel", "Set the channel denied suggestions go to.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task DenyChannel(ITextChannel? channel = null)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The channel for denied suggestions. Null to disable.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("denychannel", "Set the channel denied suggestions go to.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function DenyChannel(channel As ITextChannel = Nothing) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: denychannel
    - type: System.String
      value: Set the channel denied suggestions go to.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(ITextChannel)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel(Discord.ITextChannel)
  name.vb: DenyChannel(ITextChannel)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(Discord.ITextChannel)
  id: ConsiderChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ConsiderChannel(ITextChannel?)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(ITextChannel?)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(Discord.ITextChannel?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConsiderChannel
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 264
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the channel where considered suggestions are posted.
  example: []
  syntax:
    content: >-
      [SlashCommand("considerchannel", "Set the channel considered suggestions go to.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ConsiderChannel(ITextChannel? channel = null)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The channel for considered suggestions. Null to disable.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("considerchannel", "Set the channel considered suggestions go to.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ConsiderChannel(channel As ITextChannel = Nothing) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: considerchannel
    - type: System.String
      value: Set the channel considered suggestions go to.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(ITextChannel)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel(Discord.ITextChannel)
  name.vb: ConsiderChannel(ITextChannel)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(Discord.ITextChannel)
  id: ImplementChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ImplementChannel(ITextChannel?)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(ITextChannel?)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(Discord.ITextChannel?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ImplementChannel
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 282
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the channel where implemented suggestions are posted.
  example: []
  syntax:
    content: >-
      [SlashCommand("implementchannel", "Set the channel where implemented suggestions go", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ImplementChannel(ITextChannel? channel = null)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The channel for implemented suggestions. Null to disable.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("implementchannel", "Set the channel where implemented suggestions go", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ImplementChannel(channel As ITextChannel = Nothing) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: implementchannel
    - type: System.String
      value: Set the channel where implemented suggestions go
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(ITextChannel)
  fullName.vb: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel(Discord.ITextChannel)
  name.vb: ImplementChannel(ITextChannel)
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType(Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType)
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType(Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType)
  id: SuggestThreadsType(Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType)
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: SuggestThreadsType(SuggestThreadType)
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType(Suggestions.SuggestThreadType)
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType(Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SuggestThreadsType
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 303
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets the type of threads used in suggestions.
  remarks: This command allows the administrator to choose between different types of threads for suggestions.
  example: []
  syntax:
    content: >-
      [SlashCommand("threadstype", "Set the type of threads used in suggestions.", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task SuggestThreadsType(Suggestions.SuggestThreadType type)
    parameters:
    - id: type
      type: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
      description: The thread type to be used for suggestions.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("threadstype", "Set the type of threads used in suggestions.", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function SuggestThreadsType(type As Suggestions.SuggestThreadType) As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: threadstype
    - type: System.String
      value: Set the type of threads used in suggestions.
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
  id: ArchiveOnDeny
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ArchiveOnDeny()
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny()
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ArchiveOnDeny
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 317
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets whether threads auto-archive on deny.
  example: []
  syntax:
    content: >-
      [SlashCommand("archiveondeny", "Set whether threads auto archive on deny", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ArchiveOnDeny()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("archiveondeny", "Set whether threads auto archive on deny", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ArchiveOnDeny() As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: archiveondeny
    - type: System.String
      value: Set whether threads auto archive on deny
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
  id: ArchiveOnAccept
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ArchiveOnAccept()
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept()
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ArchiveOnAccept
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 330
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets whether threads auto-archive on accept.
  example: []
  syntax:
    content: >-
      [SlashCommand("archiveonaccept", "Set whether threads auto archive on accept", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ArchiveOnAccept()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("archiveonaccept", "Set whether threads auto archive on accept", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ArchiveOnAccept() As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: archiveonaccept
    - type: System.String
      value: Set whether threads auto archive on accept
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
  id: ArchiveOnConsider
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ArchiveOnConsider()
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider()
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ArchiveOnConsider
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 346
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets whether threads auto-archive on consider.
  example: []
  syntax:
    content: >-
      [SlashCommand("archiveonconsider", "Set whether threads auto archive on consider", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ArchiveOnConsider()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("archiveonconsider", "Set whether threads auto archive on consider", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ArchiveOnConsider() As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: archiveonconsider
    - type: System.String
      value: Set whether threads auto archive on consider
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
  commentId: M:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
  id: ArchiveOnImplement
  parent: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
  langs:
  - csharp
  - vb
  name: ArchiveOnImplement()
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement()
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ArchiveOnImplement
    path: src/Mewdeko/Modules/Suggestions/SlashSuggestCustomization.cs
    startLine: 361
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Suggestions
  summary: Sets whether threads auto-archive on implement.
  example: []
  syntax:
    content: >-
      [SlashCommand("archiveonimplement", "Set whether threads auto archive on implement", false, RunMode.Default)]

      [RequireContext(ContextType.Guild)]

      [SlashUserPerm(GuildPermission.Administrator)]

      public Task ArchiveOnImplement()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: >-
      <SlashCommand("archiveonimplement", "Set whether threads auto archive on implement", False, RunMode.Default)>

      <RequireContext(ContextType.Guild)>

      <SlashUserPerm(GuildPermission.Administrator)>

      Public Function ArchiveOnImplement() As Task
  overload: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: archiveonimplement
    - type: System.String
      value: Set whether threads auto archive on implement
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  - type: Discord.Interactions.RequireContextAttribute
    ctor: Discord.Interactions.RequireContextAttribute.#ctor(Discord.Interactions.ContextType)
    arguments:
    - type: Discord.Interactions.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute
    ctor: Mewdeko.Common.Attributes.InteractionCommands.SlashUserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
references:
- uid: Mewdeko.Modules.Suggestions
  commentId: N:Mewdeko.Modules.Suggestions
  href: Mewdeko.html
  name: Mewdeko.Modules.Suggestions
  nameWithType: Mewdeko.Modules.Suggestions
  fullName: Mewdeko.Modules.Suggestions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  commentId: T:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  parent: Discord.Interactions
  definition: Discord.Interactions.InteractionModuleBase`1
  name: InteractionModuleBase<IInteractionContext>
  nameWithType: InteractionModuleBase<IInteractionContext>
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext)
  name.vb: InteractionModuleBase(Of IInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase
  commentId: T:Discord.Interactions.InteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: InteractionModuleBase
  nameWithType: InteractionModuleBase
  fullName: Discord.Interactions.InteractionModuleBase
- uid: Mewdeko.Common.MewdekoSlashCommandModule
  commentId: T:Mewdeko.Common.MewdekoSlashCommandModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoSlashCommandModule.html
  name: MewdekoSlashCommandModule
  nameWithType: MewdekoSlashCommandModule
  fullName: Mewdeko.Common.MewdekoSlashCommandModule
- uid: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  commentId: T:Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSlashModuleBase`1
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  name: MewdekoSlashModuleBase<SuggestionsService>
  nameWithType: MewdekoSlashModuleBase<SuggestionsService>
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<Mewdeko.Modules.Suggestions.Services.SuggestionsService>
  nameWithType.vb: MewdekoSlashModuleBase(Of SuggestionsService)
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of Mewdeko.Modules.Suggestions.Services.SuggestionsService)
  name.vb: MewdekoSlashModuleBase(Of SuggestionsService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Suggestions.Services.SuggestionsService
    name: SuggestionsService
    href: Mewdeko.Modules.Suggestions.Services.SuggestionsService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Suggestions.Services.SuggestionsService
    name: SuggestionsService
    href: Mewdeko.Modules.Suggestions.Services.SuggestionsService.html
  - name: )
- uid: Mewdeko.Common.MewdekoSlashSubmodule{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  commentId: T:Mewdeko.Common.MewdekoSlashSubmodule{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSlashSubmodule`1
  href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  name: MewdekoSlashSubmodule<SuggestionsService>
  nameWithType: MewdekoSlashSubmodule<SuggestionsService>
  fullName: Mewdeko.Common.MewdekoSlashSubmodule<Mewdeko.Modules.Suggestions.Services.SuggestionsService>
  nameWithType.vb: MewdekoSlashSubmodule(Of SuggestionsService)
  fullName.vb: Mewdeko.Common.MewdekoSlashSubmodule(Of Mewdeko.Modules.Suggestions.Services.SuggestionsService)
  name.vb: MewdekoSlashSubmodule(Of SuggestionsService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashSubmodule`1
    name: MewdekoSlashSubmodule
    href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  - name: <
  - uid: Mewdeko.Modules.Suggestions.Services.SuggestionsService
    name: SuggestionsService
    href: Mewdeko.Modules.Suggestions.Services.SuggestionsService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashSubmodule`1
    name: MewdekoSlashSubmodule
    href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Suggestions.Services.SuggestionsService
    name: SuggestionsService
    href: Mewdeko.Modules.Suggestions.Services.SuggestionsService.html
  - name: )
- uid: Discord.Interactions.IInteractionModuleBase
  commentId: T:Discord.Interactions.IInteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: IInteractionModuleBase
  nameWithType: IInteractionModuleBase
  fullName: Discord.Interactions.IInteractionModuleBase
- uid: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}.Service
  commentId: P:Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}.Service
  parent: Mewdeko.Common.MewdekoSlashModuleBase{Mewdeko.Modules.Suggestions.Services.SuggestionsService}
  definition: Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html#Mewdeko_Common_MewdekoSlashModuleBase_1_Service
  name: Service
  nameWithType: MewdekoSlashModuleBase<SuggestionsService>.Service
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<Mewdeko.Modules.Suggestions.Services.SuggestionsService>.Service
  nameWithType.vb: MewdekoSlashModuleBase(Of SuggestionsService).Service
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of Mewdeko.Modules.Suggestions.Services.SuggestionsService).Service
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoSlashCommandModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Strings
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Strings
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Strings
  name: Strings
  nameWithType: MewdekoSlashCommandModule.Strings
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Strings
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CmdHandler
  name: CmdHandler
  nameWithType: MewdekoSlashCommandModule.CmdHandler
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Localization
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Localization
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Localization
  name: Localization
  nameWithType: MewdekoSlashCommandModule.Localization
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Localization
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Config
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Config
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Config
  name: Config
  nameWithType: MewdekoSlashCommandModule.Config
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Config
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ctx
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.ctx
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ctx
  name: ctx
  nameWithType: MewdekoSlashCommandModule.ctx
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ctx
- uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  name: BeforeExecute(ICommandInfo)
  nameWithType: MewdekoSlashCommandModule.BeforeExecute(ICommandInfo)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoSlashCommandModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string)
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoSlashCommandModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: EphemeralReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  name: PromptUserConfirmAsync(string, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong, bool, bool)
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_System_Boolean_System_Boolean_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  isExternal: true
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<IInteractionContext>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<IInteractionContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<IInteractionContext>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  commentId: P:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Context
  name: Context
  nameWithType: InteractionModuleBase<IInteractionContext>.Context
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Context
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<SlashSuggestionsCustomization>(SlashSuggestionsCustomization, string)
  nameWithType: Extensions.ThrowIfNull<SlashSuggestions.SlashSuggestionsCustomization>(SlashSuggestions.SlashSuggestionsCustomization, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization>(Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of SlashSuggestions.SlashSuggestionsCustomization)(SlashSuggestions.SlashSuggestionsCustomization, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization)(Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization, String)
  name.vb: ThrowIfNull(Of SlashSuggestionsCustomization)(SlashSuggestionsCustomization, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
    name: SlashSuggestionsCustomization
    href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
    name: SlashSuggestionsCustomization
    href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
    name: SlashSuggestionsCustomization
    href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization
    name: SlashSuggestionsCustomization
    href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Interactions.InteractionModuleBase`1
  commentId: T:Discord.Interactions.InteractionModuleBase`1
  isExternal: true
  name: InteractionModuleBase<T>
  nameWithType: InteractionModuleBase<T>
  fullName: Discord.Interactions.InteractionModuleBase<T>
  nameWithType.vb: InteractionModuleBase(Of T)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T)
  name.vb: InteractionModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Interactions
  commentId: N:Discord.Interactions
  isExternal: true
  name: Discord.Interactions
  nameWithType: Discord.Interactions
  fullName: Discord.Interactions
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoSlashModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoSlashModuleBase`1
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  name: MewdekoSlashModuleBase<TService>
  nameWithType: MewdekoSlashModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<TService>
  nameWithType.vb: MewdekoSlashModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of TService)
  name.vb: MewdekoSlashModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashModuleBase`1
    name: MewdekoSlashModuleBase
    href: Mewdeko.Common.MewdekoSlashModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSlashSubmodule`1
  commentId: T:Mewdeko.Common.MewdekoSlashSubmodule`1
  href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  name: MewdekoSlashSubmodule<TService>
  nameWithType: MewdekoSlashSubmodule<TService>
  fullName: Mewdeko.Common.MewdekoSlashSubmodule<TService>
  nameWithType.vb: MewdekoSlashSubmodule(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSlashSubmodule(Of TService)
  name.vb: MewdekoSlashSubmodule(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSlashSubmodule`1
    name: MewdekoSlashSubmodule
    href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSlashSubmodule`1
    name: MewdekoSlashSubmodule
    href: Mewdeko.Common.MewdekoSlashSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoSlashModuleBase`1.Service
  href: Mewdeko.Common.MewdekoSlashModuleBase-1.html#Mewdeko_Common_MewdekoSlashModuleBase_1_Service
  name: Service
  nameWithType: MewdekoSlashModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoSlashModuleBase<TService>.Service
  nameWithType.vb: MewdekoSlashModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoSlashModuleBase(Of TService).Service
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  isExternal: true
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<T>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of T).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  isExternal: true
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<T>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<T>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of T).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<T>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  isExternal: true
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<T>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  isExternal: true
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  isExternal: true
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  isExternal: true
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Context
  commentId: P:Discord.Interactions.InteractionModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: InteractionModuleBase<T>.Context
  fullName: Discord.Interactions.InteractionModuleBase<T>.Context
  nameWithType.vb: InteractionModuleBase(Of T).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_SuggestMessage_System_String_
  name: SuggestMessage
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_MinSuggestionLength_System_Int32_
  name: MinSuggestionLength
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MinSuggestionLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_MaxSuggestionLength_System_Int32_
  name: MaxSuggestionLength
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.MaxSuggestionLength
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_AcceptMessage_System_String_
  name: AcceptMessage
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptMessage
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ImplementMessage_System_String_
  name: ImplementMessage
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementMessage
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_DenyMessage_System_String_
  name: DenyMessage
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.DenyMessage
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyMessage
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ConsiderMessage_System_String_
  name: ConsiderMessage
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderMessage
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_SuggestMotesMode_Mewdeko_Modules_Suggestions_Suggestions_SuggestEmoteModeEnum_
  name: SuggestMotesMode
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMotesMode
- uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
  commentId: T:Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
  parent: Mewdeko.Modules.Suggestions
  href: Mewdeko.Modules.Suggestions.Suggestions.html
  name: Suggestions.SuggestEmoteModeEnum
  nameWithType: Suggestions.SuggestEmoteModeEnum
  fullName: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
  spec.csharp:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
    name: SuggestEmoteModeEnum
    href: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum.html
  spec.vb:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum
    name: SuggestEmoteModeEnum
    href: Mewdeko.Modules.Suggestions.Suggestions.SuggestEmoteModeEnum.html
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_SuggestButtonColor_Mewdeko_Modules_Suggestions_Suggestions_ButtonType_
  name: SuggestButtonColor
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestButtonColor
- uid: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
  commentId: T:Mewdeko.Modules.Suggestions.Suggestions.ButtonType
  parent: Mewdeko.Modules.Suggestions
  href: Mewdeko.Modules.Suggestions.Suggestions.html
  name: Suggestions.ButtonType
  nameWithType: Suggestions.ButtonType
  fullName: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
  spec.csharp:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
    name: ButtonType
    href: Mewdeko.Modules.Suggestions.Suggestions.ButtonType.html
  spec.vb:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.ButtonType
    name: ButtonType
    href: Mewdeko.Modules.Suggestions.Suggestions.ButtonType.html
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_SuggestMoteColor_System_Int32_Mewdeko_Modules_Suggestions_Suggestions_ButtonType_
  name: SuggestMoteColor
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestMoteColor
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_AcceptChannel_Discord_ITextChannel_
  name: AcceptChannel
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.AcceptChannel
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_DenyChannel_Discord_ITextChannel_
  name: DenyChannel
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.DenyChannel
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.DenyChannel
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ConsiderChannel_Discord_ITextChannel_
  name: ConsiderChannel
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ConsiderChannel
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ImplementChannel_Discord_ITextChannel_
  name: ImplementChannel
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ImplementChannel
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_SuggestThreadsType_Mewdeko_Modules_Suggestions_Suggestions_SuggestThreadType_
  name: SuggestThreadsType
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.SuggestThreadsType
- uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
  commentId: T:Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
  parent: Mewdeko.Modules.Suggestions
  href: Mewdeko.Modules.Suggestions.Suggestions.html
  name: Suggestions.SuggestThreadType
  nameWithType: Suggestions.SuggestThreadType
  fullName: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
  spec.csharp:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
    name: SuggestThreadType
    href: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType.html
  spec.vb:
  - uid: Mewdeko.Modules.Suggestions.Suggestions
    name: Suggestions
    href: Mewdeko.Modules.Suggestions.Suggestions.html
  - name: .
  - uid: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType
    name: SuggestThreadType
    href: Mewdeko.Modules.Suggestions.Suggestions.SuggestThreadType.html
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ArchiveOnDeny
  name: ArchiveOnDeny
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnDeny
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ArchiveOnAccept
  name: ArchiveOnAccept
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnAccept
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ArchiveOnConsider
  name: ArchiveOnConsider
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnConsider
- uid: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement*
  commentId: Overload:Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
  href: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.html#Mewdeko_Modules_Suggestions_SlashSuggestions_SlashSuggestionsCustomization_ArchiveOnImplement
  name: ArchiveOnImplement
  nameWithType: SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
  fullName: Mewdeko.Modules.Suggestions.SlashSuggestions.SlashSuggestionsCustomization.ArchiveOnImplement
