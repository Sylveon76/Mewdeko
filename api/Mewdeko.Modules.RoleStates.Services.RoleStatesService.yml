### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  commentId: T:Mewdeko.Modules.RoleStates.Services.RoleStatesService
  id: RoleStatesService
  parent: Mewdeko.Modules.RoleStates.Services
  children:
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser(System.UInt64,Discord.IGuildUser,System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState(System.UInt64,System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates(System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings(System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState(System.UInt64,System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually(Discord.IUser,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan(Mewdeko.Database.Models.RoleStateSettings)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots(Mewdeko.Database.Models.RoleStateSettings)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates(System.UInt64)
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings(Mewdeko.Database.Models.RoleStateSettings)
  langs:
  - csharp
  - vb
  name: RoleStatesService
  nameWithType: RoleStatesService
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleStatesService
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 8
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Provides services for managing user role states within a guild. This includes saving roles before a user leaves or is banned, and optionally restoring them upon rejoining.
  example: []
  syntax:
    content: 'public class RoleStatesService : INService'
    content.vb: Public Class RoleStatesService Implements INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.RoleStates.Services.RoleStatesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler)
  id: '#ctor(Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler)'
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: RoleStatesService(DbService, EventHandler)
  nameWithType: RoleStatesService.RoleStatesService(DbService, EventHandler)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RoleStatesService(Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.RoleStates.Services.RoleStatesService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RoleStatesService(DbService dbService, EventHandler eventHandler)
    parameters:
    - id: dbService
      type: Mewdeko.Database.DbService
      description: The database service to interact with stored data.
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler to subscribe to guild member events.
    content.vb: Public Sub New(dbService As DbService, eventHandler As EventHandler)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor*
  nameWithType.vb: RoleStatesService.New(DbService, EventHandler)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.New(Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler)
  name.vb: New(DbService, EventHandler)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates(System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates(System.UInt64)
  id: ToggleRoleStates(System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: ToggleRoleStates(ulong)
  nameWithType: RoleStatesService.ToggleRoleStates(ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleRoleStates
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 128
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Toggles the role state feature on or off for a guild.
  example: []
  syntax:
    content: public Task<bool> ToggleRoleStates(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating the operation success.
    content.vb: Public Function ToggleRoleStates(guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates*
  nameWithType.vb: RoleStatesService.ToggleRoleStates(ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates(ULong)
  name.vb: ToggleRoleStates(ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings(System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings(System.UInt64)
  id: GetRoleStateSettings(System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: GetRoleStateSettings(ulong)
  nameWithType: RoleStatesService.GetRoleStateSettings(ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetRoleStateSettings
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 154
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Retrieves the role state settings for a guild.
  example: []
  syntax:
    content: public Task<RoleStateSettings?> GetRoleStateSettings(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.RoleStateSettings}
      description: A task that represents the asynchronous operation, containing the <xref href="Mewdeko.Database.Models.RoleStateSettings" data-throw-if-not-resolved="false"></xref> or null if not found.
    content.vb: Public Function GetRoleStateSettings(guildId As ULong) As Task(Of RoleStateSettings)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings*
  nameWithType.vb: RoleStatesService.GetRoleStateSettings(ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings(ULong)
  name.vb: GetRoleStateSettings(ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState(System.UInt64,System.UInt64)
  id: GetUserRoleState(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: GetUserRoleState(ulong, ulong)
  nameWithType: RoleStatesService.GetUserRoleState(ulong, ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserRoleState
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 166
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Retrieves a user's saved role state within a guild.
  example: []
  syntax:
    content: public Task<UserRoleStates?> GetUserRoleState(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.UserRoleStates}
      description: A task that represents the asynchronous operation, containing the <xref href="Mewdeko.Database.Models.UserRoleStates" data-throw-if-not-resolved="false"></xref> or null if not found.
    content.vb: Public Function GetUserRoleState(guildId As ULong, userId As ULong) As Task(Of UserRoleStates)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState*
  nameWithType.vb: RoleStatesService.GetUserRoleState(ULong, ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState(ULong, ULong)
  name.vb: GetUserRoleState(ULong, ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates(System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates(System.UInt64)
  id: GetAllUserRoleStates(System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: GetAllUserRoleStates(ulong)
  nameWithType: RoleStatesService.GetAllUserRoleStates(ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetAllUserRoleStates
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 177
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Retrieves all user role states within a guild.
  example: []
  syntax:
    content: public Task<List<UserRoleStates>> GetAllUserRoleStates(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserRoleStates}}
      description: A task that represents the asynchronous operation, containing a list of <xref href="Mewdeko.Database.Models.UserRoleStates" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAllUserRoleStates(guildId As ULong) As Task(Of List(Of UserRoleStates))
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates*
  nameWithType.vb: RoleStatesService.GetAllUserRoleStates(ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates(ULong)
  name.vb: GetAllUserRoleStates(ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings(Mewdeko.Database.Models.RoleStateSettings)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings(Mewdeko.Database.Models.RoleStateSettings)
  id: UpdateRoleStateSettings(Mewdeko.Database.Models.RoleStateSettings)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: UpdateRoleStateSettings(RoleStateSettings)
  nameWithType: RoleStatesService.UpdateRoleStateSettings(RoleStateSettings)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings(Mewdeko.Database.Models.RoleStateSettings)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UpdateRoleStateSettings
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 187
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Updates the role state settings for a guild.
  example: []
  syntax:
    content: public Task UpdateRoleStateSettings(RoleStateSettings roleStateSettings)
    parameters:
    - id: roleStateSettings
      type: Mewdeko.Database.Models.RoleStateSettings
      description: The <xref href="Mewdeko.Database.Models.RoleStateSettings" data-throw-if-not-resolved="false"></xref> to be updated.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function UpdateRoleStateSettings(roleStateSettings As RoleStateSettings) As Task
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings*
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots(Mewdeko.Database.Models.RoleStateSettings)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots(Mewdeko.Database.Models.RoleStateSettings)
  id: ToggleIgnoreBots(Mewdeko.Database.Models.RoleStateSettings)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: ToggleIgnoreBots(RoleStateSettings)
  nameWithType: RoleStatesService.ToggleIgnoreBots(RoleStateSettings)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots(Mewdeko.Database.Models.RoleStateSettings)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleIgnoreBots
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 199
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Toggles the option to ignore bots when saving and restoring roles.
  example: []
  syntax:
    content: public Task<bool> ToggleIgnoreBots(RoleStateSettings roleStateSettings)
    parameters:
    - id: roleStateSettings
      type: Mewdeko.Database.Models.RoleStateSettings
      description: The <xref href="Mewdeko.Database.Models.RoleStateSettings" data-throw-if-not-resolved="false"></xref> to be updated.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating if bots are now ignored.
    content.vb: Public Function ToggleIgnoreBots(roleStateSettings As RoleStateSettings) As Task(Of Boolean)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots*
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan(Mewdeko.Database.Models.RoleStateSettings)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan(Mewdeko.Database.Models.RoleStateSettings)
  id: ToggleClearOnBan(Mewdeko.Database.Models.RoleStateSettings)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: ToggleClearOnBan(RoleStateSettings)
  nameWithType: RoleStatesService.ToggleClearOnBan(RoleStateSettings)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan(Mewdeko.Database.Models.RoleStateSettings)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleClearOnBan
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 217
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Toggles the option to clear saved roles upon a user's ban.
  example: []
  syntax:
    content: public Task<bool> ToggleClearOnBan(RoleStateSettings roleStateSettings)
    parameters:
    - id: roleStateSettings
      type: Mewdeko.Database.Models.RoleStateSettings
      description: The <xref href="Mewdeko.Database.Models.RoleStateSettings" data-throw-if-not-resolved="false"></xref> to be updated.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating if roles are cleared on ban.
    content.vb: Public Function ToggleClearOnBan(roleStateSettings As RoleStateSettings) As Task(Of Boolean)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan*
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  id: AddRolesToUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: AddRolesToUserRoleState(ulong, ulong, IEnumerable<ulong>)
  nameWithType: RoleStatesService.AddRolesToUserRoleState(ulong, ulong, IEnumerable<ulong>)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState(ulong, ulong, System.Collections.Generic.IEnumerable<ulong>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddRolesToUserRoleState
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 237
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Adds roles to a user's saved role state.
  example: []
  syntax:
    content: public Task<(bool, string)> AddRolesToUserRoleState(ulong guildId, ulong userId, IEnumerable<ulong> roleIds)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    - id: roleIds
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: The roles to be added.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A task that represents the asynchronous operation, containing a tuple with a boolean indicating success and an optional error message.
    content.vb: Public Function AddRolesToUserRoleState(guildId As ULong, userId As ULong, roleIds As IEnumerable(Of ULong)) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState*
  nameWithType.vb: RoleStatesService.AddRolesToUserRoleState(ULong, ULong, IEnumerable(Of ULong))
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState(ULong, ULong, System.Collections.Generic.IEnumerable(Of ULong))
  name.vb: AddRolesToUserRoleState(ULong, ULong, IEnumerable(Of ULong))
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  id: RemoveRolesFromUserRoleState(System.UInt64,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: RemoveRolesFromUserRoleState(ulong, ulong, IEnumerable<ulong>)
  nameWithType: RoleStatesService.RemoveRolesFromUserRoleState(ulong, ulong, IEnumerable<ulong>)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState(ulong, ulong, System.Collections.Generic.IEnumerable<ulong>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveRolesFromUserRoleState
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 276
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Removes roles from a user's saved role state.
  example: []
  syntax:
    content: public Task<(bool, string)> RemoveRolesFromUserRoleState(ulong guildId, ulong userId, IEnumerable<ulong> roleIds)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    - id: roleIds
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: The roles to be removed.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
      description: A task that represents the asynchronous operation, containing a tuple with a boolean indicating success and an optional error message.
    content.vb: Public Function RemoveRolesFromUserRoleState(guildId As ULong, userId As ULong, roleIds As IEnumerable(Of ULong)) As Task(Of (Boolean, String))
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState*
  nameWithType.vb: RoleStatesService.RemoveRolesFromUserRoleState(ULong, ULong, IEnumerable(Of ULong))
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState(ULong, ULong, System.Collections.Generic.IEnumerable(Of ULong))
  name.vb: RemoveRolesFromUserRoleState(ULong, ULong, IEnumerable(Of ULong))
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState(System.UInt64,System.UInt64)
  id: DeleteUserRoleState(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: DeleteUserRoleState(ulong, ulong)
  nameWithType: RoleStatesService.DeleteUserRoleState(ulong, ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DeleteUserRoleState
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 315
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Deletes a user's role state.
  example: []
  syntax:
    content: public Task<bool> DeleteUserRoleState(ulong userId, ulong guildId)
    parameters:
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating if the operation was successful.
    content.vb: Public Function DeleteUserRoleState(userId As ULong, guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState*
  nameWithType.vb: RoleStatesService.DeleteUserRoleState(ULong, ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState(ULong, ULong)
  name.vb: DeleteUserRoleState(ULong, ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser(System.UInt64,Discord.IGuildUser,System.UInt64)
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser(System.UInt64,Discord.IGuildUser,System.UInt64)
  id: ApplyUserRoleStateToAnotherUser(System.UInt64,Discord.IGuildUser,System.UInt64)
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: ApplyUserRoleStateToAnotherUser(ulong, IGuildUser, ulong)
  nameWithType: RoleStatesService.ApplyUserRoleStateToAnotherUser(ulong, IGuildUser, ulong)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser(ulong, Discord.IGuildUser, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ApplyUserRoleStateToAnotherUser
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 333
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Applies the saved role state from one user to another.
  example: []
  syntax:
    content: public Task<bool> ApplyUserRoleStateToAnotherUser(ulong sourceUserId, IGuildUser targetUser, ulong guildId)
    parameters:
    - id: sourceUserId
      type: System.UInt64
      description: The source user's unique identifier.
    - id: targetUser
      type: Discord.IGuildUser
      description: The target <xref href="Discord.IGuildUser" data-throw-if-not-resolved="false"></xref>.
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation, containing a boolean indicating if the operation was successful.
    content.vb: Public Function ApplyUserRoleStateToAnotherUser(sourceUserId As ULong, targetUser As IGuildUser, guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser*
  nameWithType.vb: RoleStatesService.ApplyUserRoleStateToAnotherUser(ULong, IGuildUser, ULong)
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser(ULong, Discord.IGuildUser, ULong)
  name.vb: ApplyUserRoleStateToAnotherUser(ULong, IGuildUser, ULong)
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually(Discord.IUser,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  commentId: M:Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually(Discord.IUser,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  id: SetRoleStateManually(Discord.IUser,System.UInt64,System.Collections.Generic.IEnumerable{System.UInt64})
  parent: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  langs:
  - csharp
  - vb
  name: SetRoleStateManually(IUser, ulong, IEnumerable<ulong>)
  nameWithType: RoleStatesService.SetRoleStateManually(IUser, ulong, IEnumerable<ulong>)
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually(Discord.IUser, ulong, System.Collections.Generic.IEnumerable<ulong>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetRoleStateManually
    path: src/Mewdeko/Modules/RoleStates/Services/RoleStatesService.cs
    startLine: 366
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.RoleStates.Services
  summary: Sets a user's role state manually.
  example: []
  syntax:
    content: public Task SetRoleStateManually(IUser user, ulong guildId, IEnumerable<ulong> roles)
    parameters:
    - id: user
      type: Discord.IUser
      description: The <xref href="Discord.IUser" data-throw-if-not-resolved="false"></xref> whose role state is to be set.
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: roles
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: The roles to be saved.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function SetRoleStateManually(user As IUser, guildId As ULong, roles As IEnumerable(Of ULong)) As Task
  overload: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually*
  nameWithType.vb: RoleStatesService.SetRoleStateManually(IUser, ULong, IEnumerable(Of ULong))
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually(Discord.IUser, ULong, System.Collections.Generic.IEnumerable(Of ULong))
  name.vb: SetRoleStateManually(IUser, ULong, IEnumerable(Of ULong))
references:
- uid: Mewdeko.Modules.RoleStates.Services
  commentId: N:Mewdeko.Modules.RoleStates.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.RoleStates.Services
  nameWithType: Mewdeko.Modules.RoleStates.Services
  fullName: Mewdeko.Modules.RoleStates.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.RoleStates
    name: RoleStates
    href: Mewdeko.Modules.RoleStates.html
  - name: .
  - uid: Mewdeko.Modules.RoleStates.Services
    name: Services
    href: Mewdeko.Modules.RoleStates.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.RoleStates
    name: RoleStates
    href: Mewdeko.Modules.RoleStates.html
  - name: .
  - uid: Mewdeko.Modules.RoleStates.Services
    name: Services
    href: Mewdeko.Modules.RoleStates.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<RoleStatesService>(RoleStatesService, string)
  nameWithType: Extensions.ThrowIfNull<RoleStatesService>(RoleStatesService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.RoleStates.Services.RoleStatesService>(Mewdeko.Modules.RoleStates.Services.RoleStatesService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of RoleStatesService)(RoleStatesService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.RoleStates.Services.RoleStatesService)(Mewdeko.Modules.RoleStates.Services.RoleStatesService, String)
  name.vb: ThrowIfNull(Of RoleStatesService)(RoleStatesService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.RoleStates.Services.RoleStatesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
    name: RoleStatesService
    href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
    name: RoleStatesService
    href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.RoleStates.Services.RoleStatesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
    name: RoleStatesService
    href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
    name: RoleStatesService
    href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService
  commentId: T:Mewdeko.Modules.RoleStates.Services.RoleStatesService
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html
  name: RoleStatesService
  nameWithType: RoleStatesService
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.#ctor
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService__ctor_Mewdeko_Database_DbService_Mewdeko_Services_Impl_EventHandler_
  name: RoleStatesService
  nameWithType: RoleStatesService.RoleStatesService
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RoleStatesService
  nameWithType.vb: RoleStatesService.New
  fullName.vb: Mewdeko.Modules.RoleStates.Services.RoleStatesService.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_ToggleRoleStates_System_UInt64_
  name: ToggleRoleStates
  nameWithType: RoleStatesService.ToggleRoleStates
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleRoleStates
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Database.Models.RoleStateSettings
  commentId: T:Mewdeko.Database.Models.RoleStateSettings
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.RoleStateSettings.html
  name: RoleStateSettings
  nameWithType: RoleStateSettings
  fullName: Mewdeko.Database.Models.RoleStateSettings
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_GetRoleStateSettings_System_UInt64_
  name: GetRoleStateSettings
  nameWithType: RoleStatesService.GetRoleStateSettings
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetRoleStateSettings
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.RoleStateSettings}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.RoleStateSettings}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RoleStateSettings>
  nameWithType: Task<RoleStateSettings>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.RoleStateSettings>
  nameWithType.vb: Task(Of RoleStateSettings)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.RoleStateSettings)
  name.vb: Task(Of RoleStateSettings)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.RoleStateSettings
    name: RoleStateSettings
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.RoleStateSettings
    name: RoleStateSettings
  - name: )
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Database.Models.UserRoleStates
  commentId: T:Mewdeko.Database.Models.UserRoleStates
  href: Mewdeko.Database.Models.UserRoleStates.html
  name: UserRoleStates
  nameWithType: UserRoleStates
  fullName: Mewdeko.Database.Models.UserRoleStates
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_GetUserRoleState_System_UInt64_System_UInt64_
  name: GetUserRoleState
  nameWithType: RoleStatesService.GetUserRoleState
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetUserRoleState
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.UserRoleStates}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.UserRoleStates}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserRoleStates>
  nameWithType: Task<UserRoleStates>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.UserRoleStates>
  nameWithType.vb: Task(Of UserRoleStates)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.UserRoleStates)
  name.vb: Task(Of UserRoleStates)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.UserRoleStates
    name: UserRoleStates
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.UserRoleStates
    name: UserRoleStates
  - name: )
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_GetAllUserRoleStates_System_UInt64_
  name: GetAllUserRoleStates
  nameWithType: RoleStatesService.GetAllUserRoleStates
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.GetAllUserRoleStates
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserRoleStates}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserRoleStates}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<UserRoleStates>>
  nameWithType: Task<List<UserRoleStates>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Database.Models.UserRoleStates>>
  nameWithType.vb: Task(Of List(Of UserRoleStates))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Database.Models.UserRoleStates))
  name.vb: Task(Of List(Of UserRoleStates))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.UserRoleStates
    name: UserRoleStates
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.UserRoleStates
    name: UserRoleStates
  - name: )
  - name: )
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_UpdateRoleStateSettings_Mewdeko_Database_Models_RoleStateSettings_
  name: UpdateRoleStateSettings
  nameWithType: RoleStatesService.UpdateRoleStateSettings
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.UpdateRoleStateSettings
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_ToggleIgnoreBots_Mewdeko_Database_Models_RoleStateSettings_
  name: ToggleIgnoreBots
  nameWithType: RoleStatesService.ToggleIgnoreBots
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleIgnoreBots
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_ToggleClearOnBan_Mewdeko_Database_Models_RoleStateSettings_
  name: ToggleClearOnBan
  nameWithType: RoleStatesService.ToggleClearOnBan
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ToggleClearOnBan
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_AddRolesToUserRoleState_System_UInt64_System_UInt64_System_Collections_Generic_IEnumerable_System_UInt64__
  name: AddRolesToUserRoleState
  nameWithType: RoleStatesService.AddRolesToUserRoleState
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.AddRolesToUserRoleState
- uid: System.Collections.Generic.IEnumerable{System.UInt64}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ulong>
  nameWithType: IEnumerable<ulong>
  fullName: System.Collections.Generic.IEnumerable<ulong>
  nameWithType.vb: IEnumerable(Of ULong)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ULong)
  name.vb: IEnumerable(Of ULong)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool, string)>
  nameWithType: Task<(bool, string)>
  fullName: System.Threading.Tasks.Task<(bool, string)>
  nameWithType.vb: Task(Of (Boolean, String))
  fullName.vb: System.Threading.Tasks.Task(Of (Boolean, String))
  name.vb: Task(Of (Boolean, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_RemoveRolesFromUserRoleState_System_UInt64_System_UInt64_System_Collections_Generic_IEnumerable_System_UInt64__
  name: RemoveRolesFromUserRoleState
  nameWithType: RoleStatesService.RemoveRolesFromUserRoleState
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.RemoveRolesFromUserRoleState
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_DeleteUserRoleState_System_UInt64_System_UInt64_
  name: DeleteUserRoleState
  nameWithType: RoleStatesService.DeleteUserRoleState
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.DeleteUserRoleState
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_ApplyUserRoleStateToAnotherUser_System_UInt64_Discord_IGuildUser_System_UInt64_
  name: ApplyUserRoleStateToAnotherUser
  nameWithType: RoleStatesService.ApplyUserRoleStateToAnotherUser
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.ApplyUserRoleStateToAnotherUser
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually*
  commentId: Overload:Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually
  href: Mewdeko.Modules.RoleStates.Services.RoleStatesService.html#Mewdeko_Modules_RoleStates_Services_RoleStatesService_SetRoleStateManually_Discord_IUser_System_UInt64_System_Collections_Generic_IEnumerable_System_UInt64__
  name: SetRoleStateManually
  nameWithType: RoleStatesService.SetRoleStateManually
  fullName: Mewdeko.Modules.RoleStates.Services.RoleStatesService.SetRoleStateManually
