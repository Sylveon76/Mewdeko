### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  commentId: T:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  id: MewdekoUserMessage
  parent: Mewdeko.Common.DiscordImplementations
  children:
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync(Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync(Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync(Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync(Discord.RequestOptions)
  langs:
  - csharp
  - vb
  name: MewdekoUserMessage
  nameWithType: MewdekoUserMessage
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MewdekoUserMessage
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Class used for faking messages for commands like Sudo
  example: []
  syntax:
    content: 'public class MewdekoUserMessage : IUserMessage, IMessage, ISnowflakeEntity, IEntity<ulong>, IDeletable'
    content.vb: Public Class MewdekoUserMessage Implements IUserMessage, IMessage, ISnowflakeEntity, IEntity(Of ULong), IDeletable
  inheritance:
  - System.Object
  implements:
  - Discord.IUserMessage
  - Discord.IMessage
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IDeletable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Discord.IMessage.Mewdeko.Extensions.Extensions.DeleteAfter(System.Int32)
  - Discord.IMessage.Mewdeko.Extensions.Extensions.IsAuthor(Discord.IDiscordClient)
  - Discord.IMessage.Mewdeko.Extensions.MessageExtensions.GetJumpLink
  - Discord.IMessage.Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource
  - Discord.IUserMessage.Mewdeko.Extensions.Extensions.DeleteAfter(System.Int32)
  - Discord.IUserMessage.Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(System.String)
  - Discord.IUserMessage.Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(System.String)
  - Discord.IUserMessage.Mewdeko.Extensions.MessageExtensions.ReplyError(System.String)
  - Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
  id: Id
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MewdekoUserMessage.Id
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Id
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the unique identifier for this object.
  example: []
  syntax:
    content: public ulong Id { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Id As ULong
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id*
  implements:
  - Discord.IEntity{System.UInt64}.Id
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
  id: CreatedAt
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: MewdekoUserMessage.CreatedAt
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CreatedAt
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets when the snowflake was created.
  example: []
  syntax:
    content: public DateTimeOffset CreatedAt { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> representing when the entity was first created.
    content.vb: Public ReadOnly Property CreatedAt As DateTimeOffset
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt*
  implements:
  - Discord.ISnowflakeEntity.CreatedAt
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync(Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync(Discord.RequestOptions)
  id: DeleteAsync(Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: DeleteAsync(RequestOptions)
  nameWithType: MewdekoUserMessage.DeleteAsync(RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DeleteAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 18
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Deletes this object and all its children.
  example: []
  syntax:
    content: public Task DeleteAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync*
  implements:
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  id: AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: AddReactionAsync(IEmote, RequestOptions)
  nameWithType: MewdekoUserMessage.AddReactionAsync(IEmote, RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync(Discord.IEmote, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddReactionAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 21
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Adds a reaction to this message.
  example:
  - >-
    <p>The following example adds the reaction, <code>💕</code>, to the message.</p>

    <pre><code class="lang-cs">await msg.AddReactionAsync(new Emoji("\U0001f495"));</code></pre>
  syntax:
    content: public Task AddReactionAsync(IEmote emote, RequestOptions options = null)
    parameters:
    - id: emote
      type: Discord.IEmote
      description: The emoji used to react to this message.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for adding a reaction to this message.
    content.vb: Public Function AddReactionAsync(emote As IEmote, options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync*
  seealso:
  - linkId: Discord.IEmote
    commentId: T:Discord.IEmote
  implements:
  - Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  id: RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: RemoveReactionAsync(IEmote, IUser, RequestOptions)
  nameWithType: MewdekoUserMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote, Discord.IUser, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveReactionAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Removes a reaction from message.
  example:
  - >-
    <p>The following example removes the reaction, <code>💕</code>, added by the message author from the message.</p>

    <pre><code class="lang-cs">await msg.RemoveReactionAsync(new Emoji("\U0001f495"), msg.Author);</code></pre>
  syntax:
    content: public Task RemoveReactionAsync(IEmote emote, IUser user, RequestOptions options = null)
    parameters:
    - id: emote
      type: Discord.IEmote
      description: The emoji used to react to this message.
    - id: user
      type: Discord.IUser
      description: The user that added the emoji.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for removing a reaction to this message.
    content.vb: Public Function RemoveReactionAsync(emote As IEmote, user As IUser, options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync*
  seealso:
  - linkId: Discord.IEmote
    commentId: T:Discord.IEmote
  implements:
  - Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  id: RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: RemoveReactionAsync(IEmote, ulong, RequestOptions)
  nameWithType: MewdekoUserMessage.RemoveReactionAsync(IEmote, ulong, RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote, ulong, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveReactionAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 28
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Removes a reaction from message.
  example:
  - >-
    <p>The following example removes the reaction, <code>💕</code>, added by the user with ID 84291986575613952 from the message.</p>

    <pre><code class="lang-cs">await msg.RemoveReactionAsync(new Emoji("\U0001f495"), 84291986575613952);</code></pre>
  syntax:
    content: public Task RemoveReactionAsync(IEmote emote, ulong userId, RequestOptions options = null)
    parameters:
    - id: emote
      type: Discord.IEmote
      description: The emoji used to react to this message.
    - id: userId
      type: System.UInt64
      description: The ID of the user that added the emoji.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for removing a reaction to this message.
    content.vb: Public Function RemoveReactionAsync(emote As IEmote, userId As ULong, options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync*
  seealso:
  - linkId: Discord.IEmote
    commentId: T:Discord.IEmote
  implements:
  - Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  nameWithType.vb: MewdekoUserMessage.RemoveReactionAsync(IEmote, ULong, RequestOptions)
  fullName.vb: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync(Discord.IEmote, ULong, Discord.RequestOptions)
  name.vb: RemoveReactionAsync(IEmote, ULong, RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  id: RemoveAllReactionsAsync(Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: RemoveAllReactionsAsync(RequestOptions)
  nameWithType: MewdekoUserMessage.RemoveAllReactionsAsync(RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveAllReactionsAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Removes all reactions from this message.
  example: []
  syntax:
    content: public Task RemoveAllReactionsAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous removal operation.
    content.vb: Public Function RemoveAllReactionsAsync(options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync*
  implements:
  - Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  id: RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: RemoveAllReactionsForEmoteAsync(IEmote, RequestOptions)
  nameWithType: MewdekoUserMessage.RemoveAllReactionsForEmoteAsync(IEmote, RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveAllReactionsForEmoteAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Removes all reactions with a specific emoji from this message.
  example: []
  syntax:
    content: public Task RemoveAllReactionsForEmoteAsync(IEmote emote, RequestOptions options = null)
    parameters:
    - id: emote
      type: Discord.IEmote
      description: The emoji used to react to this message.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous removal operation.
    content.vb: Public Function RemoveAllReactionsForEmoteAsync(emote As IEmote, options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync*
  implements:
  - Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  id: GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: GetReactionUsersAsync(IEmote, int, RequestOptions, ReactionType)
  nameWithType: MewdekoUserMessage.GetReactionUsersAsync(IEmote, int, RequestOptions, ReactionType)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync(Discord.IEmote, int, Discord.RequestOptions, Discord.ReactionType)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetReactionUsersAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 39
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all users that reacted to a message with a given emote.
  remarks: >-
    <div class="IMPORTANT"><h5>important</h5><p>
                    The returned collection is an asynchronous enumerable object; one must call 
                    <xref href="Discord.AsyncEnumerableExtensions.FlattenAsync%60%601(System.Collections.Generic.IAsyncEnumerable%7bSystem.Collections.Generic.IEnumerable%7b%60%600%7d%7d)" data-throw-if-not-resolved="false"></xref> to access the users as a
                    collection.
                </p></div>
    <div class="WARNING"><h5>warning</h5><p>
                    Do not fetch too many users at once! This may cause unwanted preemptive rate limit or even actual
                    rate limit, causing your bot to freeze!
                </p></div>
                This method will attempt to fetch the number of reactions specified under <code class="paramref">limit</code>. 
                The library will attempt to split up the requests according to your <code class="paramref">limit</code> and 
                <xref href="Discord.DiscordConfig.MaxUserReactionsPerBatch" data-throw-if-not-resolved="false"></xref>. In other words, should the user request 500 reactions,
                and the <xref href="Discord.DiscordConfig.MaxUserReactionsPerBatch" data-throw-if-not-resolved="false"></xref> constant is <code>100</code>, the request will
                be split into 5 individual requests; thus returning 5 individual asynchronous responses, hence the need
                of flattening.
  example:
  - >-
    <p>The following example gets the users that have reacted with the emoji <code>💕</code> to the message.</p>

    <pre><code class="lang-cs">var emoji = new Emoji("\U0001f495");

    var reactedUsers = await message.GetReactionUsersAsync(emoji, 100).FlattenAsync();</code></pre>
  syntax:
    content: public IAsyncEnumerable<IReadOnlyCollection<IUser>> GetReactionUsersAsync(IEmote emoji, int limit, RequestOptions options = null, ReactionType type = ReactionType.Normal)
    parameters:
    - id: emoji
      type: Discord.IEmote
      description: The emoji that represents the reaction that you wish to get.
    - id: limit
      type: System.Int32
      description: The number of users to request.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    - id: type
      type: Discord.ReactionType
      description: The type of the reaction you wish to get users for.
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{Discord.IUser}}
      description: Paged collection of users.
    content.vb: Public Function GetReactionUsersAsync(emoji As IEmote, limit As Integer, options As RequestOptions = Nothing, type As ReactionType = ReactionType.Normal) As IAsyncEnumerable(Of IReadOnlyCollection(Of IUser))
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync*
  implements:
  - Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  nameWithType.vb: MewdekoUserMessage.GetReactionUsersAsync(IEmote, Integer, RequestOptions, ReactionType)
  fullName.vb: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync(Discord.IEmote, Integer, Discord.RequestOptions, Discord.ReactionType)
  name.vb: GetReactionUsersAsync(IEmote, Integer, RequestOptions, ReactionType)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
  id: Type
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MewdekoUserMessage.Type
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Type
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 47
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the type of this message.
  example: []
  syntax:
    content: public MessageType Type { get; }
    parameters: []
    return:
      type: Discord.MessageType
    content.vb: Public ReadOnly Property Type As MessageType
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type*
  implements:
  - Discord.IMessage.Type
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
  id: Source
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: MewdekoUserMessage.Source
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Source
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 50
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the source type of this message.
  example: []
  syntax:
    content: public MessageSource Source { get; }
    parameters: []
    return:
      type: Discord.MessageSource
    content.vb: Public ReadOnly Property Source As MessageSource
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source*
  implements:
  - Discord.IMessage.Source
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
  id: IsTTS
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: IsTTS
  nameWithType: MewdekoUserMessage.IsTTS
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsTTS
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 53
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the value that indicates whether this message was meant to be read-aloud by Discord.
  example: []
  syntax:
    content: public bool IsTTS { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this message was sent as a text-to-speech message; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsTTS As Boolean
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS*
  implements:
  - Discord.IMessage.IsTTS
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
  id: IsPinned
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: IsPinned
  nameWithType: MewdekoUserMessage.IsPinned
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsPinned
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 56
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the value that indicates whether this message is pinned.
  example: []
  syntax:
    content: public bool IsPinned { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this message was added to its channel's pinned messages; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsPinned As Boolean
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned*
  implements:
  - Discord.IMessage.IsPinned
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
  id: IsSuppressed
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: IsSuppressed
  nameWithType: MewdekoUserMessage.IsSuppressed
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsSuppressed
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 59
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the value that indicates whether or not this message's embeds are suppressed.
  example: []
  syntax:
    content: public bool IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the embeds in this message have been suppressed (made invisible); otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public ReadOnly Property IsSuppressed As Boolean
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed*
  implements:
  - Discord.IMessage.IsSuppressed
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
  id: Content
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MewdekoUserMessage.Content
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Content
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 62
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the content for this message.
  remarks: This will be empty if the privileged <xref href="Discord.GatewayIntents.MessageContent" data-throw-if-not-resolved="false"></xref> is disabled.
  example: []
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
      description: A string that contains the body of the message; note that this field may be empty if there is an embed.
    content.vb: Public Property Content As String
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content*
  implements:
  - Discord.IMessage.Content
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
  id: CleanContent
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: CleanContent
  nameWithType: MewdekoUserMessage.CleanContent
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CleanContent
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 65
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the clean content for this message.
  remarks: This will be empty if the privileged <xref href="Discord.GatewayIntents.MessageContent" data-throw-if-not-resolved="false"></xref> is disabled.
  example: []
  syntax:
    content: public string CleanContent { get; set; }
    parameters: []
    return:
      type: System.String
      description: A string that contains the body of the message stripped of mentions, markdown, emojis and pings; note that this field may be empty if there is an embed.
    content.vb: Public Property CleanContent As String
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent*
  implements:
  - Discord.IMessage.CleanContent
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
  id: Timestamp
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: MewdekoUserMessage.Timestamp
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Timestamp
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 68
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the time this message was sent.
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; }
    parameters: []
    return:
      type: System.DateTimeOffset
      description: Time of when the message was sent.
    content.vb: Public ReadOnly Property Timestamp As DateTimeOffset
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp*
  implements:
  - Discord.IMessage.Timestamp
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
  id: EditedTimestamp
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: EditedTimestamp
  nameWithType: MewdekoUserMessage.EditedTimestamp
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EditedTimestamp
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 71
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the time of this message's last edit.
  example: []
  syntax:
    content: public DateTimeOffset? EditedTimestamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: Time of when the message was last edited; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the message is never edited.
    content.vb: Public ReadOnly Property EditedTimestamp As DateTimeOffset?
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp*
  implements:
  - Discord.IMessage.EditedTimestamp
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
  id: Channel
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: MewdekoUserMessage.Channel
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Channel
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 74
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the source channel of the message.
  example: []
  syntax:
    content: public IMessageChannel Channel { get; set; }
    parameters: []
    return:
      type: Discord.IMessageChannel
    content.vb: Public Property Channel As IMessageChannel
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel*
  implements:
  - Discord.IMessage.Channel
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
  id: Author
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: MewdekoUserMessage.Author
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Author
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 77
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the author of this message.
  example: []
  syntax:
    content: public IUser Author { get; set; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: Public Property Author As IUser
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author*
  implements:
  - Discord.IMessage.Author
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
  id: Attachments
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Attachments
  nameWithType: MewdekoUserMessage.Attachments
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Attachments
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 80
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all attachments included in this message.
  remarks: >-
    This property gets a read-only collection of attachments associated with this message. Depending on the

    user's end-client, a sent message may contain one or more attachments. For example, mobile users may

    attach more than one file in their message, while the desktop client only allows for one.
  example: []
  syntax:
    content: public IReadOnlyCollection<IAttachment> Attachments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.IAttachment}
      description: A read-only collection of attachments.
    content.vb: Public Property Attachments As IReadOnlyCollection(Of IAttachment)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments*
  implements:
  - Discord.IMessage.Attachments
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
  id: Embeds
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Embeds
  nameWithType: MewdekoUserMessage.Embeds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Embeds
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 83
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all embeds included in this message.
  remarks: >-
    This property gets a read-only collection of embeds associated with this message. Depending on the

    message, a sent message may contain one or more embeds. This is usually true when multiple link previews

    are generated; however, only one <xref href="Discord.EmbedType.Rich" data-throw-if-not-resolved="false"></xref><xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref> can be featured.
  example: []
  syntax:
    content: public IReadOnlyCollection<IEmbed> Embeds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.IEmbed}
      description: A read-only collection of embed objects.
    content.vb: Public Property Embeds As IReadOnlyCollection(Of IEmbed)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds*
  implements:
  - Discord.IMessage.Embeds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
  id: Tags
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: MewdekoUserMessage.Tags
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Tags
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 86
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all tags included in this message's content.
  example: []
  syntax:
    content: public IReadOnlyCollection<ITag> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.ITag}
    content.vb: Public Property Tags As IReadOnlyCollection(Of ITag)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags*
  implements:
  - Discord.IMessage.Tags
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
  id: MentionedChannelIds
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: MentionedChannelIds
  nameWithType: MewdekoUserMessage.MentionedChannelIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MentionedChannelIds
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 89
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the IDs of channels mentioned in this message.
  example: []
  syntax:
    content: public IReadOnlyCollection<ulong> MentionedChannelIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.UInt64}
      description: A read-only collection of channel IDs.
    content.vb: Public Property MentionedChannelIds As IReadOnlyCollection(Of ULong)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds*
  implements:
  - Discord.IMessage.MentionedChannelIds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
  id: MentionedRoleIds
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: MentionedRoleIds
  nameWithType: MewdekoUserMessage.MentionedRoleIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MentionedRoleIds
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 92
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the IDs of roles mentioned in this message.
  example: []
  syntax:
    content: public IReadOnlyCollection<ulong> MentionedRoleIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.UInt64}
      description: A read-only collection of role IDs.
    content.vb: Public Property MentionedRoleIds As IReadOnlyCollection(Of ULong)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds*
  implements:
  - Discord.IMessage.MentionedRoleIds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
  id: MentionedUserIds
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: MentionedUserIds
  nameWithType: MewdekoUserMessage.MentionedUserIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MentionedUserIds
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 95
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the IDs of users mentioned in this message.
  example: []
  syntax:
    content: public IReadOnlyCollection<ulong> MentionedUserIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.UInt64}
      description: A read-only collection of user IDs.
    content.vb: Public Property MentionedUserIds As IReadOnlyCollection(Of ULong)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds*
  implements:
  - Discord.IMessage.MentionedUserIds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
  id: MentionedEveryone
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: MentionedEveryone
  nameWithType: MewdekoUserMessage.MentionedEveryone
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MentionedEveryone
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 98
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the value that indicates whether this message mentioned everyone.
  example: []
  syntax:
    content: public bool MentionedEveryone { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this message mentioned everyone; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Property MentionedEveryone As Boolean
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone*
  implements:
  - Discord.IMessage.MentionedEveryone
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
  id: Activity
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Activity
  nameWithType: MewdekoUserMessage.Activity
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Activity
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 101
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the activity associated with a message.
  remarks: >-
    Sent with Rich Presence-related chat embeds. This often refers to activity that requires end-user's

    interaction, such as a Spotify Invite activity.
  example: []
  syntax:
    content: public MessageActivity Activity { get; set; }
    parameters: []
    return:
      type: Discord.MessageActivity
      description: A message's activity, if any is associated.
    content.vb: Public Property Activity As MessageActivity
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity*
  implements:
  - Discord.IMessage.Activity
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
  id: Application
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: MewdekoUserMessage.Application
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Application
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 104
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the application associated with a message.
  remarks: Sent with Rich-Presence-related chat embeds.
  example: []
  syntax:
    content: public MessageApplication Application { get; set; }
    parameters: []
    return:
      type: Discord.MessageApplication
      description: A message's application, if any is associated.
    content.vb: Public Property Application As MessageApplication
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application*
  implements:
  - Discord.IMessage.Application
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
  id: Reference
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Reference
  nameWithType: MewdekoUserMessage.Reference
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reference
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 107
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the reference to the original message if it is a crosspost, channel follow add, pin, or reply message.
  remarks: >-
    Sent with cross-posted messages, meaning they were published from news channels

    and received by subscriber channels, channel follow adds, pins, and message replies.
  example: []
  syntax:
    content: public MessageReference Reference { get; set; }
    parameters: []
    return:
      type: Discord.MessageReference
      description: A message's reference, if any is associated.
    content.vb: Public Property Reference As MessageReference
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference*
  implements:
  - Discord.IMessage.Reference
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
  id: Reactions
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Reactions
  nameWithType: MewdekoUserMessage.Reactions
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reactions
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 110
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all reactions included in this message.
  example: []
  syntax:
    content: public IReadOnlyDictionary<IEmote, ReactionMetadata> Reactions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{Discord.IEmote,Discord.ReactionMetadata}
    content.vb: Public Property Reactions As IReadOnlyDictionary(Of IEmote, ReactionMetadata)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions*
  implements:
  - Discord.IMessage.Reactions
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
  id: Components
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Components
  nameWithType: MewdekoUserMessage.Components
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Components
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 113
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: The <xref href="Discord.IMessageComponent" data-throw-if-not-resolved="false"></xref>'s attached to this message
  example: []
  syntax:
    content: public IReadOnlyCollection<IMessageComponent> Components { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.IMessageComponent}
    content.vb: Public Property Components As IReadOnlyCollection(Of IMessageComponent)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components*
  implements:
  - Discord.IMessage.Components
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
  id: Stickers
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Stickers
  nameWithType: MewdekoUserMessage.Stickers
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Stickers
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 116
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets all stickers items included in this message.
  example: []
  syntax:
    content: public IReadOnlyCollection<IStickerItem> Stickers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.IStickerItem}
      description: A read-only collection of sticker item objects.
    content.vb: Public Property Stickers As IReadOnlyCollection(Of IStickerItem)
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers*
  implements:
  - Discord.IMessage.Stickers
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
  id: Flags
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: MewdekoUserMessage.Flags
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Flags
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 119
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the flags related to this message.
  remarks: This value is determined by bitwise OR-ing <xref href="Discord.MessageFlags" data-throw-if-not-resolved="false"></xref> values together.
  example: []
  syntax:
    content: public MessageFlags? Flags { get; set; }
    parameters: []
    return:
      type: System.Nullable{Discord.MessageFlags}
      description: A message's flags, if any is associated.
    content.vb: Public Property Flags As MessageFlags?
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags*
  implements:
  - Discord.IMessage.Flags
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
  id: Interaction
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Interaction
  nameWithType: MewdekoUserMessage.Interaction
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Interaction
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 122
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the interaction this message is a response to.
  example: []
  syntax:
    content: public IMessageInteraction Interaction { get; set; }
    parameters: []
    return:
      type: Discord.IMessageInteraction
      description: A <xref href="Discord.IMessageInteraction" data-throw-if-not-resolved="false"></xref> if the message is a response to an interaction; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public Property Interaction As IMessageInteraction
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction*
  implements:
  - Discord.IMessage.Interaction
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  id: ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: MewdekoUserMessage.ModifyAsync(Action<MessageProperties>, RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ModifyAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 125
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Modifies this message.
  remarks: >-
    This method modifies this message with the specified properties. To see an example of this

    method and what properties are available, please refer to <xref href="Discord.MessageProperties" data-throw-if-not-resolved="false"></xref>.
  example:
  - >-
    <p>The following example replaces the content of the message with <code>Hello World!</code>.</p>

    <pre><code class="lang-cs">await msg.ModifyAsync(x =&gt; x.Content = "Hello World!");</code></pre>
  syntax:
    content: public Task ModifyAsync(Action<MessageProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: System.Action{Discord.MessageProperties}
      description: A delegate containing the properties to modify the message with.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous modification operation.
    content.vb: Public Function ModifyAsync(func As Action(Of MessageProperties), options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync*
  implements:
  - Discord.IUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  nameWithType.vb: MewdekoUserMessage.ModifyAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of MessageProperties), RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync(Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync(Discord.RequestOptions)
  id: PinAsync(Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: PinAsync(RequestOptions)
  nameWithType: MewdekoUserMessage.PinAsync(RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PinAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 129
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Adds this message to its channel's pinned messages.
  example: []
  syntax:
    content: public Task PinAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for pinning this message.
    content.vb: Public Function PinAsync(options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync*
  implements:
  - Discord.IUserMessage.PinAsync(Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync(Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync(Discord.RequestOptions)
  id: UnpinAsync(Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: UnpinAsync(RequestOptions)
  nameWithType: MewdekoUserMessage.UnpinAsync(RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnpinAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Removes this message from its channel's pinned messages.
  example: []
  syntax:
    content: public Task UnpinAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for unpinning this message.
    content.vb: Public Function UnpinAsync(options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync*
  implements:
  - Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync(Discord.RequestOptions)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync(Discord.RequestOptions)
  id: CrosspostAsync(Discord.RequestOptions)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: CrosspostAsync(RequestOptions)
  nameWithType: MewdekoUserMessage.CrosspostAsync(RequestOptions)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CrosspostAsync
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 135
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Publishes (crossposts) this message.
  remarks: >-
    <div class="WARNING"><h5>warning</h5><p>
                    This call will throw an <xref href="System.InvalidOperationException" data-throw-if-not-resolved="false"></xref> if attempted in a non-news channel.
                </p></div>
                This method will publish (crosspost) the message. Please note, publishing (crossposting), is only available in news channels.
  example: []
  syntax:
    content: public Task CrosspostAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation for publishing this message.
    content.vb: Public Function CrosspostAsync(options As RequestOptions = Nothing) As Task
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync*
  implements:
  - Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  commentId: M:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  id: Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)
  nameWithType: MewdekoUserMessage.Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve(Discord.TagHandling, Discord.TagHandling, Discord.TagHandling, Discord.TagHandling, Discord.TagHandling)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Resolve
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 138
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Transforms this message's text into a human-readable form by resolving its tags.
  example: []
  syntax:
    content: public string Resolve(TagHandling userHandling = TagHandling.Name, TagHandling channelHandling = TagHandling.Name, TagHandling roleHandling = TagHandling.Name, TagHandling everyoneHandling = TagHandling.Ignore, TagHandling emojiHandling = TagHandling.Name)
    parameters:
    - id: userHandling
      type: Discord.TagHandling
      description: Determines how the user tag should be handled.
    - id: channelHandling
      type: Discord.TagHandling
      description: Determines how the channel tag should be handled.
    - id: roleHandling
      type: Discord.TagHandling
      description: Determines how the role tag should be handled.
    - id: everyoneHandling
      type: Discord.TagHandling
      description: Determines how the @everyone tag should be handled.
    - id: emojiHandling
      type: Discord.TagHandling
      description: Determines how the emoji tag should be handled.
    return:
      type: System.String
    content.vb: Public Function Resolve(userHandling As TagHandling = TagHandling.Name, channelHandling As TagHandling = TagHandling.Name, roleHandling As TagHandling = TagHandling.Name, everyoneHandling As TagHandling = TagHandling.Ignore, emojiHandling As TagHandling = TagHandling.Name) As String
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve*
  implements:
  - Discord.IUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
  id: ResolvedData
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: ResolvedData
  nameWithType: MewdekoUserMessage.ResolvedData
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ResolvedData
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 147
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the resolved data if the message has components. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> otherwise.
  example: []
  syntax:
    content: public MessageResolvedData ResolvedData { get; }
    parameters: []
    return:
      type: Discord.MessageResolvedData
    content.vb: Public ReadOnly Property ResolvedData As MessageResolvedData
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData*
  implements:
  - Discord.IUserMessage.ResolvedData
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
  id: ReferencedMessage
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: ReferencedMessage
  nameWithType: MewdekoUserMessage.ReferencedMessage
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReferencedMessage
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 150
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the referenced message if it is a crosspost, channel follow add, pin, or reply message.
  example: []
  syntax:
    content: public IUserMessage ReferencedMessage { get; set; }
    parameters: []
    return:
      type: Discord.IUserMessage
      description: The referenced message, if any is associated and still exists.
    content.vb: Public Property ReferencedMessage As IUserMessage
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage*
  implements:
  - Discord.IUserMessage.ReferencedMessage
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
  id: InteractionMetadata
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: InteractionMetadata
  nameWithType: MewdekoUserMessage.InteractionMetadata
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: InteractionMetadata
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 153
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the interaction metadata for the interaction this message is a response to.
  remarks: Will be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if the message is not a response to an interaction.
  example: []
  syntax:
    content: public IMessageInteractionMetadata InteractionMetadata { get; }
    parameters: []
    return:
      type: Discord.IMessageInteractionMetadata
    content.vb: Public ReadOnly Property InteractionMetadata As IMessageInteractionMetadata
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata*
  implements:
  - Discord.IUserMessage.InteractionMetadata
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
  id: Thread
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: Thread
  nameWithType: MewdekoUserMessage.Thread
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Thread
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 156
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the thread that was started from this message.
  example: []
  syntax:
    content: public IThreadChannel Thread { get; }
    parameters: []
    return:
      type: Discord.IThreadChannel
      description: An <xref href="Discord.IThreadChannel" data-throw-if-not-resolved="false"></xref> object if this message has thread attached; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public ReadOnly Property Thread As IThreadChannel
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread*
  implements:
  - Discord.IMessage.Thread
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
  commentId: P:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
  id: RoleSubscriptionData
  parent: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
  langs:
  - csharp
  - vb
  name: RoleSubscriptionData
  nameWithType: MewdekoUserMessage.RoleSubscriptionData
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RoleSubscriptionData
    path: src/Mewdeko/Common/DiscordImplementations/MewdekoUserMessage.cs
    startLine: 159
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.DiscordImplementations
  summary: Gets the data of the role subscription purchase or renewal that prompted this <xref href="Discord.MessageType.RoleSubscriptionPurchase" data-throw-if-not-resolved="false"></xref> message.
  example: []
  syntax:
    content: public MessageRoleSubscriptionData RoleSubscriptionData { get; }
    parameters: []
    return:
      type: Discord.MessageRoleSubscriptionData
      description: A <xref href="Discord.MessageRoleSubscriptionData" data-throw-if-not-resolved="false"></xref> if the message is a role subscription purchase message; otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: Public ReadOnly Property RoleSubscriptionData As MessageRoleSubscriptionData
  overload: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData*
  implements:
  - Discord.IMessage.RoleSubscriptionData
references:
- uid: Mewdeko.Common.DiscordImplementations
  commentId: N:Mewdeko.Common.DiscordImplementations
  href: Mewdeko.html
  name: Mewdeko.Common.DiscordImplementations
  nameWithType: Mewdeko.Common.DiscordImplementations
  fullName: Mewdeko.Common.DiscordImplementations
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.DiscordImplementations
    name: DiscordImplementations
    href: Mewdeko.Common.DiscordImplementations.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.DiscordImplementations
    name: DiscordImplementations
    href: Mewdeko.Common.DiscordImplementations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  isExternal: true
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.IMessage
  commentId: T:Discord.IMessage
  parent: Discord
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Discord.IMessage
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  isExternal: true
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: IEntity<ulong>
  nameWithType: IEntity<ulong>
  fullName: Discord.IEntity<ulong>
  nameWithType.vb: IEntity(Of ULong)
  fullName.vb: Discord.IEntity(Of ULong)
  name.vb: IEntity(Of ULong)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  isExternal: true
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Discord.IMessage.Mewdeko.Extensions.Extensions.DeleteAfter(System.Int32)
  commentId: M:Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  name: DeleteAfter(IMessage, int)
  nameWithType: Extensions.DeleteAfter(IMessage, int)
  fullName: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage, int)
  nameWithType.vb: Extensions.DeleteAfter(IMessage, Integer)
  fullName.vb: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage, Integer)
  name.vb: DeleteAfter(IMessage, Integer)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Discord.IMessage.Mewdeko.Extensions.Extensions.IsAuthor(Discord.IDiscordClient)
  commentId: M:Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  name: IsAuthor(IMessage, IDiscordClient)
  nameWithType: Extensions.IsAuthor(IMessage, IDiscordClient)
  fullName: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage, Discord.IDiscordClient)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
    name: IsAuthor
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IDiscordClient
    name: IDiscordClient
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
    name: IsAuthor
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IDiscordClient
    name: IDiscordClient
    isExternal: true
  - name: )
- uid: Discord.IMessage.Mewdeko.Extensions.MessageExtensions.GetJumpLink
  commentId: M:Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  parent: Mewdeko.Extensions.MessageExtensions
  definition: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  name: GetJumpLink(IMessage)
  nameWithType: MessageExtensions.GetJumpLink(IMessage)
  fullName: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
    name: GetJumpLink
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
    name: GetJumpLink
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
- uid: Discord.IMessage.Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource
  commentId: M:Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  parent: Mewdeko.Extensions.MessageExtensions
  definition: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  name: GetNewEmbedSource(IMessage)
  nameWithType: MessageExtensions.GetNewEmbedSource(IMessage)
  fullName: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
    name: GetNewEmbedSource
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
    name: GetNewEmbedSource
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
- uid: Discord.IUserMessage.Mewdeko.Extensions.Extensions.DeleteAfter(System.Int32)
  commentId: M:Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  name: DeleteAfter(IUserMessage, int)
  nameWithType: Extensions.DeleteAfter(IUserMessage, int)
  fullName: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage, int)
  nameWithType.vb: Extensions.DeleteAfter(IUserMessage, Integer)
  fullName.vb: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage, Integer)
  name.vb: DeleteAfter(IUserMessage, Integer)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Discord.IUserMessage.Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(System.String)
  commentId: M:Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
  parent: Mewdeko.Extensions.MessageChannelExtensions
  definition: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
  href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  name: SendConfirmReplyAsync(IUserMessage, string)
  nameWithType: MessageChannelExtensions.SendConfirmReplyAsync(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage, string)
  nameWithType.vb: MessageChannelExtensions.SendConfirmReplyAsync(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage, String)
  name.vb: SendConfirmReplyAsync(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
    name: SendConfirmReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
    name: SendConfirmReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Discord.IUserMessage.Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(System.String)
  commentId: M:Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
  parent: Mewdeko.Extensions.MessageChannelExtensions
  definition: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
  href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  name: SendErrorReplyAsync(IUserMessage, string)
  nameWithType: MessageChannelExtensions.SendErrorReplyAsync(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage, string)
  nameWithType.vb: MessageChannelExtensions.SendErrorReplyAsync(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage, String)
  name.vb: SendErrorReplyAsync(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
    name: SendErrorReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
    name: SendErrorReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Discord.IUserMessage.Mewdeko.Extensions.MessageExtensions.ReplyError(System.String)
  commentId: M:Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
  parent: Mewdeko.Extensions.MessageExtensions
  definition: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  name: ReplyError(IUserMessage, string)
  nameWithType: MessageExtensions.ReplyError(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage, string)
  nameWithType.vb: MessageExtensions.ReplyError(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage, String)
  name.vb: ReplyError(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
    name: ReplyError
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
    name: ReplyError
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<MewdekoUserMessage>(MewdekoUserMessage, string)
  nameWithType: Extensions.ThrowIfNull<MewdekoUserMessage>(MewdekoUserMessage, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.DiscordImplementations.MewdekoUserMessage>(Mewdeko.Common.DiscordImplementations.MewdekoUserMessage, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of MewdekoUserMessage)(MewdekoUserMessage, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.DiscordImplementations.MewdekoUserMessage)(Mewdeko.Common.DiscordImplementations.MewdekoUserMessage, String)
  name.vb: ThrowIfNull(Of MewdekoUserMessage)(MewdekoUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.DiscordImplementations.MewdekoUserMessage,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
    name: MewdekoUserMessage
    href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
    name: MewdekoUserMessage
    href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.DiscordImplementations.MewdekoUserMessage,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
    name: MewdekoUserMessage
    href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html
  - name: )
  - name: (
  - uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage
    name: MewdekoUserMessage
    href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  isExternal: true
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    isExternal: true
  - name: <
  - name: TId
  - name: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TId
  - name: )
- uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
  commentId: M:Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  name: DeleteAfter(IMessage, int)
  nameWithType: Extensions.DeleteAfter(IMessage, int)
  fullName: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage, int)
  nameWithType.vb: Extensions.DeleteAfter(IMessage, Integer)
  fullName.vb: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage, Integer)
  name.vb: DeleteAfter(IMessage, Integer)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IMessage_System_Int32_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
  commentId: M:Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  name: IsAuthor(IMessage, IDiscordClient)
  nameWithType: Extensions.IsAuthor(IMessage, IDiscordClient)
  fullName: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage, Discord.IDiscordClient)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
    name: IsAuthor
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IDiscordClient
    name: IDiscordClient
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.IsAuthor(Discord.IMessage,Discord.IDiscordClient)
    name: IsAuthor
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_IsAuthor_Discord_IMessage_Discord_IDiscordClient_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IDiscordClient
    name: IDiscordClient
    isExternal: true
  - name: )
- uid: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  commentId: M:Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  isExternal: true
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  name: GetJumpLink(IMessage)
  nameWithType: MessageExtensions.GetJumpLink(IMessage)
  fullName: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
    name: GetJumpLink
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.GetJumpLink(Discord.IMessage)
    name: GetJumpLink
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetJumpLink_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
- uid: Mewdeko.Extensions.MessageExtensions
  commentId: T:Mewdeko.Extensions.MessageExtensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.MessageExtensions.html
  name: MessageExtensions
  nameWithType: MessageExtensions
  fullName: Mewdeko.Extensions.MessageExtensions
- uid: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  commentId: M:Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  isExternal: true
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  name: GetNewEmbedSource(IMessage)
  nameWithType: MessageExtensions.GetNewEmbedSource(IMessage)
  fullName: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
    name: GetNewEmbedSource
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.GetNewEmbedSource(Discord.IMessage)
    name: GetNewEmbedSource
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_GetNewEmbedSource_Discord_IMessage_
  - name: (
  - uid: Discord.IMessage
    name: IMessage
    isExternal: true
  - name: )
- uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
  commentId: M:Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  name: DeleteAfter(IUserMessage, int)
  nameWithType: Extensions.DeleteAfter(IUserMessage, int)
  fullName: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage, int)
  nameWithType.vb: Extensions.DeleteAfter(IUserMessage, Integer)
  fullName.vb: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage, Integer)
  name.vb: DeleteAfter(IUserMessage, Integer)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.DeleteAfter(Discord.IUserMessage,System.Int32)
    name: DeleteAfter
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_DeleteAfter_Discord_IUserMessage_System_Int32_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
  commentId: M:Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
  isExternal: true
  href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  name: SendConfirmReplyAsync(IUserMessage, string)
  nameWithType: MessageChannelExtensions.SendConfirmReplyAsync(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage, string)
  nameWithType.vb: MessageChannelExtensions.SendConfirmReplyAsync(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage, String)
  name.vb: SendConfirmReplyAsync(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
    name: SendConfirmReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendConfirmReplyAsync(Discord.IUserMessage,System.String)
    name: SendConfirmReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendConfirmReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.MessageChannelExtensions
  commentId: T:Mewdeko.Extensions.MessageChannelExtensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.MessageChannelExtensions.html
  name: MessageChannelExtensions
  nameWithType: MessageChannelExtensions
  fullName: Mewdeko.Extensions.MessageChannelExtensions
- uid: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
  commentId: M:Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
  isExternal: true
  href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  name: SendErrorReplyAsync(IUserMessage, string)
  nameWithType: MessageChannelExtensions.SendErrorReplyAsync(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage, string)
  nameWithType.vb: MessageChannelExtensions.SendErrorReplyAsync(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage, String)
  name.vb: SendErrorReplyAsync(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
    name: SendErrorReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageChannelExtensions.SendErrorReplyAsync(Discord.IUserMessage,System.String)
    name: SendErrorReplyAsync
    href: Mewdeko.Extensions.MessageChannelExtensions.html#Mewdeko_Extensions_MessageChannelExtensions_SendErrorReplyAsync_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
  commentId: M:Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
  isExternal: true
  href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  name: ReplyError(IUserMessage, string)
  nameWithType: MessageExtensions.ReplyError(IUserMessage, string)
  fullName: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage, string)
  nameWithType.vb: MessageExtensions.ReplyError(IUserMessage, String)
  fullName.vb: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage, String)
  name.vb: ReplyError(IUserMessage, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
    name: ReplyError
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.MessageExtensions.ReplyError(Discord.IUserMessage,System.String)
    name: ReplyError
    href: Mewdeko.Extensions.MessageExtensions.html#Mewdeko_Extensions_MessageExtensions_ReplyError_Discord_IUserMessage_System_String_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Id
  name: Id
  nameWithType: MewdekoUserMessage.Id
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Id
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<ulong>.Id
  fullName: Discord.IEntity<ulong>.Id
  nameWithType.vb: IEntity(Of ULong).Id
  fullName.vb: Discord.IEntity(Of ULong).Id
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  isExternal: true
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_CreatedAt
  name: CreatedAt
  nameWithType: MewdekoUserMessage.CreatedAt
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CreatedAt
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  isExternal: true
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_DeleteAsync_Discord_RequestOptions_
  name: DeleteAsync
  nameWithType: MewdekoUserMessage.DeleteAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.DeleteAsync
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  isExternal: true
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  isExternal: true
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Discord.IEmote
  commentId: T:Discord.IEmote
  parent: Discord
  isExternal: true
  name: IEmote
  nameWithType: IEmote
  fullName: Discord.IEmote
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_AddReactionAsync_Discord_IEmote_Discord_RequestOptions_
  name: AddReactionAsync
  nameWithType: MewdekoUserMessage.AddReactionAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.AddReactionAsync
- uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: AddReactionAsync(IEmote, RequestOptions)
  nameWithType: IMessage.AddReactionAsync(IEmote, RequestOptions)
  fullName: Discord.IMessage.AddReactionAsync(Discord.IEmote, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_RemoveReactionAsync_Discord_IEmote_Discord_IUser_Discord_RequestOptions_
  name: RemoveReactionAsync
  nameWithType: MewdekoUserMessage.RemoveReactionAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveReactionAsync
- uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: RemoveReactionAsync(IEmote, IUser, RequestOptions)
  nameWithType: IMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions)
  fullName: Discord.IMessage.RemoveReactionAsync(Discord.IEmote, Discord.IUser, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: RemoveReactionAsync(IEmote, ulong, RequestOptions)
  nameWithType: IMessage.RemoveReactionAsync(IEmote, ulong, RequestOptions)
  fullName: Discord.IMessage.RemoveReactionAsync(Discord.IEmote, ulong, Discord.RequestOptions)
  nameWithType.vb: IMessage.RemoveReactionAsync(IEmote, ULong, RequestOptions)
  fullName.vb: Discord.IMessage.RemoveReactionAsync(Discord.IEmote, ULong, Discord.RequestOptions)
  name.vb: RemoveReactionAsync(IEmote, ULong, RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_RemoveAllReactionsAsync_Discord_RequestOptions_
  name: RemoveAllReactionsAsync
  nameWithType: MewdekoUserMessage.RemoveAllReactionsAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsAsync
- uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: RemoveAllReactionsAsync(RequestOptions)
  nameWithType: IMessage.RemoveAllReactionsAsync(RequestOptions)
  fullName: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_RemoveAllReactionsForEmoteAsync_Discord_IEmote_Discord_RequestOptions_
  name: RemoveAllReactionsForEmoteAsync
  nameWithType: MewdekoUserMessage.RemoveAllReactionsForEmoteAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RemoveAllReactionsForEmoteAsync
- uid: Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: RemoveAllReactionsForEmoteAsync(IEmote, RequestOptions)
  nameWithType: IMessage.RemoveAllReactionsForEmoteAsync(IEmote, RequestOptions)
  fullName: Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
    name: RemoveAllReactionsForEmoteAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.RemoveAllReactionsForEmoteAsync(Discord.IEmote,Discord.RequestOptions)
    name: RemoveAllReactionsForEmoteAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.AsyncEnumerableExtensions.FlattenAsync``1(System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IEnumerable{``0}})
  commentId: M:Discord.AsyncEnumerableExtensions.FlattenAsync``1(System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IEnumerable{``0}})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>)
  nameWithType: AsyncEnumerableExtensions.FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>)
  fullName: Discord.AsyncEnumerableExtensions.FlattenAsync<T>(System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IEnumerable<T>>)
  nameWithType.vb: AsyncEnumerableExtensions.FlattenAsync(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  fullName.vb: Discord.AsyncEnumerableExtensions.FlattenAsync(Of T)(System.Collections.Generic.IAsyncEnumerable(Of System.Collections.Generic.IEnumerable(Of T)))
  name.vb: FlattenAsync(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  spec.csharp:
  - uid: Discord.AsyncEnumerableExtensions.FlattenAsync``1(System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IEnumerable{``0}})
    name: FlattenAsync
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.AsyncEnumerableExtensions.FlattenAsync``1(System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IEnumerable{``0}})
    name: FlattenAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: Discord.DiscordConfig.MaxUserReactionsPerBatch
  commentId: F:Discord.DiscordConfig.MaxUserReactionsPerBatch
  isExternal: true
  name: MaxUserReactionsPerBatch
  nameWithType: DiscordConfig.MaxUserReactionsPerBatch
  fullName: Discord.DiscordConfig.MaxUserReactionsPerBatch
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_GetReactionUsersAsync_Discord_IEmote_System_Int32_Discord_RequestOptions_Discord_ReactionType_
  name: GetReactionUsersAsync
  nameWithType: MewdekoUserMessage.GetReactionUsersAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.GetReactionUsersAsync
- uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  commentId: M:Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
  parent: Discord.IMessage
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetReactionUsersAsync(IEmote, int, RequestOptions, ReactionType)
  nameWithType: IMessage.GetReactionUsersAsync(IEmote, int, RequestOptions, ReactionType)
  fullName: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote, int, Discord.RequestOptions, Discord.ReactionType)
  nameWithType.vb: IMessage.GetReactionUsersAsync(IEmote, Integer, RequestOptions, ReactionType)
  fullName.vb: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote, Integer, Discord.RequestOptions, Discord.ReactionType)
  name.vb: GetReactionUsersAsync(IEmote, Integer, RequestOptions, ReactionType)
  spec.csharp:
  - uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
    name: GetReactionUsersAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ReactionType
    name: ReactionType
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions,Discord.ReactionType)
    name: GetReactionUsersAsync
    isExternal: true
  - name: (
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ReactionType
    name: ReactionType
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Discord.ReactionType
  commentId: T:Discord.ReactionType
  parent: Discord
  isExternal: true
  name: ReactionType
  nameWithType: ReactionType
  fullName: Discord.ReactionType
- uid: System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{Discord.IUser}}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.Collections.Generic.IReadOnlyCollection{Discord.IUser}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<IReadOnlyCollection<IUser>>
  nameWithType: IAsyncEnumerable<IReadOnlyCollection<IUser>>
  fullName: System.Collections.Generic.IAsyncEnumerable<System.Collections.Generic.IReadOnlyCollection<Discord.IUser>>
  nameWithType.vb: IAsyncEnumerable(Of IReadOnlyCollection(Of IUser))
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of System.Collections.Generic.IReadOnlyCollection(Of Discord.IUser))
  name.vb: IAsyncEnumerable(Of IReadOnlyCollection(Of IUser))
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Type
  name: Type
  nameWithType: MewdekoUserMessage.Type
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Type
- uid: Discord.IMessage.Type
  commentId: P:Discord.IMessage.Type
  parent: Discord.IMessage
  isExternal: true
  name: Type
  nameWithType: IMessage.Type
  fullName: Discord.IMessage.Type
- uid: Discord.MessageType
  commentId: T:Discord.MessageType
  parent: Discord
  isExternal: true
  name: MessageType
  nameWithType: MessageType
  fullName: Discord.MessageType
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Source
  name: Source
  nameWithType: MewdekoUserMessage.Source
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Source
- uid: Discord.IMessage.Source
  commentId: P:Discord.IMessage.Source
  parent: Discord.IMessage
  isExternal: true
  name: Source
  nameWithType: IMessage.Source
  fullName: Discord.IMessage.Source
- uid: Discord.MessageSource
  commentId: T:Discord.MessageSource
  parent: Discord
  isExternal: true
  name: MessageSource
  nameWithType: MessageSource
  fullName: Discord.MessageSource
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_IsTTS
  name: IsTTS
  nameWithType: MewdekoUserMessage.IsTTS
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsTTS
- uid: Discord.IMessage.IsTTS
  commentId: P:Discord.IMessage.IsTTS
  parent: Discord.IMessage
  isExternal: true
  name: IsTTS
  nameWithType: IMessage.IsTTS
  fullName: Discord.IMessage.IsTTS
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_IsPinned
  name: IsPinned
  nameWithType: MewdekoUserMessage.IsPinned
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsPinned
- uid: Discord.IMessage.IsPinned
  commentId: P:Discord.IMessage.IsPinned
  parent: Discord.IMessage
  isExternal: true
  name: IsPinned
  nameWithType: IMessage.IsPinned
  fullName: Discord.IMessage.IsPinned
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_IsSuppressed
  name: IsSuppressed
  nameWithType: MewdekoUserMessage.IsSuppressed
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.IsSuppressed
- uid: Discord.IMessage.IsSuppressed
  commentId: P:Discord.IMessage.IsSuppressed
  parent: Discord.IMessage
  isExternal: true
  name: IsSuppressed
  nameWithType: IMessage.IsSuppressed
  fullName: Discord.IMessage.IsSuppressed
- uid: Discord.GatewayIntents.MessageContent
  commentId: F:Discord.GatewayIntents.MessageContent
  isExternal: true
  name: MessageContent
  nameWithType: GatewayIntents.MessageContent
  fullName: Discord.GatewayIntents.MessageContent
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Content
  name: Content
  nameWithType: MewdekoUserMessage.Content
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Content
- uid: Discord.IMessage.Content
  commentId: P:Discord.IMessage.Content
  parent: Discord.IMessage
  isExternal: true
  name: Content
  nameWithType: IMessage.Content
  fullName: Discord.IMessage.Content
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_CleanContent
  name: CleanContent
  nameWithType: MewdekoUserMessage.CleanContent
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CleanContent
- uid: Discord.IMessage.CleanContent
  commentId: P:Discord.IMessage.CleanContent
  parent: Discord.IMessage
  isExternal: true
  name: CleanContent
  nameWithType: IMessage.CleanContent
  fullName: Discord.IMessage.CleanContent
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Timestamp
  name: Timestamp
  nameWithType: MewdekoUserMessage.Timestamp
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Timestamp
- uid: Discord.IMessage.Timestamp
  commentId: P:Discord.IMessage.Timestamp
  parent: Discord.IMessage
  isExternal: true
  name: Timestamp
  nameWithType: IMessage.Timestamp
  fullName: Discord.IMessage.Timestamp
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_EditedTimestamp
  name: EditedTimestamp
  nameWithType: MewdekoUserMessage.EditedTimestamp
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.EditedTimestamp
- uid: Discord.IMessage.EditedTimestamp
  commentId: P:Discord.IMessage.EditedTimestamp
  parent: Discord.IMessage
  isExternal: true
  name: EditedTimestamp
  nameWithType: IMessage.EditedTimestamp
  fullName: Discord.IMessage.EditedTimestamp
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: DateTimeOffset?
  nameWithType: DateTimeOffset?
  fullName: System.DateTimeOffset?
  spec.csharp:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
  spec.vb:
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Channel
  name: Channel
  nameWithType: MewdekoUserMessage.Channel
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Channel
- uid: Discord.IMessage.Channel
  commentId: P:Discord.IMessage.Channel
  parent: Discord.IMessage
  isExternal: true
  name: Channel
  nameWithType: IMessage.Channel
  fullName: Discord.IMessage.Channel
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  isExternal: true
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Author
  name: Author
  nameWithType: MewdekoUserMessage.Author
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Author
- uid: Discord.IMessage.Author
  commentId: P:Discord.IMessage.Author
  parent: Discord.IMessage
  isExternal: true
  name: Author
  nameWithType: IMessage.Author
  fullName: Discord.IMessage.Author
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Attachments
  name: Attachments
  nameWithType: MewdekoUserMessage.Attachments
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Attachments
- uid: Discord.IMessage.Attachments
  commentId: P:Discord.IMessage.Attachments
  parent: Discord.IMessage
  isExternal: true
  name: Attachments
  nameWithType: IMessage.Attachments
  fullName: Discord.IMessage.Attachments
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.IAttachment}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.IAttachment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IAttachment>
  nameWithType: IReadOnlyCollection<IAttachment>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.IAttachment>
  nameWithType.vb: IReadOnlyCollection(Of IAttachment)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.IAttachment)
  name.vb: IReadOnlyCollection(Of IAttachment)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.IAttachment
    name: IAttachment
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IAttachment
    name: IAttachment
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.EmbedType.Rich
  commentId: F:Discord.EmbedType.Rich
  isExternal: true
  name: Rich
  nameWithType: EmbedType.Rich
  fullName: Discord.EmbedType.Rich
- uid: Discord.Embed
  commentId: T:Discord.Embed
  isExternal: true
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Embeds
  name: Embeds
  nameWithType: MewdekoUserMessage.Embeds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Embeds
- uid: Discord.IMessage.Embeds
  commentId: P:Discord.IMessage.Embeds
  parent: Discord.IMessage
  isExternal: true
  name: Embeds
  nameWithType: IMessage.Embeds
  fullName: Discord.IMessage.Embeds
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.IEmbed}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.IEmbed}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IEmbed>
  nameWithType: IReadOnlyCollection<IEmbed>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.IEmbed>
  nameWithType.vb: IReadOnlyCollection(Of IEmbed)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.IEmbed)
  name.vb: IReadOnlyCollection(Of IEmbed)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.IEmbed
    name: IEmbed
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IEmbed
    name: IEmbed
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Tags
  name: Tags
  nameWithType: MewdekoUserMessage.Tags
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Tags
- uid: Discord.IMessage.Tags
  commentId: P:Discord.IMessage.Tags
  parent: Discord.IMessage
  isExternal: true
  name: Tags
  nameWithType: IMessage.Tags
  fullName: Discord.IMessage.Tags
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.ITag}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.ITag}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<ITag>
  nameWithType: IReadOnlyCollection<ITag>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.ITag>
  nameWithType.vb: IReadOnlyCollection(Of ITag)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.ITag)
  name.vb: IReadOnlyCollection(Of ITag)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.ITag
    name: ITag
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ITag
    name: ITag
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_MentionedChannelIds
  name: MentionedChannelIds
  nameWithType: MewdekoUserMessage.MentionedChannelIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedChannelIds
- uid: Discord.IMessage.MentionedChannelIds
  commentId: P:Discord.IMessage.MentionedChannelIds
  parent: Discord.IMessage
  isExternal: true
  name: MentionedChannelIds
  nameWithType: IMessage.MentionedChannelIds
  fullName: Discord.IMessage.MentionedChannelIds
- uid: System.Collections.Generic.IReadOnlyCollection{System.UInt64}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.UInt64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<ulong>
  nameWithType: IReadOnlyCollection<ulong>
  fullName: System.Collections.Generic.IReadOnlyCollection<ulong>
  nameWithType.vb: IReadOnlyCollection(Of ULong)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of ULong)
  name.vb: IReadOnlyCollection(Of ULong)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_MentionedRoleIds
  name: MentionedRoleIds
  nameWithType: MewdekoUserMessage.MentionedRoleIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedRoleIds
- uid: Discord.IMessage.MentionedRoleIds
  commentId: P:Discord.IMessage.MentionedRoleIds
  parent: Discord.IMessage
  isExternal: true
  name: MentionedRoleIds
  nameWithType: IMessage.MentionedRoleIds
  fullName: Discord.IMessage.MentionedRoleIds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_MentionedUserIds
  name: MentionedUserIds
  nameWithType: MewdekoUserMessage.MentionedUserIds
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedUserIds
- uid: Discord.IMessage.MentionedUserIds
  commentId: P:Discord.IMessage.MentionedUserIds
  parent: Discord.IMessage
  isExternal: true
  name: MentionedUserIds
  nameWithType: IMessage.MentionedUserIds
  fullName: Discord.IMessage.MentionedUserIds
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_MentionedEveryone
  name: MentionedEveryone
  nameWithType: MewdekoUserMessage.MentionedEveryone
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.MentionedEveryone
- uid: Discord.IMessage.MentionedEveryone
  commentId: P:Discord.IMessage.MentionedEveryone
  parent: Discord.IMessage
  isExternal: true
  name: MentionedEveryone
  nameWithType: IMessage.MentionedEveryone
  fullName: Discord.IMessage.MentionedEveryone
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Activity
  name: Activity
  nameWithType: MewdekoUserMessage.Activity
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Activity
- uid: Discord.IMessage.Activity
  commentId: P:Discord.IMessage.Activity
  parent: Discord.IMessage
  isExternal: true
  name: Activity
  nameWithType: IMessage.Activity
  fullName: Discord.IMessage.Activity
- uid: Discord.MessageActivity
  commentId: T:Discord.MessageActivity
  parent: Discord
  isExternal: true
  name: MessageActivity
  nameWithType: MessageActivity
  fullName: Discord.MessageActivity
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Application
  name: Application
  nameWithType: MewdekoUserMessage.Application
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Application
- uid: Discord.IMessage.Application
  commentId: P:Discord.IMessage.Application
  parent: Discord.IMessage
  isExternal: true
  name: Application
  nameWithType: IMessage.Application
  fullName: Discord.IMessage.Application
- uid: Discord.MessageApplication
  commentId: T:Discord.MessageApplication
  parent: Discord
  isExternal: true
  name: MessageApplication
  nameWithType: MessageApplication
  fullName: Discord.MessageApplication
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Reference
  name: Reference
  nameWithType: MewdekoUserMessage.Reference
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reference
- uid: Discord.IMessage.Reference
  commentId: P:Discord.IMessage.Reference
  parent: Discord.IMessage
  isExternal: true
  name: Reference
  nameWithType: IMessage.Reference
  fullName: Discord.IMessage.Reference
- uid: Discord.MessageReference
  commentId: T:Discord.MessageReference
  parent: Discord
  isExternal: true
  name: MessageReference
  nameWithType: MessageReference
  fullName: Discord.MessageReference
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Reactions
  name: Reactions
  nameWithType: MewdekoUserMessage.Reactions
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Reactions
- uid: Discord.IMessage.Reactions
  commentId: P:Discord.IMessage.Reactions
  parent: Discord.IMessage
  isExternal: true
  name: Reactions
  nameWithType: IMessage.Reactions
  fullName: Discord.IMessage.Reactions
- uid: System.Collections.Generic.IReadOnlyDictionary{Discord.IEmote,Discord.ReactionMetadata}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{Discord.IEmote,Discord.ReactionMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<IEmote, ReactionMetadata>
  nameWithType: IReadOnlyDictionary<IEmote, ReactionMetadata>
  fullName: System.Collections.Generic.IReadOnlyDictionary<Discord.IEmote, Discord.ReactionMetadata>
  nameWithType.vb: IReadOnlyDictionary(Of IEmote, ReactionMetadata)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of Discord.IEmote, Discord.ReactionMetadata)
  name.vb: IReadOnlyDictionary(Of IEmote, ReactionMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ReactionMetadata
    name: ReactionMetadata
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IEmote
    name: IEmote
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ReactionMetadata
    name: ReactionMetadata
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Discord.IMessageComponent
  commentId: T:Discord.IMessageComponent
  isExternal: true
  name: IMessageComponent
  nameWithType: IMessageComponent
  fullName: Discord.IMessageComponent
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Components
  name: Components
  nameWithType: MewdekoUserMessage.Components
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Components
- uid: Discord.IMessage.Components
  commentId: P:Discord.IMessage.Components
  parent: Discord.IMessage
  isExternal: true
  name: Components
  nameWithType: IMessage.Components
  fullName: Discord.IMessage.Components
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.IMessageComponent}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.IMessageComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IMessageComponent>
  nameWithType: IReadOnlyCollection<IMessageComponent>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.IMessageComponent>
  nameWithType.vb: IReadOnlyCollection(Of IMessageComponent)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.IMessageComponent)
  name.vb: IReadOnlyCollection(Of IMessageComponent)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.IMessageComponent
    name: IMessageComponent
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IMessageComponent
    name: IMessageComponent
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Stickers
  name: Stickers
  nameWithType: MewdekoUserMessage.Stickers
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Stickers
- uid: Discord.IMessage.Stickers
  commentId: P:Discord.IMessage.Stickers
  parent: Discord.IMessage
  isExternal: true
  name: Stickers
  nameWithType: IMessage.Stickers
  fullName: Discord.IMessage.Stickers
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.IStickerItem}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.IStickerItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<IStickerItem>
  nameWithType: IReadOnlyCollection<IStickerItem>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.IStickerItem>
  nameWithType.vb: IReadOnlyCollection(Of IStickerItem)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.IStickerItem)
  name.vb: IReadOnlyCollection(Of IStickerItem)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: Discord.IStickerItem
    name: IStickerItem
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IStickerItem
    name: IStickerItem
    isExternal: true
  - name: )
- uid: Discord.MessageFlags
  commentId: T:Discord.MessageFlags
  isExternal: true
  name: MessageFlags
  nameWithType: MessageFlags
  fullName: Discord.MessageFlags
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Flags
  name: Flags
  nameWithType: MewdekoUserMessage.Flags
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Flags
- uid: Discord.IMessage.Flags
  commentId: P:Discord.IMessage.Flags
  parent: Discord.IMessage
  isExternal: true
  name: Flags
  nameWithType: IMessage.Flags
  fullName: Discord.IMessage.Flags
- uid: System.Nullable{Discord.MessageFlags}
  commentId: T:System.Nullable{Discord.MessageFlags}
  parent: System
  definition: System.Nullable`1
  name: MessageFlags?
  nameWithType: MessageFlags?
  fullName: Discord.MessageFlags?
  spec.csharp:
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: '?'
- uid: Discord.IMessageInteraction
  commentId: T:Discord.IMessageInteraction
  parent: Discord
  isExternal: true
  name: IMessageInteraction
  nameWithType: IMessageInteraction
  fullName: Discord.IMessageInteraction
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Interaction
  name: Interaction
  nameWithType: MewdekoUserMessage.Interaction
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Interaction
- uid: Discord.IMessage.Interaction
  commentId: P:Discord.IMessage.Interaction
  parent: Discord.IMessage
  isExternal: true
  name: Interaction
  nameWithType: IMessage.Interaction
  fullName: Discord.IMessage.Interaction
- uid: Discord.MessageProperties
  commentId: T:Discord.MessageProperties
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: Discord.MessageProperties
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_ModifyAsync_System_Action_Discord_MessageProperties__Discord_RequestOptions_
  name: ModifyAsync
  nameWithType: MewdekoUserMessage.ModifyAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ModifyAsync
- uid: Discord.IUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.IUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Discord.IUserMessage
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: IUserMessage.ModifyAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.IUserMessage.ModifyAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: IUserMessage.ModifyAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.IUserMessage.ModifyAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.IUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IUserMessage.ModifyAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: System.Action{Discord.MessageProperties}
  commentId: T:System.Action{Discord.MessageProperties}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<MessageProperties>
  nameWithType: Action<MessageProperties>
  fullName: System.Action<Discord.MessageProperties>
  nameWithType.vb: Action(Of MessageProperties)
  fullName.vb: System.Action(Of Discord.MessageProperties)
  name.vb: Action(Of MessageProperties)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_PinAsync_Discord_RequestOptions_
  name: PinAsync
  nameWithType: MewdekoUserMessage.PinAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.PinAsync
- uid: Discord.IUserMessage.PinAsync(Discord.RequestOptions)
  commentId: M:Discord.IUserMessage.PinAsync(Discord.RequestOptions)
  parent: Discord.IUserMessage
  isExternal: true
  name: PinAsync(RequestOptions)
  nameWithType: IUserMessage.PinAsync(RequestOptions)
  fullName: Discord.IUserMessage.PinAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IUserMessage.PinAsync(Discord.RequestOptions)
    name: PinAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IUserMessage.PinAsync(Discord.RequestOptions)
    name: PinAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_UnpinAsync_Discord_RequestOptions_
  name: UnpinAsync
  nameWithType: MewdekoUserMessage.UnpinAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.UnpinAsync
- uid: Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
  commentId: M:Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
  parent: Discord.IUserMessage
  isExternal: true
  name: UnpinAsync(RequestOptions)
  nameWithType: IUserMessage.UnpinAsync(RequestOptions)
  fullName: Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
    name: UnpinAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IUserMessage.UnpinAsync(Discord.RequestOptions)
    name: UnpinAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_CrosspostAsync_Discord_RequestOptions_
  name: CrosspostAsync
  nameWithType: MewdekoUserMessage.CrosspostAsync
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.CrosspostAsync
- uid: Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
  commentId: M:Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
  parent: Discord.IUserMessage
  isExternal: true
  name: CrosspostAsync(RequestOptions)
  nameWithType: IUserMessage.CrosspostAsync(RequestOptions)
  fullName: Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
    name: CrosspostAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IUserMessage.CrosspostAsync(Discord.RequestOptions)
    name: CrosspostAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Resolve_Discord_TagHandling_Discord_TagHandling_Discord_TagHandling_Discord_TagHandling_Discord_TagHandling_
  name: Resolve
  nameWithType: MewdekoUserMessage.Resolve
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Resolve
- uid: Discord.IUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  commentId: M:Discord.IUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
  parent: Discord.IUserMessage
  isExternal: true
  name: Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)
  nameWithType: IUserMessage.Resolve(TagHandling, TagHandling, TagHandling, TagHandling, TagHandling)
  fullName: Discord.IUserMessage.Resolve(Discord.TagHandling, Discord.TagHandling, Discord.TagHandling, Discord.TagHandling, Discord.TagHandling)
  spec.csharp:
  - uid: Discord.IUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
    name: Resolve
    isExternal: true
  - name: (
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.IUserMessage.Resolve(Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling,Discord.TagHandling)
    name: Resolve
    isExternal: true
  - name: (
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.TagHandling
    name: TagHandling
    isExternal: true
  - name: )
- uid: Discord.TagHandling
  commentId: T:Discord.TagHandling
  parent: Discord
  isExternal: true
  name: TagHandling
  nameWithType: TagHandling
  fullName: Discord.TagHandling
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_ResolvedData
  name: ResolvedData
  nameWithType: MewdekoUserMessage.ResolvedData
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ResolvedData
- uid: Discord.IUserMessage.ResolvedData
  commentId: P:Discord.IUserMessage.ResolvedData
  parent: Discord.IUserMessage
  isExternal: true
  name: ResolvedData
  nameWithType: IUserMessage.ResolvedData
  fullName: Discord.IUserMessage.ResolvedData
- uid: Discord.MessageResolvedData
  commentId: T:Discord.MessageResolvedData
  parent: Discord
  isExternal: true
  name: MessageResolvedData
  nameWithType: MessageResolvedData
  fullName: Discord.MessageResolvedData
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_ReferencedMessage
  name: ReferencedMessage
  nameWithType: MewdekoUserMessage.ReferencedMessage
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.ReferencedMessage
- uid: Discord.IUserMessage.ReferencedMessage
  commentId: P:Discord.IUserMessage.ReferencedMessage
  parent: Discord.IUserMessage
  isExternal: true
  name: ReferencedMessage
  nameWithType: IUserMessage.ReferencedMessage
  fullName: Discord.IUserMessage.ReferencedMessage
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_InteractionMetadata
  name: InteractionMetadata
  nameWithType: MewdekoUserMessage.InteractionMetadata
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.InteractionMetadata
- uid: Discord.IUserMessage.InteractionMetadata
  commentId: P:Discord.IUserMessage.InteractionMetadata
  parent: Discord.IUserMessage
  isExternal: true
  name: InteractionMetadata
  nameWithType: IUserMessage.InteractionMetadata
  fullName: Discord.IUserMessage.InteractionMetadata
- uid: Discord.IMessageInteractionMetadata
  commentId: T:Discord.IMessageInteractionMetadata
  parent: Discord
  isExternal: true
  name: IMessageInteractionMetadata
  nameWithType: IMessageInteractionMetadata
  fullName: Discord.IMessageInteractionMetadata
- uid: Discord.IThreadChannel
  commentId: T:Discord.IThreadChannel
  parent: Discord
  isExternal: true
  name: IThreadChannel
  nameWithType: IThreadChannel
  fullName: Discord.IThreadChannel
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_Thread
  name: Thread
  nameWithType: MewdekoUserMessage.Thread
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.Thread
- uid: Discord.IMessage.Thread
  commentId: P:Discord.IMessage.Thread
  parent: Discord.IMessage
  isExternal: true
  name: Thread
  nameWithType: IMessage.Thread
  fullName: Discord.IMessage.Thread
- uid: Discord.MessageType.RoleSubscriptionPurchase
  commentId: F:Discord.MessageType.RoleSubscriptionPurchase
  isExternal: true
  name: RoleSubscriptionPurchase
  nameWithType: MessageType.RoleSubscriptionPurchase
  fullName: Discord.MessageType.RoleSubscriptionPurchase
- uid: Discord.MessageRoleSubscriptionData
  commentId: T:Discord.MessageRoleSubscriptionData
  parent: Discord
  isExternal: true
  name: MessageRoleSubscriptionData
  nameWithType: MessageRoleSubscriptionData
  fullName: Discord.MessageRoleSubscriptionData
- uid: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData*
  commentId: Overload:Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
  href: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.html#Mewdeko_Common_DiscordImplementations_MewdekoUserMessage_RoleSubscriptionData
  name: RoleSubscriptionData
  nameWithType: MewdekoUserMessage.RoleSubscriptionData
  fullName: Mewdeko.Common.DiscordImplementations.MewdekoUserMessage.RoleSubscriptionData
- uid: Discord.IMessage.RoleSubscriptionData
  commentId: P:Discord.IMessage.RoleSubscriptionData
  parent: Discord.IMessage
  isExternal: true
  name: RoleSubscriptionData
  nameWithType: IMessage.RoleSubscriptionData
  fullName: Discord.IMessage.RoleSubscriptionData
