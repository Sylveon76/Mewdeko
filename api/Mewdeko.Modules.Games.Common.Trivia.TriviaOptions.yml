### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  id: TriviaOptions
  parent: Mewdeko.Modules.Games.Common.Trivia
  children:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
  langs:
  - csharp
  - vb
  name: TriviaOptions
  nameWithType: TriviaOptions
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TriviaOptions
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Represents options for configuring a trivia game.
  example: []
  syntax:
    content: 'public class TriviaOptions : IMewdekoCommandOptions'
    content.vb: Public Class TriviaOptions Implements IMewdekoCommandOptions
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Common.IMewdekoCommandOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
  id: IsPokemon
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: IsPokemon
  nameWithType: TriviaOptions.IsPokemon
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsPokemon
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets a value indicating whether the trivia game is based on PokÃ©mon.
  example: []
  syntax:
    content: >-
      [Option('p', "pokemon", Required = false, Default = false, HelpText = "Whether it's 'Who's that pokemon?' trivia.")]

      public bool IsPokemon { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Option("p"c, "pokemon", Required:=False, Default:=False, HelpText:="Whether it's 'Who's that pokemon?' trivia.")>

      Public Property IsPokemon As Boolean
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon*
  attributes:
  - type: CommandLine.OptionAttribute
    ctor: CommandLine.OptionAttribute.#ctor(System.Char,System.String)
    arguments:
    - type: System.Char
      value: p
    - type: System.String
      value: pokemon
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Default
      type: System.Boolean
      value: false
    - name: HelpText
      type: System.String
      value: Whether it's 'Who's that pokemon?' trivia.
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
  id: NoHint
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: NoHint
  nameWithType: TriviaOptions.NoHint
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NoHint
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets a value indicating whether hints are disabled in the trivia game.
  example: []
  syntax:
    content: >-
      [Option("nohint", Required = false, Default = false, HelpText = "Don't show any hints.")]

      public bool NoHint { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Option("nohint", Required:=False, Default:=False, HelpText:="Don't show any hints.")>

      Public Property NoHint As Boolean
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint*
  attributes:
  - type: CommandLine.OptionAttribute
    ctor: CommandLine.OptionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nohint
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Default
      type: System.Boolean
      value: false
    - name: HelpText
      type: System.String
      value: Don't show any hints.
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
  id: WinRequirement
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: WinRequirement
  nameWithType: TriviaOptions.WinRequirement
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WinRequirement
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the winning requirement for the trivia game.
  example: []
  syntax:
    content: >-
      [Option('w', "win-req", Required = false, Default = 10, HelpText = "Winning requirement. Set 0 for an infinite game. Default 10.")]

      public int WinRequirement { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Option("w"c, "win-req", Required:=False, Default:=10, HelpText:="Winning requirement. Set 0 for an infinite game. Default 10.")>

      Public Property WinRequirement As Integer
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement*
  attributes:
  - type: CommandLine.OptionAttribute
    ctor: CommandLine.OptionAttribute.#ctor(System.Char,System.String)
    arguments:
    - type: System.Char
      value: w
    - type: System.String
      value: win-req
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Default
      type: System.Int32
      value: 10
    - name: HelpText
      type: System.String
      value: Winning requirement. Set 0 for an infinite game. Default 10.
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
  id: QuestionTimer
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: QuestionTimer
  nameWithType: TriviaOptions.QuestionTimer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: QuestionTimer
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the duration of a trivia question before it ends.
  example: []
  syntax:
    content: >-
      [Option('q', "question-timer", Required = false, Default = 30, HelpText = "How long until the question ends. Default 30.")]

      public int QuestionTimer { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Option("q"c, "question-timer", Required:=False, Default:=30, HelpText:="How long until the question ends. Default 30.")>

      Public Property QuestionTimer As Integer
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer*
  attributes:
  - type: CommandLine.OptionAttribute
    ctor: CommandLine.OptionAttribute.#ctor(System.Char,System.String)
    arguments:
    - type: System.Char
      value: q
    - type: System.String
      value: question-timer
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Default
      type: System.Int32
      value: 30
    - name: HelpText
      type: System.String
      value: How long until the question ends. Default 30.
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
  id: Timeout
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: TriviaOptions.Timeout
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Timeout
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 39
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the number of inactive questions before the game automatically stops.
  example: []
  syntax:
    content: >-
      [Option('t', "timeout", Required = false, Default = 10, HelpText = "Number of questions of inactivity in order stop. Set 0 for never. Default 10.")]

      public int Timeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Option("t"c, "timeout", Required:=False, Default:=10, HelpText:="Number of questions of inactivity in order stop. Set 0 for never. Default 10.")>

      Public Property Timeout As Integer
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout*
  attributes:
  - type: CommandLine.OptionAttribute
    ctor: CommandLine.OptionAttribute.#ctor(System.Char,System.String)
    arguments:
    - type: System.Char
      value: t
    - type: System.String
      value: timeout
    namedArguments:
    - name: Required
      type: System.Boolean
      value: false
    - name: Default
      type: System.Int32
      value: 10
    - name: HelpText
      type: System.String
      value: Number of questions of inactivity in order stop. Set 0 for never. Default 10.
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions
  id: NormalizeOptions
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  langs:
  - csharp
  - vb
  name: NormalizeOptions()
  nameWithType: TriviaOptions.NormalizeOptions()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NormalizeOptions
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaOptions.cs
    startLine: 46
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Normalizes the trivia game options.
  example: []
  syntax:
    content: public void NormalizeOptions()
    content.vb: Public Sub NormalizeOptions()
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions*
  implements:
  - Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions
references:
- uid: Mewdeko.Modules.Games.Common.Trivia
  commentId: N:Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.html
  name: Mewdeko.Modules.Games.Common.Trivia
  nameWithType: Mewdeko.Modules.Games.Common.Trivia
  fullName: Mewdeko.Modules.Games.Common.Trivia
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Common.IMewdekoCommandOptions
  commentId: T:Mewdeko.Common.IMewdekoCommandOptions
  parent: Mewdeko.Common
  href: Mewdeko.Common.IMewdekoCommandOptions.html
  name: IMewdekoCommandOptions
  nameWithType: IMewdekoCommandOptions
  fullName: Mewdeko.Common.IMewdekoCommandOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<TriviaOptions>(TriviaOptions, string)
  nameWithType: Extensions.ThrowIfNull<TriviaOptions>(TriviaOptions, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Games.Common.Trivia.TriviaOptions>(Mewdeko.Modules.Games.Common.Trivia.TriviaOptions, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of TriviaOptions)(TriviaOptions, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Games.Common.Trivia.TriviaOptions)(Mewdeko.Modules.Games.Common.Trivia.TriviaOptions, String)
  name.vb: ThrowIfNull(Of TriviaOptions)(TriviaOptions, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
    name: TriviaOptions
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
    name: TriviaOptions
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
    name: TriviaOptions
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
    name: TriviaOptions
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_IsPokemon
  name: IsPokemon
  nameWithType: TriviaOptions.IsPokemon
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.IsPokemon
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_NoHint
  name: NoHint
  nameWithType: TriviaOptions.NoHint
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NoHint
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_WinRequirement
  name: WinRequirement
  nameWithType: TriviaOptions.WinRequirement
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.WinRequirement
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_QuestionTimer
  name: QuestionTimer
  nameWithType: TriviaOptions.QuestionTimer
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.QuestionTimer
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_Timeout
  name: Timeout
  nameWithType: TriviaOptions.Timeout
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.Timeout
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html#Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_NormalizeOptions
  name: NormalizeOptions
  nameWithType: TriviaOptions.NormalizeOptions
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.NormalizeOptions
- uid: Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions
  commentId: M:Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions
  parent: Mewdeko.Common.IMewdekoCommandOptions
  href: Mewdeko.Common.IMewdekoCommandOptions.html#Mewdeko_Common_IMewdekoCommandOptions_NormalizeOptions
  name: NormalizeOptions()
  nameWithType: IMewdekoCommandOptions.NormalizeOptions()
  fullName: Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions()
  spec.csharp:
  - uid: Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions
    name: NormalizeOptions
    href: Mewdeko.Common.IMewdekoCommandOptions.html#Mewdeko_Common_IMewdekoCommandOptions_NormalizeOptions
  - name: (
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.IMewdekoCommandOptions.NormalizeOptions
    name: NormalizeOptions
    href: Mewdeko.Common.IMewdekoCommandOptions.html#Mewdeko_Common_IMewdekoCommandOptions_NormalizeOptions
  - name: (
  - name: )
