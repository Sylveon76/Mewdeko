### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Permissions.Services.FilterService
  commentId: T:Mewdeko.Modules.Permissions.Services.FilterService
  id: FilterService
  parent: Mewdeko.Modules.Permissions.Services
  children:
  - Mewdeko.Modules.Permissions.Services.FilterService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Common.PubSub.IPubSub,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Modules.Administration.Services.AdministrationService,Mewdeko.Services.GuildSettingsService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  - Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
  - Mewdeko.Modules.Permissions.Services.FilterService.Blacklist
  - Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords(Discord.IGuild,Discord.IUserMessage)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites(Discord.IGuild,Discord.IUserMessage)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks(Discord.IGuild,Discord.IUserMessage)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilterWords(Discord.IGuild,Discord.IUserMessage)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.GetFw(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn(System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.InvWarn(Discord.IGuild,System.String)
  - Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
  - Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
  - Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
  - Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
  - Mewdeko.Modules.Permissions.Services.FilterService.Priority
  - Mewdeko.Modules.Permissions.Services.FilterService.Reload(System.Boolean)
  - Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  - Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
  - Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn(Discord.IGuild,System.String)
  - Mewdeko.Modules.Permissions.Services.FilterService.Strings
  - Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist(System.String,System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist(System.String,System.UInt64)
  - Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
  - Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
  langs:
  - csharp
  - vb
  name: FilterService
  nameWithType: FilterService
  fullName: Mewdeko.Modules.Permissions.Services.FilterService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilterService
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Provides services for filtering messages in guilds based on predefined rules, including word filters, link filters, and invite filters.
  example: []
  syntax:
    content: 'public class FilterService : IEarlyBehavior, INService'
    content.vb: Public Class FilterService Implements IEarlyBehavior, INService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  - Mewdeko.Services.INService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Permissions.Services.FilterService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Blacklist
  commentId: F:Mewdeko.Modules.Permissions.Services.FilterService.Blacklist
  id: Blacklist
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: Blacklist
  nameWithType: FilterService.Blacklist
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Blacklist
  type: Field
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Blacklist
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 29
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: HashSet of banned words for auto-banning.
  example: []
  syntax:
    content: public HashSet<AutoBanEntry> Blacklist
    return:
      type: System.Collections.Generic.HashSet{Mewdeko.Database.Models.AutoBanEntry}
    content.vb: Public Blacklist As HashSet(Of AutoBanEntry)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Common.PubSub.IPubSub,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Modules.Administration.Services.AdministrationService,Mewdeko.Services.GuildSettingsService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Common.PubSub.IPubSub,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Modules.Administration.Services.AdministrationService,Mewdeko.Services.GuildSettingsService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Common.PubSub.IPubSub,Mewdeko.Modules.Moderation.Services.UserPunishService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Modules.Administration.Services.AdministrationService,Mewdeko.Services.GuildSettingsService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Mewdeko)'
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilterService(DiscordSocketClient, DbService, IPubSub, UserPunishService, IBotStrings, AdministrationService, GuildSettingsService, EventHandler, Mewdeko)
  nameWithType: FilterService.FilterService(DiscordSocketClient, DbService, IPubSub, UserPunishService, IBotStrings, AdministrationService, GuildSettingsService, EventHandler, Mewdeko)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterService(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Common.PubSub.IPubSub, Mewdeko.Modules.Moderation.Services.UserPunishService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Modules.Administration.Services.AdministrationService, Mewdeko.Services.GuildSettingsService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Mewdeko)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 42
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Initializes a new instance of the FilterService with necessary dependencies for filtering operations.
  remarks: >-
    On initialization, this service loads filtering configurations from the database and subscribes to necessary events

    for real-time monitoring and filtering of messages across all guilds the bot is part of.
  example: []
  syntax:
    content: public FilterService(DiscordSocketClient client, DbService db, IPubSub pubSub, UserPunishService upun2, IBotStrings strng, AdministrationService ass, GuildSettingsService gss, EventHandler eventHandler, Mewdeko bot)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
    - id: db
      type: Mewdeko.Database.DbService
    - id: pubSub
      type: Mewdeko.Common.PubSub.IPubSub
    - id: upun2
      type: Mewdeko.Modules.Moderation.Services.UserPunishService
    - id: strng
      type: Mewdeko.Services.strings.IBotStrings
    - id: ass
      type: Mewdeko.Modules.Administration.Services.AdministrationService
    - id: gss
      type: Mewdeko.Services.GuildSettingsService
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
    - id: bot
      type: Mewdeko.Mewdeko
    content.vb: Public Sub New(client As DiscordSocketClient, db As DbService, pubSub As IPubSub, upun2 As UserPunishService, strng As IBotStrings, ass As AdministrationService, gss As GuildSettingsService, eventHandler As EventHandler, bot As Mewdeko)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.#ctor*
  nameWithType.vb: FilterService.New(DiscordSocketClient, DbService, IPubSub, UserPunishService, IBotStrings, AdministrationService, GuildSettingsService, EventHandler, Mewdeko)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.New(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Common.PubSub.IPubSub, Mewdeko.Modules.Moderation.Services.UserPunishService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Modules.Administration.Services.AdministrationService, Mewdeko.Services.GuildSettingsService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Mewdeko)
  name.vb: New(DiscordSocketClient, DbService, IPubSub, UserPunishService, IBotStrings, AdministrationService, GuildSettingsService, EventHandler, Mewdeko)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Strings
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.Strings
  id: Strings
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: Strings
  nameWithType: FilterService.Strings
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Strings
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Strings
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 94
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Stores localized strings for bot messages.
  example: []
  syntax:
    content: public IBotStrings Strings { get; set; }
    parameters: []
    return:
      type: Mewdeko.Services.strings.IBotStrings
    content.vb: Public Property Strings As IBotStrings
  overload: Mewdeko.Modules.Permissions.Services.FilterService.Strings*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
  id: InviteFilteringChannels
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: InviteFilteringChannels
  nameWithType: FilterService.InviteFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: InviteFilteringChannels
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 99
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of channel IDs that have invite filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> InviteFilteringChannels { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property InviteFilteringChannels As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
  id: InviteFilteringServers
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: InviteFilteringServers
  nameWithType: FilterService.InviteFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: InviteFilteringServers
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 104
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of channel IDs that have invite filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> InviteFilteringServers { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property InviteFilteringServers As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
  id: ServerFilteredWords
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: ServerFilteredWords
  nameWithType: FilterService.ServerFilteredWords
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ServerFilteredWords
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 110
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Manages the collection of word filters across different guilds, organized by guild ID.
  example: []
  syntax:
    content: public ConcurrentDictionary<ulong, ConcurrentHashSet<string>> ServerFilteredWords { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Common.Collections.ConcurrentHashSet{System.String}}
    content.vb: Public ReadOnly Property ServerFilteredWords As ConcurrentDictionary(Of ULong, ConcurrentHashSet(Of String))
  overload: Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
  id: WordFilteringChannels
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: WordFilteringChannels
  nameWithType: FilterService.WordFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WordFilteringChannels
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 115
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of channel IDs that have word filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> WordFilteringChannels { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property WordFilteringChannels As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
  id: WordFilteringServers
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: WordFilteringServers
  nameWithType: FilterService.WordFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WordFilteringServers
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 120
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of server IDs that have word filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> WordFilteringServers { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property WordFilteringServers As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
  id: LinkFilteringChannels
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: LinkFilteringChannels
  nameWithType: FilterService.LinkFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LinkFilteringChannels
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 125
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of channel IDs that have link filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> LinkFilteringChannels { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property LinkFilteringChannels As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
  id: LinkFilteringServers
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: LinkFilteringServers
  nameWithType: FilterService.LinkFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LinkFilteringServers
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 130
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: A collection of server IDs that have link filtering enabled.
  example: []
  syntax:
    content: public ConcurrentHashSet<ulong> LinkFilteringServers { get; }
    parameters: []
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
    content.vb: Public ReadOnly Property LinkFilteringServers As ConcurrentHashSet(Of ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers*
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Priority
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.Priority
  id: Priority
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: FilterService.Priority
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Priority
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Priority
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 135
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Specifies the execution priority of this behavior in the pipeline.
  example: []
  syntax:
    content: public int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Priority As Integer
  overload: Mewdeko.Modules.Permissions.Services.FilterService.Priority*
  implements:
  - Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.Priority
- uid: Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
  commentId: P:Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
  id: BehaviorType
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: BehaviorType
  nameWithType: FilterService.BehaviorType
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BehaviorType
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 140
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Indicates the type of behavior this service represents.
  example: []
  syntax:
    content: public ModuleBehaviorType BehaviorType { get; }
    parameters: []
    return:
      type: Mewdeko.Common.ModuleBehaviors.ModuleBehaviorType
    content.vb: Public ReadOnly Property BehaviorType As ModuleBehaviorType
  overload: Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType*
  implements:
  - Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.BehaviorType
- uid: Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  id: RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: RunBehavior(DiscordSocketClient, IGuild, IUserMessage)
  nameWithType: FilterService.RunBehavior(DiscordSocketClient, IGuild, IUserMessage)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior(Discord.WebSocket.DiscordSocketClient, Discord.IGuild, Discord.IUserMessage)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RunBehavior
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 149
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Orchestrates various filters, applying them to messages based on guild-specific configurations and global blacklist settings.
  example: []
  syntax:
    content: public Task<bool> RunBehavior(DiscordSocketClient socketClient, IGuild guild, IUserMessage msg)
    parameters:
    - id: socketClient
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client for interacting with the API.
    - id: guild
      type: Discord.IGuild
      description: The guild where the message was posted.
    - id: msg
      type: Discord.IUserMessage
      description: The user message to be checked against the filters.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that resolves to true if the message was acted upon due to a filter match; otherwise, false.
    content.vb: Public Function RunBehavior(socketClient As DiscordSocketClient, guild As IGuild, msg As IUserMessage) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior*
  implements:
  - Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Reload(System.Boolean)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.Reload(System.Boolean)
  id: Reload(System.Boolean)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: Reload(bool)
  nameWithType: FilterService.Reload(bool)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Reload(bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Reload
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 166
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Reloads the blacklist from the database and optionally publishes the updated list to subscribed components.
  example: []
  syntax:
    content: public void Reload(bool publish = true)
    parameters:
    - id: publish
      type: System.Boolean
      description: Whether to publish the updated blacklist to other components.
    content.vb: Public Sub Reload(publish As Boolean = True)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.Reload*
  nameWithType.vb: FilterService.Reload(Boolean)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.Reload(Boolean)
  name.vb: Reload(Boolean)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist(System.String,System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist(System.String,System.UInt64)
  id: WordBlacklist(System.String,System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: WordBlacklist(string, ulong)
  nameWithType: FilterService.WordBlacklist(string, ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist(string, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: WordBlacklist
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 179
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Adds a word to the blacklist for a specified guild.
  example: []
  syntax:
    content: public void WordBlacklist(string id, ulong id2)
    parameters:
    - id: id
      type: System.String
      description: The word to add to the blacklist.
    - id: id2
      type: System.UInt64
      description: The ID of the guild for which the word is blacklisted.
    content.vb: Public Sub WordBlacklist(id As String, id2 As ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist*
  nameWithType.vb: FilterService.WordBlacklist(String, ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist(String, ULong)
  name.vb: WordBlacklist(String, ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist(System.String,System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist(System.String,System.UInt64)
  id: UnBlacklist(System.String,System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: UnBlacklist(string, ulong)
  nameWithType: FilterService.UnBlacklist(string, ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist(string, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnBlacklist
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 197
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Removes a word from the blacklist for a specified guild.
  example: []
  syntax:
    content: public void UnBlacklist(string id, ulong id2)
    parameters:
    - id: id
      type: System.String
      description: The word to remove from the blacklist.
    - id: id2
      type: System.UInt64
      description: The ID of the guild from which the word is removed.
    content.vb: Public Sub UnBlacklist(id As String, id2 As ULong)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist*
  nameWithType.vb: FilterService.UnBlacklist(String, ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist(String, ULong)
  name.vb: UnBlacklist(String, ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel(System.UInt64,System.UInt64)
  id: FilteredWordsForChannel(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilteredWordsForChannel(ulong, ulong)
  nameWithType: FilterService.FilteredWordsForChannel(ulong, ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilteredWordsForChannel
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 217
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Retrieves the set of filtered words for a specific channel within a guild.
  example: []
  syntax:
    content: public ConcurrentHashSet<string?>? FilteredWordsForChannel(ulong channelId, ulong guildId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The ID of the channel.
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.String}
      description: A set of filtered words for the channel, or null if no filters are set.
    content.vb: Public Function FilteredWordsForChannel(channelId As ULong, guildId As ULong) As ConcurrentHashSet(Of String)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel*
  nameWithType.vb: FilterService.FilteredWordsForChannel(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel(ULong, ULong)
  name.vb: FilteredWordsForChannel(ULong, ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn(System.UInt64)
  id: GetInvWarn(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: GetInvWarn(ulong)
  nameWithType: FilterService.GetInvWarn(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetInvWarn
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 230
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Retrieves the number of warnings a guild has set for invite violations.
  example: []
  syntax:
    content: public Task<int> GetInvWarn(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of warnings set for invite violations in the guild.
    content.vb: Public Function GetInvWarn(id As ULong) As Task(Of Integer)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn*
  nameWithType.vb: FilterService.GetInvWarn(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn(ULong)
  name.vb: GetInvWarn(ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn(Discord.IGuild,System.String)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.InvWarn(Discord.IGuild,System.String)
  id: InvWarn(Discord.IGuild,System.String)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: InvWarn(IGuild, string)
  nameWithType: FilterService.InvWarn(IGuild, string)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn(Discord.IGuild, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: InvWarn
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 237
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Sets the number of warnings for invite violations in a guild.
  example: []
  syntax:
    content: public Task InvWarn(IGuild guild, string yesnt)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild for which to set the warning count.
    - id: yesnt
      type: System.String
      description: The warning count to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function InvWarn(guild As IGuild, yesnt As String) As Task
  overload: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn*
  nameWithType.vb: FilterService.InvWarn(IGuild, String)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn(Discord.IGuild, String)
  name.vb: InvWarn(IGuild, String)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.GetFw(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.GetFw(System.UInt64)
  id: GetFw(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: GetFw(ulong)
  nameWithType: FilterService.GetFw(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.GetFw(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetFw
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 265
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Retrieves the number of warnings a guild has set for filtered word violations.
  example: []
  syntax:
    content: public Task<int> GetFw(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: The number of warnings set for filtered word violations in the guild.
    content.vb: Public Function GetFw(id As ULong) As Task(Of Integer)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.GetFw*
  nameWithType.vb: FilterService.GetFw(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.GetFw(ULong)
  name.vb: GetFw(ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn(Discord.IGuild,System.String)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn(Discord.IGuild,System.String)
  id: SetFwarn(Discord.IGuild,System.String)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: SetFwarn(IGuild, string)
  nameWithType: FilterService.SetFwarn(IGuild, string)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn(Discord.IGuild, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetFwarn
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 272
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Sets the number of warnings for filtered word violations in a guild.
  example: []
  syntax:
    content: public Task SetFwarn(IGuild guild, string yesnt)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild for which to set the warning count.
    - id: yesnt
      type: System.String
      description: The warning count to set.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetFwarn(guild As IGuild, yesnt As String) As Task
  overload: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn*
  nameWithType.vb: FilterService.SetFwarn(IGuild, String)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn(Discord.IGuild, String)
  name.vb: SetFwarn(IGuild, String)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords(System.UInt64)
  id: ClearFilteredWords(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: ClearFilteredWords(ulong)
  nameWithType: FilterService.ClearFilteredWords(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClearFilteredWords
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 299
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Clears all filtered words for a guild.
  example: []
  syntax:
    content: public Task ClearFilteredWords(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild for which to clear filtered words.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ClearFilteredWords(guildId As ULong) As Task
  overload: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords*
  nameWithType.vb: FilterService.ClearFilteredWords(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords(ULong)
  name.vb: ClearFilteredWords(ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer(System.UInt64)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer(System.UInt64)
  id: FilteredWordsForServer(System.UInt64)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilteredWordsForServer(ulong)
  nameWithType: FilterService.FilteredWordsForServer(ulong)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilteredWordsForServer
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 323
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Retrieves the set of filtered words for an entire server.
  example: []
  syntax:
    content: public ConcurrentHashSet<string>? FilteredWordsForServer(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: Mewdeko.Common.Collections.ConcurrentHashSet{System.String}
      description: A set of filtered words for the server, or null if no filters are set.
    content.vb: Public Function FilteredWordsForServer(guildId As ULong) As ConcurrentHashSet(Of String)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer*
  nameWithType.vb: FilterService.FilteredWordsForServer(ULong)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer(ULong)
  name.vb: FilteredWordsForServer(ULong)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords(Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords(Discord.IGuild,Discord.IUserMessage)
  id: FilterBannedWords(Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilterBannedWords(IGuild?, IUserMessage?)
  nameWithType: FilterService.FilterBannedWords(IGuild?, IUserMessage?)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords(Discord.IGuild?, Discord.IUserMessage?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilterBannedWords
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 339
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Filters messages containing banned words and takes appropriate action.
  example: []
  syntax:
    content: public Task<bool> FilterBannedWords(IGuild? guild, IUserMessage? msg)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild in which the message was posted.
    - id: msg
      type: Discord.IUserMessage
      description: The message to check for banned words.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the message contained banned words and was acted upon; otherwise, false.
    content.vb: Public Function FilterBannedWords(guild As IGuild, msg As IUserMessage) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords*
  nameWithType.vb: FilterService.FilterBannedWords(IGuild, IUserMessage)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords(Discord.IGuild, Discord.IUserMessage)
  name.vb: FilterBannedWords(IGuild, IUserMessage)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords(Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilterWords(Discord.IGuild,Discord.IUserMessage)
  id: FilterWords(Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilterWords(IGuild?, IUserMessage?)
  nameWithType: FilterService.FilterWords(IGuild?, IUserMessage?)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords(Discord.IGuild?, Discord.IUserMessage?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilterWords
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 410
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Filters messages containing specified words and takes appropriate action.
  example: []
  syntax:
    content: public Task<bool> FilterWords(IGuild? guild, IUserMessage? usrMsg)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild in which the message was posted.
    - id: usrMsg
      type: Discord.IUserMessage
      description: The message to check for specified words.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the message contained specified words and was acted upon; otherwise, false.
    content.vb: Public Function FilterWords(guild As IGuild, usrMsg As IUserMessage) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords*
  nameWithType.vb: FilterService.FilterWords(IGuild, IUserMessage)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords(Discord.IGuild, Discord.IUserMessage)
  name.vb: FilterWords(IGuild, IUserMessage)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites(Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites(Discord.IGuild,Discord.IUserMessage)
  id: FilterInvites(Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilterInvites(IGuild?, IUserMessage?)
  nameWithType: FilterService.FilterInvites(IGuild?, IUserMessage?)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites(Discord.IGuild?, Discord.IUserMessage?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilterInvites
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 504
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Filters messages containing invites and takes appropriate action.
  example: []
  syntax:
    content: public Task<bool> FilterInvites(IGuild? guild, IUserMessage? usrMsg)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild in which the message was posted.
    - id: usrMsg
      type: Discord.IUserMessage
      description: The message to check for invites.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the message contained invites and was acted upon; otherwise, false.
    content.vb: Public Function FilterInvites(guild As IGuild, usrMsg As IUserMessage) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites*
  nameWithType.vb: FilterService.FilterInvites(IGuild, IUserMessage)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites(Discord.IGuild, Discord.IUserMessage)
  name.vb: FilterInvites(IGuild, IUserMessage)
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks(Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks(Discord.IGuild,Discord.IUserMessage)
  id: FilterLinks(Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Modules.Permissions.Services.FilterService
  langs:
  - csharp
  - vb
  name: FilterLinks(IGuild?, IUserMessage?)
  nameWithType: FilterService.FilterLinks(IGuild?, IUserMessage?)
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks(Discord.IGuild?, Discord.IUserMessage?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: FilterLinks
    path: src/Mewdeko/Modules/Permissions/Services/FilterService.cs
    startLine: 544
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Permissions.Services
  summary: Filters messages containing links and takes appropriate action.
  example: []
  syntax:
    content: public Task<bool> FilterLinks(IGuild? guild, IUserMessage? usrMsg)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild in which the message was posted.
    - id: usrMsg
      type: Discord.IUserMessage
      description: The message to check for links.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the message contained links and was acted upon; otherwise, false.
    content.vb: Public Function FilterLinks(guild As IGuild, usrMsg As IUserMessage) As Task(Of Boolean)
  overload: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks*
  nameWithType.vb: FilterService.FilterLinks(IGuild, IUserMessage)
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks(Discord.IGuild, Discord.IUserMessage)
  name.vb: FilterLinks(IGuild, IUserMessage)
references:
- uid: Mewdeko.Modules.Permissions.Services
  commentId: N:Mewdeko.Modules.Permissions.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Permissions.Services
  nameWithType: Mewdeko.Modules.Permissions.Services
  fullName: Mewdeko.Modules.Permissions.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Permissions
    name: Permissions
    href: Mewdeko.Modules.Permissions.html
  - name: .
  - uid: Mewdeko.Modules.Permissions.Services
    name: Services
    href: Mewdeko.Modules.Permissions.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  commentId: T:Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  parent: Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html
  name: IEarlyBehavior
  nameWithType: IEarlyBehavior
  fullName: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<FilterService>(FilterService, string)
  nameWithType: Extensions.ThrowIfNull<FilterService>(FilterService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Permissions.Services.FilterService>(Mewdeko.Modules.Permissions.Services.FilterService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of FilterService)(FilterService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Permissions.Services.FilterService)(Mewdeko.Modules.Permissions.Services.FilterService, String)
  name.vb: ThrowIfNull(Of FilterService)(FilterService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.Services.FilterService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Permissions.Services.FilterService
    name: FilterService
    href: Mewdeko.Modules.Permissions.Services.FilterService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Permissions.Services.FilterService
    name: FilterService
    href: Mewdeko.Modules.Permissions.Services.FilterService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Permissions.Services.FilterService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Permissions.Services.FilterService
    name: FilterService
    href: Mewdeko.Modules.Permissions.Services.FilterService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Permissions.Services.FilterService
    name: FilterService
    href: Mewdeko.Modules.Permissions.Services.FilterService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Common.ModuleBehaviors
  commentId: N:Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.html
  name: Mewdeko.Common.ModuleBehaviors
  nameWithType: Mewdeko.Common.ModuleBehaviors
  fullName: Mewdeko.Common.ModuleBehaviors
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: System.Collections.Generic.HashSet{Mewdeko.Database.Models.AutoBanEntry}
  commentId: T:System.Collections.Generic.HashSet{Mewdeko.Database.Models.AutoBanEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<AutoBanEntry>
  nameWithType: HashSet<AutoBanEntry>
  fullName: System.Collections.Generic.HashSet<Mewdeko.Database.Models.AutoBanEntry>
  nameWithType.vb: HashSet(Of AutoBanEntry)
  fullName.vb: System.Collections.Generic.HashSet(Of Mewdeko.Database.Models.AutoBanEntry)
  name.vb: HashSet(Of AutoBanEntry)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Mewdeko.Database.Models.AutoBanEntry
    name: AutoBanEntry
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.AutoBanEntry
    name: AutoBanEntry
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Modules.Permissions.Services.FilterService.#ctor*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.#ctor
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService__ctor_Discord_WebSocket_DiscordSocketClient_Mewdeko_Database_DbService_Mewdeko_Common_PubSub_IPubSub_Mewdeko_Modules_Moderation_Services_UserPunishService_Mewdeko_Services_strings_IBotStrings_Mewdeko_Modules_Administration_Services_AdministrationService_Mewdeko_Services_GuildSettingsService_Mewdeko_Services_Impl_EventHandler_Mewdeko_Mewdeko_
  name: FilterService
  nameWithType: FilterService.FilterService
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterService
  nameWithType.vb: FilterService.New
  fullName.vb: Mewdeko.Modules.Permissions.Services.FilterService.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Common.PubSub.IPubSub
  commentId: T:Mewdeko.Common.PubSub.IPubSub
  parent: Mewdeko.Common.PubSub
  href: Mewdeko.Common.PubSub.IPubSub.html
  name: IPubSub
  nameWithType: IPubSub
  fullName: Mewdeko.Common.PubSub.IPubSub
- uid: Mewdeko.Modules.Moderation.Services.UserPunishService
  commentId: T:Mewdeko.Modules.Moderation.Services.UserPunishService
  parent: Mewdeko.Modules.Moderation.Services
  href: Mewdeko.Modules.Moderation.Services.UserPunishService.html
  name: UserPunishService
  nameWithType: UserPunishService
  fullName: Mewdeko.Modules.Moderation.Services.UserPunishService
- uid: Mewdeko.Services.strings.IBotStrings
  commentId: T:Mewdeko.Services.strings.IBotStrings
  parent: Mewdeko.Services.strings
  href: Mewdeko.Services.strings.IBotStrings.html
  name: IBotStrings
  nameWithType: IBotStrings
  fullName: Mewdeko.Services.strings.IBotStrings
- uid: Mewdeko.Modules.Administration.Services.AdministrationService
  commentId: T:Mewdeko.Modules.Administration.Services.AdministrationService
  parent: Mewdeko.Modules.Administration.Services
  href: Mewdeko.Modules.Administration.Services.AdministrationService.html
  name: AdministrationService
  nameWithType: AdministrationService
  fullName: Mewdeko.Modules.Administration.Services.AdministrationService
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Mewdeko
  commentId: T:Mewdeko.Mewdeko
  parent: Mewdeko
  href: Mewdeko.Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko.Mewdeko
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Common.PubSub
  commentId: N:Mewdeko.Common.PubSub
  href: Mewdeko.html
  name: Mewdeko.Common.PubSub
  nameWithType: Mewdeko.Common.PubSub
  fullName: Mewdeko.Common.PubSub
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.PubSub
    name: PubSub
    href: Mewdeko.Common.PubSub.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.PubSub
    name: PubSub
    href: Mewdeko.Common.PubSub.html
- uid: Mewdeko.Modules.Moderation.Services
  commentId: N:Mewdeko.Modules.Moderation.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation.Services
  nameWithType: Mewdeko.Modules.Moderation.Services
  fullName: Mewdeko.Modules.Moderation.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Services
    name: Services
    href: Mewdeko.Modules.Moderation.Services.html
- uid: Mewdeko.Services.strings
  commentId: N:Mewdeko.Services.strings
  href: Mewdeko.html
  name: Mewdeko.Services.strings
  nameWithType: Mewdeko.Services.strings
  fullName: Mewdeko.Services.strings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
- uid: Mewdeko.Modules.Administration.Services
  commentId: N:Mewdeko.Modules.Administration.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Administration.Services
  nameWithType: Mewdeko.Modules.Administration.Services
  fullName: Mewdeko.Modules.Administration.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Services
    name: Services
    href: Mewdeko.Modules.Administration.Services.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Mewdeko
  commentId: N:Mewdeko
  href: Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Strings*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.Strings
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_Strings
  name: Strings
  nameWithType: FilterService.Strings
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Strings
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_InviteFilteringChannels
  name: InviteFilteringChannels
  nameWithType: FilterService.InviteFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringChannels
- uid: Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
  commentId: T:Mewdeko.Common.Collections.ConcurrentHashSet{System.UInt64}
  parent: Mewdeko.Common.Collections
  definition: Mewdeko.Common.Collections.ConcurrentHashSet`1
  href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  name: ConcurrentHashSet<ulong>
  nameWithType: ConcurrentHashSet<ulong>
  fullName: Mewdeko.Common.Collections.ConcurrentHashSet<ulong>
  nameWithType.vb: ConcurrentHashSet(Of ULong)
  fullName.vb: Mewdeko.Common.Collections.ConcurrentHashSet(Of ULong)
  name.vb: ConcurrentHashSet(Of ULong)
  spec.csharp:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
  commentId: T:Mewdeko.Common.Collections.ConcurrentHashSet`1
  href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  name: ConcurrentHashSet<T>
  nameWithType: ConcurrentHashSet<T>
  fullName: Mewdeko.Common.Collections.ConcurrentHashSet<T>
  nameWithType.vb: ConcurrentHashSet(Of T)
  fullName.vb: Mewdeko.Common.Collections.ConcurrentHashSet(Of T)
  name.vb: ConcurrentHashSet(Of T)
  spec.csharp:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Common.Collections
  commentId: N:Mewdeko.Common.Collections
  href: Mewdeko.html
  name: Mewdeko.Common.Collections
  nameWithType: Mewdeko.Common.Collections
  fullName: Mewdeko.Common.Collections
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Collections
    name: Collections
    href: Mewdeko.Common.Collections.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Collections
    name: Collections
    href: Mewdeko.Common.Collections.html
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_InviteFilteringServers
  name: InviteFilteringServers
  nameWithType: FilterService.InviteFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InviteFilteringServers
- uid: Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_ServerFilteredWords
  name: ServerFilteredWords
  nameWithType: FilterService.ServerFilteredWords
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.ServerFilteredWords
- uid: NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Common.Collections.ConcurrentHashSet{System.String}}
  commentId: T:NonBlocking.ConcurrentDictionary{System.UInt64,Mewdeko.Common.Collections.ConcurrentHashSet{System.String}}
  parent: NonBlocking
  definition: NonBlocking.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ConcurrentDictionary<ulong, ConcurrentHashSet<string>>
  nameWithType: ConcurrentDictionary<ulong, ConcurrentHashSet<string>>
  fullName: NonBlocking.ConcurrentDictionary<ulong, Mewdeko.Common.Collections.ConcurrentHashSet<string>>
  nameWithType.vb: ConcurrentDictionary(Of ULong, ConcurrentHashSet(Of String))
  fullName.vb: NonBlocking.ConcurrentDictionary(Of ULong, Mewdeko.Common.Collections.ConcurrentHashSet(Of String))
  name.vb: ConcurrentDictionary(Of ULong, ConcurrentHashSet(Of String))
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NonBlocking.ConcurrentDictionary`2
  commentId: T:NonBlocking.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: NonBlocking.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NonBlocking
  commentId: N:NonBlocking
  isExternal: true
  name: NonBlocking
  nameWithType: NonBlocking
  fullName: NonBlocking
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_WordFilteringChannels
  name: WordFilteringChannels
  nameWithType: FilterService.WordFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringChannels
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_WordFilteringServers
  name: WordFilteringServers
  nameWithType: FilterService.WordFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordFilteringServers
- uid: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_LinkFilteringChannels
  name: LinkFilteringChannels
  nameWithType: FilterService.LinkFilteringChannels
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringChannels
- uid: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_LinkFilteringServers
  name: LinkFilteringServers
  nameWithType: FilterService.LinkFilteringServers
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.LinkFilteringServers
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Priority*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.Priority
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_Priority
  name: Priority
  nameWithType: FilterService.Priority
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Priority
- uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.Priority
  commentId: P:Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.Priority
  parent: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html#Mewdeko_Common_ModuleBehaviors_IEarlyBehavior_Priority
  name: Priority
  nameWithType: IEarlyBehavior.Priority
  fullName: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_BehaviorType
  name: BehaviorType
  nameWithType: FilterService.BehaviorType
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.BehaviorType
- uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.BehaviorType
  commentId: P:Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.BehaviorType
  parent: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html#Mewdeko_Common_ModuleBehaviors_IEarlyBehavior_BehaviorType
  name: BehaviorType
  nameWithType: IEarlyBehavior.BehaviorType
  fullName: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.BehaviorType
- uid: Mewdeko.Common.ModuleBehaviors.ModuleBehaviorType
  commentId: T:Mewdeko.Common.ModuleBehaviors.ModuleBehaviorType
  parent: Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.Common.ModuleBehaviors.ModuleBehaviorType.html
  name: ModuleBehaviorType
  nameWithType: ModuleBehaviorType
  fullName: Mewdeko.Common.ModuleBehaviors.ModuleBehaviorType
- uid: Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_RunBehavior_Discord_WebSocket_DiscordSocketClient_Discord_IGuild_Discord_IUserMessage_
  name: RunBehavior
  nameWithType: FilterService.RunBehavior
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.RunBehavior
- uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  commentId: M:Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
  parent: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior
  isExternal: true
  href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html#Mewdeko_Common_ModuleBehaviors_IEarlyBehavior_RunBehavior_Discord_WebSocket_DiscordSocketClient_Discord_IGuild_Discord_IUserMessage_
  name: RunBehavior(DiscordSocketClient, IGuild, IUserMessage)
  nameWithType: IEarlyBehavior.RunBehavior(DiscordSocketClient, IGuild, IUserMessage)
  fullName: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient, Discord.IGuild, Discord.IUserMessage)
  spec.csharp:
  - uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
    name: RunBehavior
    href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html#Mewdeko_Common_ModuleBehaviors_IEarlyBehavior_RunBehavior_Discord_WebSocket_DiscordSocketClient_Discord_IGuild_Discord_IUserMessage_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.RunBehavior(Discord.WebSocket.DiscordSocketClient,Discord.IGuild,Discord.IUserMessage)
    name: RunBehavior
    href: Mewdeko.Common.ModuleBehaviors.IEarlyBehavior.html#Mewdeko_Common_ModuleBehaviors_IEarlyBehavior_RunBehavior_Discord_WebSocket_DiscordSocketClient_Discord_IGuild_Discord_IUserMessage_
  - name: (
  - uid: Discord.WebSocket.DiscordSocketClient
    name: DiscordSocketClient
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IGuild
    name: IGuild
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: )
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  isExternal: true
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Permissions.Services.FilterService.Reload*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.Reload
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_Reload_System_Boolean_
  name: Reload
  nameWithType: FilterService.Reload
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.Reload
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_WordBlacklist_System_String_System_UInt64_
  name: WordBlacklist
  nameWithType: FilterService.WordBlacklist
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.WordBlacklist
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_UnBlacklist_System_String_System_UInt64_
  name: UnBlacklist
  nameWithType: FilterService.UnBlacklist
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.UnBlacklist
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilteredWordsForChannel_System_UInt64_System_UInt64_
  name: FilteredWordsForChannel
  nameWithType: FilterService.FilteredWordsForChannel
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForChannel
- uid: Mewdeko.Common.Collections.ConcurrentHashSet{System.String}
  commentId: T:Mewdeko.Common.Collections.ConcurrentHashSet{System.String}
  parent: Mewdeko.Common.Collections
  definition: Mewdeko.Common.Collections.ConcurrentHashSet`1
  href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  name: ConcurrentHashSet<string>
  nameWithType: ConcurrentHashSet<string>
  fullName: Mewdeko.Common.Collections.ConcurrentHashSet<string>
  nameWithType.vb: ConcurrentHashSet(Of String)
  fullName.vb: Mewdeko.Common.Collections.ConcurrentHashSet(Of String)
  name.vb: ConcurrentHashSet(Of String)
  spec.csharp:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.Collections.ConcurrentHashSet`1
    name: ConcurrentHashSet
    href: Mewdeko.Common.Collections.ConcurrentHashSet-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_GetInvWarn_System_UInt64_
  name: GetInvWarn
  nameWithType: FilterService.GetInvWarn
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.GetInvWarn
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.InvWarn
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_InvWarn_Discord_IGuild_System_String_
  name: InvWarn
  nameWithType: FilterService.InvWarn
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.InvWarn
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Mewdeko.Modules.Permissions.Services.FilterService.GetFw*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.GetFw
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_GetFw_System_UInt64_
  name: GetFw
  nameWithType: FilterService.GetFw
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.GetFw
- uid: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_SetFwarn_Discord_IGuild_System_String_
  name: SetFwarn
  nameWithType: FilterService.SetFwarn
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.SetFwarn
- uid: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_ClearFilteredWords_System_UInt64_
  name: ClearFilteredWords
  nameWithType: FilterService.ClearFilteredWords
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.ClearFilteredWords
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilteredWordsForServer_System_UInt64_
  name: FilteredWordsForServer
  nameWithType: FilterService.FilteredWordsForServer
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilteredWordsForServer
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilterBannedWords_Discord_IGuild_Discord_IUserMessage_
  name: FilterBannedWords
  nameWithType: FilterService.FilterBannedWords
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterBannedWords
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilterWords
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilterWords_Discord_IGuild_Discord_IUserMessage_
  name: FilterWords
  nameWithType: FilterService.FilterWords
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterWords
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilterInvites_Discord_IGuild_Discord_IUserMessage_
  name: FilterInvites
  nameWithType: FilterService.FilterInvites
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterInvites
- uid: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks*
  commentId: Overload:Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks
  href: Mewdeko.Modules.Permissions.Services.FilterService.html#Mewdeko_Modules_Permissions_Services_FilterService_FilterLinks_Discord_IGuild_Discord_IUserMessage_
  name: FilterLinks
  nameWithType: FilterService.FilterLinks
  fullName: Mewdeko.Modules.Permissions.Services.FilterService.FilterLinks
