### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.MewdekoSlashCommandModule
  commentId: T:Mewdeko.Common.MewdekoSlashCommandModule
  id: MewdekoSlashCommandModule
  parent: Mewdeko.Common
  children:
  - Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  - Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  - Mewdeko.Common.MewdekoSlashCommandModule.Config
  - Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  - Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.Localization
  - Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoSlashCommandModule.Strings
  - Mewdeko.Common.MewdekoSlashCommandModule.ctx
  langs:
  - csharp
  - vb
  name: MewdekoSlashCommandModule
  nameWithType: MewdekoSlashCommandModule
  fullName: Mewdeko.Common.MewdekoSlashCommandModule
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MewdekoSlashCommandModule
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Base class for slash command modules in Mewdeko.
  example: []
  syntax:
    content: 'public abstract class MewdekoSlashCommandModule : InteractionModuleBase, IInteractionModuleBase'
    content.vb: Public MustInherit Class MewdekoSlashCommandModule Inherits InteractionModuleBase Implements IInteractionModuleBase
  inheritance:
  - System.Object
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  - Discord.Interactions.InteractionModuleBase
  derivedClasses:
  - Mewdeko.Common.MewdekoSlashModuleBase`1
  - Mewdeko.Common.MewdekoSlashSubmodule
  - Mewdeko.Modules.Games.Services.PollButtons
  - Mewdeko.Modules.Server_Management.EmoteStealer
  implements:
  - Discord.Interactions.IInteractionModuleBase
  inheritedMembers:
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Common.MewdekoSlashCommandModule.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  id: CultureInfo
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: CultureInfo
  nameWithType: MewdekoSlashCommandModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CultureInfo
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: The culture information used for localization.
  example: []
  syntax:
    content: protected CultureInfo? CultureInfo { get; set; }
    parameters: []
    return:
      type: System.Globalization.CultureInfo
    content.vb: Protected Property CultureInfo As CultureInfo
  overload: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Strings
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Strings
  id: Strings
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: Strings
  nameWithType: MewdekoSlashCommandModule.Strings
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Strings
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Strings
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 20
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: The bot strings service for localization.
  example: []
  syntax:
    content: public IBotStrings? Strings { get; set; }
    parameters: []
    return:
      type: Mewdeko.Services.strings.IBotStrings
    content.vb: Public Property Strings As IBotStrings
  overload: Mewdeko.Common.MewdekoSlashCommandModule.Strings*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  id: CmdHandler
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: CmdHandler
  nameWithType: MewdekoSlashCommandModule.CmdHandler
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CmdHandler
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: The command handler service.
  example: []
  syntax:
    content: public CommandHandler? CmdHandler { get; set; }
    parameters: []
    return:
      type: Mewdeko.Services.CommandHandler
    content.vb: Public Property CmdHandler As CommandHandler
  overload: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Localization
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Localization
  id: Localization
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: Localization
  nameWithType: MewdekoSlashCommandModule.Localization
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Localization
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Localization
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 30
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: The localization service.
  example: []
  syntax:
    content: public ILocalization? Localization { get; set; }
    parameters: []
    return:
      type: Mewdeko.Services.ILocalization
    content.vb: Public Property Localization As ILocalization
  overload: Mewdeko.Common.MewdekoSlashCommandModule.Localization*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Config
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.Config
  id: Config
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: MewdekoSlashCommandModule.Config
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Config
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Config
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: The bot configuration.
  example: []
  syntax:
    content: public BotConfig Config { get; set; }
    parameters: []
    return:
      type: Mewdeko.Common.Configs.BotConfig
    content.vb: Public Property Config As BotConfig
  overload: Mewdeko.Common.MewdekoSlashCommandModule.Config*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ctx
  commentId: P:Mewdeko.Common.MewdekoSlashCommandModule.ctx
  id: ctx
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: ctx
  nameWithType: MewdekoSlashCommandModule.ctx
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ctx
  type: Property
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ctx
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 41
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets the interaction context.
  example: []
  syntax:
    content: protected IInteractionContext ctx { get; }
    parameters: []
    return:
      type: Discord.IInteractionContext
    content.vb: Protected ReadOnly Property ctx As IInteractionContext
  overload: Mewdeko.Common.MewdekoSlashCommandModule.ctx*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  id: BeforeExecute(Discord.Interactions.ICommandInfo)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: BeforeExecute(ICommandInfo)
  nameWithType: MewdekoSlashCommandModule.BeforeExecute(ICommandInfo)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute(Discord.Interactions.ICommandInfo)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BeforeExecute
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 47
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: >-
    Executed before the command is executed.

    Sets the culture information based on the guild's localization settings.
  example: []
  syntax:
    content: public override void BeforeExecute(ICommandInfo cmd)
    parameters:
    - id: cmd
      type: Discord.Interactions.ICommandInfo
    content.vb: Public Overrides Sub BeforeExecute(cmd As ICommandInfo)
  overridden: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute*
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String)
  id: GetText(System.String)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: GetText(string?)
  nameWithType: MewdekoSlashCommandModule.GetText(string?)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetText
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 52
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Retrieves a localized text message for the given key.
  example: []
  syntax:
    content: protected string? GetText(string? key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function GetText(key As String) As String
  overload: Mewdeko.Common.MewdekoSlashCommandModule.GetText*
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String)
  name.vb: GetText(String)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetText(System.String,System.Object[])
  id: GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: GetText(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.GetText(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetText
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 57
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Retrieves a localized text message for the given key with optional arguments.
  example: []
  syntax:
    content: protected string? GetText(string? key, params object?[] args)
    parameters:
    - id: key
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.String
    content.vb: Protected Function GetText(key As String, ParamArray args As Object()) As String
  overload: Mewdeko.Common.MewdekoSlashCommandModule.GetText*
  nameWithType.vb: MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(System.String,System.Object[])
  id: ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: ErrorLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.ErrorLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ErrorLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 62
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends an error message based on the specified key with optional arguments.
  example: []
  syntax:
    content: public Task ErrorLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ErrorLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  id: ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: ReplyErrorLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReplyErrorLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 71
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends an error message as a reply to the user with the specified key and optional arguments.
  example: []
  syntax:
    content: public Task ReplyErrorLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ReplyErrorLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  id: EphemeralReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: EphemeralReplyErrorLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EphemeralReplyErrorLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 80
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends an ephemeral error message as a reply to the user with the specified key and optional arguments.
  example: []
  syntax:
    content: public Task EphemeralReplyErrorLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EphemeralReplyErrorLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyErrorLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(System.String,System.Object[])
  id: ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: ConfirmLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.ConfirmLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConfirmLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 89
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends a confirmation message based on the specified key with optional arguments.
  example: []
  syntax:
    content: public Task ConfirmLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ConfirmLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  id: ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: ReplyConfirmLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReplyConfirmLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 98
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends a confirmation message as a reply to the user with the specified key and optional arguments.
  example: []
  syntax:
    content: public Task ReplyConfirmLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ReplyConfirmLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  id: EphemeralReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: EphemeralReplyConfirmLocalizedAsync(string?, params object?[])
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string?, params object?[])
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(string?, params object?[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EphemeralReplyConfirmLocalizedAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 107
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Sends an ephemeral confirmation message as a reply to the user with the specified key and optional arguments.
  example: []
  syntax:
    content: public Task EphemeralReplyConfirmLocalizedAsync(string? textKey, params object?[] args)
    parameters:
    - id: textKey
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EphemeralReplyConfirmLocalizedAsync(textKey As String, ParamArray args As Object()) As Task
  overload: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync*
  nameWithType.vb: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: EphemeralReplyConfirmLocalizedAsync(String, ParamArray Object())
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  id: PromptUserConfirmAsync(System.String,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: PromptUserConfirmAsync(string, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(string, ulong, bool, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PromptUserConfirmAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 116
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Prompts the user to confirm an action with the specified text and user ID.
  example: []
  syntax:
    content: public Task<bool> PromptUserConfirmAsync(string text, ulong uid, bool ephemeral = false, bool delete = true)
    parameters:
    - id: text
      type: System.String
    - id: uid
      type: System.UInt64
    - id: ephemeral
      type: System.Boolean
    - id: delete
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PromptUserConfirmAsync(text As String, uid As ULong, ephemeral As Boolean = False, delete As Boolean = True) As Task(Of Boolean)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync*
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(String, ULong, Boolean, Boolean)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  id: PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64,System.Boolean,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ulong, bool, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong, bool, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PromptUserConfirmAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 122
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Prompts the user to confirm an action with the specified embed, user ID, ephemeral status, and delete option.
  example: []
  syntax:
    content: public Task<bool> PromptUserConfirmAsync(EmbedBuilder embed, ulong userid, bool ephemeral = false, bool delete = true)
    parameters:
    - id: embed
      type: Discord.EmbedBuilder
    - id: userid
      type: System.UInt64
    - id: ephemeral
      type: System.Boolean
    - id: delete
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PromptUserConfirmAsync(embed As EmbedBuilder, userid As ULong, ephemeral As Boolean = False, delete As Boolean = True) As Task(Of Boolean)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync*
  nameWithType.vb: MewdekoSlashCommandModule.PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong, Boolean, Boolean)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong, Boolean, Boolean)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  id: CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CheckRoleHierarchy
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 147
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Checks the hierarchy of roles between the current user and the target user.
  example: []
  syntax:
    content: public Task<bool> CheckRoleHierarchy(IGuildUser target, bool displayError = true)
    parameters:
    - id: target
      type: Discord.IGuildUser
    - id: displayError
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function CheckRoleHierarchy(target As IGuildUser, displayError As Boolean = True) As Task(Of Boolean)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy*
  nameWithType.vb: MewdekoSlashCommandModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  id: GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetButtonInputAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 174
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets the user's input from a button interaction.
  example: []
  syntax:
    content: public Task<string>? GetButtonInputAsync(ulong channelId, ulong msgId, ulong userId, bool alreadyDeferred = false)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The channel ID to bind to
    - id: msgId
      type: System.UInt64
      description: The message ID to bind to
    - id: userId
      type: System.UInt64
      description: The user ID to bind to
    - id: alreadyDeferred
      type: System.Boolean
      description: Whether the interaction was already responded to.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function GetButtonInputAsync(channelId As ULong, msgId As ULong, userId As ULong, alreadyDeferred As Boolean = False) As Task(Of String)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync*
  nameWithType.vb: MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
- uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(System.UInt64,System.UInt64)
  id: NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoSlashCommandModule
  langs:
  - csharp
  - vb
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NextMessageAsync
    path: src/Mewdeko/Common/MewdekoSlashModuleBase.cs
    startLine: 230
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common
  summary: Gets the user's input from a message.
  example: []
  syntax:
    content: public Task<string>? NextMessageAsync(ulong channelId, ulong userId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The channel ID to bind to.
    - id: userId
      type: System.UInt64
      description: The user ID to bind to.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function NextMessageAsync(channelId As ULong, userId As ULong) As Task(Of String)
  overload: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync*
  nameWithType.vb: MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
references:
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  commentId: T:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  parent: Discord.Interactions
  definition: Discord.Interactions.InteractionModuleBase`1
  name: InteractionModuleBase<IInteractionContext>
  nameWithType: InteractionModuleBase<IInteractionContext>
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext)
  name.vb: InteractionModuleBase(Of IInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase
  commentId: T:Discord.Interactions.InteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: InteractionModuleBase
  nameWithType: InteractionModuleBase
  fullName: Discord.Interactions.InteractionModuleBase
- uid: Discord.Interactions.IInteractionModuleBase
  commentId: T:Discord.Interactions.IInteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: IInteractionModuleBase
  nameWithType: IInteractionModuleBase
  fullName: Discord.Interactions.IInteractionModuleBase
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<IInteractionContext>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<IInteractionContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<IInteractionContext>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,{TModal},Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<IInteractionContext>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  commentId: P:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.Context
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Context
  name: Context
  nameWithType: InteractionModuleBase<IInteractionContext>.Context
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.Context
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<MewdekoSlashCommandModule>(MewdekoSlashCommandModule, string)
  nameWithType: Extensions.ThrowIfNull<MewdekoSlashCommandModule>(MewdekoSlashCommandModule, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.MewdekoSlashCommandModule>(Mewdeko.Common.MewdekoSlashCommandModule, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of MewdekoSlashCommandModule)(MewdekoSlashCommandModule, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.MewdekoSlashCommandModule)(Mewdeko.Common.MewdekoSlashCommandModule, String)
  name.vb: ThrowIfNull(Of MewdekoSlashCommandModule)(MewdekoSlashCommandModule, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.MewdekoSlashCommandModule,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.MewdekoSlashCommandModule
    name: MewdekoSlashCommandModule
    href: Mewdeko.Common.MewdekoSlashCommandModule.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.MewdekoSlashCommandModule
    name: MewdekoSlashCommandModule
    href: Mewdeko.Common.MewdekoSlashCommandModule.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.MewdekoSlashCommandModule,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.MewdekoSlashCommandModule
    name: MewdekoSlashCommandModule
    href: Mewdeko.Common.MewdekoSlashCommandModule.html
  - name: )
  - name: (
  - uid: Mewdeko.Common.MewdekoSlashCommandModule
    name: MewdekoSlashCommandModule
    href: Mewdeko.Common.MewdekoSlashCommandModule.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Interactions.InteractionModuleBase`1
  commentId: T:Discord.Interactions.InteractionModuleBase`1
  isExternal: true
  name: InteractionModuleBase<T>
  nameWithType: InteractionModuleBase<T>
  fullName: Discord.Interactions.InteractionModuleBase<T>
  nameWithType.vb: InteractionModuleBase(Of T)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T)
  name.vb: InteractionModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Interactions
  commentId: N:Discord.Interactions
  isExternal: true
  name: Discord.Interactions
  nameWithType: Discord.Interactions
  fullName: Discord.Interactions
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Interactions
    name: Interactions
    isExternal: true
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  isExternal: true
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<T>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of T).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  isExternal: true
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<T>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<T>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of T).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    isExternal: true
  - name: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: DeferAsync(bool, RequestOptions)
  nameWithType: InteractionModuleBase<T>.DeferAsync(bool, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeferAsync(bool, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeferAsync(Boolean, Discord.RequestOptions)
  name.vb: DeferAsync(Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.RespondAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.FollowupAsync(string, Embed[], bool, bool, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupAsync(string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupAsync(String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(Stream, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(System.IO.Stream, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(System.IO.Stream, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(string, string, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(FileAttachment, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(Discord.FileAttachment, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(Discord.FileAttachment, String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    isExternal: true
  - name: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, string, Embed[], bool, bool, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, string, Discord.Embed[], bool, bool, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), String, Discord.Embed(), Boolean, Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.FileAttachment
    name: FileAttachment
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: InteractionModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  isExternal: true
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<T>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    isExternal: true
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.MessageProperties
    name: MessageProperties
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  isExternal: true
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    isExternal: true
  - name: (
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  isExternal: true
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - uid: Discord.Modal
    name: Modal
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, TModal, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, TModal, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, TModal, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,``0,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: TModal
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, RequestOptions, Action<ModalBuilder>)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<TModal>(string, Discord.RequestOptions, System.Action<Discord.ModalBuilder>)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of TModal)(String, Discord.RequestOptions, System.Action(Of Discord.ModalBuilder))
  name.vb: RespondWithModalAsync(Of TModal)(String, RequestOptions, Action(Of ModalBuilder))
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: <
  - name: TModal
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions,System.Action{Discord.ModalBuilder})
    name: RespondWithModalAsync
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TModal
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.ModalBuilder
    name: ModalBuilder
    isExternal: true
  - name: )
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  isExternal: true
  name: RespondWithPremiumRequiredAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithPremiumRequiredAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithPremiumRequiredAsync(Discord.RequestOptions)
    name: RespondWithPremiumRequiredAsync
    isExternal: true
  - name: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: )
- uid: Discord.Interactions.InteractionModuleBase`1.Context
  commentId: P:Discord.Interactions.InteractionModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: InteractionModuleBase<T>.Context
  fullName: Discord.Interactions.InteractionModuleBase<T>.Context
  nameWithType.vb: InteractionModuleBase(Of T).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoSlashCommandModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CultureInfo
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Strings*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.Strings
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Strings
  name: Strings
  nameWithType: MewdekoSlashCommandModule.Strings
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Strings
- uid: Mewdeko.Services.strings.IBotStrings
  commentId: T:Mewdeko.Services.strings.IBotStrings
  parent: Mewdeko.Services.strings
  href: Mewdeko.Services.strings.IBotStrings.html
  name: IBotStrings
  nameWithType: IBotStrings
  fullName: Mewdeko.Services.strings.IBotStrings
- uid: Mewdeko.Services.strings
  commentId: N:Mewdeko.Services.strings
  href: Mewdeko.html
  name: Mewdeko.Services.strings
  nameWithType: Mewdeko.Services.strings
  fullName: Mewdeko.Services.strings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CmdHandler
  name: CmdHandler
  nameWithType: MewdekoSlashCommandModule.CmdHandler
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CmdHandler
- uid: Mewdeko.Services.CommandHandler
  commentId: T:Mewdeko.Services.CommandHandler
  parent: Mewdeko.Services
  href: Mewdeko.Services.CommandHandler.html
  name: CommandHandler
  nameWithType: CommandHandler
  fullName: Mewdeko.Services.CommandHandler
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Localization*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.Localization
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Localization
  name: Localization
  nameWithType: MewdekoSlashCommandModule.Localization
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Localization
- uid: Mewdeko.Services.ILocalization
  commentId: T:Mewdeko.Services.ILocalization
  parent: Mewdeko.Services
  href: Mewdeko.Services.ILocalization.html
  name: ILocalization
  nameWithType: ILocalization
  fullName: Mewdeko.Services.ILocalization
- uid: Mewdeko.Common.MewdekoSlashCommandModule.Config*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.Config
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_Config
  name: Config
  nameWithType: MewdekoSlashCommandModule.Config
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.Config
- uid: Mewdeko.Common.Configs.BotConfig
  commentId: T:Mewdeko.Common.Configs.BotConfig
  parent: Mewdeko.Common.Configs
  href: Mewdeko.Common.Configs.BotConfig.html
  name: BotConfig
  nameWithType: BotConfig
  fullName: Mewdeko.Common.Configs.BotConfig
- uid: Mewdeko.Common.Configs
  commentId: N:Mewdeko.Common.Configs
  href: Mewdeko.html
  name: Mewdeko.Common.Configs
  nameWithType: Mewdeko.Common.Configs
  fullName: Mewdeko.Common.Configs
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Configs
    name: Configs
    href: Mewdeko.Common.Configs.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Configs
    name: Configs
    href: Mewdeko.Common.Configs.html
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ctx*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.ctx
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ctx
  name: ctx
  nameWithType: MewdekoSlashCommandModule.ctx
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ctx
- uid: Discord.IInteractionContext
  commentId: T:Discord.IInteractionContext
  parent: Discord
  isExternal: true
  name: IInteractionContext
  nameWithType: IInteractionContext
  fullName: Discord.IInteractionContext
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  name: BeforeExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<IInteractionContext>.BeforeExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.IInteractionContext>.BeforeExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of IInteractionContext).BeforeExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.IInteractionContext).BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase{Discord.IInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_BeforeExecute_Discord_Interactions_ICommandInfo_
  name: BeforeExecute
  nameWithType: MewdekoSlashCommandModule.BeforeExecute
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.BeforeExecute
- uid: Discord.Interactions.ICommandInfo
  commentId: T:Discord.Interactions.ICommandInfo
  parent: Discord.Interactions
  isExternal: true
  name: ICommandInfo
  nameWithType: ICommandInfo
  fullName: Discord.Interactions.ICommandInfo
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    isExternal: true
  - name: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetText*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.GetText
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetText_System_String_
  name: GetText
  nameWithType: MewdekoSlashCommandModule.GetText
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.ErrorLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ErrorLocalizedAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.ReplyErrorLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyErrorLocalizedAsync
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyErrorLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyErrorLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyErrorLocalizedAsync
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.ConfirmLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ConfirmLocalizedAsync
- uid: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.ReplyConfirmLocalizedAsync
- uid: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_EphemeralReplyConfirmLocalizedAsync_System_String_System_Object___
  name: EphemeralReplyConfirmLocalizedAsync
  nameWithType: MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.EphemeralReplyConfirmLocalizedAsync
- uid: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_PromptUserConfirmAsync_System_String_System_UInt64_System_Boolean_System_Boolean_
  name: PromptUserConfirmAsync
  nameWithType: MewdekoSlashCommandModule.PromptUserConfirmAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.PromptUserConfirmAsync
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Discord.EmbedBuilder
  commentId: T:Discord.EmbedBuilder
  parent: Discord
  isExternal: true
  name: EmbedBuilder
  nameWithType: EmbedBuilder
  fullName: Discord.EmbedBuilder
- uid: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy
  nameWithType: MewdekoSlashCommandModule.CheckRoleHierarchy
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.CheckRoleHierarchy
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync
  nameWithType: MewdekoSlashCommandModule.GetButtonInputAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.GetButtonInputAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync*
  commentId: Overload:Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync
  href: Mewdeko.Common.MewdekoSlashCommandModule.html#Mewdeko_Common_MewdekoSlashCommandModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync
  nameWithType: MewdekoSlashCommandModule.NextMessageAsync
  fullName: Mewdeko.Common.MewdekoSlashCommandModule.NextMessageAsync
