### YamlMime:ManagedReference
items:
- uid: Mewdeko.Services.Impl.BotCredentials
  commentId: T:Mewdeko.Services.Impl.BotCredentials
  id: BotCredentials
  parent: Mewdeko.Services.Impl
  children:
  - Mewdeko.Services.Impl.BotCredentials.#ctor
  - Mewdeko.Services.Impl.BotCredentials.BotListToken
  - Mewdeko.Services.Impl.BotCredentials.CarbonKey
  - Mewdeko.Services.Impl.BotCredentials.CfClearance
  - Mewdeko.Services.Impl.BotCredentials.ChatSavePath
  - Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
  - Mewdeko.Services.Impl.BotCredentials.ClientSecret
  - Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
  - Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
  - Mewdeko.Services.Impl.BotCredentials.CsrfToken
  - Mewdeko.Services.Impl.BotCredentials.DebugGuildId
  - Mewdeko.Services.Impl.BotCredentials.GeniusKey
  - Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
  - Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
  - Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
  - Mewdeko.Services.Impl.BotCredentials.IsOwner(Discord.IUser)
  - Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
  - Mewdeko.Services.Impl.BotCredentials.MashapeKey
  - Mewdeko.Services.Impl.BotCredentials.OsuApiKey
  - Mewdeko.Services.Impl.BotCredentials.OwnerIds
  - Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
  - Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
  - Mewdeko.Services.Impl.BotCredentials.RedisOptions
  - Mewdeko.Services.Impl.BotCredentials.RestartCommand
  - Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
  - Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
  - Mewdeko.Services.Impl.BotCredentials.ShardRunPort
  - Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
  - Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
  - Mewdeko.Services.Impl.BotCredentials.StatcordKey
  - Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
  - Mewdeko.Services.Impl.BotCredentials.Token
  - Mewdeko.Services.Impl.BotCredentials.TotalShards
  - Mewdeko.Services.Impl.BotCredentials.TrovoClientId
  - Mewdeko.Services.Impl.BotCredentials.TwitchClientId
  - Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
  - Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
  - Mewdeko.Services.Impl.BotCredentials.UsePsql
  - Mewdeko.Services.Impl.BotCredentials.UserAgent
  - Mewdeko.Services.Impl.BotCredentials.VotesToken
  - Mewdeko.Services.Impl.BotCredentials.VotesUrl
  langs:
  - csharp
  - vb
  name: BotCredentials
  nameWithType: BotCredentials
  fullName: Mewdeko.Services.Impl.BotCredentials
  type: Class
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BotCredentials
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 15
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Represents the bot's credentials. This class is used to load the bot's credentials from a JSON file.
  example: []
  syntax:
    content: 'public class BotCredentials : IBotCredentials'
    content.vb: Public Class BotCredentials Implements IBotCredentials
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.IBotCredentials
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.RedisKey
  - Mewdeko.Services.Impl.BotCredentials.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Services.Impl.BotCredentials.#ctor
  commentId: M:Mewdeko.Services.Impl.BotCredentials.#ctor
  id: '#ctor'
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: BotCredentials()
  nameWithType: BotCredentials.BotCredentials()
  fullName: Mewdeko.Services.Impl.BotCredentials.BotCredentials()
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 23
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Initializes a new instance of the <xref href="Mewdeko.Services.Impl.BotCredentials" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public BotCredentials()
    content.vb: Public Sub New()
  overload: Mewdeko.Services.Impl.BotCredentials.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: ''
  nameWithType.vb: BotCredentials.New()
  fullName.vb: Mewdeko.Services.Impl.BotCredentials.New()
  name.vb: New()
- uid: Mewdeko.Services.Impl.BotCredentials.Token
  commentId: P:Mewdeko.Services.Impl.BotCredentials.Token
  id: Token
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: BotCredentials.Token
  fullName: Mewdeko.Services.Impl.BotCredentials.Token
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Token
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 189
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's token.
  example: []
  syntax:
    content: public string Token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Token As String
  overload: Mewdeko.Services.Impl.BotCredentials.Token*
  implements:
  - Mewdeko.Services.IBotCredentials.Token
- uid: Mewdeko.Services.Impl.BotCredentials.ClientSecret
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ClientSecret
  id: ClientSecret
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: BotCredentials.ClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.ClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClientSecret
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 194
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's client secret.
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientSecret As String
  overload: Mewdeko.Services.Impl.BotCredentials.ClientSecret*
  implements:
  - Mewdeko.Services.IBotCredentials.ClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunPort
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ShardRunPort
  id: ShardRunPort
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ShardRunPort
  nameWithType: BotCredentials.ShardRunPort
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunPort
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShardRunPort
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 199
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the port the client coordinator is running on.
  example: []
  syntax:
    content: public string ShardRunPort { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShardRunPort As String
  overload: Mewdeko.Services.Impl.BotCredentials.ShardRunPort*
  implements:
  - Mewdeko.Services.IBotCredentials.ShardRunPort
- uid: Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
  id: GoogleApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: GoogleApiKey
  nameWithType: BotCredentials.GoogleApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GoogleApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 204
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Google API key.
  example: []
  syntax:
    content: public string GoogleApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GoogleApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.GoogleApiKey*
  implements:
  - Mewdeko.Services.IBotCredentials.GoogleApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
  id: SpotifyClientId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: SpotifyClientId
  nameWithType: BotCredentials.SpotifyClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SpotifyClientId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 209
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Spotify client ID.
  example: []
  syntax:
    content: public string SpotifyClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpotifyClientId As String
  overload: Mewdeko.Services.Impl.BotCredentials.SpotifyClientId*
  implements:
  - Mewdeko.Services.IBotCredentials.SpotifyClientId
- uid: Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
  commentId: P:Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
  id: SpotifyClientSecret
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: SpotifyClientSecret
  nameWithType: BotCredentials.SpotifyClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SpotifyClientSecret
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 214
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Spotify client secret.
  example: []
  syntax:
    content: public string SpotifyClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SpotifyClientSecret As String
  overload: Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret*
  implements:
  - Mewdeko.Services.IBotCredentials.SpotifyClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.MashapeKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.MashapeKey
  id: MashapeKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: MashapeKey
  nameWithType: BotCredentials.MashapeKey
  fullName: Mewdeko.Services.Impl.BotCredentials.MashapeKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MashapeKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 219
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Mashape key.
  example: []
  syntax:
    content: public string MashapeKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MashapeKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.MashapeKey*
  implements:
  - Mewdeko.Services.IBotCredentials.MashapeKey
- uid: Mewdeko.Services.Impl.BotCredentials.StatcordKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.StatcordKey
  id: StatcordKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: StatcordKey
  nameWithType: BotCredentials.StatcordKey
  fullName: Mewdeko.Services.Impl.BotCredentials.StatcordKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StatcordKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 224
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Statcord key.
  example: []
  syntax:
    content: public string StatcordKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatcordKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.StatcordKey*
  implements:
  - Mewdeko.Services.IBotCredentials.StatcordKey
- uid: Mewdeko.Services.Impl.BotCredentials.CfClearance
  commentId: P:Mewdeko.Services.Impl.BotCredentials.CfClearance
  id: CfClearance
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: CfClearance
  nameWithType: BotCredentials.CfClearance
  fullName: Mewdeko.Services.Impl.BotCredentials.CfClearance
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CfClearance
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 229
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's clearance cookie for Cloudflare.
  example: []
  syntax:
    content: public string CfClearance { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CfClearance As String
  overload: Mewdeko.Services.Impl.BotCredentials.CfClearance*
  implements:
  - Mewdeko.Services.IBotCredentials.CfClearance
- uid: Mewdeko.Services.Impl.BotCredentials.UserAgent
  commentId: P:Mewdeko.Services.Impl.BotCredentials.UserAgent
  id: UserAgent
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: UserAgent
  nameWithType: BotCredentials.UserAgent
  fullName: Mewdeko.Services.Impl.BotCredentials.UserAgent
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserAgent
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 234
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's user agent used for bypassing Cloudflare.
  example: []
  syntax:
    content: public string UserAgent { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserAgent As String
  overload: Mewdeko.Services.Impl.BotCredentials.UserAgent*
  implements:
  - Mewdeko.Services.IBotCredentials.UserAgent
- uid: Mewdeko.Services.Impl.BotCredentials.CsrfToken
  commentId: P:Mewdeko.Services.Impl.BotCredentials.CsrfToken
  id: CsrfToken
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: CsrfToken
  nameWithType: BotCredentials.CsrfToken
  fullName: Mewdeko.Services.Impl.BotCredentials.CsrfToken
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CsrfToken
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 239
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's CSRF token used for bypassing Cloudflare.
  example: []
  syntax:
    content: public string CsrfToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CsrfToken As String
  overload: Mewdeko.Services.Impl.BotCredentials.CsrfToken*
  implements:
  - Mewdeko.Services.IBotCredentials.CsrfToken
- uid: Mewdeko.Services.Impl.BotCredentials.OwnerIds
  commentId: P:Mewdeko.Services.Impl.BotCredentials.OwnerIds
  id: OwnerIds
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: OwnerIds
  nameWithType: BotCredentials.OwnerIds
  fullName: Mewdeko.Services.Impl.BotCredentials.OwnerIds
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OwnerIds
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 244
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's owner IDs.
  example: []
  syntax:
    content: public ImmutableArray<ulong> OwnerIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{System.UInt64}
    content.vb: Public Property OwnerIds As ImmutableArray(Of ULong)
  overload: Mewdeko.Services.Impl.BotCredentials.OwnerIds*
  implements:
  - Mewdeko.Services.IBotCredentials.OwnerIds
- uid: Mewdeko.Services.Impl.BotCredentials.OsuApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.OsuApiKey
  id: OsuApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: OsuApiKey
  nameWithType: BotCredentials.OsuApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.OsuApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OsuApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 249
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's osu! API key.
  example: []
  syntax:
    content: public string OsuApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OsuApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.OsuApiKey*
  implements:
  - Mewdeko.Services.IBotCredentials.OsuApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
  id: CleverbotApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: CleverbotApiKey
  nameWithType: BotCredentials.CleverbotApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CleverbotApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 254
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the key used for the bot's Cleverbot integration.
  example: []
  syntax:
    content: public string CleverbotApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CleverbotApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey*
  implements:
  - Mewdeko.Services.IBotCredentials.CleverbotApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.RestartCommand
  commentId: P:Mewdeko.Services.Impl.BotCredentials.RestartCommand
  id: RestartCommand
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: RestartCommand
  nameWithType: BotCredentials.RestartCommand
  fullName: Mewdeko.Services.Impl.BotCredentials.RestartCommand
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RestartCommand
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 259
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the command used to restart the bot.
  example: []
  syntax:
    content: public RestartConfig RestartCommand { get; set; }
    parameters: []
    return:
      type: Mewdeko.Services.RestartConfig
    content.vb: Public Property RestartCommand As RestartConfig
  overload: Mewdeko.Services.Impl.BotCredentials.RestartCommand*
  implements:
  - Mewdeko.Services.IBotCredentials.RestartCommand
- uid: Mewdeko.Services.Impl.BotCredentials.TotalShards
  commentId: P:Mewdeko.Services.Impl.BotCredentials.TotalShards
  id: TotalShards
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: TotalShards
  nameWithType: BotCredentials.TotalShards
  fullName: Mewdeko.Services.Impl.BotCredentials.TotalShards
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TotalShards
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 264
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's total number of shards.
  example: []
  syntax:
    content: public int TotalShards { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalShards As Integer
  overload: Mewdeko.Services.Impl.BotCredentials.TotalShards*
  implements:
  - Mewdeko.Services.IBotCredentials.TotalShards
- uid: Mewdeko.Services.Impl.BotCredentials.CarbonKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.CarbonKey
  id: CarbonKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: CarbonKey
  nameWithType: BotCredentials.CarbonKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CarbonKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CarbonKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 269
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the bot's Carbon key.
  example: []
  syntax:
    content: public string CarbonKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CarbonKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.CarbonKey*
- uid: Mewdeko.Services.Impl.BotCredentials.ChatSavePath
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ChatSavePath
  id: ChatSavePath
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ChatSavePath
  nameWithType: BotCredentials.ChatSavePath
  fullName: Mewdeko.Services.Impl.BotCredentials.ChatSavePath
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChatSavePath
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 274
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets where the bot should save chat logs.
  example: []
  syntax:
    content: public string ChatSavePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ChatSavePath As String
  overload: Mewdeko.Services.Impl.BotCredentials.ChatSavePath*
  implements:
  - Mewdeko.Services.IBotCredentials.ChatSavePath
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
  id: ShardRunCommand
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ShardRunCommand
  nameWithType: BotCredentials.ShardRunCommand
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShardRunCommand
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 279
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the command used to run a shard.
  example: []
  syntax:
    content: public string ShardRunCommand { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShardRunCommand As String
  overload: Mewdeko.Services.Impl.BotCredentials.ShardRunCommand*
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
  id: ShardRunArguments
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ShardRunArguments
  nameWithType: BotCredentials.ShardRunArguments
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShardRunArguments
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 284
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the arguments used to run a shard.
  example: []
  syntax:
    content: public string ShardRunArguments { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ShardRunArguments As String
  overload: Mewdeko.Services.Impl.BotCredentials.ShardRunArguments*
- uid: Mewdeko.Services.Impl.BotCredentials.UsePsql
  commentId: P:Mewdeko.Services.Impl.BotCredentials.UsePsql
  id: UsePsql
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: UsePsql
  nameWithType: BotCredentials.UsePsql
  fullName: Mewdeko.Services.Impl.BotCredentials.UsePsql
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UsePsql
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 289
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets a value indicating whether the bot should use PostgreSQL.
  example: []
  syntax:
    content: public bool UsePsql { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UsePsql As Boolean
  overload: Mewdeko.Services.Impl.BotCredentials.UsePsql*
- uid: Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
  commentId: P:Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
  id: PsqlConnectionString
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: PsqlConnectionString
  nameWithType: BotCredentials.PsqlConnectionString
  fullName: Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PsqlConnectionString
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 294
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the PostgreSQL connection string.
  example: []
  syntax:
    content: public string PsqlConnectionString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PsqlConnectionString As String
  overload: Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString*
- uid: Mewdeko.Services.Impl.BotCredentials.TwitchClientId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.TwitchClientId
  id: TwitchClientId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: TwitchClientId
  nameWithType: BotCredentials.TwitchClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.TwitchClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TwitchClientId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 299
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the Twitch client ID.
  example: []
  syntax:
    content: public string TwitchClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TwitchClientId As String
  overload: Mewdeko.Services.Impl.BotCredentials.TwitchClientId*
  implements:
  - Mewdeko.Services.IBotCredentials.TwitchClientId
- uid: Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
  commentId: P:Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
  id: UseGlobalCurrency
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: UseGlobalCurrency
  nameWithType: BotCredentials.UseGlobalCurrency
  fullName: Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UseGlobalCurrency
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 304
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets a value indicating whether the bot should use global currency.
  example: []
  syntax:
    content: public bool UseGlobalCurrency { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseGlobalCurrency As Boolean
  overload: Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency*
- uid: Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
  commentId: P:Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
  id: TwitchClientSecret
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: TwitchClientSecret
  nameWithType: BotCredentials.TwitchClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TwitchClientSecret
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 309
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the Twitch client secret.
  example: []
  syntax:
    content: public string TwitchClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TwitchClientSecret As String
  overload: Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret*
  implements:
  - Mewdeko.Services.IBotCredentials.TwitchClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.TrovoClientId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.TrovoClientId
  id: TrovoClientId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: TrovoClientId
  nameWithType: BotCredentials.TrovoClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.TrovoClientId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TrovoClientId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 314
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the Trovo client ID.
  example: []
  syntax:
    content: public string TrovoClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TrovoClientId As String
  overload: Mewdeko.Services.Impl.BotCredentials.TrovoClientId*
  implements:
  - Mewdeko.Services.IBotCredentials.TrovoClientId
- uid: Mewdeko.Services.Impl.BotCredentials.VotesUrl
  commentId: P:Mewdeko.Services.Impl.BotCredentials.VotesUrl
  id: VotesUrl
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: VotesUrl
  nameWithType: BotCredentials.VotesUrl
  fullName: Mewdeko.Services.Impl.BotCredentials.VotesUrl
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: VotesUrl
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 319
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the URL for votes.
  example: []
  syntax:
    content: public string VotesUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VotesUrl As String
  overload: Mewdeko.Services.Impl.BotCredentials.VotesUrl*
- uid: Mewdeko.Services.Impl.BotCredentials.VotesToken
  commentId: P:Mewdeko.Services.Impl.BotCredentials.VotesToken
  id: VotesToken
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: VotesToken
  nameWithType: BotCredentials.VotesToken
  fullName: Mewdeko.Services.Impl.BotCredentials.VotesToken
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: VotesToken
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 324
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the token for votes.
  example: []
  syntax:
    content: public string VotesToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VotesToken As String
  overload: Mewdeko.Services.Impl.BotCredentials.VotesToken*
  implements:
  - Mewdeko.Services.IBotCredentials.VotesToken
- uid: Mewdeko.Services.Impl.BotCredentials.BotListToken
  commentId: P:Mewdeko.Services.Impl.BotCredentials.BotListToken
  id: BotListToken
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: BotListToken
  nameWithType: BotCredentials.BotListToken
  fullName: Mewdeko.Services.Impl.BotCredentials.BotListToken
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BotListToken
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 329
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the token for bot lists.
  example: []
  syntax:
    content: public string BotListToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BotListToken As String
  overload: Mewdeko.Services.Impl.BotCredentials.BotListToken*
- uid: Mewdeko.Services.Impl.BotCredentials.RedisOptions
  commentId: P:Mewdeko.Services.Impl.BotCredentials.RedisOptions
  id: RedisOptions
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: RedisOptions
  nameWithType: BotCredentials.RedisOptions
  fullName: Mewdeko.Services.Impl.BotCredentials.RedisOptions
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RedisOptions
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 334
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the Redis options.
  example: []
  syntax:
    content: public string RedisOptions { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RedisOptions As String
  overload: Mewdeko.Services.Impl.BotCredentials.RedisOptions*
  implements:
  - Mewdeko.Services.IBotCredentials.RedisOptions
- uid: Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
  id: LocationIqApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: LocationIqApiKey
  nameWithType: BotCredentials.LocationIqApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LocationIqApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 339
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the API key for LocationIQ.
  example: []
  syntax:
    content: public string LocationIqApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocationIqApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey*
  implements:
  - Mewdeko.Services.IBotCredentials.LocationIqApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
  id: TimezoneDbApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: TimezoneDbApiKey
  nameWithType: BotCredentials.TimezoneDbApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TimezoneDbApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 344
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the API key for TimezoneDB.
  example: []
  syntax:
    content: public string TimezoneDbApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TimezoneDbApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey*
  implements:
  - Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
  id: CoinmarketcapApiKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: CoinmarketcapApiKey
  nameWithType: BotCredentials.CoinmarketcapApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CoinmarketcapApiKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 349
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the API key for Coinmarketcap.
  example: []
  syntax:
    content: public string CoinmarketcapApiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CoinmarketcapApiKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey*
- uid: Mewdeko.Services.Impl.BotCredentials.DebugGuildId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.DebugGuildId
  id: DebugGuildId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: DebugGuildId
  nameWithType: BotCredentials.DebugGuildId
  fullName: Mewdeko.Services.Impl.BotCredentials.DebugGuildId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DebugGuildId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 354
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the ID of the debug guild.
  example: []
  syntax:
    content: public ulong DebugGuildId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property DebugGuildId As ULong
  overload: Mewdeko.Services.Impl.BotCredentials.DebugGuildId*
- uid: Mewdeko.Services.Impl.BotCredentials.GeniusKey
  commentId: P:Mewdeko.Services.Impl.BotCredentials.GeniusKey
  id: GeniusKey
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: GeniusKey
  nameWithType: BotCredentials.GeniusKey
  fullName: Mewdeko.Services.Impl.BotCredentials.GeniusKey
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GeniusKey
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 359
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the Genius API key.
  example: []
  syntax:
    content: public string GeniusKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GeniusKey As String
  overload: Mewdeko.Services.Impl.BotCredentials.GeniusKey*
  implements:
  - Mewdeko.Services.IBotCredentials.GeniusKey
- uid: Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
  id: GuildJoinsChannelId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: GuildJoinsChannelId
  nameWithType: BotCredentials.GuildJoinsChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GuildJoinsChannelId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 364
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the ID of the channel where guild joins are reported.
  example: []
  syntax:
    content: public ulong GuildJoinsChannelId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property GuildJoinsChannelId As ULong
  overload: Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId*
- uid: Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
  id: ConfessionReportChannelId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: ConfessionReportChannelId
  nameWithType: BotCredentials.ConfessionReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ConfessionReportChannelId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 369
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the ID of the channel where confession reports are sent.
  example: []
  syntax:
    content: public ulong ConfessionReportChannelId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property ConfessionReportChannelId As ULong
  overload: Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId*
  implements:
  - Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
- uid: Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
  id: GlobalBanReportChannelId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: GlobalBanReportChannelId
  nameWithType: BotCredentials.GlobalBanReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GlobalBanReportChannelId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 374
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the ID of the channel where global ban reports are sent.
  example: []
  syntax:
    content: public ulong GlobalBanReportChannelId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property GlobalBanReportChannelId As ULong
  overload: Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId*
- uid: Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
  commentId: P:Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
  id: PronounAbuseReportChannelId
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: PronounAbuseReportChannelId
  nameWithType: BotCredentials.PronounAbuseReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PronounAbuseReportChannelId
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 379
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Gets or sets the ID of the channel where pronoun abuse reports are sent.
  example: []
  syntax:
    content: public ulong PronounAbuseReportChannelId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property PronounAbuseReportChannelId As ULong
  overload: Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId*
- uid: Mewdeko.Services.Impl.BotCredentials.IsOwner(Discord.IUser)
  commentId: M:Mewdeko.Services.Impl.BotCredentials.IsOwner(Discord.IUser)
  id: IsOwner(Discord.IUser)
  parent: Mewdeko.Services.Impl.BotCredentials
  langs:
  - csharp
  - vb
  name: IsOwner(IUser)
  nameWithType: BotCredentials.IsOwner(IUser)
  fullName: Mewdeko.Services.Impl.BotCredentials.IsOwner(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/Impl/BotCredentials.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsOwner
    path: src/Mewdeko/Services/Impl/BotCredentials.cs
    startLine: 386
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services.Impl
  summary: Checks if the specified user is an owner of the bot.
  example: []
  syntax:
    content: public bool IsOwner(IUser u)
    parameters:
    - id: u
      type: Discord.IUser
      description: The user to check.
    return:
      type: System.Boolean
      description: True if the user is an owner; otherwise, false.
    content.vb: Public Function IsOwner(u As IUser) As Boolean
  overload: Mewdeko.Services.Impl.BotCredentials.IsOwner*
  implements:
  - Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
references:
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.IBotCredentials
  commentId: T:Mewdeko.Services.IBotCredentials
  parent: Mewdeko.Services
  href: Mewdeko.Services.IBotCredentials.html
  name: IBotCredentials
  nameWithType: IBotCredentials
  fullName: Mewdeko.Services.IBotCredentials
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Services.IBotCredentials.Mewdeko.Extensions.Extensions.RedisKey
  commentId: M:Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  name: RedisKey(IBotCredentials)
  nameWithType: Extensions.RedisKey(IBotCredentials)
  fullName: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
- uid: Mewdeko.Services.Impl.BotCredentials.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<BotCredentials>(BotCredentials, string)
  nameWithType: Extensions.ThrowIfNull<BotCredentials>(BotCredentials, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Services.Impl.BotCredentials>(Mewdeko.Services.Impl.BotCredentials, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of BotCredentials)(BotCredentials, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Services.Impl.BotCredentials)(Mewdeko.Services.Impl.BotCredentials, String)
  name.vb: ThrowIfNull(Of BotCredentials)(BotCredentials, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.Impl.BotCredentials,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Services.Impl.BotCredentials
    name: BotCredentials
    href: Mewdeko.Services.Impl.BotCredentials.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Services.Impl.BotCredentials
    name: BotCredentials
    href: Mewdeko.Services.Impl.BotCredentials.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.Impl.BotCredentials,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.Impl.BotCredentials
    name: BotCredentials
    href: Mewdeko.Services.Impl.BotCredentials.html
  - name: )
  - name: (
  - uid: Mewdeko.Services.Impl.BotCredentials
    name: BotCredentials
    href: Mewdeko.Services.Impl.BotCredentials.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  commentId: M:Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  name: RedisKey(IBotCredentials)
  nameWithType: Extensions.RedisKey(IBotCredentials)
  fullName: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.RedisKey(Mewdeko.Services.IBotCredentials)
    name: RedisKey
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_RedisKey_Mewdeko_Services_IBotCredentials_
  - name: (
  - uid: Mewdeko.Services.IBotCredentials
    name: IBotCredentials
    href: Mewdeko.Services.IBotCredentials.html
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.Impl.BotCredentials
  commentId: T:Mewdeko.Services.Impl.BotCredentials
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.BotCredentials.html
  name: BotCredentials
  nameWithType: BotCredentials
  fullName: Mewdeko.Services.Impl.BotCredentials
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: Mewdeko.Services.Impl.BotCredentials.#ctor*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.#ctor
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials__ctor
  name: BotCredentials
  nameWithType: BotCredentials.BotCredentials
  fullName: Mewdeko.Services.Impl.BotCredentials.BotCredentials
  nameWithType.vb: BotCredentials.New
  fullName.vb: Mewdeko.Services.Impl.BotCredentials.New
  name.vb: New
- uid: Mewdeko.Services.Impl.BotCredentials.Token*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.Token
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_Token
  name: Token
  nameWithType: BotCredentials.Token
  fullName: Mewdeko.Services.Impl.BotCredentials.Token
- uid: Mewdeko.Services.IBotCredentials.Token
  commentId: P:Mewdeko.Services.IBotCredentials.Token
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_Token
  name: Token
  nameWithType: IBotCredentials.Token
  fullName: Mewdeko.Services.IBotCredentials.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Services.Impl.BotCredentials.ClientSecret*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ClientSecret
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ClientSecret
  name: ClientSecret
  nameWithType: BotCredentials.ClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.ClientSecret
- uid: Mewdeko.Services.IBotCredentials.ClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.ClientSecret
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ClientSecret
  name: ClientSecret
  nameWithType: IBotCredentials.ClientSecret
  fullName: Mewdeko.Services.IBotCredentials.ClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunPort*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ShardRunPort
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ShardRunPort
  name: ShardRunPort
  nameWithType: BotCredentials.ShardRunPort
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunPort
- uid: Mewdeko.Services.IBotCredentials.ShardRunPort
  commentId: P:Mewdeko.Services.IBotCredentials.ShardRunPort
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ShardRunPort
  name: ShardRunPort
  nameWithType: IBotCredentials.ShardRunPort
  fullName: Mewdeko.Services.IBotCredentials.ShardRunPort
- uid: Mewdeko.Services.Impl.BotCredentials.GoogleApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_GoogleApiKey
  name: GoogleApiKey
  nameWithType: BotCredentials.GoogleApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.GoogleApiKey
- uid: Mewdeko.Services.IBotCredentials.GoogleApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.GoogleApiKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_GoogleApiKey
  name: GoogleApiKey
  nameWithType: IBotCredentials.GoogleApiKey
  fullName: Mewdeko.Services.IBotCredentials.GoogleApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.SpotifyClientId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_SpotifyClientId
  name: SpotifyClientId
  nameWithType: BotCredentials.SpotifyClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.SpotifyClientId
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientId
  commentId: P:Mewdeko.Services.IBotCredentials.SpotifyClientId
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_SpotifyClientId
  name: SpotifyClientId
  nameWithType: IBotCredentials.SpotifyClientId
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientId
- uid: Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_SpotifyClientSecret
  name: SpotifyClientSecret
  nameWithType: BotCredentials.SpotifyClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.SpotifyClientSecret
- uid: Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.SpotifyClientSecret
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_SpotifyClientSecret
  name: SpotifyClientSecret
  nameWithType: IBotCredentials.SpotifyClientSecret
  fullName: Mewdeko.Services.IBotCredentials.SpotifyClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.MashapeKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.MashapeKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_MashapeKey
  name: MashapeKey
  nameWithType: BotCredentials.MashapeKey
  fullName: Mewdeko.Services.Impl.BotCredentials.MashapeKey
- uid: Mewdeko.Services.IBotCredentials.MashapeKey
  commentId: P:Mewdeko.Services.IBotCredentials.MashapeKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_MashapeKey
  name: MashapeKey
  nameWithType: IBotCredentials.MashapeKey
  fullName: Mewdeko.Services.IBotCredentials.MashapeKey
- uid: Mewdeko.Services.Impl.BotCredentials.StatcordKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.StatcordKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_StatcordKey
  name: StatcordKey
  nameWithType: BotCredentials.StatcordKey
  fullName: Mewdeko.Services.Impl.BotCredentials.StatcordKey
- uid: Mewdeko.Services.IBotCredentials.StatcordKey
  commentId: P:Mewdeko.Services.IBotCredentials.StatcordKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_StatcordKey
  name: StatcordKey
  nameWithType: IBotCredentials.StatcordKey
  fullName: Mewdeko.Services.IBotCredentials.StatcordKey
- uid: Mewdeko.Services.Impl.BotCredentials.CfClearance*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.CfClearance
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_CfClearance
  name: CfClearance
  nameWithType: BotCredentials.CfClearance
  fullName: Mewdeko.Services.Impl.BotCredentials.CfClearance
- uid: Mewdeko.Services.IBotCredentials.CfClearance
  commentId: P:Mewdeko.Services.IBotCredentials.CfClearance
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CfClearance
  name: CfClearance
  nameWithType: IBotCredentials.CfClearance
  fullName: Mewdeko.Services.IBotCredentials.CfClearance
- uid: Mewdeko.Services.Impl.BotCredentials.UserAgent*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.UserAgent
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_UserAgent
  name: UserAgent
  nameWithType: BotCredentials.UserAgent
  fullName: Mewdeko.Services.Impl.BotCredentials.UserAgent
- uid: Mewdeko.Services.IBotCredentials.UserAgent
  commentId: P:Mewdeko.Services.IBotCredentials.UserAgent
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_UserAgent
  name: UserAgent
  nameWithType: IBotCredentials.UserAgent
  fullName: Mewdeko.Services.IBotCredentials.UserAgent
- uid: Mewdeko.Services.Impl.BotCredentials.CsrfToken*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.CsrfToken
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_CsrfToken
  name: CsrfToken
  nameWithType: BotCredentials.CsrfToken
  fullName: Mewdeko.Services.Impl.BotCredentials.CsrfToken
- uid: Mewdeko.Services.IBotCredentials.CsrfToken
  commentId: P:Mewdeko.Services.IBotCredentials.CsrfToken
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CsrfToken
  name: CsrfToken
  nameWithType: IBotCredentials.CsrfToken
  fullName: Mewdeko.Services.IBotCredentials.CsrfToken
- uid: Mewdeko.Services.Impl.BotCredentials.OwnerIds*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.OwnerIds
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_OwnerIds
  name: OwnerIds
  nameWithType: BotCredentials.OwnerIds
  fullName: Mewdeko.Services.Impl.BotCredentials.OwnerIds
- uid: Mewdeko.Services.IBotCredentials.OwnerIds
  commentId: P:Mewdeko.Services.IBotCredentials.OwnerIds
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_OwnerIds
  name: OwnerIds
  nameWithType: IBotCredentials.OwnerIds
  fullName: Mewdeko.Services.IBotCredentials.OwnerIds
- uid: System.Collections.Immutable.ImmutableArray{System.UInt64}
  commentId: T:System.Collections.Immutable.ImmutableArray{System.UInt64}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<ulong>
  nameWithType: ImmutableArray<ulong>
  fullName: System.Collections.Immutable.ImmutableArray<ulong>
  nameWithType.vb: ImmutableArray(Of ULong)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of ULong)
  name.vb: ImmutableArray(Of ULong)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: Mewdeko.Services.Impl.BotCredentials.OsuApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.OsuApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_OsuApiKey
  name: OsuApiKey
  nameWithType: BotCredentials.OsuApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.OsuApiKey
- uid: Mewdeko.Services.IBotCredentials.OsuApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.OsuApiKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_OsuApiKey
  name: OsuApiKey
  nameWithType: IBotCredentials.OsuApiKey
  fullName: Mewdeko.Services.IBotCredentials.OsuApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_CleverbotApiKey
  name: CleverbotApiKey
  nameWithType: BotCredentials.CleverbotApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CleverbotApiKey
- uid: Mewdeko.Services.IBotCredentials.CleverbotApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.CleverbotApiKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_CleverbotApiKey
  name: CleverbotApiKey
  nameWithType: IBotCredentials.CleverbotApiKey
  fullName: Mewdeko.Services.IBotCredentials.CleverbotApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.RestartCommand*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.RestartCommand
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_RestartCommand
  name: RestartCommand
  nameWithType: BotCredentials.RestartCommand
  fullName: Mewdeko.Services.Impl.BotCredentials.RestartCommand
- uid: Mewdeko.Services.IBotCredentials.RestartCommand
  commentId: P:Mewdeko.Services.IBotCredentials.RestartCommand
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_RestartCommand
  name: RestartCommand
  nameWithType: IBotCredentials.RestartCommand
  fullName: Mewdeko.Services.IBotCredentials.RestartCommand
- uid: Mewdeko.Services.RestartConfig
  commentId: T:Mewdeko.Services.RestartConfig
  parent: Mewdeko.Services
  href: Mewdeko.Services.RestartConfig.html
  name: RestartConfig
  nameWithType: RestartConfig
  fullName: Mewdeko.Services.RestartConfig
- uid: Mewdeko.Services.Impl.BotCredentials.TotalShards*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.TotalShards
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_TotalShards
  name: TotalShards
  nameWithType: BotCredentials.TotalShards
  fullName: Mewdeko.Services.Impl.BotCredentials.TotalShards
- uid: Mewdeko.Services.IBotCredentials.TotalShards
  commentId: P:Mewdeko.Services.IBotCredentials.TotalShards
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TotalShards
  name: TotalShards
  nameWithType: IBotCredentials.TotalShards
  fullName: Mewdeko.Services.IBotCredentials.TotalShards
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Services.Impl.BotCredentials.CarbonKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.CarbonKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_CarbonKey
  name: CarbonKey
  nameWithType: BotCredentials.CarbonKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CarbonKey
- uid: Mewdeko.Services.Impl.BotCredentials.ChatSavePath*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ChatSavePath
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ChatSavePath
  name: ChatSavePath
  nameWithType: BotCredentials.ChatSavePath
  fullName: Mewdeko.Services.Impl.BotCredentials.ChatSavePath
- uid: Mewdeko.Services.IBotCredentials.ChatSavePath
  commentId: P:Mewdeko.Services.IBotCredentials.ChatSavePath
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ChatSavePath
  name: ChatSavePath
  nameWithType: IBotCredentials.ChatSavePath
  fullName: Mewdeko.Services.IBotCredentials.ChatSavePath
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunCommand*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ShardRunCommand
  name: ShardRunCommand
  nameWithType: BotCredentials.ShardRunCommand
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunCommand
- uid: Mewdeko.Services.Impl.BotCredentials.ShardRunArguments*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ShardRunArguments
  name: ShardRunArguments
  nameWithType: BotCredentials.ShardRunArguments
  fullName: Mewdeko.Services.Impl.BotCredentials.ShardRunArguments
- uid: Mewdeko.Services.Impl.BotCredentials.UsePsql*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.UsePsql
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_UsePsql
  name: UsePsql
  nameWithType: BotCredentials.UsePsql
  fullName: Mewdeko.Services.Impl.BotCredentials.UsePsql
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_PsqlConnectionString
  name: PsqlConnectionString
  nameWithType: BotCredentials.PsqlConnectionString
  fullName: Mewdeko.Services.Impl.BotCredentials.PsqlConnectionString
- uid: Mewdeko.Services.Impl.BotCredentials.TwitchClientId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.TwitchClientId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_TwitchClientId
  name: TwitchClientId
  nameWithType: BotCredentials.TwitchClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.TwitchClientId
- uid: Mewdeko.Services.IBotCredentials.TwitchClientId
  commentId: P:Mewdeko.Services.IBotCredentials.TwitchClientId
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TwitchClientId
  name: TwitchClientId
  nameWithType: IBotCredentials.TwitchClientId
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientId
- uid: Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_UseGlobalCurrency
  name: UseGlobalCurrency
  nameWithType: BotCredentials.UseGlobalCurrency
  fullName: Mewdeko.Services.Impl.BotCredentials.UseGlobalCurrency
- uid: Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_TwitchClientSecret
  name: TwitchClientSecret
  nameWithType: BotCredentials.TwitchClientSecret
  fullName: Mewdeko.Services.Impl.BotCredentials.TwitchClientSecret
- uid: Mewdeko.Services.IBotCredentials.TwitchClientSecret
  commentId: P:Mewdeko.Services.IBotCredentials.TwitchClientSecret
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TwitchClientSecret
  name: TwitchClientSecret
  nameWithType: IBotCredentials.TwitchClientSecret
  fullName: Mewdeko.Services.IBotCredentials.TwitchClientSecret
- uid: Mewdeko.Services.Impl.BotCredentials.TrovoClientId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.TrovoClientId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_TrovoClientId
  name: TrovoClientId
  nameWithType: BotCredentials.TrovoClientId
  fullName: Mewdeko.Services.Impl.BotCredentials.TrovoClientId
- uid: Mewdeko.Services.IBotCredentials.TrovoClientId
  commentId: P:Mewdeko.Services.IBotCredentials.TrovoClientId
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TrovoClientId
  name: TrovoClientId
  nameWithType: IBotCredentials.TrovoClientId
  fullName: Mewdeko.Services.IBotCredentials.TrovoClientId
- uid: Mewdeko.Services.Impl.BotCredentials.VotesUrl*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.VotesUrl
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_VotesUrl
  name: VotesUrl
  nameWithType: BotCredentials.VotesUrl
  fullName: Mewdeko.Services.Impl.BotCredentials.VotesUrl
- uid: Mewdeko.Services.Impl.BotCredentials.VotesToken*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.VotesToken
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_VotesToken
  name: VotesToken
  nameWithType: BotCredentials.VotesToken
  fullName: Mewdeko.Services.Impl.BotCredentials.VotesToken
- uid: Mewdeko.Services.IBotCredentials.VotesToken
  commentId: P:Mewdeko.Services.IBotCredentials.VotesToken
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_VotesToken
  name: VotesToken
  nameWithType: IBotCredentials.VotesToken
  fullName: Mewdeko.Services.IBotCredentials.VotesToken
- uid: Mewdeko.Services.Impl.BotCredentials.BotListToken*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.BotListToken
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_BotListToken
  name: BotListToken
  nameWithType: BotCredentials.BotListToken
  fullName: Mewdeko.Services.Impl.BotCredentials.BotListToken
- uid: Mewdeko.Services.Impl.BotCredentials.RedisOptions*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.RedisOptions
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_RedisOptions
  name: RedisOptions
  nameWithType: BotCredentials.RedisOptions
  fullName: Mewdeko.Services.Impl.BotCredentials.RedisOptions
- uid: Mewdeko.Services.IBotCredentials.RedisOptions
  commentId: P:Mewdeko.Services.IBotCredentials.RedisOptions
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_RedisOptions
  name: RedisOptions
  nameWithType: IBotCredentials.RedisOptions
  fullName: Mewdeko.Services.IBotCredentials.RedisOptions
- uid: Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_LocationIqApiKey
  name: LocationIqApiKey
  nameWithType: BotCredentials.LocationIqApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.LocationIqApiKey
- uid: Mewdeko.Services.IBotCredentials.LocationIqApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.LocationIqApiKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_LocationIqApiKey
  name: LocationIqApiKey
  nameWithType: IBotCredentials.LocationIqApiKey
  fullName: Mewdeko.Services.IBotCredentials.LocationIqApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_TimezoneDbApiKey
  name: TimezoneDbApiKey
  nameWithType: BotCredentials.TimezoneDbApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.TimezoneDbApiKey
- uid: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  commentId: P:Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_TimezoneDbApiKey
  name: TimezoneDbApiKey
  nameWithType: IBotCredentials.TimezoneDbApiKey
  fullName: Mewdeko.Services.IBotCredentials.TimezoneDbApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_CoinmarketcapApiKey
  name: CoinmarketcapApiKey
  nameWithType: BotCredentials.CoinmarketcapApiKey
  fullName: Mewdeko.Services.Impl.BotCredentials.CoinmarketcapApiKey
- uid: Mewdeko.Services.Impl.BotCredentials.DebugGuildId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.DebugGuildId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_DebugGuildId
  name: DebugGuildId
  nameWithType: BotCredentials.DebugGuildId
  fullName: Mewdeko.Services.Impl.BotCredentials.DebugGuildId
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Services.Impl.BotCredentials.GeniusKey*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.GeniusKey
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_GeniusKey
  name: GeniusKey
  nameWithType: BotCredentials.GeniusKey
  fullName: Mewdeko.Services.Impl.BotCredentials.GeniusKey
- uid: Mewdeko.Services.IBotCredentials.GeniusKey
  commentId: P:Mewdeko.Services.IBotCredentials.GeniusKey
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_GeniusKey
  name: GeniusKey
  nameWithType: IBotCredentials.GeniusKey
  fullName: Mewdeko.Services.IBotCredentials.GeniusKey
- uid: Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_GuildJoinsChannelId
  name: GuildJoinsChannelId
  nameWithType: BotCredentials.GuildJoinsChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.GuildJoinsChannelId
- uid: Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_ConfessionReportChannelId
  name: ConfessionReportChannelId
  nameWithType: BotCredentials.ConfessionReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.ConfessionReportChannelId
- uid: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  commentId: P:Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
  parent: Mewdeko.Services.IBotCredentials
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_ConfessionReportChannelId
  name: ConfessionReportChannelId
  nameWithType: IBotCredentials.ConfessionReportChannelId
  fullName: Mewdeko.Services.IBotCredentials.ConfessionReportChannelId
- uid: Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_GlobalBanReportChannelId
  name: GlobalBanReportChannelId
  nameWithType: BotCredentials.GlobalBanReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.GlobalBanReportChannelId
- uid: Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_PronounAbuseReportChannelId
  name: PronounAbuseReportChannelId
  nameWithType: BotCredentials.PronounAbuseReportChannelId
  fullName: Mewdeko.Services.Impl.BotCredentials.PronounAbuseReportChannelId
- uid: Mewdeko.Services.Impl.BotCredentials.IsOwner*
  commentId: Overload:Mewdeko.Services.Impl.BotCredentials.IsOwner
  href: Mewdeko.Services.Impl.BotCredentials.html#Mewdeko_Services_Impl_BotCredentials_IsOwner_Discord_IUser_
  name: IsOwner
  nameWithType: BotCredentials.IsOwner
  fullName: Mewdeko.Services.Impl.BotCredentials.IsOwner
- uid: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  commentId: M:Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  parent: Mewdeko.Services.IBotCredentials
  isExternal: true
  href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_IsOwner_Discord_IUser_
  name: IsOwner(IUser)
  nameWithType: IBotCredentials.IsOwner(IUser)
  fullName: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
  spec.csharp:
  - uid: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
    name: IsOwner
    href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_IsOwner_Discord_IUser_
  - name: (
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Services.IBotCredentials.IsOwner(Discord.IUser)
    name: IsOwner
    href: Mewdeko.Services.IBotCredentials.html#Mewdeko_Services_IBotCredentials_IsOwner_Discord_IUser_
  - name: (
  - uid: Discord.IUser
    name: IUser
    isExternal: true
  - name: )
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
