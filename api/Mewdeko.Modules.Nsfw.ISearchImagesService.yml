### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService
  commentId: T:Mewdeko.Modules.Nsfw.ISearchImagesService
  id: ISearchImagesService
  parent: Mewdeko.Modules.Nsfw
  children:
  - Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
  - Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
  - Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.E621(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags(System.UInt64)
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku(System.Nullable{System.UInt64},System.Boolean,System.String[])
  - Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag(System.UInt64,System.String)
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere(System.Nullable{System.UInt64},System.Boolean,System.String[])
  langs:
  - csharp
  - vb
  name: ISearchImagesService
  nameWithType: ISearchImagesService
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService
  type: Interface
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ISearchImagesService
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Service for searching images on various NSFW image boards.
  example: []
  syntax:
    content: public interface ISearchImagesService
    content.vb: Public Interface ISearchImagesService
  extensionMethods:
  - Mewdeko.Modules.Nsfw.ISearchImagesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Gelbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Gelbooru(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Gelbooru(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Gelbooru
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Gelbooru for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Gelbooru(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Gelbooru(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru*
  nameWithType.vb: ISearchImagesService.Gelbooru(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru(ULong?, Boolean, String())
  name.vb: Gelbooru(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Danbooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Danbooru(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Danbooru(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Danbooru
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Danbooru for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Danbooru(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Danbooru(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru*
  nameWithType.vb: ISearchImagesService.Danbooru(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru(ULong?, Boolean, String())
  name.vb: Danbooru(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Konachan(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Konachan(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Konachan(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Konachan
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 22
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Konachan for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Konachan(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Konachan(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan*
  nameWithType.vb: ISearchImagesService.Konachan(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan(ULong?, Boolean, String())
  name.vb: Konachan(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Yandere(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Yandere(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Yandere(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Yandere
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 27
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Yandere for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Yandere(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Yandere(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere*
  nameWithType.vb: ISearchImagesService.Yandere(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere(ULong?, Boolean, String())
  name.vb: Yandere(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Rule34(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Rule34(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Rule34(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Rule34
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Rule34 for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Rule34(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Rule34(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34*
  nameWithType.vb: ISearchImagesService.Rule34(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34(ULong?, Boolean, String())
  name.vb: Rule34(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.E621(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.E621(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: E621(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: E621(ulong?, bool, string[])
  nameWithType: ISearchImagesService.E621(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.E621(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: E621
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 37
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches E621 for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> E621(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function E621(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.E621*
  nameWithType.vb: ISearchImagesService.E621(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.E621(ULong?, Boolean, String())
  name.vb: E621(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: DerpiBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: DerpiBooru(ulong?, bool, string[])
  nameWithType: ISearchImagesService.DerpiBooru(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DerpiBooru
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 42
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches DerpiBooru for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> DerpiBooru(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function DerpiBooru(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru*
  nameWithType.vb: ISearchImagesService.DerpiBooru(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru(ULong?, Boolean, String())
  name.vb: DerpiBooru(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Sankaku(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Sankaku(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Sankaku(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Sankaku
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 47
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Sankaku for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Sankaku(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Sankaku(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku*
  nameWithType.vb: ISearchImagesService.Sankaku(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku(ULong?, Boolean, String())
  name.vb: Sankaku(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: SafeBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: SafeBooru(ulong?, bool, string[])
  nameWithType: ISearchImagesService.SafeBooru(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SafeBooru
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 52
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches SafeBooru for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> SafeBooru(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function SafeBooru(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru*
  nameWithType.vb: ISearchImagesService.SafeBooru(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru(ULong?, Boolean, String())
  name.vb: SafeBooru(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: RealBooru(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: RealBooru(ulong?, bool, string[])
  nameWithType: ISearchImagesService.RealBooru(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RealBooru
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 57
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches RealBooru for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> RealBooru(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function RealBooru(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru*
  nameWithType.vb: ISearchImagesService.RealBooru(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru(ULong?, Boolean, String())
  name.vb: RealBooru(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai(System.Nullable{System.UInt64},System.Boolean,System.String[])
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai(System.Nullable{System.UInt64},System.Boolean,System.String[])
  id: Hentai(System.Nullable{System.UInt64},System.Boolean,System.String[])
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: Hentai(ulong?, bool, string[])
  nameWithType: ISearchImagesService.Hentai(ulong?, bool, string[])
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai(ulong?, bool, string[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Hentai
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 62
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Searches Hentai for images based on the provided tags.
  example: []
  syntax:
    content: Task<UrlReply?> Hentai(ulong? guildId, bool forceExplicit, string[] tags)
    parameters:
    - id: guildId
      type: System.Nullable{System.UInt64}
    - id: forceExplicit
      type: System.Boolean
    - id: tags
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
    content.vb: Function Hentai(guildId As ULong?, forceExplicit As Boolean, tags As String()) As Task(Of UrlReply)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai*
  nameWithType.vb: ISearchImagesService.Hentai(ULong?, Boolean, String())
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai(ULong?, Boolean, String())
  name.vb: Hentai(ULong?, Boolean, String())
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag(System.UInt64,System.String)
  id: ToggleBlacklistTag(System.UInt64,System.String)
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: ToggleBlacklistTag(ulong, string)
  nameWithType: ISearchImagesService.ToggleBlacklistTag(ulong, string)
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleBlacklistTag
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 67
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Toggles the blacklisting of a tag for the specified guild.
  example: []
  syntax:
    content: ValueTask<bool> ToggleBlacklistTag(ulong guildId, string tag)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: tag
      type: System.String
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Function ToggleBlacklistTag(guildId As ULong, tag As String) As ValueTask(Of Boolean)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag*
  nameWithType.vb: ISearchImagesService.ToggleBlacklistTag(ULong, String)
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag(ULong, String)
  name.vb: ToggleBlacklistTag(ULong, String)
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags(System.UInt64)
  commentId: M:Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags(System.UInt64)
  id: GetBlacklistedTags(System.UInt64)
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: GetBlacklistedTags(ulong)
  nameWithType: ISearchImagesService.GetBlacklistedTags(ulong)
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetBlacklistedTags
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Gets the list of blacklisted tags for the specified guild.
  example: []
  syntax:
    content: ValueTask<string[]> GetBlacklistedTags(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.ValueTask{System.String[]}
    content.vb: Function GetBlacklistedTags(guildId As ULong) As ValueTask(Of String())
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags*
  nameWithType.vb: ISearchImagesService.GetBlacklistedTags(ULong)
  fullName.vb: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags(ULong)
  name.vb: GetBlacklistedTags(ULong)
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
  commentId: P:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
  id: AutoHentaiTimers
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: AutoHentaiTimers
  nameWithType: ISearchImagesService.AutoHentaiTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoHentaiTimers
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 77
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Dictionary containing timers for automatic Hentai requests.
  example: []
  syntax:
    content: ConcurrentDictionary<ulong, Timer> AutoHentaiTimers { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{System.UInt64,System.Threading.Timer}
    content.vb: ReadOnly Property AutoHentaiTimers As ConcurrentDictionary(Of ULong, Timer)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers*
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
  commentId: P:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
  id: AutoBoobTimers
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: AutoBoobTimers
  nameWithType: ISearchImagesService.AutoBoobTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoBoobTimers
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Dictionary containing timers for automatic Boob requests.
  example: []
  syntax:
    content: ConcurrentDictionary<ulong, Timer> AutoBoobTimers { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{System.UInt64,System.Threading.Timer}
    content.vb: ReadOnly Property AutoBoobTimers As ConcurrentDictionary(Of ULong, Timer)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers*
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
  commentId: P:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
  id: AutoButtTimers
  parent: Mewdeko.Modules.Nsfw.ISearchImagesService
  langs:
  - csharp
  - vb
  name: AutoButtTimers
  nameWithType: ISearchImagesService.AutoButtTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AutoButtTimers
    path: src/Mewdeko/Modules/Nsfw/ISearchImagesService.cs
    startLine: 87
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Nsfw
  summary: Dictionary containing timers for automatic Butt requests.
  example: []
  syntax:
    content: ConcurrentDictionary<ulong, Timer> AutoButtTimers { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{System.UInt64,System.Threading.Timer}
    content.vb: ReadOnly Property AutoButtTimers As ConcurrentDictionary(Of ULong, Timer)
  overload: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers*
references:
- uid: Mewdeko.Modules.Nsfw
  commentId: N:Mewdeko.Modules.Nsfw
  href: Mewdeko.html
  name: Mewdeko.Modules.Nsfw
  nameWithType: Mewdeko.Modules.Nsfw
  fullName: Mewdeko.Modules.Nsfw
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Nsfw
    name: Nsfw
    href: Mewdeko.Modules.Nsfw.html
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ISearchImagesService>(ISearchImagesService, string)
  nameWithType: Extensions.ThrowIfNull<ISearchImagesService>(ISearchImagesService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Nsfw.ISearchImagesService>(Mewdeko.Modules.Nsfw.ISearchImagesService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of ISearchImagesService)(ISearchImagesService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Nsfw.ISearchImagesService)(Mewdeko.Modules.Nsfw.ISearchImagesService, String)
  name.vb: ThrowIfNull(Of ISearchImagesService)(ISearchImagesService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Nsfw.ISearchImagesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Nsfw.ISearchImagesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Nsfw.ISearchImagesService
    name: ISearchImagesService
    href: Mewdeko.Modules.Nsfw.ISearchImagesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Gelbooru_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Gelbooru
  nameWithType: ISearchImagesService.Gelbooru
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Gelbooru
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Nsfw.UrlReply}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UrlReply>
  nameWithType: Task<UrlReply>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Nsfw.UrlReply>
  nameWithType.vb: Task(Of UrlReply)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Nsfw.UrlReply)
  name.vb: Task(Of UrlReply)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Nsfw.UrlReply
    name: UrlReply
    href: Mewdeko.Modules.Nsfw.UrlReply.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Nsfw.UrlReply
    name: UrlReply
    href: Mewdeko.Modules.Nsfw.UrlReply.html
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Danbooru_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Danbooru
  nameWithType: ISearchImagesService.Danbooru
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Danbooru
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Konachan_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Konachan
  nameWithType: ISearchImagesService.Konachan
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Konachan
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Yandere_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Yandere
  nameWithType: ISearchImagesService.Yandere
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Yandere
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Rule34_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Rule34
  nameWithType: ISearchImagesService.Rule34
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Rule34
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.E621*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.E621
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_E621_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: E621
  nameWithType: ISearchImagesService.E621
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.E621
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_DerpiBooru_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: DerpiBooru
  nameWithType: ISearchImagesService.DerpiBooru
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.DerpiBooru
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Sankaku_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Sankaku
  nameWithType: ISearchImagesService.Sankaku
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Sankaku
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_SafeBooru_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: SafeBooru
  nameWithType: ISearchImagesService.SafeBooru
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.SafeBooru
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_RealBooru_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: RealBooru
  nameWithType: ISearchImagesService.RealBooru
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.RealBooru
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_Hentai_System_Nullable_System_UInt64__System_Boolean_System_String___
  name: Hentai
  nameWithType: ISearchImagesService.Hentai
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.Hentai
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_ToggleBlacklistTag_System_UInt64_System_String_
  name: ToggleBlacklistTag
  nameWithType: ISearchImagesService.ToggleBlacklistTag
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.ToggleBlacklistTag
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<bool>
  nameWithType: ValueTask<bool>
  fullName: System.Threading.Tasks.ValueTask<bool>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_GetBlacklistedTags_System_UInt64_
  name: GetBlacklistedTags
  nameWithType: ISearchImagesService.GetBlacklistedTags
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.GetBlacklistedTags
- uid: System.Threading.Tasks.ValueTask{System.String[]}
  commentId: T:System.Threading.Tasks.ValueTask{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<string[]>
  nameWithType: ValueTask<string[]>
  fullName: System.Threading.Tasks.ValueTask<string[]>
  nameWithType.vb: ValueTask(Of String())
  fullName.vb: System.Threading.Tasks.ValueTask(Of String())
  name.vb: ValueTask(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_AutoHentaiTimers
  name: AutoHentaiTimers
  nameWithType: ISearchImagesService.AutoHentaiTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoHentaiTimers
- uid: NonBlocking.ConcurrentDictionary{System.UInt64,System.Threading.Timer}
  commentId: T:NonBlocking.ConcurrentDictionary{System.UInt64,System.Threading.Timer}
  parent: NonBlocking
  definition: NonBlocking.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ConcurrentDictionary<ulong, Timer>
  nameWithType: ConcurrentDictionary<ulong, Timer>
  fullName: NonBlocking.ConcurrentDictionary<ulong, System.Threading.Timer>
  nameWithType.vb: ConcurrentDictionary(Of ULong, Timer)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of ULong, System.Threading.Timer)
  name.vb: ConcurrentDictionary(Of ULong, Timer)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Threading.Timer
    name: Timer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.timer
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Threading.Timer
    name: Timer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.timer
  - name: )
- uid: NonBlocking.ConcurrentDictionary`2
  commentId: T:NonBlocking.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: NonBlocking.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NonBlocking
  commentId: N:NonBlocking
  isExternal: true
  name: NonBlocking
  nameWithType: NonBlocking
  fullName: NonBlocking
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_AutoBoobTimers
  name: AutoBoobTimers
  nameWithType: ISearchImagesService.AutoBoobTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoBoobTimers
- uid: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers*
  commentId: Overload:Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
  href: Mewdeko.Modules.Nsfw.ISearchImagesService.html#Mewdeko_Modules_Nsfw_ISearchImagesService_AutoButtTimers
  name: AutoButtTimers
  nameWithType: ISearchImagesService.AutoButtTimers
  fullName: Mewdeko.Modules.Nsfw.ISearchImagesService.AutoButtTimers
