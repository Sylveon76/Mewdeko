### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Administration.Administration
  commentId: T:Mewdeko.Modules.Administration.Administration
  id: Administration
  parent: Mewdeko.Modules.Administration
  children:
  - Mewdeko.Modules.Administration.Administration.#ctor(Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService)
  - Mewdeko.Modules.Administration.Administration.BanInRole(Discord.IRole,System.String)
  - Mewdeko.Modules.Administration.Administration.BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Administration.Administration.CreaTxtChanl(System.String)
  - Mewdeko.Modules.Administration.Administration.CreatVoiChanl(System.String)
  - Mewdeko.Modules.Administration.Administration.Deafen(Discord.IGuildUser[])
  - Mewdeko.Modules.Administration.Administration.DelTxtChanl(Discord.ITextChannel)
  - Mewdeko.Modules.Administration.Administration.DelVoiChanl(Discord.IVoiceChannel)
  - Mewdeko.Modules.Administration.Administration.Delete(Discord.ITextChannel,System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Administration.Administration.Delete(System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData
  - Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,Discord.ITextChannel)
  - Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,System.Nullable{System.UInt64})
  - Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.List)
  - Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Server)
  - Mewdeko.Modules.Administration.Administration.Edit(Discord.ITextChannel,System.UInt64,System.String)
  - Mewdeko.Modules.Administration.Administration.GuildStatsOptOut
  - Mewdeko.Modules.Administration.Administration.KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  - Mewdeko.Modules.Administration.Administration.MemberRole(Discord.IRole)
  - Mewdeko.Modules.Administration.Administration.NameBan(System.String)
  - Mewdeko.Modules.Administration.Administration.NsfwToggle
  - Mewdeko.Modules.Administration.Administration.PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  - Mewdeko.Modules.Administration.Administration.RenameChannel(Discord.IGuildChannel,System.String)
  - Mewdeko.Modules.Administration.Administration.SetChanlName(System.String)
  - Mewdeko.Modules.Administration.Administration.SetNick(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Administration.Administration.SetNick(System.String)
  - Mewdeko.Modules.Administration.Administration.SetTopic(System.String)
  - Mewdeko.Modules.Administration.Administration.StaffRole(Discord.IRole)
  - Mewdeko.Modules.Administration.Administration.StaffRoleDisable
  - Mewdeko.Modules.Administration.Administration.UnDeafen(Discord.IGuildUser[])
  langs:
  - csharp
  - vb
  name: Administration
  nameWithType: Administration
  fullName: Mewdeko.Modules.Administration.Administration
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/VcRoleCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Administration
    path: src/Mewdeko/Modules/Administration/VcRoleCommands.cs
    startLine: 6
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Class for the Administration Module.
  example: []
  syntax:
    content: 'public class Administration : MewdekoModuleBase<AdministrationService>, IModuleBase'
    content.vb: Public Class Administration Inherits MewdekoModuleBase(Of AdministrationService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.Config
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Administration.Administration.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Administration.Administration.#ctor(Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService)
  commentId: M:Mewdeko.Modules.Administration.Administration.#ctor(Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService)
  id: '#ctor(Fergun.Interactive.InteractiveService,Mewdeko.Services.Settings.BotConfigService)'
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Administration(InteractiveService, BotConfigService)
  nameWithType: Administration.Administration(InteractiveService, BotConfigService)
  fullName: Mewdeko.Modules.Administration.Administration.Administration(Fergun.Interactive.InteractiveService, Mewdeko.Services.Settings.BotConfigService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 18
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Class for the Administration Module.
  example: []
  syntax:
    content: public Administration(InteractiveService serv, BotConfigService configService)
    parameters:
    - id: serv
      type: Fergun.Interactive.InteractiveService
      description: The interactivity service by Fergun.Interactive
    - id: configService
      type: Mewdeko.Services.Settings.BotConfigService
      description: The bot config service that uses yml from data/
    content.vb: Public Sub New(serv As InteractiveService, configService As BotConfigService)
  overload: Mewdeko.Modules.Administration.Administration.#ctor*
  nameWithType.vb: Administration.New(InteractiveService, BotConfigService)
  fullName.vb: Mewdeko.Modules.Administration.Administration.New(Fergun.Interactive.InteractiveService, Mewdeko.Services.Settings.BotConfigService)
  name.vb: New(InteractiveService, BotConfigService)
- uid: Mewdeko.Modules.Administration.Administration.GuildStatsOptOut
  commentId: M:Mewdeko.Modules.Administration.Administration.GuildStatsOptOut
  id: GuildStatsOptOut
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: GuildStatsOptOut()
  nameWithType: Administration.GuildStatsOptOut()
  fullName: Mewdeko.Modules.Administration.Administration.GuildStatsOptOut()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GuildStatsOptOut
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 100
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Allows you to opt the entire guild out of stats tracking.
  example:
  - .guildstatsoptout
  syntax:
    content: >-
      [Cmd("GuildStatsOptOut")]

      [Aliases("GuildStatsOptOut")]

      [UserPerm(GuildPermission.Administrator)]

      public Task GuildStatsOptOut()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("GuildStatsOptOut")>

      <Aliases("GuildStatsOptOut")>

      <UserPerm(GuildPermission.Administrator)>

      Public Function GuildStatsOptOut() As Task
  overload: Mewdeko.Modules.Administration.Administration.GuildStatsOptOut*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GuildStatsOptOut
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GuildStatsOptOut
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData
  commentId: M:Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData
  id: DeleteGuildStatsData
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: DeleteGuildStatsData()
  nameWithType: Administration.DeleteGuildStatsData()
  fullName: Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DeleteGuildStatsData
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 114
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Allows you to delete all stats data for the guild.
  example:
  - .deletestatsdata
  syntax:
    content: >-
      [Cmd("DeleteGuildStatsData")]

      [Aliases("DeleteGuildStatsData")]

      [Ratelimit(3600)]

      [UserPerm(GuildPermission.Administrator)]

      public Task DeleteGuildStatsData()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("DeleteGuildStatsData")>

      <Aliases("DeleteGuildStatsData")>

      <Ratelimit(3600)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function DeleteGuildStatsData() As Task
  overload: Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeleteGuildStatsData
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DeleteGuildStatsData
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3600
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Administration.Administration.SetNick(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.SetNick(Discord.IGuildUser,System.String)
  id: SetNick(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: SetNick(IGuildUser, string?)
  nameWithType: Administration.SetNick(IGuildUser, string?)
  fullName: Mewdeko.Modules.Administration.Administration.SetNick(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetNick
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Lets you set the nickname for a mentioned user. If no user is mentioned it defaults to setting a nickname for the bot.
  example:
  - .setnick @user newNick
  syntax:
    content: >-
      [Cmd("SetNick")]

      [BotPerm(GuildPermission.ManageNicknames)]

      [UserPerm(GuildPermission.ManageNicknames)]

      [Priority(1)]

      public Task SetNick(IGuildUser gu, string? newNick = null)
    parameters:
    - id: gu
      type: Discord.IGuildUser
      description: The target user.
    - id: newNick
      type: System.String
      description: The new nickname. Provide none to reset.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetNick")>

      <BotPerm(GuildPermission.ManageNicknames)>

      <UserPerm(GuildPermission.ManageNicknames)>

      <Priority(1)>

      Public Function SetNick(gu As IGuildUser, newNick As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.SetNick*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetNick
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Administration.SetNick(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.SetNick(Discord.IGuildUser, String)
  name.vb: SetNick(IGuildUser, String)
- uid: Mewdeko.Modules.Administration.Administration.BanInRole(Discord.IRole,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.BanInRole(Discord.IRole,System.String)
  id: BanInRole(Discord.IRole,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: BanInRole(IRole, string)
  nameWithType: Administration.BanInRole(IRole, string)
  fullName: Mewdeko.Modules.Administration.Administration.BanInRole(Discord.IRole, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanInRole
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 153
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Allows you to ban users with a specific role.
  example: []
  syntax:
    content: >-
      [Cmd("BanInRole")]

      [Aliases("BanInRole")]

      [UserPerm(GuildPermission.Administrator)]

      public Task BanInRole(IRole role, string reason = null)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to ban users in
    - id: reason
      type: System.String
      description: The reason for the ban, optional
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("BanInRole")>

      <Aliases("BanInRole")>

      <UserPerm(GuildPermission.Administrator)>

      Public Function BanInRole(role As IRole, reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.BanInRole*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanInRole
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanInRole
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Administration.BanInRole(IRole, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.BanInRole(Discord.IRole, String)
  name.vb: BanInRole(IRole, String)
- uid: Mewdeko.Modules.Administration.Administration.SetNick(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.SetNick(System.String)
  id: SetNick(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: SetNick(string?)
  nameWithType: Administration.SetNick(string?)
  fullName: Mewdeko.Modules.Administration.Administration.SetNick(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetNick
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 201
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Overload for setting the bot's nickname.
  example:
  - .setnick newNick
  syntax:
    content: >-
      [Cmd("SetNick")]

      [Aliases("SetNick")]

      [UserPerm(GuildPermission.ManageNicknames)]

      [BotPerm(GuildPermission.ChangeNickname)]

      [Priority(0)]

      public Task SetNick(string? newNick = null)
    parameters:
    - id: newNick
      type: System.String
      description: The new nickname you want to set.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetNick")>

      <Aliases("SetNick")>

      <UserPerm(GuildPermission.ManageNicknames)>

      <BotPerm(GuildPermission.ChangeNickname)>

      <Priority(0)>

      Public Function SetNick(newNick As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.SetNick*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetNick
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetNick
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "134217728"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "67108864"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Administration.SetNick(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.SetNick(String)
  name.vb: SetNick(String)
- uid: Mewdeko.Modules.Administration.Administration.NameBan(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.NameBan(System.String)
  id: NameBan(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: NameBan(string)
  nameWithType: Administration.NameBan(string)
  fullName: Mewdeko.Modules.Administration.Administration.NameBan(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NameBan
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 218
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Allows you to ban users with a specific name. This command will show a preview of the users that will be banned. Takes a regex pattern as well.
  example:
  - .nameban name
  - .nameban ^[a-z]{3,16}$
  syntax:
    content: >-
      [Cmd("NameBan")]

      [Aliases("NameBan")]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task NameBan(string name)
    parameters:
    - id: name
      type: System.String
      description: The name or regex pattern you want to use.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("NameBan")>

      <Aliases("NameBan")>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function NameBan(name As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.NameBan*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NameBan
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NameBan
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Administration.NameBan(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.NameBan(String)
  name.vb: NameBan(String)
- uid: Mewdeko.Modules.Administration.Administration.BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Administration.Administration.BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: BanUnder(StoopidTime, string?, StoopidTime?)
  nameWithType: Administration.BanUnder(StoopidTime, string?, StoopidTime?)
  fullName: Mewdeko.Modules.Administration.Administration.BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime, string?, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BanUnder
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 320
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Allows you to ban users that have been in the server for a certain amount of time.
  example:
  - .banunder 1mo
  - .banunder 1mo -accage 1d
  - .banunder 1mo -p
  syntax:
    content: >-
      [Cmd("BanUnder")]

      [Aliases("BanUnder")]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.BanMembers)]

      public Task BanUnder(StoopidTime time, string? option = null, StoopidTime? time1 = null)
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The amount of time. Formatted as {0}mo{1}d{2}h{3}m{4}s
    - id: option
      type: System.String
      description: Allows you to specify -accage to check account age rather than server age, or -p to preview the users to ban.
    - id: time1
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: Allows you to specify a time range.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("BanUnder")>

      <Aliases("BanUnder")>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.BanMembers)>

      Public Function BanUnder(time As StoopidTime, [option] As String = Nothing, time1 As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.BanUnder*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanUnder
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BanUnder
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4"
  nameWithType.vb: Administration.BanUnder(StoopidTime, String, StoopidTime)
  fullName.vb: Mewdeko.Modules.Administration.Administration.BanUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime, String, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: BanUnder(StoopidTime, String, StoopidTime)
- uid: Mewdeko.Modules.Administration.Administration.KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  id: KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: KickUnder(StoopidTime, string?)
  nameWithType: Administration.KickUnder(StoopidTime, string?)
  fullName: Mewdeko.Modules.Administration.Administration.KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: KickUnder
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 413
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Kicks users who have been in the server for less than a specified time.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.KickMembers.
  example:
  - .kickunder 1mo
  - .kickunder 1mo -p
  syntax:
    content: >-
      [Cmd("KickUnder")]

      [Aliases("KickUnder")]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.KickMembers)]

      public Task KickUnder(StoopidTime time, string? option = null)
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: Time duration in a custom format
    - id: option
      type: System.String
      description: Optional parameter to preview users to be kicked
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("KickUnder")>

      <Aliases("KickUnder")>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.KickMembers)>

      Public Function KickUnder(time As StoopidTime, [option] As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.KickUnder*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: KickUnder
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: KickUnder
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "2"
  nameWithType.vb: Administration.KickUnder(StoopidTime, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.KickUnder(Mewdeko.Common.TypeReaders.Models.StoopidTime, String)
  name.vb: KickUnder(StoopidTime, String)
- uid: Mewdeko.Modules.Administration.Administration.PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  id: PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: PruneMembers(StoopidTime, string)
  nameWithType: Administration.PruneMembers(StoopidTime, string)
  fullName: Mewdeko.Modules.Administration.Administration.PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: PruneMembers
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 489
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Prunes members from the server based on their activity or inactivity.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.ManageGuild.
  example:
  - .prunemembers 30d
  - .prunemembers 30d yes
  syntax:
    content: >-
      [Cmd("PruneMembers")]

      [Aliases("PruneMembers")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.ManageGuild)]

      public Task PruneMembers(StoopidTime time, string e = "no")
    parameters:
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: Time duration in a custom format
    - id: e
      type: System.String
      description: Optional parameter indicating whether to include users with specific roles
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("PruneMembers")>

      <Aliases("PruneMembers")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.ManageGuild)>

      Public Function PruneMembers(time As StoopidTime, e As String = "no") As Task
  overload: Mewdeko.Modules.Administration.Administration.PruneMembers*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: PruneMembers
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: PruneMembers
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.PruneMembers(StoopidTime, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.PruneMembers(Mewdeko.Common.TypeReaders.Models.StoopidTime, String)
  name.vb: PruneMembers(StoopidTime, String)
- uid: Mewdeko.Modules.Administration.Administration.MemberRole(Discord.IRole)
  commentId: M:Mewdeko.Modules.Administration.Administration.MemberRole(Discord.IRole)
  id: MemberRole(Discord.IRole)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: MemberRole(IRole?)
  nameWithType: Administration.MemberRole(IRole?)
  fullName: Mewdeko.Modules.Administration.Administration.MemberRole(Discord.IRole?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MemberRole
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 577
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the member role for the server. Currently unused.
  remarks: This command requires the caller to have GuildPermission.Administrator.
  example:
  - .memberrole @Member
  syntax:
    content: >-
      [Cmd("MemberRole")]

      [Aliases("MemberRole")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MemberRole(IRole? role)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role that members will have.
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MemberRole")>

      <Aliases("MemberRole")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MemberRole(role As IRole) As Task
  overload: Mewdeko.Modules.Administration.Administration.MemberRole*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MemberRole
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MemberRole
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Administration.MemberRole(IRole)
  fullName.vb: Mewdeko.Modules.Administration.Administration.MemberRole(Discord.IRole)
  name.vb: MemberRole(IRole)
- uid: Mewdeko.Modules.Administration.Administration.StaffRole(Discord.IRole)
  commentId: M:Mewdeko.Modules.Administration.Administration.StaffRole(Discord.IRole)
  id: StaffRole(Discord.IRole)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: StaffRole(IRole?)
  nameWithType: Administration.StaffRole(IRole?)
  fullName: Mewdeko.Modules.Administration.Administration.StaffRole(Discord.IRole?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StaffRole
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 623
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets or updates the role assigned to staff members.
  remarks: This command requires the caller to have GuildPermission.Administrator.
  example:
  - .staffrole @Staff
  syntax:
    content: >-
      [Cmd("StaffRole")]

      [Aliases("StaffRole")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task StaffRole(IRole? role = null)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to be assigned to staff members
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("StaffRole")>

      <Aliases("StaffRole")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function StaffRole(role As IRole = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.StaffRole*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: StaffRole
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: StaffRole
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Administration.StaffRole(IRole)
  fullName.vb: Mewdeko.Modules.Administration.Administration.StaffRole(Discord.IRole)
  name.vb: StaffRole(IRole)
- uid: Mewdeko.Modules.Administration.Administration.StaffRoleDisable
  commentId: M:Mewdeko.Modules.Administration.Administration.StaffRoleDisable
  id: StaffRoleDisable
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: StaffRoleDisable()
  nameWithType: Administration.StaffRoleDisable()
  fullName: Mewdeko.Modules.Administration.Administration.StaffRoleDisable()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StaffRoleDisable
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 668
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Disables the role assigned to staff members.
  remarks: This command requires the caller to have GuildPermission.Administrator.
  example:
  - .staffroledisable
  syntax:
    content: >-
      [Cmd("StaffRoleDisable")]

      [Aliases("StaffRoleDisable")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task StaffRoleDisable()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("StaffRoleDisable")>

      <Aliases("StaffRoleDisable")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function StaffRoleDisable() As Task
  overload: Mewdeko.Modules.Administration.Administration.StaffRoleDisable*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: StaffRoleDisable
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: StaffRoleDisable
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
- uid: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.List)
  commentId: M:Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.List)
  id: Delmsgoncmd(Mewdeko.Modules.Administration.Administration.List)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delmsgoncmd(List)
  nameWithType: Administration.Delmsgoncmd(Administration.List)
  fullName: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.List)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delmsgoncmd
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 691
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Displays the status of deleting messages on command execution.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.ManageMessages.
  example:
  - .delmsgoncmd
  syntax:
    content: >-
      [Cmd("Delmsgoncmd")]

      [Aliases("Delmsgoncmd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.ManageMessages)]

      [Priority(2)]

      public Task Delmsgoncmd(Administration.List _)
    parameters:
    - id: _
      type: Mewdeko.Modules.Administration.Administration.List
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delmsgoncmd")>

      <Aliases("Delmsgoncmd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.ManageMessages)>

      <Priority(2)>

      Public Function Delmsgoncmd(_ As Administration.List) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delmsgoncmd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8192"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
- uid: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Server)
  commentId: M:Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Server)
  id: Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Server)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delmsgoncmd(Server)
  nameWithType: Administration.Delmsgoncmd(Administration.Server)
  fullName: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Server)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delmsgoncmd
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 729
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Toggles the deletion of messages on command execution for the server.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.ManageMessages.
  example:
  - .delmsgoncmd
  syntax:
    content: >-
      [Cmd("Delmsgoncmd")]

      [Aliases("Delmsgoncmd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.ManageMessages)]

      [Priority(1)]

      public Task Delmsgoncmd(Administration.Server _ = Server.Server)
    parameters:
    - id: _
      type: Mewdeko.Modules.Administration.Administration.Server
      description: Unused parameter
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delmsgoncmd")>

      <Aliases("Delmsgoncmd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.ManageMessages)>

      <Priority(1)>

      Public Function Delmsgoncmd(_ As Administration.Server = Server.Server) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delmsgoncmd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8192"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
- uid: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,Discord.ITextChannel)
  id: Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,Discord.ITextChannel)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delmsgoncmd(Channel, State, ITextChannel)
  nameWithType: Administration.Delmsgoncmd(Administration.Channel, Administration.State, ITextChannel)
  fullName: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel, Mewdeko.Modules.Administration.Administration.State, Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delmsgoncmd
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 755
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the state of deleting messages on command execution for a specific channel.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.ManageMessages.
  example:
  - '.delmsgoncmd enable #channel'
  - '.delmsgoncmd disable #channel'
  syntax:
    content: >-
      [Cmd("Delmsgoncmd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.ManageMessages)]

      [Priority(0)]

      public Task Delmsgoncmd(Administration.Channel _, Administration.State s, ITextChannel ch)
    parameters:
    - id: _
      type: Mewdeko.Modules.Administration.Administration.Channel
      description: Unused parameter
    - id: s
      type: Mewdeko.Modules.Administration.Administration.State
      description: The state to set for deleting messages on command execution
    - id: ch
      type: Discord.ITextChannel
      description: The channel where the state should be applied
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delmsgoncmd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.ManageMessages)>

      <Priority(0)>

      Public Function Delmsgoncmd(_ As Administration.Channel, s As Administration.State, ch As ITextChannel) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delmsgoncmd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8192"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
- uid: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,System.Nullable{System.UInt64})
  commentId: M:Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,System.Nullable{System.UInt64})
  id: Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel,Mewdeko.Modules.Administration.Administration.State,System.Nullable{System.UInt64})
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delmsgoncmd(Channel, State, ulong?)
  nameWithType: Administration.Delmsgoncmd(Administration.Channel, Administration.State, ulong?)
  fullName: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel, Mewdeko.Modules.Administration.Administration.State, ulong?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delmsgoncmd
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 771
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the state of deleting messages on command execution for a specific channel.
  remarks: This command requires the caller to have GuildPermission.Administrator and the bot to have GuildPermission.ManageMessages.
  example:
  - '.delmsgoncmd enable #channel'
  - '.delmsgoncmd disable #channel'
  syntax:
    content: >-
      [Cmd("Delmsgoncmd")]

      [Aliases("Delmsgoncmd")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [BotPerm(GuildPermission.ManageMessages)]

      [Priority(1)]

      public Task Delmsgoncmd(Administration.Channel _, Administration.State s, ulong? chId = null)
    parameters:
    - id: _
      type: Mewdeko.Modules.Administration.Administration.Channel
      description: Unused parameter
    - id: s
      type: Mewdeko.Modules.Administration.Administration.State
      description: The state to set for deleting messages on command execution
    - id: chId
      type: System.Nullable{System.UInt64}
      description: Optional channel ID where the state should be applied
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delmsgoncmd")>

      <Aliases("Delmsgoncmd")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <BotPerm(GuildPermission.ManageMessages)>

      <Priority(1)>

      Public Function Delmsgoncmd(_ As Administration.Channel, s As Administration.State, chId As ULong? = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delmsgoncmd*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delmsgoncmd
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8192"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Administration.Delmsgoncmd(Administration.Channel, Administration.State, ULong?)
  fullName.vb: Mewdeko.Modules.Administration.Administration.Delmsgoncmd(Mewdeko.Modules.Administration.Administration.Channel, Mewdeko.Modules.Administration.Administration.State, ULong?)
  name.vb: Delmsgoncmd(Channel, State, ULong?)
- uid: Mewdeko.Modules.Administration.Administration.Deafen(Discord.IGuildUser[])
  commentId: M:Mewdeko.Modules.Administration.Administration.Deafen(Discord.IGuildUser[])
  id: Deafen(Discord.IGuildUser[])
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Deafen(params IGuildUser[])
  nameWithType: Administration.Deafen(params IGuildUser[])
  fullName: Mewdeko.Modules.Administration.Administration.Deafen(params Discord.IGuildUser[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Deafen
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 801
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Deafens specified users in the guild.
  remarks: This command requires the caller to have GuildPermission.DeafenMembers and the bot to have GuildPermission.DeafenMembers.
  example:
  - .deafen @User1 @User2
  syntax:
    content: >-
      [Cmd("Deafen")]

      [Aliases("Deafen")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.DeafenMembers)]

      [BotPerm(GuildPermission.DeafenMembers)]

      public Task Deafen(params IGuildUser[] users)
    parameters:
    - id: users
      type: Discord.IGuildUser[]
      description: The users to deafen
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Deafen")>

      <Aliases("Deafen")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.DeafenMembers)>

      <BotPerm(GuildPermission.DeafenMembers)>

      Public Function Deafen(ParamArray users As IGuildUser()) As Task
  overload: Mewdeko.Modules.Administration.Administration.Deafen*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deafen
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Deafen
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8388608"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8388608"
  nameWithType.vb: Administration.Deafen(ParamArray IGuildUser())
  fullName.vb: Mewdeko.Modules.Administration.Administration.Deafen(ParamArray Discord.IGuildUser())
  name.vb: Deafen(ParamArray IGuildUser())
- uid: Mewdeko.Modules.Administration.Administration.UnDeafen(Discord.IGuildUser[])
  commentId: M:Mewdeko.Modules.Administration.Administration.UnDeafen(Discord.IGuildUser[])
  id: UnDeafen(Discord.IGuildUser[])
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: UnDeafen(params IGuildUser[])
  nameWithType: Administration.UnDeafen(params IGuildUser[])
  fullName: Mewdeko.Modules.Administration.Administration.UnDeafen(params Discord.IGuildUser[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UnDeafen
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 817
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Undeafens specified users in the guild.
  remarks: This command requires the caller to have GuildPermission.DeafenMembers and the bot to have GuildPermission.DeafenMembers.
  example:
  - .undeafen @User1 @User2
  syntax:
    content: >-
      [Cmd("UnDeafen")]

      [Aliases("UnDeafen")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.DeafenMembers)]

      [BotPerm(GuildPermission.DeafenMembers)]

      public Task UnDeafen(params IGuildUser[] users)
    parameters:
    - id: users
      type: Discord.IGuildUser[]
      description: The users to undeafen
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("UnDeafen")>

      <Aliases("UnDeafen")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.DeafenMembers)>

      <BotPerm(GuildPermission.DeafenMembers)>

      Public Function UnDeafen(ParamArray users As IGuildUser()) As Task
  overload: Mewdeko.Modules.Administration.Administration.UnDeafen*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: UnDeafen
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UnDeafen
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8388608"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8388608"
  nameWithType.vb: Administration.UnDeafen(ParamArray IGuildUser())
  fullName.vb: Mewdeko.Modules.Administration.Administration.UnDeafen(ParamArray Discord.IGuildUser())
  name.vb: UnDeafen(ParamArray IGuildUser())
- uid: Mewdeko.Modules.Administration.Administration.DelVoiChanl(Discord.IVoiceChannel)
  commentId: M:Mewdeko.Modules.Administration.Administration.DelVoiChanl(Discord.IVoiceChannel)
  id: DelVoiChanl(Discord.IVoiceChannel)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: DelVoiChanl(IVoiceChannel)
  nameWithType: Administration.DelVoiChanl(IVoiceChannel)
  fullName: Mewdeko.Modules.Administration.Administration.DelVoiChanl(Discord.IVoiceChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DelVoiChanl
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 834
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Deletes the specified voice channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .delvoich VoiceChannelName
  syntax:
    content: >-
      [Cmd("DelVoiChanl")]

      [Aliases("DelVoiChanl")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task DelVoiChanl(IVoiceChannel voiceChannel)
    parameters:
    - id: voiceChannel
      type: Discord.IVoiceChannel
      description: The voice channel to delete
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("DelVoiChanl")>

      <Aliases("DelVoiChanl")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function DelVoiChanl(voiceChannel As IVoiceChannel) As Task
  overload: Mewdeko.Modules.Administration.Administration.DelVoiChanl*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelVoiChanl
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelVoiChanl
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
- uid: Mewdeko.Modules.Administration.Administration.CreatVoiChanl(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.CreatVoiChanl(System.String)
  id: CreatVoiChanl(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: CreatVoiChanl(string)
  nameWithType: Administration.CreatVoiChanl(string)
  fullName: Mewdeko.Modules.Administration.Administration.CreatVoiChanl(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CreatVoiChanl
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 850
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Creates a new voice channel with the specified name.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .creatvoich VoiceChannelName
  syntax:
    content: >-
      [Cmd("CreatVoiChanl")]

      [Aliases("CreatVoiChanl")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task CreatVoiChanl(string channelName)
    parameters:
    - id: channelName
      type: System.String
      description: The name of the voice channel to create
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("CreatVoiChanl")>

      <Aliases("CreatVoiChanl")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function CreatVoiChanl(channelName As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.CreatVoiChanl*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: CreatVoiChanl
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CreatVoiChanl
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  nameWithType.vb: Administration.CreatVoiChanl(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.CreatVoiChanl(String)
  name.vb: CreatVoiChanl(String)
- uid: Mewdeko.Modules.Administration.Administration.DelTxtChanl(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Administration.Administration.DelTxtChanl(Discord.ITextChannel)
  id: DelTxtChanl(Discord.ITextChannel)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: DelTxtChanl(ITextChannel)
  nameWithType: Administration.DelTxtChanl(ITextChannel)
  fullName: Mewdeko.Modules.Administration.Administration.DelTxtChanl(Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: DelTxtChanl
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 866
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Deletes the specified text channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .deltxtchan TextChannelName
  syntax:
    content: >-
      [Cmd("DelTxtChanl")]

      [Aliases("DelTxtChanl")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task DelTxtChanl(ITextChannel toDelete)
    parameters:
    - id: toDelete
      type: Discord.ITextChannel
      description: The text channel to delete
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("DelTxtChanl")>

      <Aliases("DelTxtChanl")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function DelTxtChanl(toDelete As ITextChannel) As Task
  overload: Mewdeko.Modules.Administration.Administration.DelTxtChanl*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelTxtChanl
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DelTxtChanl
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
- uid: Mewdeko.Modules.Administration.Administration.CreaTxtChanl(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.CreaTxtChanl(System.String)
  id: CreaTxtChanl(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: CreaTxtChanl(string)
  nameWithType: Administration.CreaTxtChanl(string)
  fullName: Mewdeko.Modules.Administration.Administration.CreaTxtChanl(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CreaTxtChanl
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 883
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Creates a new text channel with the specified name.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .createtxtchan TextChannelName
  syntax:
    content: >-
      [Cmd("CreaTxtChanl")]

      [Aliases("CreaTxtChanl")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task CreaTxtChanl(string channelName)
    parameters:
    - id: channelName
      type: System.String
      description: The name of the text channel to create
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("CreaTxtChanl")>

      <Aliases("CreaTxtChanl")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function CreaTxtChanl(channelName As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.CreaTxtChanl*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: CreaTxtChanl
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CreaTxtChanl
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  nameWithType.vb: Administration.CreaTxtChanl(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.CreaTxtChanl(String)
  name.vb: CreaTxtChanl(String)
- uid: Mewdeko.Modules.Administration.Administration.SetTopic(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.SetTopic(System.String)
  id: SetTopic(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: SetTopic(string?)
  nameWithType: Administration.SetTopic(string?)
  fullName: Mewdeko.Modules.Administration.Administration.SetTopic(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetTopic
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 899
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the topic of the current text channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .settopic NewTopic
  syntax:
    content: >-
      [Cmd("SetTopic")]

      [Aliases("SetTopic")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task SetTopic(string? topic = null)
    parameters:
    - id: topic
      type: System.String
      description: The topic to set for the text channel
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetTopic")>

      <Aliases("SetTopic")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function SetTopic(topic As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.SetTopic*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetTopic
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetTopic
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  nameWithType.vb: Administration.SetTopic(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.SetTopic(String)
  name.vb: SetTopic(String)
- uid: Mewdeko.Modules.Administration.Administration.SetChanlName(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.SetChanlName(System.String)
  id: SetChanlName(System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: SetChanlName(string)
  nameWithType: Administration.SetChanlName(string)
  fullName: Mewdeko.Modules.Administration.Administration.SetChanlName(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetChanlName
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 917
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the name of the current text channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .setchannelname NewChannelName
  syntax:
    content: >-
      [Cmd("SetChanlName")]

      [Aliases("SetChanlName")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task SetChanlName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to set for the text channel
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetChanlName")>

      <Aliases("SetChanlName")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function SetChanlName(name As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.SetChanlName*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetChanlName
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetChanlName
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  nameWithType.vb: Administration.SetChanlName(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.SetChanlName(String)
  name.vb: SetChanlName(String)
- uid: Mewdeko.Modules.Administration.Administration.NsfwToggle
  commentId: M:Mewdeko.Modules.Administration.Administration.NsfwToggle
  id: NsfwToggle
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: NsfwToggle()
  nameWithType: Administration.NsfwToggle()
  fullName: Mewdeko.Modules.Administration.Administration.NsfwToggle()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: NsfwToggle
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 933
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Toggles the NSFW setting of the current text channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels and the bot to have GuildPermission.ManageChannels.
  example:
  - .nsfwtoggle
  syntax:
    content: >-
      [Cmd("NsfwToggle")]

      [Aliases("NsfwToggle")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      [BotPerm(GuildPermission.ManageChannels)]

      public Task NsfwToggle()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("NsfwToggle")>

      <Aliases("NsfwToggle")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      <BotPerm(GuildPermission.ManageChannels)>

      Public Function NsfwToggle() As Task
  overload: Mewdeko.Modules.Administration.Administration.NsfwToggle*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: NsfwToggle
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NsfwToggle
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
- uid: Mewdeko.Modules.Administration.Administration.Edit(Discord.ITextChannel,System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.Edit(Discord.ITextChannel,System.UInt64,System.String)
  id: Edit(Discord.ITextChannel,System.UInt64,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Edit(ITextChannel, ulong, string?)
  nameWithType: Administration.Edit(ITextChannel, ulong, string?)
  fullName: Mewdeko.Modules.Administration.Administration.Edit(Discord.ITextChannel, ulong, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Edit
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 958
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Edits a message in the specified text channel.
  remarks: This command requires the caller to have ChannelPermission.ManageMessages.
  example:
  - .edit 123456789012345678 NewMessageText
  syntax:
    content: >-
      [Cmd("Edit")]

      [Aliases("Edit")]

      [RequireContext(ContextType.Guild)]

      [Priority(1)]

      public Task Edit(ITextChannel channel, ulong messageId, string? text)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The text channel where the message is located
    - id: messageId
      type: System.UInt64
      description: The ID of the message to edit
    - id: text
      type: System.String
      description: The new text for the message
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Edit")>

      <Aliases("Edit")>

      <RequireContext(ContextType.Guild)>

      <Priority(1)>

      Public Function Edit(channel As ITextChannel, messageId As ULong, text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.Edit*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Edit
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Edit
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Administration.Edit(ITextChannel, ULong, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.Edit(Discord.ITextChannel, ULong, String)
  name.vb: Edit(ITextChannel, ULong, String)
- uid: Mewdeko.Modules.Administration.Administration.Delete(System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Administration.Administration.Delete(System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: Delete(System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delete(ulong, StoopidTime?)
  nameWithType: Administration.Delete(ulong, StoopidTime?)
  fullName: Mewdeko.Modules.Administration.Administration.Delete(ulong, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delete
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 987
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Deletes a message by its ID in the current text channel.
  remarks: This command requires the caller to have ChannelPermission.ManageMessages and the bot to have ChannelPermission.ManageMessages.
  example:
  - .delete 123456789012345678
  syntax:
    content: >-
      [Cmd("Delete")]

      [Aliases("Delete")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(ChannelPermission.ManageMessages)]

      [BotPerm(ChannelPermission.ManageMessages)]

      public Task Delete(ulong messageId, StoopidTime? time = null)
    parameters:
    - id: messageId
      type: System.UInt64
      description: The ID of the message to delete
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: Optional time duration after which the message should be deleted
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delete")>

      <Aliases("Delete")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(ChannelPermission.ManageMessages)>

      <BotPerm(ChannelPermission.ManageMessages)>

      Public Function Delete(messageId As ULong, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delete*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delete
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delete
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.ChannelPermission)
    arguments:
    - type: Discord.ChannelPermission
      value: "8192"
  - type: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.BotPermAttribute.#ctor(Discord.ChannelPermission)
    arguments:
    - type: Discord.ChannelPermission
      value: "8192"
  nameWithType.vb: Administration.Delete(ULong, StoopidTime)
  fullName.vb: Mewdeko.Modules.Administration.Administration.Delete(ULong, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: Delete(ULong, StoopidTime)
- uid: Mewdeko.Modules.Administration.Administration.Delete(Discord.ITextChannel,System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Administration.Administration.Delete(Discord.ITextChannel,System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: Delete(Discord.ITextChannel,System.UInt64,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: Delete(ITextChannel, ulong, StoopidTime?)
  nameWithType: Administration.Delete(ITextChannel, ulong, StoopidTime?)
  fullName: Mewdeko.Modules.Administration.Administration.Delete(Discord.ITextChannel, ulong, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Delete
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 1001
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Deletes a message by its ID in the specified text channel.
  remarks: This command requires the caller to have ChannelPermission.ManageMessages.
  example:
  - '.delete #channel 123456789012345678'
  syntax:
    content: >-
      [Cmd("Delete")]

      [Aliases("Delete")]

      [RequireContext(ContextType.Guild)]

      public Task Delete(ITextChannel channel, ulong messageId, StoopidTime? time = null)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The text channel where the message is located
    - id: messageId
      type: System.UInt64
      description: The ID of the message to delete
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: Optional time duration after which the message should be deleted
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("Delete")>

      <Aliases("Delete")>

      <RequireContext(ContextType.Guild)>

      Public Function Delete(channel As ITextChannel, messageId As ULong, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.Delete*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delete
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Delete
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  nameWithType.vb: Administration.Delete(ITextChannel, ULong, StoopidTime)
  fullName.vb: Mewdeko.Modules.Administration.Administration.Delete(Discord.ITextChannel, ULong, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: Delete(ITextChannel, ULong, StoopidTime)
- uid: Mewdeko.Modules.Administration.Administration.RenameChannel(Discord.IGuildChannel,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.RenameChannel(Discord.IGuildChannel,System.String)
  id: RenameChannel(Discord.IGuildChannel,System.String)
  parent: Mewdeko.Modules.Administration.Administration
  langs:
  - csharp
  - vb
  name: RenameChannel(IGuildChannel, string)
  nameWithType: Administration.RenameChannel(IGuildChannel, string)
  fullName: Mewdeko.Modules.Administration.Administration.RenameChannel(Discord.IGuildChannel, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/Administration.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RenameChannel
    path: src/Mewdeko/Modules/Administration/Administration.cs
    startLine: 1064
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Renames the specified channel.
  remarks: This command requires the caller to have GuildPermission.ManageChannels.
  example:
  - '.renamechannel #channel NewChannelName'
  syntax:
    content: >-
      [Cmd("RenameChannel")]

      [Aliases("RenameChannel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageChannels)]

      public Task RenameChannel(IGuildChannel channel, string name)
    parameters:
    - id: channel
      type: Discord.IGuildChannel
      description: The channel to rename
    - id: name
      type: System.String
      description: The new name for the channel
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("RenameChannel")>

      <Aliases("RenameChannel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageChannels)>

      Public Function RenameChannel(channel As IGuildChannel, name As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.RenameChannel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: RenameChannel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: RenameChannel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "16"
  nameWithType.vb: Administration.RenameChannel(IGuildChannel, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.RenameChannel(Discord.IGuildChannel, String)
  name.vb: RenameChannel(IGuildChannel, String)
references:
- uid: Mewdeko.Modules.Administration
  commentId: N:Mewdeko.Modules.Administration
  href: Mewdeko.html
  name: Mewdeko.Modules.Administration
  nameWithType: Mewdeko.Modules.Administration
  fullName: Mewdeko.Modules.Administration
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<AdministrationService>
  nameWithType: MewdekoModuleBase<AdministrationService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Administration.Services.AdministrationService>
  nameWithType.vb: MewdekoModuleBase(Of AdministrationService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Administration.Services.AdministrationService)
  name.vb: MewdekoModuleBase(Of AdministrationService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Administration.Services.AdministrationService
    name: AdministrationService
    href: Mewdeko.Modules.Administration.Services.AdministrationService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Services.AdministrationService
    name: AdministrationService
    href: Mewdeko.Modules.Administration.Services.AdministrationService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Administration.Services.AdministrationService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<AdministrationService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Administration.Services.AdministrationService>.Service
  nameWithType.vb: MewdekoModuleBase(Of AdministrationService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Administration.Services.AdministrationService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.Config
  commentId: P:Mewdeko.Common.MewdekoModule.Config
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Config
  name: Config
  nameWithType: MewdekoModule.Config
  fullName: Mewdeko.Common.MewdekoModule.Config
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Administration.Administration.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<Administration>(Administration, string)
  nameWithType: Extensions.ThrowIfNull<Administration>(Administration, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Administration.Administration>(Mewdeko.Modules.Administration.Administration, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Administration)(Administration, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Administration.Administration)(Mewdeko.Modules.Administration.Administration, String)
  name.vb: ThrowIfNull(Of Administration)(Administration, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Administration,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Administration,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Administration.Administration.#ctor*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.#ctor
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration__ctor_Fergun_Interactive_InteractiveService_Mewdeko_Services_Settings_BotConfigService_
  name: Administration
  nameWithType: Administration.Administration
  fullName: Mewdeko.Modules.Administration.Administration.Administration
  nameWithType.vb: Administration.New
  fullName.vb: Mewdeko.Modules.Administration.Administration.New
  name.vb: New
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: Mewdeko.Services.Settings.BotConfigService
  commentId: T:Mewdeko.Services.Settings.BotConfigService
  parent: Mewdeko.Services.Settings
  href: Mewdeko.Services.Settings.BotConfigService.html
  name: BotConfigService
  nameWithType: BotConfigService
  fullName: Mewdeko.Services.Settings.BotConfigService
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: Mewdeko.Services.Settings
  commentId: N:Mewdeko.Services.Settings
  href: Mewdeko.html
  name: Mewdeko.Services.Settings
  nameWithType: Mewdeko.Services.Settings
  fullName: Mewdeko.Services.Settings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Settings
    name: Settings
    href: Mewdeko.Services.Settings.html
- uid: Mewdeko.Modules.Administration.Administration.GuildStatsOptOut*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.GuildStatsOptOut
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_GuildStatsOptOut
  name: GuildStatsOptOut
  nameWithType: Administration.GuildStatsOptOut
  fullName: Mewdeko.Modules.Administration.Administration.GuildStatsOptOut
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_DeleteGuildStatsData
  name: DeleteGuildStatsData
  nameWithType: Administration.DeleteGuildStatsData
  fullName: Mewdeko.Modules.Administration.Administration.DeleteGuildStatsData
- uid: Mewdeko.Modules.Administration.Administration.SetNick*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.SetNick
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_SetNick_Discord_IGuildUser_System_String_
  name: SetNick
  nameWithType: Administration.SetNick
  fullName: Mewdeko.Modules.Administration.Administration.SetNick
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Administration.Administration.BanInRole*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.BanInRole
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_BanInRole_Discord_IRole_System_String_
  name: BanInRole
  nameWithType: Administration.BanInRole
  fullName: Mewdeko.Modules.Administration.Administration.BanInRole
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Modules.Administration.Administration.NameBan*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.NameBan
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_NameBan_System_String_
  name: NameBan
  nameWithType: Administration.NameBan
  fullName: Mewdeko.Modules.Administration.Administration.NameBan
- uid: Mewdeko.Modules.Administration.Administration.BanUnder*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.BanUnder
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_BanUnder_Mewdeko_Common_TypeReaders_Models_StoopidTime_System_String_Mewdeko_Common_TypeReaders_Models_StoopidTime_
  name: BanUnder
  nameWithType: Administration.BanUnder
  fullName: Mewdeko.Modules.Administration.Administration.BanUnder
- uid: Mewdeko.Common.TypeReaders.Models.StoopidTime
  commentId: T:Mewdeko.Common.TypeReaders.Models.StoopidTime
  parent: Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.Common.TypeReaders.Models.StoopidTime.html
  name: StoopidTime
  nameWithType: StoopidTime
  fullName: Mewdeko.Common.TypeReaders.Models.StoopidTime
- uid: Mewdeko.Common.TypeReaders.Models
  commentId: N:Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders.Models
  nameWithType: Mewdeko.Common.TypeReaders.Models
  fullName: Mewdeko.Common.TypeReaders.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
- uid: Mewdeko.Modules.Administration.Administration.KickUnder*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.KickUnder
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_KickUnder_Mewdeko_Common_TypeReaders_Models_StoopidTime_System_String_
  name: KickUnder
  nameWithType: Administration.KickUnder
  fullName: Mewdeko.Modules.Administration.Administration.KickUnder
- uid: Mewdeko.Modules.Administration.Administration.PruneMembers*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.PruneMembers
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_PruneMembers_Mewdeko_Common_TypeReaders_Models_StoopidTime_System_String_
  name: PruneMembers
  nameWithType: Administration.PruneMembers
  fullName: Mewdeko.Modules.Administration.Administration.PruneMembers
- uid: Mewdeko.Modules.Administration.Administration.MemberRole*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.MemberRole
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_MemberRole_Discord_IRole_
  name: MemberRole
  nameWithType: Administration.MemberRole
  fullName: Mewdeko.Modules.Administration.Administration.MemberRole
- uid: Mewdeko.Modules.Administration.Administration.StaffRole*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.StaffRole
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_StaffRole_Discord_IRole_
  name: StaffRole
  nameWithType: Administration.StaffRole
  fullName: Mewdeko.Modules.Administration.Administration.StaffRole
- uid: Mewdeko.Modules.Administration.Administration.StaffRoleDisable*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.StaffRoleDisable
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_StaffRoleDisable
  name: StaffRoleDisable
  nameWithType: Administration.StaffRoleDisable
  fullName: Mewdeko.Modules.Administration.Administration.StaffRoleDisable
- uid: Mewdeko.Modules.Administration.Administration.Delmsgoncmd*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.Delmsgoncmd
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_Delmsgoncmd_Mewdeko_Modules_Administration_Administration_List_
  name: Delmsgoncmd
  nameWithType: Administration.Delmsgoncmd
  fullName: Mewdeko.Modules.Administration.Administration.Delmsgoncmd
- uid: Mewdeko.Modules.Administration.Administration.List
  commentId: T:Mewdeko.Modules.Administration.Administration.List
  parent: Mewdeko.Modules.Administration
  href: Mewdeko.Modules.Administration.Administration.html
  name: Administration.List
  nameWithType: Administration.List
  fullName: Mewdeko.Modules.Administration.Administration.List
  spec.csharp:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.List
    name: List
    href: Mewdeko.Modules.Administration.Administration.List.html
  spec.vb:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.List
    name: List
    href: Mewdeko.Modules.Administration.Administration.List.html
- uid: Mewdeko.Modules.Administration.Administration.Server
  commentId: T:Mewdeko.Modules.Administration.Administration.Server
  parent: Mewdeko.Modules.Administration
  href: Mewdeko.Modules.Administration.Administration.html
  name: Administration.Server
  nameWithType: Administration.Server
  fullName: Mewdeko.Modules.Administration.Administration.Server
  spec.csharp:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.Server
    name: Server
    href: Mewdeko.Modules.Administration.Administration.Server.html
  spec.vb:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.Server
    name: Server
    href: Mewdeko.Modules.Administration.Administration.Server.html
- uid: Mewdeko.Modules.Administration.Administration.Channel
  commentId: T:Mewdeko.Modules.Administration.Administration.Channel
  parent: Mewdeko.Modules.Administration
  href: Mewdeko.Modules.Administration.Administration.html
  name: Administration.Channel
  nameWithType: Administration.Channel
  fullName: Mewdeko.Modules.Administration.Administration.Channel
  spec.csharp:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.Channel
    name: Channel
    href: Mewdeko.Modules.Administration.Administration.Channel.html
  spec.vb:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.Channel
    name: Channel
    href: Mewdeko.Modules.Administration.Administration.Channel.html
- uid: Mewdeko.Modules.Administration.Administration.State
  commentId: T:Mewdeko.Modules.Administration.Administration.State
  parent: Mewdeko.Modules.Administration
  href: Mewdeko.Modules.Administration.Administration.html
  name: Administration.State
  nameWithType: Administration.State
  fullName: Mewdeko.Modules.Administration.Administration.State
  spec.csharp:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.State
    name: State
    href: Mewdeko.Modules.Administration.Administration.State.html
  spec.vb:
  - uid: Mewdeko.Modules.Administration.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.Administration.html
  - name: .
  - uid: Mewdeko.Modules.Administration.Administration.State
    name: State
    href: Mewdeko.Modules.Administration.Administration.State.html
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Modules.Administration.Administration.Deafen*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.Deafen
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_Deafen_Discord_IGuildUser___
  name: Deafen
  nameWithType: Administration.Deafen
  fullName: Mewdeko.Modules.Administration.Administration.Deafen
- uid: Discord.IGuildUser[]
  isExternal: true
  name: IGuildUser[]
  nameWithType: IGuildUser[]
  fullName: Discord.IGuildUser[]
  nameWithType.vb: IGuildUser()
  fullName.vb: Discord.IGuildUser()
  name.vb: IGuildUser()
  spec.csharp:
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: (
  - name: )
- uid: Mewdeko.Modules.Administration.Administration.UnDeafen*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.UnDeafen
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_UnDeafen_Discord_IGuildUser___
  name: UnDeafen
  nameWithType: Administration.UnDeafen
  fullName: Mewdeko.Modules.Administration.Administration.UnDeafen
- uid: Mewdeko.Modules.Administration.Administration.DelVoiChanl*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.DelVoiChanl
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_DelVoiChanl_Discord_IVoiceChannel_
  name: DelVoiChanl
  nameWithType: Administration.DelVoiChanl
  fullName: Mewdeko.Modules.Administration.Administration.DelVoiChanl
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  isExternal: true
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
- uid: Mewdeko.Modules.Administration.Administration.CreatVoiChanl*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.CreatVoiChanl
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_CreatVoiChanl_System_String_
  name: CreatVoiChanl
  nameWithType: Administration.CreatVoiChanl
  fullName: Mewdeko.Modules.Administration.Administration.CreatVoiChanl
- uid: Mewdeko.Modules.Administration.Administration.DelTxtChanl*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.DelTxtChanl
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_DelTxtChanl_Discord_ITextChannel_
  name: DelTxtChanl
  nameWithType: Administration.DelTxtChanl
  fullName: Mewdeko.Modules.Administration.Administration.DelTxtChanl
- uid: Mewdeko.Modules.Administration.Administration.CreaTxtChanl*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.CreaTxtChanl
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_CreaTxtChanl_System_String_
  name: CreaTxtChanl
  nameWithType: Administration.CreaTxtChanl
  fullName: Mewdeko.Modules.Administration.Administration.CreaTxtChanl
- uid: Mewdeko.Modules.Administration.Administration.SetTopic*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.SetTopic
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_SetTopic_System_String_
  name: SetTopic
  nameWithType: Administration.SetTopic
  fullName: Mewdeko.Modules.Administration.Administration.SetTopic
- uid: Mewdeko.Modules.Administration.Administration.SetChanlName*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.SetChanlName
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_SetChanlName_System_String_
  name: SetChanlName
  nameWithType: Administration.SetChanlName
  fullName: Mewdeko.Modules.Administration.Administration.SetChanlName
- uid: Mewdeko.Modules.Administration.Administration.NsfwToggle*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.NsfwToggle
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_NsfwToggle
  name: NsfwToggle
  nameWithType: Administration.NsfwToggle
  fullName: Mewdeko.Modules.Administration.Administration.NsfwToggle
- uid: Mewdeko.Modules.Administration.Administration.Edit*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.Edit
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_Edit_Discord_ITextChannel_System_UInt64_System_String_
  name: Edit
  nameWithType: Administration.Edit
  fullName: Mewdeko.Modules.Administration.Administration.Edit
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Modules.Administration.Administration.Delete*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.Delete
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_Delete_System_UInt64_Mewdeko_Common_TypeReaders_Models_StoopidTime_
  name: Delete
  nameWithType: Administration.Delete
  fullName: Mewdeko.Modules.Administration.Administration.Delete
- uid: Mewdeko.Modules.Administration.Administration.RenameChannel*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.RenameChannel
  href: Mewdeko.Modules.Administration.Administration.html#Mewdeko_Modules_Administration_Administration_RenameChannel_Discord_IGuildChannel_System_String_
  name: RenameChannel
  nameWithType: Administration.RenameChannel
  fullName: Mewdeko.Modules.Administration.Administration.RenameChannel
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  isExternal: true
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
