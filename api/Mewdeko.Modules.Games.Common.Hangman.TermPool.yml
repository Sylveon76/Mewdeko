### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
  commentId: T:Mewdeko.Modules.Games.Common.Hangman.TermPool
  id: TermPool
  parent: Mewdeko.Modules.Games.Common.Hangman
  children:
  - Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor
  - Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
  - Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm(System.String)
  langs:
  - csharp
  - vb
  name: TermPool
  nameWithType: TermPool
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TermPool
    path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
    startLine: 10
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Hangman
  summary: Represents a pool of terms for the Hangman game.
  example: []
  syntax:
    content: public class TermPool
    content.vb: Public Class TermPool
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Games.Common.Hangman.TermPool.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor
  commentId: M:Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor
  id: '#ctor'
  parent: Mewdeko.Modules.Games.Common.Hangman.TermPool
  langs:
  - csharp
  - vb
  name: TermPool()
  nameWithType: TermPool.TermPool()
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.TermPool()
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
    startLine: 17
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Hangman
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Games.Common.Hangman.TermPool" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TermPool()
    content.vb: Public Sub New()
  overload: Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor*
  nameWithType.vb: TermPool.New()
  fullName.vb: Mewdeko.Modules.Games.Common.Hangman.TermPool.New()
  name.vb: New()
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
  commentId: P:Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
  id: Data
  parent: Mewdeko.Modules.Games.Common.Hangman.TermPool
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: TermPool.Data
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Data
    path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
    startLine: 37
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Hangman
  summary: Gets the dictionary containing the term data.
  example: []
  syntax:
    content: public IReadOnlyDictionary<string, HangmanObject[]> Data { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyDictionary{System.String,Mewdeko.Modules.Games.Common.Hangman.HangmanObject[]}
    content.vb: Public ReadOnly Property Data As IReadOnlyDictionary(Of String, HangmanObject())
  overload: Mewdeko.Modules.Games.Common.Hangman.TermPool.Data*
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm(System.String)
  commentId: M:Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm(System.String)
  id: GetTerm(System.String)
  parent: Mewdeko.Modules.Games.Common.Hangman.TermPool
  langs:
  - csharp
  - vb
  name: GetTerm(string?)
  nameWithType: TermPool.GetTerm(string?)
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetTerm
    path: src/Mewdeko/Modules/Games/Common/Hangman/TermPool.cs
    startLine: 45
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Hangman
  summary: Retrieves a HangmanObject for the specified type.
  example: []
  syntax:
    content: public HangmanObject GetTerm(string? type)
    parameters:
    - id: type
      type: System.String
      description: The type of term to retrieve.
    return:
      type: Mewdeko.Modules.Games.Common.Hangman.HangmanObject
      description: A HangmanObject representing the term.
    content.vb: Public Function GetTerm(type As String) As HangmanObject
  overload: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm*
  exceptions:
  - type: Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException
    commentId: T:Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException
    description: Thrown when the requested term type is not found in the term pool.
  nameWithType.vb: TermPool.GetTerm(String)
  fullName.vb: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm(String)
  name.vb: GetTerm(String)
references:
- uid: Mewdeko.Modules.Games.Common.Hangman
  commentId: N:Mewdeko.Modules.Games.Common.Hangman
  href: Mewdeko.html
  name: Mewdeko.Modules.Games.Common.Hangman
  nameWithType: Mewdeko.Modules.Games.Common.Hangman
  fullName: Mewdeko.Modules.Games.Common.Hangman
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Hangman
    name: Hangman
    href: Mewdeko.Modules.Games.Common.Hangman.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Hangman
    name: Hangman
    href: Mewdeko.Modules.Games.Common.Hangman.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<TermPool>(TermPool, string)
  nameWithType: Extensions.ThrowIfNull<TermPool>(TermPool, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Games.Common.Hangman.TermPool>(Mewdeko.Modules.Games.Common.Hangman.TermPool, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of TermPool)(TermPool, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Games.Common.Hangman.TermPool)(Mewdeko.Modules.Games.Common.Hangman.TermPool, String)
  name.vb: ThrowIfNull(Of TermPool)(TermPool, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Hangman.TermPool,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
    name: TermPool
    href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
    name: TermPool
    href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Hangman.TermPool,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
    name: TermPool
    href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
    name: TermPool
    href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool
  commentId: T:Mewdeko.Modules.Games.Common.Hangman.TermPool
  parent: Mewdeko.Modules.Games.Common.Hangman
  href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html
  name: TermPool
  nameWithType: TermPool
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor*
  commentId: Overload:Mewdeko.Modules.Games.Common.Hangman.TermPool.#ctor
  href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html#Mewdeko_Modules_Games_Common_Hangman_TermPool__ctor
  name: TermPool
  nameWithType: TermPool.TermPool
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.TermPool
  nameWithType.vb: TermPool.New
  fullName.vb: Mewdeko.Modules.Games.Common.Hangman.TermPool.New
  name.vb: New
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.Data*
  commentId: Overload:Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
  href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html#Mewdeko_Modules_Games_Common_Hangman_TermPool_Data
  name: Data
  nameWithType: TermPool.Data
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.Data
- uid: System.Collections.Generic.IReadOnlyDictionary{System.String,Mewdeko.Modules.Games.Common.Hangman.HangmanObject[]}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.String,Mewdeko.Modules.Games.Common.Hangman.HangmanObject[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<string, HangmanObject[]>
  nameWithType: IReadOnlyDictionary<string, HangmanObject[]>
  fullName: System.Collections.Generic.IReadOnlyDictionary<string, Mewdeko.Modules.Games.Common.Hangman.HangmanObject[]>
  nameWithType.vb: IReadOnlyDictionary(Of String, HangmanObject())
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of String, Mewdeko.Modules.Games.Common.Hangman.HangmanObject())
  name.vb: IReadOnlyDictionary(Of String, HangmanObject())
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Hangman.HangmanObject
    name: HangmanObject
    href: Mewdeko.Modules.Games.Common.Hangman.HangmanObject.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Hangman.HangmanObject
    name: HangmanObject
    href: Mewdeko.Modules.Games.Common.Hangman.HangmanObject.html
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException
  commentId: T:Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException
  href: Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException.html
  name: TermNotFoundException
  nameWithType: TermNotFoundException
  fullName: Mewdeko.Modules.Games.Common.Hangman.Exceptions.TermNotFoundException
- uid: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm*
  commentId: Overload:Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm
  href: Mewdeko.Modules.Games.Common.Hangman.TermPool.html#Mewdeko_Modules_Games_Common_Hangman_TermPool_GetTerm_System_String_
  name: GetTerm
  nameWithType: TermPool.GetTerm
  fullName: Mewdeko.Modules.Games.Common.Hangman.TermPool.GetTerm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Games.Common.Hangman.HangmanObject
  commentId: T:Mewdeko.Modules.Games.Common.Hangman.HangmanObject
  parent: Mewdeko.Modules.Games.Common.Hangman
  href: Mewdeko.Modules.Games.Common.Hangman.HangmanObject.html
  name: HangmanObject
  nameWithType: HangmanObject
  fullName: Mewdeko.Modules.Games.Common.Hangman.HangmanObject
