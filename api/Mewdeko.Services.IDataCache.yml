### YamlMime:ManagedReference
items:
- uid: Mewdeko.Services.IDataCache
  commentId: T:Mewdeko.Services.IDataCache
  id: IDataCache
  parent: Mewdeko.Services
  children:
  - Mewdeko.Services.IDataCache.AddHighlightSettingToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  - Mewdeko.Services.IDataCache.AddHighlightToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  - Mewdeko.Services.IDataCache.AddSnipeToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore})
  - Mewdeko.Services.IDataCache.CacheAfk(System.UInt64,System.UInt64,Mewdeko.Database.Models.Afk)
  - Mewdeko.Services.IDataCache.CacheHighlightSettings(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  - Mewdeko.Services.IDataCache.CacheHighlights(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  - Mewdeko.Services.IDataCache.ClearAfk(System.UInt64,System.UInt64)
  - Mewdeko.Services.IDataCache.ExecuteRedisCommand(System.String)
  - Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild(System.UInt64)
  - Mewdeko.Services.IDataCache.GetHighlightStagger(System.UInt64,System.UInt64)
  - Mewdeko.Services.IDataCache.GetHighlightsForGuild(System.UInt64)
  - Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync``2(System.String,System.Func{``0,System.Threading.Tasks.Task{``1}},``0,System.TimeSpan)
  - Mewdeko.Services.IDataCache.GetShip(System.UInt64,System.UInt64)
  - Mewdeko.Services.IDataCache.GetSnipesForGuild(System.UInt64)
  - Mewdeko.Services.IDataCache.GetStatusRoleCache
  - Mewdeko.Services.IDataCache.LocalData
  - Mewdeko.Services.IDataCache.LocalImages
  - Mewdeko.Services.IDataCache.Redis
  - Mewdeko.Services.IDataCache.RemoveHighlightFromCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  - Mewdeko.Services.IDataCache.RetrieveAfk(System.UInt64,System.UInt64)
  - Mewdeko.Services.IDataCache.SetImageDataAsync(System.Uri,System.Byte[])
  - Mewdeko.Services.IDataCache.SetShip(System.UInt64,System.UInt64,System.Int32)
  - Mewdeko.Services.IDataCache.SetStatusRoleCache(System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable})
  - Mewdeko.Services.IDataCache.SetUserStatusCache(System.UInt64,System.String)
  - Mewdeko.Services.IDataCache.TryAddHighlightStagger(System.UInt64,System.UInt64)
  - Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser(System.UInt64)
  - Mewdeko.Services.IDataCache.TryAddRatelimit(System.UInt64,System.String,System.Int32)
  - Mewdeko.Services.IDataCache.TryGetImageDataAsync(System.Uri)
  langs:
  - csharp
  - vb
  name: IDataCache
  nameWithType: IDataCache
  fullName: Mewdeko.Services.IDataCache
  type: Interface
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IDataCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Represents a data cache interface.
  example: []
  syntax:
    content: public interface IDataCache
    content.vb: Public Interface IDataCache
  extensionMethods:
  - Mewdeko.Services.IDataCache.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Services.IDataCache.Redis
  commentId: P:Mewdeko.Services.IDataCache.Redis
  id: Redis
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: Redis
  nameWithType: IDataCache.Redis
  fullName: Mewdeko.Services.IDataCache.Redis
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Redis
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 16
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the Redis connection multiplexer.
  example: []
  syntax:
    content: ConnectionMultiplexer Redis { get; }
    parameters: []
    return:
      type: StackExchange.Redis.ConnectionMultiplexer
    content.vb: ReadOnly Property Redis As ConnectionMultiplexer
  overload: Mewdeko.Services.IDataCache.Redis*
- uid: Mewdeko.Services.IDataCache.LocalImages
  commentId: P:Mewdeko.Services.IDataCache.LocalImages
  id: LocalImages
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: LocalImages
  nameWithType: IDataCache.LocalImages
  fullName: Mewdeko.Services.IDataCache.LocalImages
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LocalImages
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 21
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the local image cache.
  example: []
  syntax:
    content: IImageCache LocalImages { get; }
    parameters: []
    return:
      type: Mewdeko.Services.IImageCache
    content.vb: ReadOnly Property LocalImages As IImageCache
  overload: Mewdeko.Services.IDataCache.LocalImages*
- uid: Mewdeko.Services.IDataCache.LocalData
  commentId: P:Mewdeko.Services.IDataCache.LocalData
  id: LocalData
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: LocalData
  nameWithType: IDataCache.LocalData
  fullName: Mewdeko.Services.IDataCache.LocalData
  type: Property
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LocalData
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 26
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the local data cache.
  example: []
  syntax:
    content: ILocalDataCache LocalData { get; }
    parameters: []
    return:
      type: Mewdeko.Services.ILocalDataCache
    content.vb: ReadOnly Property LocalData As ILocalDataCache
  overload: Mewdeko.Services.IDataCache.LocalData*
- uid: Mewdeko.Services.IDataCache.CacheAfk(System.UInt64,System.UInt64,Mewdeko.Database.Models.Afk)
  commentId: M:Mewdeko.Services.IDataCache.CacheAfk(System.UInt64,System.UInt64,Mewdeko.Database.Models.Afk)
  id: CacheAfk(System.UInt64,System.UInt64,Mewdeko.Database.Models.Afk)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: CacheAfk(ulong, ulong, Afk)
  nameWithType: IDataCache.CacheAfk(ulong, ulong, Afk)
  fullName: Mewdeko.Services.IDataCache.CacheAfk(ulong, ulong, Mewdeko.Database.Models.Afk)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CacheAfk
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Caches AFK status for a user in a guild.
  example: []
  syntax:
    content: Task CacheAfk(ulong guildId, ulong userId, Afk afk)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: userId
      type: System.UInt64
    - id: afk
      type: Mewdeko.Database.Models.Afk
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CacheAfk(guildId As ULong, userId As ULong, afk As Afk) As Task
  overload: Mewdeko.Services.IDataCache.CacheAfk*
  nameWithType.vb: IDataCache.CacheAfk(ULong, ULong, Afk)
  fullName.vb: Mewdeko.Services.IDataCache.CacheAfk(ULong, ULong, Mewdeko.Database.Models.Afk)
  name.vb: CacheAfk(ULong, ULong, Afk)
- uid: Mewdeko.Services.IDataCache.RetrieveAfk(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.RetrieveAfk(System.UInt64,System.UInt64)
  id: RetrieveAfk(System.UInt64,System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: RetrieveAfk(ulong, ulong)
  nameWithType: IDataCache.RetrieveAfk(ulong, ulong)
  fullName: Mewdeko.Services.IDataCache.RetrieveAfk(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RetrieveAfk
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 40
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Retrieves AFK status for a user in a guild.
  example: []
  syntax:
    content: Task<Afk?> RetrieveAfk(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: userId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.Afk}
    content.vb: Function RetrieveAfk(guildId As ULong, userId As ULong) As Task(Of Afk)
  overload: Mewdeko.Services.IDataCache.RetrieveAfk*
  nameWithType.vb: IDataCache.RetrieveAfk(ULong, ULong)
  fullName.vb: Mewdeko.Services.IDataCache.RetrieveAfk(ULong, ULong)
  name.vb: RetrieveAfk(ULong, ULong)
- uid: Mewdeko.Services.IDataCache.ClearAfk(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.ClearAfk(System.UInt64,System.UInt64)
  id: ClearAfk(System.UInt64,System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: ClearAfk(ulong, ulong)
  nameWithType: IDataCache.ClearAfk(ulong, ulong)
  fullName: Mewdeko.Services.IDataCache.ClearAfk(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ClearAfk
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 45
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Clears AFK status for a user in a guild.
  example: []
  syntax:
    content: Task ClearAfk(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: userId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ClearAfk(guildId As ULong, userId As ULong) As Task
  overload: Mewdeko.Services.IDataCache.ClearAfk*
  nameWithType.vb: IDataCache.ClearAfk(ULong, ULong)
  fullName.vb: Mewdeko.Services.IDataCache.ClearAfk(ULong, ULong)
  name.vb: ClearAfk(ULong, ULong)
- uid: Mewdeko.Services.IDataCache.SetUserStatusCache(System.UInt64,System.String)
  commentId: M:Mewdeko.Services.IDataCache.SetUserStatusCache(System.UInt64,System.String)
  id: SetUserStatusCache(System.UInt64,System.String)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: SetUserStatusCache(ulong, string)
  nameWithType: IDataCache.SetUserStatusCache(ulong, string)
  fullName: Mewdeko.Services.IDataCache.SetUserStatusCache(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetUserStatusCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Sets user status cache.
  example: []
  syntax:
    content: Task<bool> SetUserStatusCache(ulong id, string base64)
    parameters:
    - id: id
      type: System.UInt64
    - id: base64
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function SetUserStatusCache(id As ULong, base64 As String) As Task(Of Boolean)
  overload: Mewdeko.Services.IDataCache.SetUserStatusCache*
  nameWithType.vb: IDataCache.SetUserStatusCache(ULong, String)
  fullName.vb: Mewdeko.Services.IDataCache.SetUserStatusCache(ULong, String)
  name.vb: SetUserStatusCache(ULong, String)
- uid: Mewdeko.Services.IDataCache.TryAddHighlightStagger(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.TryAddHighlightStagger(System.UInt64,System.UInt64)
  id: TryAddHighlightStagger(System.UInt64,System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: TryAddHighlightStagger(ulong, ulong)
  nameWithType: IDataCache.TryAddHighlightStagger(ulong, ulong)
  fullName: Mewdeko.Services.IDataCache.TryAddHighlightStagger(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryAddHighlightStagger
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 63
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Tries to add a highlight stagger for a user in a guild.
  example: []
  syntax:
    content: Task<bool> TryAddHighlightStagger(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: userId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function TryAddHighlightStagger(guildId As ULong, userId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Services.IDataCache.TryAddHighlightStagger*
  nameWithType.vb: IDataCache.TryAddHighlightStagger(ULong, ULong)
  fullName.vb: Mewdeko.Services.IDataCache.TryAddHighlightStagger(ULong, ULong)
  name.vb: TryAddHighlightStagger(ULong, ULong)
- uid: Mewdeko.Services.IDataCache.GetHighlightStagger(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.GetHighlightStagger(System.UInt64,System.UInt64)
  id: GetHighlightStagger(System.UInt64,System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetHighlightStagger(ulong, ulong)
  nameWithType: IDataCache.GetHighlightStagger(ulong, ulong)
  fullName: Mewdeko.Services.IDataCache.GetHighlightStagger(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHighlightStagger
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 68
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets the highlight stagger for a user in a guild.
  example: []
  syntax:
    content: Task<bool> GetHighlightStagger(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
    - id: userId
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function GetHighlightStagger(guildId As ULong, userId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Services.IDataCache.GetHighlightStagger*
  nameWithType.vb: IDataCache.GetHighlightStagger(ULong, ULong)
  fullName.vb: Mewdeko.Services.IDataCache.GetHighlightStagger(ULong, ULong)
  name.vb: GetHighlightStagger(ULong, ULong)
- uid: Mewdeko.Services.IDataCache.CacheHighlights(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  commentId: M:Mewdeko.Services.IDataCache.CacheHighlights(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  id: CacheHighlights(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: CacheHighlights(ulong, List<Highlights>)
  nameWithType: IDataCache.CacheHighlights(ulong, List<Highlights>)
  fullName: Mewdeko.Services.IDataCache.CacheHighlights(ulong, System.Collections.Generic.List<Mewdeko.Database.Models.Highlights>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CacheHighlights
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 73
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Caches highlights for a guild.
  example: []
  syntax:
    content: Task CacheHighlights(ulong id, List<Highlights> highlights)
    parameters:
    - id: id
      type: System.UInt64
    - id: highlights
      type: System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CacheHighlights(id As ULong, highlights As List(Of Highlights)) As Task
  overload: Mewdeko.Services.IDataCache.CacheHighlights*
  nameWithType.vb: IDataCache.CacheHighlights(ULong, List(Of Highlights))
  fullName.vb: Mewdeko.Services.IDataCache.CacheHighlights(ULong, System.Collections.Generic.List(Of Mewdeko.Database.Models.Highlights))
  name.vb: CacheHighlights(ULong, List(Of Highlights))
- uid: Mewdeko.Services.IDataCache.CacheHighlightSettings(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  commentId: M:Mewdeko.Services.IDataCache.CacheHighlightSettings(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  id: CacheHighlightSettings(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: CacheHighlightSettings(ulong, List<HighlightSettings>)
  nameWithType: IDataCache.CacheHighlightSettings(ulong, List<HighlightSettings>)
  fullName: Mewdeko.Services.IDataCache.CacheHighlightSettings(ulong, System.Collections.Generic.List<Mewdeko.Database.Models.HighlightSettings>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CacheHighlightSettings
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 78
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Caches highlight settings for a guild.
  example: []
  syntax:
    content: Task CacheHighlightSettings(ulong id, List<HighlightSettings> highlightSettings)
    parameters:
    - id: id
      type: System.UInt64
    - id: highlightSettings
      type: System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CacheHighlightSettings(id As ULong, highlightSettings As List(Of HighlightSettings)) As Task
  overload: Mewdeko.Services.IDataCache.CacheHighlightSettings*
  nameWithType.vb: IDataCache.CacheHighlightSettings(ULong, List(Of HighlightSettings))
  fullName.vb: Mewdeko.Services.IDataCache.CacheHighlightSettings(ULong, System.Collections.Generic.List(Of Mewdeko.Database.Models.HighlightSettings))
  name.vb: CacheHighlightSettings(ULong, List(Of HighlightSettings))
- uid: Mewdeko.Services.IDataCache.AddHighlightToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  commentId: M:Mewdeko.Services.IDataCache.AddHighlightToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  id: AddHighlightToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: AddHighlightToCache(ulong, List<Highlights?>)
  nameWithType: IDataCache.AddHighlightToCache(ulong, List<Highlights?>)
  fullName: Mewdeko.Services.IDataCache.AddHighlightToCache(ulong, System.Collections.Generic.List<Mewdeko.Database.Models.Highlights?>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddHighlightToCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 83
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Adds highlights to cache for a guild.
  example: []
  syntax:
    content: Task AddHighlightToCache(ulong id, List<Highlights?> newHighlight)
    parameters:
    - id: id
      type: System.UInt64
    - id: newHighlight
      type: System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddHighlightToCache(id As ULong, newHighlight As List(Of Highlights)) As Task
  overload: Mewdeko.Services.IDataCache.AddHighlightToCache*
  nameWithType.vb: IDataCache.AddHighlightToCache(ULong, List(Of Highlights))
  fullName.vb: Mewdeko.Services.IDataCache.AddHighlightToCache(ULong, System.Collections.Generic.List(Of Mewdeko.Database.Models.Highlights))
  name.vb: AddHighlightToCache(ULong, List(Of Highlights))
- uid: Mewdeko.Services.IDataCache.RemoveHighlightFromCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  commentId: M:Mewdeko.Services.IDataCache.RemoveHighlightFromCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  id: RemoveHighlightFromCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.Highlights})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: RemoveHighlightFromCache(ulong, List<Highlights?>)
  nameWithType: IDataCache.RemoveHighlightFromCache(ulong, List<Highlights?>)
  fullName: Mewdeko.Services.IDataCache.RemoveHighlightFromCache(ulong, System.Collections.Generic.List<Mewdeko.Database.Models.Highlights?>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveHighlightFromCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 88
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Removes highlights from cache for a guild.
  example: []
  syntax:
    content: Task RemoveHighlightFromCache(ulong id, List<Highlights?> newHighlight)
    parameters:
    - id: id
      type: System.UInt64
    - id: newHighlight
      type: System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RemoveHighlightFromCache(id As ULong, newHighlight As List(Of Highlights)) As Task
  overload: Mewdeko.Services.IDataCache.RemoveHighlightFromCache*
  nameWithType.vb: IDataCache.RemoveHighlightFromCache(ULong, List(Of Highlights))
  fullName.vb: Mewdeko.Services.IDataCache.RemoveHighlightFromCache(ULong, System.Collections.Generic.List(Of Mewdeko.Database.Models.Highlights))
  name.vb: RemoveHighlightFromCache(ULong, List(Of Highlights))
- uid: Mewdeko.Services.IDataCache.ExecuteRedisCommand(System.String)
  commentId: M:Mewdeko.Services.IDataCache.ExecuteRedisCommand(System.String)
  id: ExecuteRedisCommand(System.String)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: ExecuteRedisCommand(string)
  nameWithType: IDataCache.ExecuteRedisCommand(string)
  fullName: Mewdeko.Services.IDataCache.ExecuteRedisCommand(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ExecuteRedisCommand
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 93
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Executes a Redis command.
  example: []
  syntax:
    content: Task<RedisResult> ExecuteRedisCommand(string command)
    parameters:
    - id: command
      type: System.String
    return:
      type: System.Threading.Tasks.Task{StackExchange.Redis.RedisResult}
    content.vb: Function ExecuteRedisCommand(command As String) As Task(Of RedisResult)
  overload: Mewdeko.Services.IDataCache.ExecuteRedisCommand*
  nameWithType.vb: IDataCache.ExecuteRedisCommand(String)
  fullName.vb: Mewdeko.Services.IDataCache.ExecuteRedisCommand(String)
  name.vb: ExecuteRedisCommand(String)
- uid: Mewdeko.Services.IDataCache.AddHighlightSettingToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  commentId: M:Mewdeko.Services.IDataCache.AddHighlightSettingToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  id: AddHighlightSettingToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: AddHighlightSettingToCache(ulong, List<HighlightSettings?>)
  nameWithType: IDataCache.AddHighlightSettingToCache(ulong, List<HighlightSettings?>)
  fullName: Mewdeko.Services.IDataCache.AddHighlightSettingToCache(ulong, System.Collections.Generic.List<Mewdeko.Database.Models.HighlightSettings?>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddHighlightSettingToCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 98
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Adds a highlight setting to cache for a guild.
  example: []
  syntax:
    content: Task AddHighlightSettingToCache(ulong id, List<HighlightSettings?> newHighlightSetting)
    parameters:
    - id: id
      type: System.UInt64
    - id: newHighlightSetting
      type: System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddHighlightSettingToCache(id As ULong, newHighlightSetting As List(Of HighlightSettings)) As Task
  overload: Mewdeko.Services.IDataCache.AddHighlightSettingToCache*
  nameWithType.vb: IDataCache.AddHighlightSettingToCache(ULong, List(Of HighlightSettings))
  fullName.vb: Mewdeko.Services.IDataCache.AddHighlightSettingToCache(ULong, System.Collections.Generic.List(Of Mewdeko.Database.Models.HighlightSettings))
  name.vb: AddHighlightSettingToCache(ULong, List(Of HighlightSettings))
- uid: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser(System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser(System.UInt64)
  id: TryAddHighlightStaggerUser(System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: TryAddHighlightStaggerUser(ulong)
  nameWithType: IDataCache.TryAddHighlightStaggerUser(ulong)
  fullName: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryAddHighlightStaggerUser
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 103
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Tries to add a highlight stagger for a user.
  example: []
  syntax:
    content: Task<bool> TryAddHighlightStaggerUser(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function TryAddHighlightStaggerUser(id As ULong) As Task(Of Boolean)
  overload: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser*
  nameWithType.vb: IDataCache.TryAddHighlightStaggerUser(ULong)
  fullName.vb: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser(ULong)
  name.vb: TryAddHighlightStaggerUser(ULong)
- uid: Mewdeko.Services.IDataCache.GetHighlightsForGuild(System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.GetHighlightsForGuild(System.UInt64)
  id: GetHighlightsForGuild(System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetHighlightsForGuild(ulong)
  nameWithType: IDataCache.GetHighlightsForGuild(ulong)
  fullName: Mewdeko.Services.IDataCache.GetHighlightsForGuild(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHighlightsForGuild
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 108
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets highlights for a guild.
  example: []
  syntax:
    content: List<Highlights?>? GetHighlightsForGuild(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
    content.vb: Function GetHighlightsForGuild(id As ULong) As List(Of Highlights)
  overload: Mewdeko.Services.IDataCache.GetHighlightsForGuild*
  nameWithType.vb: IDataCache.GetHighlightsForGuild(ULong)
  fullName.vb: Mewdeko.Services.IDataCache.GetHighlightsForGuild(ULong)
  name.vb: GetHighlightsForGuild(ULong)
- uid: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild(System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild(System.UInt64)
  id: GetHighlightSettingsForGuild(System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetHighlightSettingsForGuild(ulong)
  nameWithType: IDataCache.GetHighlightSettingsForGuild(ulong)
  fullName: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetHighlightSettingsForGuild
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 113
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets highlight settings for a guild.
  example: []
  syntax:
    content: List<HighlightSettings>? GetHighlightSettingsForGuild(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings}
    content.vb: Function GetHighlightSettingsForGuild(id As ULong) As List(Of HighlightSettings)
  overload: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild*
  nameWithType.vb: IDataCache.GetHighlightSettingsForGuild(ULong)
  fullName.vb: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild(ULong)
  name.vb: GetHighlightSettingsForGuild(ULong)
- uid: Mewdeko.Services.IDataCache.GetSnipesForGuild(System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.GetSnipesForGuild(System.UInt64)
  id: GetSnipesForGuild(System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetSnipesForGuild(ulong)
  nameWithType: IDataCache.GetSnipesForGuild(ulong)
  fullName: Mewdeko.Services.IDataCache.GetSnipesForGuild(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetSnipesForGuild
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 118
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets snipes for a guild.
  example: []
  syntax:
    content: Task<List<SnipeStore>?> GetSnipesForGuild(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}}
    content.vb: Function GetSnipesForGuild(id As ULong) As Task(Of List(Of SnipeStore))
  overload: Mewdeko.Services.IDataCache.GetSnipesForGuild*
  nameWithType.vb: IDataCache.GetSnipesForGuild(ULong)
  fullName.vb: Mewdeko.Services.IDataCache.GetSnipesForGuild(ULong)
  name.vb: GetSnipesForGuild(ULong)
- uid: Mewdeko.Services.IDataCache.AddSnipeToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore})
  commentId: M:Mewdeko.Services.IDataCache.AddSnipeToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore})
  id: AddSnipeToCache(System.UInt64,System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: AddSnipeToCache(ulong, List<SnipeStore>)
  nameWithType: IDataCache.AddSnipeToCache(ulong, List<SnipeStore>)
  fullName: Mewdeko.Services.IDataCache.AddSnipeToCache(ulong, System.Collections.Generic.List<Mewdeko.Modules.Utility.Common.SnipeStore>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddSnipeToCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 123
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Caches snipes for a guild.
  example: []
  syntax:
    content: Task AddSnipeToCache(ulong id, List<SnipeStore> newAfk)
    parameters:
    - id: id
      type: System.UInt64
    - id: newAfk
      type: System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AddSnipeToCache(id As ULong, newAfk As List(Of SnipeStore)) As Task
  overload: Mewdeko.Services.IDataCache.AddSnipeToCache*
  nameWithType.vb: IDataCache.AddSnipeToCache(ULong, List(Of SnipeStore))
  fullName.vb: Mewdeko.Services.IDataCache.AddSnipeToCache(ULong, System.Collections.Generic.List(Of Mewdeko.Modules.Utility.Common.SnipeStore))
  name.vb: AddSnipeToCache(ULong, List(Of SnipeStore))
- uid: Mewdeko.Services.IDataCache.TryGetImageDataAsync(System.Uri)
  commentId: M:Mewdeko.Services.IDataCache.TryGetImageDataAsync(System.Uri)
  id: TryGetImageDataAsync(System.Uri)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: TryGetImageDataAsync(Uri)
  nameWithType: IDataCache.TryGetImageDataAsync(Uri)
  fullName: Mewdeko.Services.IDataCache.TryGetImageDataAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryGetImageDataAsync
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 132
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Tries to get image data asynchronously.
  example: []
  syntax:
    content: Task<(bool Success, byte[] Data)> TryGetImageDataAsync(Uri key)
    parameters:
    - id: key
      type: System.Uri
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.Byte[]}}
    content.vb: Function TryGetImageDataAsync(key As Uri) As Task(Of (Success As Boolean, Data As Byte()))
  overload: Mewdeko.Services.IDataCache.TryGetImageDataAsync*
- uid: Mewdeko.Services.IDataCache.SetImageDataAsync(System.Uri,System.Byte[])
  commentId: M:Mewdeko.Services.IDataCache.SetImageDataAsync(System.Uri,System.Byte[])
  id: SetImageDataAsync(System.Uri,System.Byte[])
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: SetImageDataAsync(Uri, byte[])
  nameWithType: IDataCache.SetImageDataAsync(Uri, byte[])
  fullName: Mewdeko.Services.IDataCache.SetImageDataAsync(System.Uri, byte[])
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetImageDataAsync
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 137
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Sets image data asynchronously.
  example: []
  syntax:
    content: Task SetImageDataAsync(Uri key, byte[] data)
    parameters:
    - id: key
      type: System.Uri
    - id: data
      type: System.Byte[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetImageDataAsync(key As Uri, data As Byte()) As Task
  overload: Mewdeko.Services.IDataCache.SetImageDataAsync*
  nameWithType.vb: IDataCache.SetImageDataAsync(Uri, Byte())
  fullName.vb: Mewdeko.Services.IDataCache.SetImageDataAsync(System.Uri, Byte())
  name.vb: SetImageDataAsync(Uri, Byte())
- uid: Mewdeko.Services.IDataCache.TryAddRatelimit(System.UInt64,System.String,System.Int32)
  commentId: M:Mewdeko.Services.IDataCache.TryAddRatelimit(System.UInt64,System.String,System.Int32)
  id: TryAddRatelimit(System.UInt64,System.String,System.Int32)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: TryAddRatelimit(ulong, string, int)
  nameWithType: IDataCache.TryAddRatelimit(ulong, string, int)
  fullName: Mewdeko.Services.IDataCache.TryAddRatelimit(ulong, string, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TryAddRatelimit
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 146
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Tries to add a ratelimit.
  example: []
  syntax:
    content: TimeSpan? TryAddRatelimit(ulong id, string name, int expireIn)
    parameters:
    - id: id
      type: System.UInt64
    - id: name
      type: System.String
    - id: expireIn
      type: System.Int32
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: Function TryAddRatelimit(id As ULong, name As String, expireIn As Integer) As TimeSpan?
  overload: Mewdeko.Services.IDataCache.TryAddRatelimit*
  nameWithType.vb: IDataCache.TryAddRatelimit(ULong, String, Integer)
  fullName.vb: Mewdeko.Services.IDataCache.TryAddRatelimit(ULong, String, Integer)
  name.vb: TryAddRatelimit(ULong, String, Integer)
- uid: Mewdeko.Services.IDataCache.SetShip(System.UInt64,System.UInt64,System.Int32)
  commentId: M:Mewdeko.Services.IDataCache.SetShip(System.UInt64,System.UInt64,System.Int32)
  id: SetShip(System.UInt64,System.UInt64,System.Int32)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: SetShip(ulong, ulong, int)
  nameWithType: IDataCache.SetShip(ulong, ulong, int)
  fullName: Mewdeko.Services.IDataCache.SetShip(ulong, ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetShip
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 155
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Sets ship cache.
  example: []
  syntax:
    content: Task SetShip(ulong user1, ulong user2, int score)
    parameters:
    - id: user1
      type: System.UInt64
    - id: user2
      type: System.UInt64
    - id: score
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetShip(user1 As ULong, user2 As ULong, score As Integer) As Task
  overload: Mewdeko.Services.IDataCache.SetShip*
  nameWithType.vb: IDataCache.SetShip(ULong, ULong, Integer)
  fullName.vb: Mewdeko.Services.IDataCache.SetShip(ULong, ULong, Integer)
  name.vb: SetShip(ULong, ULong, Integer)
- uid: Mewdeko.Services.IDataCache.GetShip(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Services.IDataCache.GetShip(System.UInt64,System.UInt64)
  id: GetShip(System.UInt64,System.UInt64)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetShip(ulong, ulong)
  nameWithType: IDataCache.GetShip(ulong, ulong)
  fullName: Mewdeko.Services.IDataCache.GetShip(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetShip
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 160
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets ship cache.
  example: []
  syntax:
    content: Task<ShipCache?> GetShip(ulong user1, ulong user2)
    parameters:
    - id: user1
      type: System.UInt64
    - id: user2
      type: System.UInt64
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Searches.Services.ShipCache}
    content.vb: Function GetShip(user1 As ULong, user2 As ULong) As Task(Of ShipCache)
  overload: Mewdeko.Services.IDataCache.GetShip*
  nameWithType.vb: IDataCache.GetShip(ULong, ULong)
  fullName.vb: Mewdeko.Services.IDataCache.GetShip(ULong, ULong)
  name.vb: GetShip(ULong, ULong)
- uid: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync``2(System.String,System.Func{``0,System.Threading.Tasks.Task{``1}},``0,System.TimeSpan)
  commentId: M:Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync``2(System.String,System.Func{``0,System.Threading.Tasks.Task{``1}},``0,System.TimeSpan)
  id: GetOrAddCachedDataAsync``2(System.String,System.Func{``0,System.Threading.Tasks.Task{``1}},``0,System.TimeSpan)
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetOrAddCachedDataAsync<TParam, TOut>(string, Func<TParam?, Task<TOut?>>, TParam, TimeSpan)
  nameWithType: IDataCache.GetOrAddCachedDataAsync<TParam, TOut>(string, Func<TParam?, Task<TOut?>>, TParam, TimeSpan)
  fullName: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync<TParam, TOut>(string, System.Func<TParam?, System.Threading.Tasks.Task<TOut?>>, TParam, System.TimeSpan)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetOrAddCachedDataAsync
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 169
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets or adds cached data asynchronously.
  example: []
  syntax:
    content: 'Task<TOut?> GetOrAddCachedDataAsync<TParam, TOut>(string key, Func<TParam?, Task<TOut?>> factory, TParam param, TimeSpan expiry) where TOut : class'
    parameters:
    - id: key
      type: System.String
    - id: factory
      type: System.Func{{TParam},System.Threading.Tasks.Task{{TOut}}}
    - id: param
      type: '{TParam}'
    - id: expiry
      type: System.TimeSpan
    typeParameters:
    - id: TParam
    - id: TOut
    return:
      type: System.Threading.Tasks.Task{{TOut}}
    content.vb: Function GetOrAddCachedDataAsync(Of TParam, TOut As Class)(key As String, factory As Func(Of TParam, Task(Of TOut)), param As TParam, expiry As TimeSpan) As Task(Of TOut)
  overload: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync*
  nameWithType.vb: IDataCache.GetOrAddCachedDataAsync(Of TParam, TOut)(String, Func(Of TParam, Task(Of TOut)), TParam, TimeSpan)
  fullName.vb: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync(Of TParam, TOut)(String, System.Func(Of TParam, System.Threading.Tasks.Task(Of TOut)), TParam, System.TimeSpan)
  name.vb: GetOrAddCachedDataAsync(Of TParam, TOut)(String, Func(Of TParam, Task(Of TOut)), TParam, TimeSpan)
- uid: Mewdeko.Services.IDataCache.SetStatusRoleCache(System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable})
  commentId: M:Mewdeko.Services.IDataCache.SetStatusRoleCache(System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable})
  id: SetStatusRoleCache(System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable})
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: SetStatusRoleCache(List<StatusRolesTable>)
  nameWithType: IDataCache.SetStatusRoleCache(List<StatusRolesTable>)
  fullName: Mewdeko.Services.IDataCache.SetStatusRoleCache(System.Collections.Generic.List<Mewdeko.Database.Models.StatusRolesTable>)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetStatusRoleCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 175
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Sets status role cache.
  example: []
  syntax:
    content: Task SetStatusRoleCache(List<StatusRolesTable> statusRoles)
    parameters:
    - id: statusRoles
      type: System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetStatusRoleCache(statusRoles As List(Of StatusRolesTable)) As Task
  overload: Mewdeko.Services.IDataCache.SetStatusRoleCache*
  nameWithType.vb: IDataCache.SetStatusRoleCache(List(Of StatusRolesTable))
  fullName.vb: Mewdeko.Services.IDataCache.SetStatusRoleCache(System.Collections.Generic.List(Of Mewdeko.Database.Models.StatusRolesTable))
  name.vb: SetStatusRoleCache(List(Of StatusRolesTable))
- uid: Mewdeko.Services.IDataCache.GetStatusRoleCache
  commentId: M:Mewdeko.Services.IDataCache.GetStatusRoleCache
  id: GetStatusRoleCache
  parent: Mewdeko.Services.IDataCache
  langs:
  - csharp
  - vb
  name: GetStatusRoleCache()
  nameWithType: IDataCache.GetStatusRoleCache()
  fullName: Mewdeko.Services.IDataCache.GetStatusRoleCache()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Services/IDataCache.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatusRoleCache
    path: src/Mewdeko/Services/IDataCache.cs
    startLine: 180
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Services
  summary: Gets status role cache.
  example: []
  syntax:
    content: Task<List<StatusRolesTable>?> GetStatusRoleCache()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}}
    content.vb: Function GetStatusRoleCache() As Task(Of List(Of StatusRolesTable))
  overload: Mewdeko.Services.IDataCache.GetStatusRoleCache*
references:
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Services.IDataCache.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<IDataCache>(IDataCache, string)
  nameWithType: Extensions.ThrowIfNull<IDataCache>(IDataCache, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Services.IDataCache>(Mewdeko.Services.IDataCache, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of IDataCache)(IDataCache, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Services.IDataCache)(Mewdeko.Services.IDataCache, String)
  name.vb: ThrowIfNull(Of IDataCache)(IDataCache, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.IDataCache,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Services.IDataCache
    name: IDataCache
    href: Mewdeko.Services.IDataCache.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Services.IDataCache
    name: IDataCache
    href: Mewdeko.Services.IDataCache.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Services.IDataCache,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.IDataCache
    name: IDataCache
    href: Mewdeko.Services.IDataCache.html
  - name: )
  - name: (
  - uid: Mewdeko.Services.IDataCache
    name: IDataCache
    href: Mewdeko.Services.IDataCache.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Services.IDataCache.Redis*
  commentId: Overload:Mewdeko.Services.IDataCache.Redis
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_Redis
  name: Redis
  nameWithType: IDataCache.Redis
  fullName: Mewdeko.Services.IDataCache.Redis
- uid: StackExchange.Redis.ConnectionMultiplexer
  commentId: T:StackExchange.Redis.ConnectionMultiplexer
  parent: StackExchange.Redis
  isExternal: true
  name: ConnectionMultiplexer
  nameWithType: ConnectionMultiplexer
  fullName: StackExchange.Redis.ConnectionMultiplexer
- uid: StackExchange.Redis
  commentId: N:StackExchange.Redis
  isExternal: true
  name: StackExchange.Redis
  nameWithType: StackExchange.Redis
  fullName: StackExchange.Redis
  spec.csharp:
  - uid: StackExchange
    name: StackExchange
    isExternal: true
  - name: .
  - uid: StackExchange.Redis
    name: Redis
    isExternal: true
  spec.vb:
  - uid: StackExchange
    name: StackExchange
    isExternal: true
  - name: .
  - uid: StackExchange.Redis
    name: Redis
    isExternal: true
- uid: Mewdeko.Services.IDataCache.LocalImages*
  commentId: Overload:Mewdeko.Services.IDataCache.LocalImages
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_LocalImages
  name: LocalImages
  nameWithType: IDataCache.LocalImages
  fullName: Mewdeko.Services.IDataCache.LocalImages
- uid: Mewdeko.Services.IImageCache
  commentId: T:Mewdeko.Services.IImageCache
  parent: Mewdeko.Services
  href: Mewdeko.Services.IImageCache.html
  name: IImageCache
  nameWithType: IImageCache
  fullName: Mewdeko.Services.IImageCache
- uid: Mewdeko.Services.IDataCache.LocalData*
  commentId: Overload:Mewdeko.Services.IDataCache.LocalData
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_LocalData
  name: LocalData
  nameWithType: IDataCache.LocalData
  fullName: Mewdeko.Services.IDataCache.LocalData
- uid: Mewdeko.Services.ILocalDataCache
  commentId: T:Mewdeko.Services.ILocalDataCache
  parent: Mewdeko.Services
  href: Mewdeko.Services.ILocalDataCache.html
  name: ILocalDataCache
  nameWithType: ILocalDataCache
  fullName: Mewdeko.Services.ILocalDataCache
- uid: Mewdeko.Services.IDataCache.CacheAfk*
  commentId: Overload:Mewdeko.Services.IDataCache.CacheAfk
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_CacheAfk_System_UInt64_System_UInt64_Mewdeko_Database_Models_Afk_
  name: CacheAfk
  nameWithType: IDataCache.CacheAfk
  fullName: Mewdeko.Services.IDataCache.CacheAfk
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Database.Models.Afk
  commentId: T:Mewdeko.Database.Models.Afk
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.Afk.html
  name: Afk
  nameWithType: Afk
  fullName: Mewdeko.Database.Models.Afk
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Services.IDataCache.RetrieveAfk*
  commentId: Overload:Mewdeko.Services.IDataCache.RetrieveAfk
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_RetrieveAfk_System_UInt64_System_UInt64_
  name: RetrieveAfk
  nameWithType: IDataCache.RetrieveAfk
  fullName: Mewdeko.Services.IDataCache.RetrieveAfk
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.Afk}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.Afk}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Afk>
  nameWithType: Task<Afk>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.Afk>
  nameWithType.vb: Task(Of Afk)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.Afk)
  name.vb: Task(Of Afk)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.Afk
    name: Afk
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Afk
    name: Afk
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Services.IDataCache.ClearAfk*
  commentId: Overload:Mewdeko.Services.IDataCache.ClearAfk
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_ClearAfk_System_UInt64_System_UInt64_
  name: ClearAfk
  nameWithType: IDataCache.ClearAfk
  fullName: Mewdeko.Services.IDataCache.ClearAfk
- uid: Mewdeko.Services.IDataCache.SetUserStatusCache*
  commentId: Overload:Mewdeko.Services.IDataCache.SetUserStatusCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_SetUserStatusCache_System_UInt64_System_String_
  name: SetUserStatusCache
  nameWithType: IDataCache.SetUserStatusCache
  fullName: Mewdeko.Services.IDataCache.SetUserStatusCache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Services.IDataCache.TryAddHighlightStagger*
  commentId: Overload:Mewdeko.Services.IDataCache.TryAddHighlightStagger
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_TryAddHighlightStagger_System_UInt64_System_UInt64_
  name: TryAddHighlightStagger
  nameWithType: IDataCache.TryAddHighlightStagger
  fullName: Mewdeko.Services.IDataCache.TryAddHighlightStagger
- uid: Mewdeko.Services.IDataCache.GetHighlightStagger*
  commentId: Overload:Mewdeko.Services.IDataCache.GetHighlightStagger
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetHighlightStagger_System_UInt64_System_UInt64_
  name: GetHighlightStagger
  nameWithType: IDataCache.GetHighlightStagger
  fullName: Mewdeko.Services.IDataCache.GetHighlightStagger
- uid: Mewdeko.Services.IDataCache.CacheHighlights*
  commentId: Overload:Mewdeko.Services.IDataCache.CacheHighlights
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_CacheHighlights_System_UInt64_System_Collections_Generic_List_Mewdeko_Database_Models_Highlights__
  name: CacheHighlights
  nameWithType: IDataCache.CacheHighlights
  fullName: Mewdeko.Services.IDataCache.CacheHighlights
- uid: System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
  commentId: T:System.Collections.Generic.List{Mewdeko.Database.Models.Highlights}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Highlights>
  nameWithType: List<Highlights>
  fullName: System.Collections.Generic.List<Mewdeko.Database.Models.Highlights>
  nameWithType.vb: List(Of Highlights)
  fullName.vb: System.Collections.Generic.List(Of Mewdeko.Database.Models.Highlights)
  name.vb: List(Of Highlights)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.Highlights
    name: Highlights
    href: Mewdeko.Database.Models.Highlights.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Highlights
    name: Highlights
    href: Mewdeko.Database.Models.Highlights.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Services.IDataCache.CacheHighlightSettings*
  commentId: Overload:Mewdeko.Services.IDataCache.CacheHighlightSettings
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_CacheHighlightSettings_System_UInt64_System_Collections_Generic_List_Mewdeko_Database_Models_HighlightSettings__
  name: CacheHighlightSettings
  nameWithType: IDataCache.CacheHighlightSettings
  fullName: Mewdeko.Services.IDataCache.CacheHighlightSettings
- uid: System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings}
  commentId: T:System.Collections.Generic.List{Mewdeko.Database.Models.HighlightSettings}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<HighlightSettings>
  nameWithType: List<HighlightSettings>
  fullName: System.Collections.Generic.List<Mewdeko.Database.Models.HighlightSettings>
  nameWithType.vb: List(Of HighlightSettings)
  fullName.vb: System.Collections.Generic.List(Of Mewdeko.Database.Models.HighlightSettings)
  name.vb: List(Of HighlightSettings)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.HighlightSettings
    name: HighlightSettings
    href: Mewdeko.Database.Models.HighlightSettings.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.HighlightSettings
    name: HighlightSettings
    href: Mewdeko.Database.Models.HighlightSettings.html
  - name: )
- uid: Mewdeko.Services.IDataCache.AddHighlightToCache*
  commentId: Overload:Mewdeko.Services.IDataCache.AddHighlightToCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_AddHighlightToCache_System_UInt64_System_Collections_Generic_List_Mewdeko_Database_Models_Highlights__
  name: AddHighlightToCache
  nameWithType: IDataCache.AddHighlightToCache
  fullName: Mewdeko.Services.IDataCache.AddHighlightToCache
- uid: Mewdeko.Services.IDataCache.RemoveHighlightFromCache*
  commentId: Overload:Mewdeko.Services.IDataCache.RemoveHighlightFromCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_RemoveHighlightFromCache_System_UInt64_System_Collections_Generic_List_Mewdeko_Database_Models_Highlights__
  name: RemoveHighlightFromCache
  nameWithType: IDataCache.RemoveHighlightFromCache
  fullName: Mewdeko.Services.IDataCache.RemoveHighlightFromCache
- uid: Mewdeko.Services.IDataCache.ExecuteRedisCommand*
  commentId: Overload:Mewdeko.Services.IDataCache.ExecuteRedisCommand
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_ExecuteRedisCommand_System_String_
  name: ExecuteRedisCommand
  nameWithType: IDataCache.ExecuteRedisCommand
  fullName: Mewdeko.Services.IDataCache.ExecuteRedisCommand
- uid: System.Threading.Tasks.Task{StackExchange.Redis.RedisResult}
  commentId: T:System.Threading.Tasks.Task{StackExchange.Redis.RedisResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RedisResult>
  nameWithType: Task<RedisResult>
  fullName: System.Threading.Tasks.Task<StackExchange.Redis.RedisResult>
  nameWithType.vb: Task(Of RedisResult)
  fullName.vb: System.Threading.Tasks.Task(Of StackExchange.Redis.RedisResult)
  name.vb: Task(Of RedisResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: StackExchange.Redis.RedisResult
    name: RedisResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: StackExchange.Redis.RedisResult
    name: RedisResult
    isExternal: true
  - name: )
- uid: Mewdeko.Services.IDataCache.AddHighlightSettingToCache*
  commentId: Overload:Mewdeko.Services.IDataCache.AddHighlightSettingToCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_AddHighlightSettingToCache_System_UInt64_System_Collections_Generic_List_Mewdeko_Database_Models_HighlightSettings__
  name: AddHighlightSettingToCache
  nameWithType: IDataCache.AddHighlightSettingToCache
  fullName: Mewdeko.Services.IDataCache.AddHighlightSettingToCache
- uid: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser*
  commentId: Overload:Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_TryAddHighlightStaggerUser_System_UInt64_
  name: TryAddHighlightStaggerUser
  nameWithType: IDataCache.TryAddHighlightStaggerUser
  fullName: Mewdeko.Services.IDataCache.TryAddHighlightStaggerUser
- uid: Mewdeko.Services.IDataCache.GetHighlightsForGuild*
  commentId: Overload:Mewdeko.Services.IDataCache.GetHighlightsForGuild
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetHighlightsForGuild_System_UInt64_
  name: GetHighlightsForGuild
  nameWithType: IDataCache.GetHighlightsForGuild
  fullName: Mewdeko.Services.IDataCache.GetHighlightsForGuild
- uid: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild*
  commentId: Overload:Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetHighlightSettingsForGuild_System_UInt64_
  name: GetHighlightSettingsForGuild
  nameWithType: IDataCache.GetHighlightSettingsForGuild
  fullName: Mewdeko.Services.IDataCache.GetHighlightSettingsForGuild
- uid: Mewdeko.Services.IDataCache.GetSnipesForGuild*
  commentId: Overload:Mewdeko.Services.IDataCache.GetSnipesForGuild
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetSnipesForGuild_System_UInt64_
  name: GetSnipesForGuild
  nameWithType: IDataCache.GetSnipesForGuild
  fullName: Mewdeko.Services.IDataCache.GetSnipesForGuild
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<SnipeStore>>
  nameWithType: Task<List<SnipeStore>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Modules.Utility.Common.SnipeStore>>
  nameWithType.vb: Task(Of List(Of SnipeStore))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Modules.Utility.Common.SnipeStore))
  name.vb: Task(Of List(Of SnipeStore))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Modules.Utility.Common.SnipeStore
    name: SnipeStore
    href: Mewdeko.Modules.Utility.Common.SnipeStore.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Utility.Common.SnipeStore
    name: SnipeStore
    href: Mewdeko.Modules.Utility.Common.SnipeStore.html
  - name: )
  - name: )
- uid: Mewdeko.Services.IDataCache.AddSnipeToCache*
  commentId: Overload:Mewdeko.Services.IDataCache.AddSnipeToCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_AddSnipeToCache_System_UInt64_System_Collections_Generic_List_Mewdeko_Modules_Utility_Common_SnipeStore__
  name: AddSnipeToCache
  nameWithType: IDataCache.AddSnipeToCache
  fullName: Mewdeko.Services.IDataCache.AddSnipeToCache
- uid: System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}
  commentId: T:System.Collections.Generic.List{Mewdeko.Modules.Utility.Common.SnipeStore}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SnipeStore>
  nameWithType: List<SnipeStore>
  fullName: System.Collections.Generic.List<Mewdeko.Modules.Utility.Common.SnipeStore>
  nameWithType.vb: List(Of SnipeStore)
  fullName.vb: System.Collections.Generic.List(Of Mewdeko.Modules.Utility.Common.SnipeStore)
  name.vb: List(Of SnipeStore)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Modules.Utility.Common.SnipeStore
    name: SnipeStore
    href: Mewdeko.Modules.Utility.Common.SnipeStore.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Utility.Common.SnipeStore
    name: SnipeStore
    href: Mewdeko.Modules.Utility.Common.SnipeStore.html
  - name: )
- uid: Mewdeko.Services.IDataCache.TryGetImageDataAsync*
  commentId: Overload:Mewdeko.Services.IDataCache.TryGetImageDataAsync
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_TryGetImageDataAsync_System_Uri_
  name: TryGetImageDataAsync
  nameWithType: IDataCache.TryGetImageDataAsync
  fullName: Mewdeko.Services.IDataCache.TryGetImageDataAsync
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.Byte[]}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.Byte[]}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(bool Success, byte[] Data)>
  nameWithType: Task<(bool Success, byte[] Data)>
  fullName: System.Threading.Tasks.Task<(bool Success, byte[] Data)>
  nameWithType.vb: Task(Of (Success As Boolean, Data As Byte()))
  fullName.vb: System.Threading.Tasks.Task(Of (Success As Boolean, Data As Byte()))
  name.vb: Task(Of (Success As Boolean, Data As Byte()))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Byte[]}.Success
    name: Success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.byte[]-.success
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Byte[]}.Data
    name: Data
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.byte[]-.data
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Boolean,System.Byte[]}.Success
    name: Success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.byte[]-.success
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Byte[]}.Data
    name: Data
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.byte[]-.data
  - name: " "
  - name: As
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
  - name: )
- uid: Mewdeko.Services.IDataCache.SetImageDataAsync*
  commentId: Overload:Mewdeko.Services.IDataCache.SetImageDataAsync
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_SetImageDataAsync_System_Uri_System_Byte___
  name: SetImageDataAsync
  nameWithType: IDataCache.SetImageDataAsync
  fullName: Mewdeko.Services.IDataCache.SetImageDataAsync
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Mewdeko.Services.IDataCache.TryAddRatelimit*
  commentId: Overload:Mewdeko.Services.IDataCache.TryAddRatelimit
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_TryAddRatelimit_System_UInt64_System_String_System_Int32_
  name: TryAddRatelimit
  nameWithType: IDataCache.TryAddRatelimit
  fullName: Mewdeko.Services.IDataCache.TryAddRatelimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Services.IDataCache.SetShip*
  commentId: Overload:Mewdeko.Services.IDataCache.SetShip
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_SetShip_System_UInt64_System_UInt64_System_Int32_
  name: SetShip
  nameWithType: IDataCache.SetShip
  fullName: Mewdeko.Services.IDataCache.SetShip
- uid: Mewdeko.Services.IDataCache.GetShip*
  commentId: Overload:Mewdeko.Services.IDataCache.GetShip
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetShip_System_UInt64_System_UInt64_
  name: GetShip
  nameWithType: IDataCache.GetShip
  fullName: Mewdeko.Services.IDataCache.GetShip
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Searches.Services.ShipCache}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Searches.Services.ShipCache}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ShipCache>
  nameWithType: Task<ShipCache>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Searches.Services.ShipCache>
  nameWithType.vb: Task(Of ShipCache)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Searches.Services.ShipCache)
  name.vb: Task(Of ShipCache)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Searches.Services.ShipCache
    name: ShipCache
    href: Mewdeko.Modules.Searches.Services.ShipCache.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Searches.Services.ShipCache
    name: ShipCache
    href: Mewdeko.Modules.Searches.Services.ShipCache.html
  - name: )
- uid: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync*
  commentId: Overload:Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetOrAddCachedDataAsync__2_System_String_System_Func___0_System_Threading_Tasks_Task___1_____0_System_TimeSpan_
  name: GetOrAddCachedDataAsync
  nameWithType: IDataCache.GetOrAddCachedDataAsync
  fullName: Mewdeko.Services.IDataCache.GetOrAddCachedDataAsync
- uid: System.Func{{TParam},System.Threading.Tasks.Task{{TOut}}}
  commentId: T:System.Func{``0,System.Threading.Tasks.Task{``1}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TParam, Task<TOut>>
  nameWithType: Func<TParam, Task<TOut>>
  fullName: System.Func<TParam, System.Threading.Tasks.Task<TOut>>
  nameWithType.vb: Func(Of TParam, Task(Of TOut))
  fullName.vb: System.Func(Of TParam, System.Threading.Tasks.Task(Of TOut))
  name.vb: Func(Of TParam, Task(Of TOut))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TParam
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TOut
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TParam
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: )
  - name: )
- uid: '{TParam}'
  commentId: '!:TParam'
  definition: TParam
  name: TParam
  nameWithType: TParam
  fullName: TParam
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Task{{TOut}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TOut>
  nameWithType: Task<TOut>
  fullName: System.Threading.Tasks.Task<TOut>
  nameWithType.vb: Task(Of TOut)
  fullName.vb: System.Threading.Tasks.Task(Of TOut)
  name.vb: Task(Of TOut)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TOut
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TOut
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TParam
  name: TParam
  nameWithType: TParam
  fullName: TParam
- uid: Mewdeko.Services.IDataCache.SetStatusRoleCache*
  commentId: Overload:Mewdeko.Services.IDataCache.SetStatusRoleCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_SetStatusRoleCache_System_Collections_Generic_List_Mewdeko_Database_Models_StatusRolesTable__
  name: SetStatusRoleCache
  nameWithType: IDataCache.SetStatusRoleCache
  fullName: Mewdeko.Services.IDataCache.SetStatusRoleCache
- uid: System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}
  commentId: T:System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<StatusRolesTable>
  nameWithType: List<StatusRolesTable>
  fullName: System.Collections.Generic.List<Mewdeko.Database.Models.StatusRolesTable>
  nameWithType.vb: List(Of StatusRolesTable)
  fullName.vb: System.Collections.Generic.List(Of Mewdeko.Database.Models.StatusRolesTable)
  name.vb: List(Of StatusRolesTable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: )
- uid: Mewdeko.Services.IDataCache.GetStatusRoleCache*
  commentId: Overload:Mewdeko.Services.IDataCache.GetStatusRoleCache
  href: Mewdeko.Services.IDataCache.html#Mewdeko_Services_IDataCache_GetStatusRoleCache
  name: GetStatusRoleCache
  nameWithType: IDataCache.GetStatusRoleCache
  fullName: Mewdeko.Services.IDataCache.GetStatusRoleCache
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.StatusRolesTable}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<StatusRolesTable>>
  nameWithType: Task<List<StatusRolesTable>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Database.Models.StatusRolesTable>>
  nameWithType.vb: Task(Of List(Of StatusRolesTable))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Database.Models.StatusRolesTable))
  name.vb: Task(Of List(Of StatusRolesTable))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: )
  - name: )
