### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Xp.Services.XpService
  commentId: T:Mewdeko.Modules.Xp.Services.XpService
  id: XpService
  parent: Mewdeko.Modules.Xp.Services
  children:
  - Mewdeko.Modules.Xp.Services.XpService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.CommandHandler,Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.IDataCache,Mewdeko.Services.Impl.FontProvider,Mewdeko.Services.IBotCredentials,System.Net.Http.IHttpClientFactory,Mewdeko.Modules.Xp.Services.XpConfigService,Mewdeko.Mewdeko,Microsoft.Extensions.Caching.Memory.IMemoryCache,Mewdeko.Services.Impl.EventHandler)
  - Mewdeko.Modules.Xp.Services.XpService.AddXp(System.UInt64,System.UInt64,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly(Discord.IGuildUser,Discord.IMessageChannel,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(Discord.IUser,Mewdeko.Database.Models.XpNotificationLocation)
  - Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(System.UInt64,System.UInt64,Mewdeko.Database.Models.XpNotificationLocation)
  - Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync(Discord.IGuildUser)
  - Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(Discord.IUser)
  - Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetTemplate(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync(Discord.IGuildUser)
  - Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.UInt64,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.SetImageUrl(System.UInt64,System.String)
  - Mewdeko.Modules.Xp.Services.XpService.SetRoleReward(System.UInt64,System.Int32,System.Nullable{System.UInt64})
  - Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.Unload
  - Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl(System.String)
  - Mewdeko.Modules.Xp.Services.XpService.XpRequiredLvl1
  - Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64,System.UInt64)
  - Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet(Discord.IGuild,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet(Discord.IGuild,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet(Discord.IGuild,System.Int32)
  - Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet(Discord.IGuild,System.Int32)
  langs:
  - csharp
  - vb
  name: XpService
  nameWithType: XpService
  fullName: Mewdeko.Modules.Xp.Services.XpService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpService
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: The shitty service meant for handling xp that i have yet to refactor.
  example: []
  syntax:
    content: 'public class XpService : INService, IUnloadableService'
    content.vb: Public Class XpService Implements INService, IUnloadableService
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  - Mewdeko.Services.IUnloadableService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Xp.Services.XpService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpRequiredLvl1
  commentId: F:Mewdeko.Modules.Xp.Services.XpService.XpRequiredLvl1
  id: XpRequiredLvl1
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpRequiredLvl1
  nameWithType: XpService.XpRequiredLvl1
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpRequiredLvl1
  type: Field
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpRequiredLvl1
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Constant defining the required XP for level 1.
  example: []
  syntax:
    content: public const int XpRequiredLvl1 = 36
    return:
      type: System.Int32
    content.vb: Public Const XpRequiredLvl1 As Integer = 36
- uid: Mewdeko.Modules.Xp.Services.XpService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.CommandHandler,Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.IDataCache,Mewdeko.Services.Impl.FontProvider,Mewdeko.Services.IBotCredentials,System.Net.Http.IHttpClientFactory,Mewdeko.Modules.Xp.Services.XpConfigService,Mewdeko.Mewdeko,Microsoft.Extensions.Caching.Memory.IMemoryCache,Mewdeko.Services.Impl.EventHandler)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.CommandHandler,Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.IDataCache,Mewdeko.Services.Impl.FontProvider,Mewdeko.Services.IBotCredentials,System.Net.Http.IHttpClientFactory,Mewdeko.Modules.Xp.Services.XpConfigService,Mewdeko.Mewdeko,Microsoft.Extensions.Caching.Memory.IMemoryCache,Mewdeko.Services.Impl.EventHandler)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.CommandHandler,Mewdeko.Database.DbService,Mewdeko.Services.strings.IBotStrings,Mewdeko.Services.IDataCache,Mewdeko.Services.Impl.FontProvider,Mewdeko.Services.IBotCredentials,System.Net.Http.IHttpClientFactory,Mewdeko.Modules.Xp.Services.XpConfigService,Mewdeko.Mewdeko,Microsoft.Extensions.Caching.Memory.IMemoryCache,Mewdeko.Services.Impl.EventHandler)'
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpService(DiscordSocketClient, CommandHandler, DbService, IBotStrings, IDataCache, FontProvider, IBotCredentials, IHttpClientFactory, XpConfigService, Mewdeko, IMemoryCache, EventHandler)
  nameWithType: XpService.XpService(DiscordSocketClient, CommandHandler, DbService, IBotStrings, IDataCache, FontProvider, IBotCredentials, IHttpClientFactory, XpConfigService, Mewdeko, IMemoryCache, EventHandler)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpService(Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.CommandHandler, Mewdeko.Database.DbService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Services.IDataCache, Mewdeko.Services.Impl.FontProvider, Mewdeko.Services.IBotCredentials, System.Net.Http.IHttpClientFactory, Mewdeko.Modules.Xp.Services.XpConfigService, Mewdeko.Mewdeko, Microsoft.Extensions.Caching.Memory.IMemoryCache, Mewdeko.Services.Impl.EventHandler)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 64
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Xp.Services.XpService" data-throw-if-not-resolved="false"></xref> class, setting up dependencies necessary for XP management.
  remarks: Initializes services and sets up event handlers for managing XP accumulation and rewards.
  example: []
  syntax:
    content: public XpService(DiscordSocketClient client, CommandHandler cmd, DbService db, IBotStrings strings, IDataCache cache, FontProvider fonts, IBotCredentials creds, IHttpClientFactory http, XpConfigService xpConfig, Mewdeko bot, IMemoryCache memoryCache, EventHandler eventHandler)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord client.
    - id: cmd
      type: Mewdeko.Services.CommandHandler
      description: The command handler.
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service.
    - id: strings
      type: Mewdeko.Services.strings.IBotStrings
      description: The bot strings service for localization.
    - id: cache
      type: Mewdeko.Services.IDataCache
      description: The data cache service.
    - id: fonts
      type: Mewdeko.Services.Impl.FontProvider
      description: The font provider for image generation.
    - id: creds
      type: Mewdeko.Services.IBotCredentials
      description: The bot credentials provider.
    - id: http
      type: System.Net.Http.IHttpClientFactory
      description: The HTTP client factory for making external requests.
    - id: xpConfig
      type: Mewdeko.Modules.Xp.Services.XpConfigService
      description: The XP configuration service.
    - id: bot
      type: Mewdeko.Mewdeko
      description: The main bot instance.
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
      description: The memory cache for storing temporary data.
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler for subscribing to Discord events.
    content.vb: Public Sub New(client As DiscordSocketClient, cmd As CommandHandler, db As DbService, strings As IBotStrings, cache As IDataCache, fonts As FontProvider, creds As IBotCredentials, http As IHttpClientFactory, xpConfig As XpConfigService, bot As Mewdeko, memoryCache As IMemoryCache, eventHandler As EventHandler)
  overload: Mewdeko.Modules.Xp.Services.XpService.#ctor*
  nameWithType.vb: XpService.New(DiscordSocketClient, CommandHandler, DbService, IBotStrings, IDataCache, FontProvider, IBotCredentials, IHttpClientFactory, XpConfigService, Mewdeko, IMemoryCache, EventHandler)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.New(Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.CommandHandler, Mewdeko.Database.DbService, Mewdeko.Services.strings.IBotStrings, Mewdeko.Services.IDataCache, Mewdeko.Services.Impl.FontProvider, Mewdeko.Services.IBotCredentials, System.Net.Http.IHttpClientFactory, Mewdeko.Modules.Xp.Services.XpConfigService, Mewdeko.Mewdeko, Microsoft.Extensions.Caching.Memory.IMemoryCache, Mewdeko.Services.Impl.EventHandler)
  name.vb: New(DiscordSocketClient, CommandHandler, DbService, IBotStrings, IDataCache, FontProvider, IBotCredentials, IHttpClientFactory, XpConfigService, Mewdeko, IMemoryCache, EventHandler)
- uid: Mewdeko.Modules.Xp.Services.XpService.Unload
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.Unload
  id: Unload
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: XpService.Unload()
  fullName: Mewdeko.Modules.Xp.Services.XpService.Unload()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Unload
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 138
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Unloads the service, detaching from event handlers and performing cleanup tasks.
  example: []
  syntax:
    content: public Task Unload()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous unload operation.
    content.vb: Public Function Unload() As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.Unload*
  implements:
  - Mewdeko.Services.IUnloadableService.Unload
- uid: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards(System.UInt64)
  id: GetRoleRewards(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetRoleRewards(ulong)
  nameWithType: XpService.GetRoleRewards(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetRoleRewards
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 282
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a list of all role rewards for a specified guild.
  example: []
  syntax:
    content: public Task<IEnumerable<XpRoleReward>> GetRoleRewards(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier for the guild.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.XpRoleReward}}
      description: A task that represents the asynchronous operation. The task result contains an enumerable of <xref href="Mewdeko.Database.Models.XpRoleReward" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetRoleRewards(id As ULong) As Task(Of IEnumerable(Of XpRoleReward))
  overload: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards*
  nameWithType.vb: XpService.GetRoleRewards(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards(ULong)
  name.vb: GetRoleRewards(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward(System.UInt64,System.Int32,System.Nullable{System.UInt64})
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.SetRoleReward(System.UInt64,System.Int32,System.Nullable{System.UInt64})
  id: SetRoleReward(System.UInt64,System.Int32,System.Nullable{System.UInt64})
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: SetRoleReward(ulong, int, ulong?)
  nameWithType: XpService.SetRoleReward(ulong, int, ulong?)
  fullName: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward(ulong, int, ulong?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetRoleReward
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 298
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets a role reward for reaching a specified level within a guild.
  remarks: >-
    This method sets or updates the role that is awarded to a user when they reach a specified level.

    If the roleId is null, any existing reward for the specified level is removed.
  example: []
  syntax:
    content: public void SetRoleReward(ulong guildId, int level, ulong? roleId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier for the guild.
    - id: level
      type: System.Int32
      description: The level at which the reward is given.
    - id: roleId
      type: System.Nullable{System.UInt64}
      description: The unique identifier for the role to be awarded. If null, existing rewards for the level will be removed.
    content.vb: Public Sub SetRoleReward(guildId As ULong, level As Integer, roleId As ULong?)
  overload: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward*
  nameWithType.vb: XpService.SetRoleReward(ULong, Integer, ULong?)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward(ULong, Integer, ULong?)
  name.vb: SetRoleReward(ULong, Integer, ULong?)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.UInt64,System.Int32)
  id: GetUserXps(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetUserXps(ulong, int)
  nameWithType: XpService.GetUserXps(ulong, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserXps
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 334
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a list of users with their XP statistics for a specified guild and page number.
  example: []
  syntax:
    content: public Task<List<UserXpStats>> GetUserXps(ulong guildId, int page)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier for the guild.
    - id: page
      type: System.Int32
      description: The page number of users to retrieve.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserXpStats}}
      description: A task that represents the asynchronous operation. The task result contains a list of <xref href="Mewdeko.Database.Models.UserXpStats" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetUserXps(guildId As ULong, page As Integer) As Task(Of List(Of UserXpStats))
  overload: Mewdeko.Modules.Xp.Services.XpService.GetUserXps*
  nameWithType.vb: XpService.GetUserXps(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(ULong, Integer)
  name.vb: GetUserXps(ULong, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps(System.UInt64)
  id: GetTopUserXps(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetTopUserXps(ulong)
  nameWithType: XpService.GetTopUserXps(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetTopUserXps
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 345
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a list of top users based on XP in a specified guild.
  example: []
  syntax:
    content: public Task<List<UserXpStats>> GetTopUserXps(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier for the guild.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserXpStats}}
      description: A task that represents the asynchronous operation. The task result contains a list of <xref href="Mewdeko.Database.Models.UserXpStats" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetTopUserXps(guildId As ULong) As Task(Of List(Of UserXpStats))
  overload: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps*
  nameWithType.vb: XpService.GetTopUserXps(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps(ULong)
  name.vb: GetTopUserXps(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetUserXps(System.Int32)
  id: GetUserXps(System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetUserXps(int)
  nameWithType: XpService.GetUserXps(int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserXps
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 356
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a leaderboard of users based on XP across all guilds for a specified page number.
  example: []
  syntax:
    content: public DiscordUser[] GetUserXps(int page)
    parameters:
    - id: page
      type: System.Int32
      description: The page number of users to retrieve.
    return:
      type: Mewdeko.Database.Models.DiscordUser[]
      description: An array of <xref href="Mewdeko.Database.Models.DiscordUser" data-throw-if-not-resolved="false"></xref> containing user XP leaderboard information.
    content.vb: Public Function GetUserXps(page As Integer) As DiscordUser()
  overload: Mewdeko.Modules.Xp.Services.XpService.GetUserXps*
  nameWithType.vb: XpService.GetUserXps(Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetUserXps(Integer)
  name.vb: GetUserXps(Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(System.UInt64,System.UInt64,Mewdeko.Database.Models.XpNotificationLocation)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(System.UInt64,System.UInt64,Mewdeko.Database.Models.XpNotificationLocation)
  id: ChangeNotificationType(System.UInt64,System.UInt64,Mewdeko.Database.Models.XpNotificationLocation)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ChangeNotificationType(ulong, ulong, XpNotificationLocation)
  nameWithType: XpService.ChangeNotificationType(ulong, ulong, XpNotificationLocation)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(ulong, ulong, Mewdeko.Database.Models.XpNotificationLocation)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChangeNotificationType
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 369
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Changes the notification type for when a user levels up in a specified guild.
  example: []
  syntax:
    content: public Task ChangeNotificationType(ulong userId, ulong guildId, XpNotificationLocation type)
    parameters:
    - id: userId
      type: System.UInt64
      description: The unique identifier for the user.
    - id: guildId
      type: System.UInt64
      description: The unique identifier for the guild.
    - id: type
      type: Mewdeko.Database.Models.XpNotificationLocation
      description: The notification location type, determining where the user will be notified about leveling up.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function ChangeNotificationType(userId As ULong, guildId As ULong, type As XpNotificationLocation) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType*
  nameWithType.vb: XpService.ChangeNotificationType(ULong, ULong, XpNotificationLocation)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(ULong, ULong, Mewdeko.Database.Models.XpNotificationLocation)
  name.vb: ChangeNotificationType(ULong, ULong, XpNotificationLocation)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(System.UInt64,System.UInt64)
  id: GetNotificationType(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetNotificationType(ulong, ulong)
  nameWithType: XpService.GetNotificationType(ulong, ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetNotificationType
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 383
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Gets the notification type for when a user levels up in a specified guild.
  example: []
  syntax:
    content: public Task<XpNotificationLocation> GetNotificationType(ulong userId, ulong guildId)
    parameters:
    - id: userId
      type: System.UInt64
      description: The unique identifier for the user.
    - id: guildId
      type: System.UInt64
      description: The unique identifier for the guild.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.XpNotificationLocation}
      description: A task that represents the asynchronous operation. The task result contains the notification location type.
    content.vb: Public Function GetNotificationType(userId As ULong, guildId As ULong) As Task(Of XpNotificationLocation)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType*
  nameWithType.vb: XpService.GetNotificationType(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(ULong, ULong)
  name.vb: GetNotificationType(ULong, ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(Discord.IUser)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(Discord.IUser)
  id: GetNotificationType(Discord.IUser)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetNotificationType(IUser)
  nameWithType: XpService.GetNotificationType(IUser)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetNotificationType
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 395
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Gets the global notification type for when the specified user levels up.
  example: []
  syntax:
    content: public Task<XpNotificationLocation> GetNotificationType(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user whose notification type is to be retrieved.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.XpNotificationLocation}
      description: A task that represents the asynchronous operation. The task result contains the notification location type.
    content.vb: Public Function GetNotificationType(user As IUser) As Task(Of XpNotificationLocation)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType*
- uid: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(Discord.IUser,Mewdeko.Database.Models.XpNotificationLocation)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(Discord.IUser,Mewdeko.Database.Models.XpNotificationLocation)
  id: ChangeNotificationType(Discord.IUser,Mewdeko.Database.Models.XpNotificationLocation)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ChangeNotificationType(IUser, XpNotificationLocation)
  nameWithType: XpService.ChangeNotificationType(IUser, XpNotificationLocation)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType(Discord.IUser, Mewdeko.Database.Models.XpNotificationLocation)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ChangeNotificationType
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 407
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Changes the global notification type for when the specified user levels up.
  example: []
  syntax:
    content: public Task ChangeNotificationType(IUser user, XpNotificationLocation type)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user for whom to change the notification type.
    - id: type
      type: Mewdeko.Database.Models.XpNotificationLocation
      description: The notification location type, determining where the user will be notified about leveling up globally.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function ChangeNotificationType(user As IUser, type As XpNotificationLocation) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType*
- uid: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout(System.UInt64)
  id: GetXpTimeout(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetXpTimeout(ulong)
  nameWithType: XpService.GetXpTimeout(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetXpTimeout
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 506
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves the text XP timeout for a specified guild.
  example: []
  syntax:
    content: public int GetXpTimeout(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Int32
      description: The text XP timeout in minutes.
    content.vb: Public Function GetXpTimeout(id As ULong) As Integer
  overload: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout*
  nameWithType.vb: XpService.GetXpTimeout(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout(ULong)
  name.vb: GetXpTimeout(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate(System.UInt64)
  id: GetTxtXpRate(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetTxtXpRate(ulong)
  nameWithType: XpService.GetTxtXpRate(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetTxtXpRate
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 517
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves the text XP rate for messages sent in a specified guild.
  example: []
  syntax:
    content: public int GetTxtXpRate(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Int32
      description: The XP amount awarded for text messages.
    content.vb: Public Function GetTxtXpRate(id As ULong) As Integer
  overload: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate*
  nameWithType.vb: XpService.GetTxtXpRate(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate(ULong)
  name.vb: GetTxtXpRate(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate(System.UInt64)
  id: GetVoiceXpRate(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetVoiceXpRate(ulong)
  nameWithType: XpService.GetVoiceXpRate(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVoiceXpRate
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 528
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves the voice XP rate for voice channel participation in a specified guild.
  example: []
  syntax:
    content: public double GetVoiceXpRate(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Double
      description: The XP rate per minute for voice channel participation.
    content.vb: Public Function GetVoiceXpRate(id As ULong) As Double
  overload: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate*
  nameWithType.vb: XpService.GetVoiceXpRate(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate(ULong)
  name.vb: GetVoiceXpRate(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout(System.UInt64)
  id: GetVoiceXpTimeout(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetVoiceXpTimeout(ulong)
  nameWithType: XpService.GetVoiceXpTimeout(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetVoiceXpTimeout
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 539
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves the voice XP timeout for a specified guild.
  example: []
  syntax:
    content: public int GetVoiceXpTimeout(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Int32
      description: The voice XP timeout in minutes.
    content.vb: Public Function GetVoiceXpTimeout(id As ULong) As Integer
  overload: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout*
  nameWithType.vb: XpService.GetVoiceXpTimeout(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout(ULong)
  name.vb: GetVoiceXpTimeout(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly(Discord.IGuildUser,Discord.IMessageChannel,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly(Discord.IGuildUser,Discord.IMessageChannel,System.Int32)
  id: AddXpDirectly(Discord.IGuildUser,Discord.IMessageChannel,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: AddXpDirectly(IGuildUser, IMessageChannel, int)
  nameWithType: XpService.AddXpDirectly(IGuildUser, IMessageChannel, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly(Discord.IGuildUser, Discord.IMessageChannel, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddXpDirectly
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 613
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Adds XP directly to a user for their activity in a guild.
  remarks: The amount must be greater than 0. This method does not check whether the user should receive XP based on cooldowns or exclusions.
  example: []
  syntax:
    content: public void AddXpDirectly(IGuildUser user, IMessageChannel channel, int amount)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to whom XP will be added.
    - id: channel
      type: Discord.IMessageChannel
      description: The channel where the activity occurred.
    - id: amount
      type: System.Int32
      description: The amount of XP to add.
    content.vb: Public Sub AddXpDirectly(user As IGuildUser, channel As IMessageChannel, amount As Integer)
  overload: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly*
  nameWithType.vb: XpService.AddXpDirectly(IGuildUser, IMessageChannel, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly(Discord.IGuildUser, Discord.IMessageChannel, Integer)
  name.vb: AddXpDirectly(IGuildUser, IMessageChannel, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.AddXp(System.UInt64,System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.AddXp(System.UInt64,System.UInt64,System.Int32)
  id: AddXp(System.UInt64,System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: AddXp(ulong, ulong, int)
  nameWithType: XpService.AddXp(ulong, ulong, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.AddXp(ulong, ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddXp
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 630
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Adds XP to a user in a guild, considering awarded XP.
  example: []
  syntax:
    content: public Task AddXp(ulong userId, ulong guildId, int amount)
    parameters:
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: amount
      type: System.Int32
      description: The amount of XP to add.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function AddXp(userId As ULong, guildId As ULong, amount As Integer) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.AddXp*
  nameWithType.vb: XpService.AddXp(ULong, ULong, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.AddXp(ULong, ULong, Integer)
  name.vb: AddXp(ULong, ULong, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet(Discord.IGuild,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet(Discord.IGuild,System.Int32)
  id: XpTxtRateSet(Discord.IGuild,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpTxtRateSet(IGuild, int)
  nameWithType: XpService.XpTxtRateSet(IGuild, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet(Discord.IGuild, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpTxtRateSet
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 646
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets the XP rate for text messages in a guild.
  example: []
  syntax:
    content: public Task XpTxtRateSet(IGuild guild, int num)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild object.
    - id: num
      type: System.Int32
      description: The XP rate to be set.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function XpTxtRateSet(guild As IGuild, num As Integer) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet*
  nameWithType.vb: XpService.XpTxtRateSet(IGuild, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet(Discord.IGuild, Integer)
  name.vb: XpTxtRateSet(IGuild, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet(Discord.IGuild,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet(Discord.IGuild,System.Int32)
  id: XpTxtTimeoutSet(Discord.IGuild,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpTxtTimeoutSet(IGuild, int)
  nameWithType: XpService.XpTxtTimeoutSet(IGuild, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet(Discord.IGuild, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpTxtTimeoutSet
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 662
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets the XP timeout for text messages in a guild.
  example: []
  syntax:
    content: public Task XpTxtTimeoutSet(IGuild guild, int num)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild object.
    - id: num
      type: System.Int32
      description: The XP timeout to be set, in minutes.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function XpTxtTimeoutSet(guild As IGuild, num As Integer) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet*
  nameWithType.vb: XpService.XpTxtTimeoutSet(IGuild, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet(Discord.IGuild, Integer)
  name.vb: XpTxtTimeoutSet(IGuild, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet(Discord.IGuild,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet(Discord.IGuild,System.Int32)
  id: XpVoiceRateSet(Discord.IGuild,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpVoiceRateSet(IGuild, int)
  nameWithType: XpService.XpVoiceRateSet(IGuild, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet(Discord.IGuild, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpVoiceRateSet
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 678
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets the XP rate for voice channel participation in a guild.
  example: []
  syntax:
    content: public Task XpVoiceRateSet(IGuild guild, int num)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild object.
    - id: num
      type: System.Int32
      description: The XP rate to be set, per minute.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function XpVoiceRateSet(guild As IGuild, num As Integer) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet*
  nameWithType.vb: XpService.XpVoiceRateSet(IGuild, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet(Discord.IGuild, Integer)
  name.vb: XpVoiceRateSet(IGuild, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet(Discord.IGuild,System.Int32)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet(Discord.IGuild,System.Int32)
  id: XpVoiceTimeoutSet(Discord.IGuild,System.Int32)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpVoiceTimeoutSet(IGuild, int)
  nameWithType: XpService.XpVoiceTimeoutSet(IGuild, int)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet(Discord.IGuild, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpVoiceTimeoutSet
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 694
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets the XP timeout for voice channel participation in a guild.
  example: []
  syntax:
    content: public Task XpVoiceTimeoutSet(IGuild guild, int num)
    parameters:
    - id: guild
      type: Discord.IGuild
      description: The guild object.
    - id: num
      type: System.Int32
      description: The XP timeout to be set, in minutes.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function XpVoiceTimeoutSet(guild As IGuild, num As Integer) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet*
  nameWithType.vb: XpService.XpVoiceTimeoutSet(IGuild, Integer)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet(Discord.IGuild, Integer)
  name.vb: XpVoiceTimeoutSet(IGuild, Integer)
- uid: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded(System.UInt64)
  id: IsServerExcluded(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: IsServerExcluded(ulong)
  nameWithType: XpService.IsServerExcluded(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: IsServerExcluded
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 709
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Checks if a server is excluded from XP gain.
  example: []
  syntax:
    content: public bool IsServerExcluded(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Boolean
      description: <code>true</code> if the server is excluded; otherwise, <code>false</code>.
    content.vb: Public Function IsServerExcluded(id As ULong) As Boolean
  overload: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded*
  nameWithType.vb: XpService.IsServerExcluded(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded(ULong)
  name.vb: IsServerExcluded(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles(System.UInt64)
  id: GetExcludedRoles(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetExcludedRoles(ulong)
  nameWithType: XpService.GetExcludedRoles(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetExcludedRoles
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 716
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a collection of role IDs excluded from XP gain in a specified guild.
  example: []
  syntax:
    content: public IEnumerable<ulong> GetExcludedRoles(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: An enumerable of role IDs excluded from XP gain.
    content.vb: Public Function GetExcludedRoles(id As ULong) As IEnumerable(Of ULong)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles*
  nameWithType.vb: XpService.GetExcludedRoles(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles(ULong)
  name.vb: GetExcludedRoles(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels(System.UInt64)
  id: GetExcludedChannels(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetExcludedChannels(ulong)
  nameWithType: XpService.GetExcludedChannels(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetExcludedChannels
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 724
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves a collection of channel IDs excluded from XP gain in a specified guild.
  example: []
  syntax:
    content: public IEnumerable<ulong> GetExcludedChannels(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Collections.Generic.IEnumerable{System.UInt64}
      description: An enumerable of channel IDs excluded from XP gain.
    content.vb: Public Function GetExcludedChannels(id As ULong) As IEnumerable(Of ULong)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels*
  nameWithType.vb: XpService.GetExcludedChannels(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels(ULong)
  name.vb: GetExcludedChannels(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync(Discord.IGuildUser)
  id: GetUserStatsAsync(Discord.IGuildUser)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetUserStatsAsync(IGuildUser)
  nameWithType: XpService.GetUserStatsAsync(IGuildUser)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetUserStatsAsync
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 744
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves the full user statistics, including Discord user information, XP statistics, and guild ranking.
  remarks: This method aggregates data from various sources to provide a comprehensive view of a user's experience and progress within a guild.
  example: []
  syntax:
    content: public Task<FullUserStats> GetUserStatsAsync(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The guild user for whom statistics are being retrieved.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Modules.Xp.Common.FullUserStats}
      description: A task that represents the asynchronous operation. The task result contains the full user statistics.
    content.vb: Public Function GetUserStatsAsync(user As IGuildUser) As Task(Of FullUserStats)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync*
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer(System.UInt64)
  id: ToggleExcludeServer(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ToggleExcludeServer(ulong)
  nameWithType: XpService.ToggleExcludeServer(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleExcludeServer
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 770
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Toggles the exclusion of a server from XP gain.
  remarks: This method changes the server's exclusion status, which determines whether users in this server can gain XP.
  example: []
  syntax:
    content: public Task<bool> ToggleExcludeServer(ulong id)
    parameters:
    - id: id
      type: System.UInt64
      description: The unique identifier of the server.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the server is now excluded.
    content.vb: Public Function ToggleExcludeServer(id As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer*
  nameWithType.vb: XpService.ToggleExcludeServer(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer(ULong)
  name.vb: ToggleExcludeServer(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole(System.UInt64,System.UInt64)
  id: ToggleExcludeRole(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ToggleExcludeRole(ulong, ulong)
  nameWithType: XpService.ToggleExcludeRole(ulong, ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleExcludeRole
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 796
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Toggles the exclusion of a role from XP gain in a specified guild.
  remarks: Users with excluded roles will not gain XP in the specified guild.
  example: []
  syntax:
    content: public Task<bool> ToggleExcludeRole(ulong guildId, ulong rId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: rId
      type: System.UInt64
      description: The unique identifier of the role.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the role is now excluded.
    content.vb: Public Function ToggleExcludeRole(guildId As ULong, rId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole*
  nameWithType.vb: XpService.ToggleExcludeRole(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole(ULong, ULong)
  name.vb: ToggleExcludeRole(ULong, ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel(System.UInt64,System.UInt64)
  id: ToggleExcludeChannel(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ToggleExcludeChannel(ulong, ulong)
  nameWithType: XpService.ToggleExcludeChannel(ulong, ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleExcludeChannel
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 832
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Toggles the exclusion of a channel from XP gain in a specified guild.
  remarks: Messages sent in excluded channels will not contribute to XP gain.
  example: []
  syntax:
    content: public Task<bool> ToggleExcludeChannel(ulong guildId, ulong chId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: chId
      type: System.UInt64
      description: The unique identifier of the channel.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that represents the asynchronous operation. The task result indicates whether the channel is now excluded.
    content.vb: Public Function ToggleExcludeChannel(guildId As ULong, chId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel*
  nameWithType.vb: XpService.ToggleExcludeChannel(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel(ULong, ULong)
  name.vb: ToggleExcludeChannel(ULong, ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync(Discord.IGuildUser)
  id: GenerateXpImageAsync(Discord.IGuildUser)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GenerateXpImageAsync(IGuildUser)
  nameWithType: XpService.GenerateXpImageAsync(IGuildUser)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync(Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GenerateXpImageAsync
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 864
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Generates an XP image for a user based on their statistics and a specified template.
  remarks: This method creates a visual representation of the user's XP, levels, and other statistics.
  example: []
  syntax:
    content: public Task<Stream> GenerateXpImageAsync(IGuildUser user)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The guild user for whom the XP image is generated.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A task that represents the asynchronous operation. The task result contains the generated XP image as a stream.
    content.vb: Public Function GenerateXpImageAsync(user As IGuildUser) As Task(Of Stream)
  overload: Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync*
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTemplate(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.GetTemplate(System.UInt64)
  id: GetTemplate(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: GetTemplate(ulong)
  nameWithType: XpService.GetTemplate(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTemplate(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetTemplate
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 1094
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Retrieves or creates a default template for generating XP images in a specified guild.
  remarks: If no custom template is set for the guild, a default template is used.
  example: []
  syntax:
    content: public Task<Template> GetTemplate(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    return:
      type: System.Threading.Tasks.Task{Mewdeko.Database.Models.Template}
      description: A task that represents the asynchronous operation. The task result contains the template used for generating XP images.
    content.vb: Public Function GetTemplate(guildId As ULong) As Task(Of Template)
  overload: Mewdeko.Modules.Xp.Services.XpService.GetTemplate*
  nameWithType.vb: XpService.GetTemplate(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.GetTemplate(ULong)
  name.vb: GetTemplate(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64,System.UInt64)
  id: XpReset(System.UInt64,System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpReset(ulong, ulong)
  nameWithType: XpService.XpReset(ulong, ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpReset(ulong, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpReset
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 1133
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Resets the XP statistics for a specific user in a specific guild.
  remarks: This action cannot be undone. It clears all XP data for the specified user in the specified guild.
  example: []
  syntax:
    content: public void XpReset(ulong guildId, ulong userId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: userId
      type: System.UInt64
      description: The unique identifier of the user.
    content.vb: Public Sub XpReset(guildId As ULong, userId As ULong)
  overload: Mewdeko.Modules.Xp.Services.XpService.XpReset*
  nameWithType.vb: XpService.XpReset(ULong, ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpReset(ULong, ULong)
  name.vb: XpReset(ULong, ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.XpReset(System.UInt64)
  id: XpReset(System.UInt64)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: XpReset(ulong)
  nameWithType: XpService.XpReset(ulong)
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpReset(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XpReset
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 1147
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Resets the XP statistics for all users in a specific guild.
  remarks: This action cannot be undone. It clears all XP data for all users in the specified guild.
  example: []
  syntax:
    content: public void XpReset(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    content.vb: Public Sub XpReset(guildId As ULong)
  overload: Mewdeko.Modules.Xp.Services.XpService.XpReset*
  nameWithType.vb: XpService.XpReset(ULong)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.XpReset(ULong)
  name.vb: XpReset(ULong)
- uid: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl(System.UInt64,System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.SetImageUrl(System.UInt64,System.String)
  id: SetImageUrl(System.UInt64,System.String)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: SetImageUrl(ulong, string)
  nameWithType: XpService.SetImageUrl(ulong, string)
  fullName: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl(ulong, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetImageUrl
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 1169
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Sets a custom image URL for the XP image background in a specified guild.
  remarks: The specified image will be used as the background for generating XP images in the guild.
  example: []
  syntax:
    content: public Task SetImageUrl(ulong guildId, string imageUrl)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The unique identifier of the guild.
    - id: imageUrl
      type: System.String
      description: The URL of the image to be used as the background.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function SetImageUrl(guildId As ULong, imageUrl As String) As Task
  overload: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl*
  nameWithType.vb: XpService.SetImageUrl(ULong, String)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl(ULong, String)
  name.vb: SetImageUrl(ULong, String)
- uid: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl(System.String)
  commentId: M:Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl(System.String)
  id: ValidateImageUrl(System.String)
  parent: Mewdeko.Modules.Xp.Services.XpService
  langs:
  - csharp
  - vb
  name: ValidateImageUrl(string)
  nameWithType: XpService.ValidateImageUrl(string)
  fullName: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Xp/Services/XpService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ValidateImageUrl
    path: src/Mewdeko/Modules/Xp/Services/XpService.cs
    startLine: 1193
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Xp.Services
  summary: Validates a given image URL for use as a custom XP image background.
  remarks: This method checks the URL format, accessibility, and size constraints of the image.
  example: []
  syntax:
    content: public static Task<(string, bool)> ValidateImageUrl(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the image to be validated.
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Boolean}}
      description: A task that represents the asynchronous operation. The task result contains a tuple indicating the validation message and whether the URL is valid.
    content.vb: Public Shared Function ValidateImageUrl(url As String) As Task(Of (String, Boolean))
  overload: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl*
  nameWithType.vb: XpService.ValidateImageUrl(String)
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl(String)
  name.vb: ValidateImageUrl(String)
references:
- uid: Mewdeko.Modules.Xp.Services
  commentId: N:Mewdeko.Modules.Xp.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.Xp.Services
  nameWithType: Mewdeko.Modules.Xp.Services
  fullName: Mewdeko.Modules.Xp.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Xp
    name: Xp
    href: Mewdeko.Modules.Xp.html
  - name: .
  - uid: Mewdeko.Modules.Xp.Services
    name: Services
    href: Mewdeko.Modules.Xp.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: Mewdeko.Services.IUnloadableService
  commentId: T:Mewdeko.Services.IUnloadableService
  parent: Mewdeko.Services
  href: Mewdeko.Services.IUnloadableService.html
  name: IUnloadableService
  nameWithType: IUnloadableService
  fullName: Mewdeko.Services.IUnloadableService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<XpService>(XpService, string)
  nameWithType: Extensions.ThrowIfNull<XpService>(XpService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Xp.Services.XpService>(Mewdeko.Modules.Xp.Services.XpService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of XpService)(XpService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Xp.Services.XpService)(Mewdeko.Modules.Xp.Services.XpService, String)
  name.vb: ThrowIfNull(Of XpService)(XpService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Services.XpService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Xp.Services.XpService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Xp.Services.XpService
    name: XpService
    href: Mewdeko.Modules.Xp.Services.XpService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Xp.Services.XpService
  commentId: T:Mewdeko.Modules.Xp.Services.XpService
  href: Mewdeko.Modules.Xp.Services.XpService.html
  name: XpService
  nameWithType: XpService
  fullName: Mewdeko.Modules.Xp.Services.XpService
- uid: Mewdeko.Modules.Xp.Services.XpService.#ctor*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.#ctor
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService__ctor_Discord_WebSocket_DiscordSocketClient_Mewdeko_Services_CommandHandler_Mewdeko_Database_DbService_Mewdeko_Services_strings_IBotStrings_Mewdeko_Services_IDataCache_Mewdeko_Services_Impl_FontProvider_Mewdeko_Services_IBotCredentials_System_Net_Http_IHttpClientFactory_Mewdeko_Modules_Xp_Services_XpConfigService_Mewdeko_Mewdeko_Microsoft_Extensions_Caching_Memory_IMemoryCache_Mewdeko_Services_Impl_EventHandler_
  name: XpService
  nameWithType: XpService.XpService
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpService
  nameWithType.vb: XpService.New
  fullName.vb: Mewdeko.Modules.Xp.Services.XpService.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Services.CommandHandler
  commentId: T:Mewdeko.Services.CommandHandler
  parent: Mewdeko.Services
  href: Mewdeko.Services.CommandHandler.html
  name: CommandHandler
  nameWithType: CommandHandler
  fullName: Mewdeko.Services.CommandHandler
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.strings.IBotStrings
  commentId: T:Mewdeko.Services.strings.IBotStrings
  parent: Mewdeko.Services.strings
  href: Mewdeko.Services.strings.IBotStrings.html
  name: IBotStrings
  nameWithType: IBotStrings
  fullName: Mewdeko.Services.strings.IBotStrings
- uid: Mewdeko.Services.IDataCache
  commentId: T:Mewdeko.Services.IDataCache
  parent: Mewdeko.Services
  href: Mewdeko.Services.IDataCache.html
  name: IDataCache
  nameWithType: IDataCache
  fullName: Mewdeko.Services.IDataCache
- uid: Mewdeko.Services.Impl.FontProvider
  commentId: T:Mewdeko.Services.Impl.FontProvider
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.FontProvider.html
  name: FontProvider
  nameWithType: FontProvider
  fullName: Mewdeko.Services.Impl.FontProvider
- uid: Mewdeko.Services.IBotCredentials
  commentId: T:Mewdeko.Services.IBotCredentials
  parent: Mewdeko.Services
  href: Mewdeko.Services.IBotCredentials.html
  name: IBotCredentials
  nameWithType: IBotCredentials
  fullName: Mewdeko.Services.IBotCredentials
- uid: System.Net.Http.IHttpClientFactory
  commentId: T:System.Net.Http.IHttpClientFactory
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.ihttpclientfactory
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: System.Net.Http.IHttpClientFactory
- uid: Mewdeko.Modules.Xp.Services.XpConfigService
  commentId: T:Mewdeko.Modules.Xp.Services.XpConfigService
  parent: Mewdeko.Modules.Xp.Services
  href: Mewdeko.Modules.Xp.Services.XpConfigService.html
  name: XpConfigService
  nameWithType: XpConfigService
  fullName: Mewdeko.Modules.Xp.Services.XpConfigService
- uid: Mewdeko.Mewdeko
  commentId: T:Mewdeko.Mewdeko
  parent: Mewdeko
  href: Mewdeko.Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko.Mewdeko
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory.imemorycache
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.strings
  commentId: N:Mewdeko.Services.strings
  href: Mewdeko.html
  name: Mewdeko.Services.strings
  nameWithType: Mewdeko.Services.strings
  fullName: Mewdeko.Services.strings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Mewdeko
  commentId: N:Mewdeko
  href: Mewdeko.html
  name: Mewdeko
  nameWithType: Mewdeko
  fullName: Mewdeko
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Caching
    name: Caching
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching
  - name: .
  - uid: Microsoft.Extensions.Caching.Memory
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Caching
    name: Caching
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching
  - name: .
  - uid: Microsoft.Extensions.Caching.Memory
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory
- uid: Mewdeko.Modules.Xp.Services.XpService.Unload*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.Unload
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_Unload
  name: Unload
  nameWithType: XpService.Unload
  fullName: Mewdeko.Modules.Xp.Services.XpService.Unload
- uid: Mewdeko.Services.IUnloadableService.Unload
  commentId: M:Mewdeko.Services.IUnloadableService.Unload
  parent: Mewdeko.Services.IUnloadableService
  href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  name: Unload()
  nameWithType: IUnloadableService.Unload()
  fullName: Mewdeko.Services.IUnloadableService.Unload()
  spec.csharp:
  - uid: Mewdeko.Services.IUnloadableService.Unload
    name: Unload
    href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  - name: (
  - name: )
  spec.vb:
  - uid: Mewdeko.Services.IUnloadableService.Unload
    name: Unload
    href: Mewdeko.Services.IUnloadableService.html#Mewdeko_Services_IUnloadableService_Unload
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Database.Models.XpRoleReward
  commentId: T:Mewdeko.Database.Models.XpRoleReward
  href: Mewdeko.Database.Models.XpRoleReward.html
  name: XpRoleReward
  nameWithType: XpRoleReward
  fullName: Mewdeko.Database.Models.XpRoleReward
- uid: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetRoleRewards_System_UInt64_
  name: GetRoleRewards
  nameWithType: XpService.GetRoleRewards
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetRoleRewards
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.XpRoleReward}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Mewdeko.Database.Models.XpRoleReward}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<XpRoleReward>>
  nameWithType: Task<IEnumerable<XpRoleReward>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Mewdeko.Database.Models.XpRoleReward>>
  nameWithType.vb: Task(Of IEnumerable(Of XpRoleReward))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Mewdeko.Database.Models.XpRoleReward))
  name.vb: Task(Of IEnumerable(Of XpRoleReward))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Mewdeko.Database.Models.XpRoleReward
    name: XpRoleReward
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.XpRoleReward
    name: XpRoleReward
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.SetRoleReward
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_SetRoleReward_System_UInt64_System_Int32_System_Nullable_System_UInt64__
  name: SetRoleReward
  nameWithType: XpService.SetRoleReward
  fullName: Mewdeko.Modules.Xp.Services.XpService.SetRoleReward
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong?
  nameWithType: ulong?
  fullName: ulong?
  nameWithType.vb: ULong?
  fullName.vb: ULong?
  name.vb: ULong?
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Mewdeko.Database.Models.UserXpStats
  commentId: T:Mewdeko.Database.Models.UserXpStats
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.UserXpStats.html
  name: UserXpStats
  nameWithType: UserXpStats
  fullName: Mewdeko.Database.Models.UserXpStats
- uid: Mewdeko.Modules.Xp.Services.XpService.GetUserXps*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetUserXps
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetUserXps_System_UInt64_System_Int32_
  name: GetUserXps
  nameWithType: XpService.GetUserXps
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetUserXps
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserXpStats}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Mewdeko.Database.Models.UserXpStats}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<UserXpStats>>
  nameWithType: Task<List<UserXpStats>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Mewdeko.Database.Models.UserXpStats>>
  nameWithType.vb: Task(Of List(Of UserXpStats))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Mewdeko.Database.Models.UserXpStats))
  name.vb: Task(Of List(Of UserXpStats))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Mewdeko.Database.Models.UserXpStats
    name: UserXpStats
    href: Mewdeko.Database.Models.UserXpStats.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.UserXpStats
    name: UserXpStats
    href: Mewdeko.Database.Models.UserXpStats.html
  - name: )
  - name: )
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetTopUserXps_System_UInt64_
  name: GetTopUserXps
  nameWithType: XpService.GetTopUserXps
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTopUserXps
- uid: Mewdeko.Database.Models.DiscordUser
  commentId: T:Mewdeko.Database.Models.DiscordUser
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser
  nameWithType: DiscordUser
  fullName: Mewdeko.Database.Models.DiscordUser
- uid: Mewdeko.Database.Models.DiscordUser[]
  isExternal: true
  href: Mewdeko.Database.Models.DiscordUser.html
  name: DiscordUser[]
  nameWithType: DiscordUser[]
  fullName: Mewdeko.Database.Models.DiscordUser[]
  nameWithType.vb: DiscordUser()
  fullName.vb: Mewdeko.Database.Models.DiscordUser()
  name.vb: DiscordUser()
  spec.csharp:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Mewdeko.Database.Models.DiscordUser
    name: DiscordUser
    href: Mewdeko.Database.Models.DiscordUser.html
  - name: (
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_ChangeNotificationType_System_UInt64_System_UInt64_Mewdeko_Database_Models_XpNotificationLocation_
  name: ChangeNotificationType
  nameWithType: XpService.ChangeNotificationType
  fullName: Mewdeko.Modules.Xp.Services.XpService.ChangeNotificationType
- uid: Mewdeko.Database.Models.XpNotificationLocation
  commentId: T:Mewdeko.Database.Models.XpNotificationLocation
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.XpNotificationLocation.html
  name: XpNotificationLocation
  nameWithType: XpNotificationLocation
  fullName: Mewdeko.Database.Models.XpNotificationLocation
- uid: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetNotificationType
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetNotificationType_System_UInt64_System_UInt64_
  name: GetNotificationType
  nameWithType: XpService.GetNotificationType
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetNotificationType
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.XpNotificationLocation}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.XpNotificationLocation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<XpNotificationLocation>
  nameWithType: Task<XpNotificationLocation>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.XpNotificationLocation>
  nameWithType.vb: Task(Of XpNotificationLocation)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.XpNotificationLocation)
  name.vb: Task(Of XpNotificationLocation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.XpNotificationLocation
    name: XpNotificationLocation
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.XpNotificationLocation
    name: XpNotificationLocation
  - name: )
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  isExternal: true
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetXpTimeout_System_UInt64_
  name: GetXpTimeout
  nameWithType: XpService.GetXpTimeout
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetXpTimeout
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetTxtXpRate_System_UInt64_
  name: GetTxtXpRate
  nameWithType: XpService.GetTxtXpRate
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTxtXpRate
- uid: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetVoiceXpRate_System_UInt64_
  name: GetVoiceXpRate
  nameWithType: XpService.GetVoiceXpRate
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpRate
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetVoiceXpTimeout_System_UInt64_
  name: GetVoiceXpTimeout
  nameWithType: XpService.GetVoiceXpTimeout
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetVoiceXpTimeout
- uid: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_AddXpDirectly_Discord_IGuildUser_Discord_IMessageChannel_System_Int32_
  name: AddXpDirectly
  nameWithType: XpService.AddXpDirectly
  fullName: Mewdeko.Modules.Xp.Services.XpService.AddXpDirectly
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  isExternal: true
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Mewdeko.Modules.Xp.Services.XpService.AddXp*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.AddXp
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_AddXp_System_UInt64_System_UInt64_System_Int32_
  name: AddXp
  nameWithType: XpService.AddXp
  fullName: Mewdeko.Modules.Xp.Services.XpService.AddXp
- uid: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_XpTxtRateSet_Discord_IGuild_System_Int32_
  name: XpTxtRateSet
  nameWithType: XpService.XpTxtRateSet
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpTxtRateSet
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_XpTxtTimeoutSet_Discord_IGuild_System_Int32_
  name: XpTxtTimeoutSet
  nameWithType: XpService.XpTxtTimeoutSet
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpTxtTimeoutSet
- uid: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_XpVoiceRateSet_Discord_IGuild_System_Int32_
  name: XpVoiceRateSet
  nameWithType: XpService.XpVoiceRateSet
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpVoiceRateSet
- uid: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_XpVoiceTimeoutSet_Discord_IGuild_System_Int32_
  name: XpVoiceTimeoutSet
  nameWithType: XpService.XpVoiceTimeoutSet
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpVoiceTimeoutSet
- uid: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_IsServerExcluded_System_UInt64_
  name: IsServerExcluded
  nameWithType: XpService.IsServerExcluded
  fullName: Mewdeko.Modules.Xp.Services.XpService.IsServerExcluded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetExcludedRoles_System_UInt64_
  name: GetExcludedRoles
  nameWithType: XpService.GetExcludedRoles
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetExcludedRoles
- uid: System.Collections.Generic.IEnumerable{System.UInt64}
  commentId: T:System.Collections.Generic.IEnumerable{System.UInt64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ulong>
  nameWithType: IEnumerable<ulong>
  fullName: System.Collections.Generic.IEnumerable<ulong>
  nameWithType.vb: IEnumerable(Of ULong)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ULong)
  name.vb: IEnumerable(Of ULong)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetExcludedChannels_System_UInt64_
  name: GetExcludedChannels
  nameWithType: XpService.GetExcludedChannels
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetExcludedChannels
- uid: Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetUserStatsAsync_Discord_IGuildUser_
  name: GetUserStatsAsync
  nameWithType: XpService.GetUserStatsAsync
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetUserStatsAsync
- uid: System.Threading.Tasks.Task{Mewdeko.Modules.Xp.Common.FullUserStats}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Modules.Xp.Common.FullUserStats}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FullUserStats>
  nameWithType: Task<FullUserStats>
  fullName: System.Threading.Tasks.Task<Mewdeko.Modules.Xp.Common.FullUserStats>
  nameWithType.vb: Task(Of FullUserStats)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Modules.Xp.Common.FullUserStats)
  name.vb: Task(Of FullUserStats)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Modules.Xp.Common.FullUserStats
    name: FullUserStats
    href: Mewdeko.Modules.Xp.Common.FullUserStats.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Xp.Common.FullUserStats
    name: FullUserStats
    href: Mewdeko.Modules.Xp.Common.FullUserStats.html
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_ToggleExcludeServer_System_UInt64_
  name: ToggleExcludeServer
  nameWithType: XpService.ToggleExcludeServer
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeServer
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_ToggleExcludeRole_System_UInt64_System_UInt64_
  name: ToggleExcludeRole
  nameWithType: XpService.ToggleExcludeRole
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeRole
- uid: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_ToggleExcludeChannel_System_UInt64_System_UInt64_
  name: ToggleExcludeChannel
  nameWithType: XpService.ToggleExcludeChannel
  fullName: Mewdeko.Modules.Xp.Services.XpService.ToggleExcludeChannel
- uid: Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GenerateXpImageAsync_Discord_IGuildUser_
  name: GenerateXpImageAsync
  nameWithType: XpService.GenerateXpImageAsync
  fullName: Mewdeko.Modules.Xp.Services.XpService.GenerateXpImageAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.GetTemplate*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.GetTemplate
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_GetTemplate_System_UInt64_
  name: GetTemplate
  nameWithType: XpService.GetTemplate
  fullName: Mewdeko.Modules.Xp.Services.XpService.GetTemplate
- uid: System.Threading.Tasks.Task{Mewdeko.Database.Models.Template}
  commentId: T:System.Threading.Tasks.Task{Mewdeko.Database.Models.Template}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Template>
  nameWithType: Task<Template>
  fullName: System.Threading.Tasks.Task<Mewdeko.Database.Models.Template>
  nameWithType.vb: Task(Of Template)
  fullName.vb: System.Threading.Tasks.Task(Of Mewdeko.Database.Models.Template)
  name.vb: Task(Of Template)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Mewdeko.Database.Models.Template
    name: Template
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.Template
    name: Template
  - name: )
- uid: Mewdeko.Modules.Xp.Services.XpService.XpReset*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.XpReset
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_XpReset_System_UInt64_System_UInt64_
  name: XpReset
  nameWithType: XpService.XpReset
  fullName: Mewdeko.Modules.Xp.Services.XpService.XpReset
- uid: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.SetImageUrl
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_SetImageUrl_System_UInt64_System_String_
  name: SetImageUrl
  nameWithType: XpService.SetImageUrl
  fullName: Mewdeko.Modules.Xp.Services.XpService.SetImageUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl*
  commentId: Overload:Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl
  href: Mewdeko.Modules.Xp.Services.XpService.html#Mewdeko_Modules_Xp_Services_XpService_ValidateImageUrl_System_String_
  name: ValidateImageUrl
  nameWithType: XpService.ValidateImageUrl
  fullName: Mewdeko.Modules.Xp.Services.XpService.ValidateImageUrl
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(string, bool)>
  nameWithType: Task<(string, bool)>
  fullName: System.Threading.Tasks.Task<(string, bool)>
  nameWithType.vb: Task(Of (String, Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of (String, Boolean))
  name.vb: Task(Of (String, Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
