### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  commentId: T:Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  id: Administration.ServerGreetCommands
  parent: Mewdeko.Modules.Administration
  children:
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor(System.Net.Http.IHttpClientFactory,Mewdeko.Services.GuildSettingsService)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel(System.Int32)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg(System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest(Discord.IGuildUser)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel(System.Int32)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg(System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest(Discord.IGuildUser)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel(System.Int32)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg(System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest(Discord.IGuildUser)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(Discord.ITextChannel,System.String,System.String,System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg(System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest(Discord.IGuildUser)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(Discord.ITextChannel,System.String,System.String,System.String)
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(System.String)
  langs:
  - csharp
  - vb
  name: Administration.ServerGreetCommands
  nameWithType: Administration.ServerGreetCommands
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ServerGreetCommands
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 13
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Handles the greet and bye messages as well as boost settings bfor the server.
  example: []
  syntax:
    content: >-
      [Group]

      public class Administration.ServerGreetCommands : MewdekoSubmodule<GreetSettingsService>, IModuleBase
    content.vb: >-
      <Group>

      Public Class Administration.ServerGreetCommands Inherits MewdekoSubmodule(Of GreetSettingsService) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}
  - Mewdeko.Common.MewdekoSubmodule{Mewdeko.Services.GreetSettingsService}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  attributes:
  - type: Discord.Commands.GroupAttribute
    ctor: Discord.Commands.GroupAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor(System.Net.Http.IHttpClientFactory,Mewdeko.Services.GuildSettingsService)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor(System.Net.Http.IHttpClientFactory,Mewdeko.Services.GuildSettingsService)
  id: '#ctor(System.Net.Http.IHttpClientFactory,Mewdeko.Services.GuildSettingsService)'
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: ServerGreetCommands(IHttpClientFactory, GuildSettingsService)
  nameWithType: Administration.ServerGreetCommands.ServerGreetCommands(IHttpClientFactory, GuildSettingsService)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ServerGreetCommands(System.Net.Http.IHttpClientFactory, Mewdeko.Services.GuildSettingsService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 13
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Handles the greet and bye messages as well as boost settings bfor the server.
  example: []
  syntax:
    content: public ServerGreetCommands(IHttpClientFactory fact, GuildSettingsService guildSettings)
    parameters:
    - id: fact
      type: System.Net.Http.IHttpClientFactory
      description: Client factory to avoid calling httpclient every time
    - id: guildSettings
      type: Mewdeko.Services.GuildSettingsService
      description: The guild setting service
    content.vb: Public Sub New(fact As IHttpClientFactory, guildSettings As GuildSettingsService)
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor*
  nameWithType.vb: Administration.ServerGreetCommands.New(IHttpClientFactory, GuildSettingsService)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.New(System.Net.Http.IHttpClientFactory, Mewdeko.Services.GuildSettingsService)
  name.vb: New(IHttpClientFactory, GuildSettingsService)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel(System.Int32)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel(System.Int32)
  id: GreetDel(System.Int32)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetDel(int)
  nameWithType: Administration.ServerGreetCommands.GreetDel(int)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetDel
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 25
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the timer for deleting greeting messages.
  remarks: This command allows users to set the timer for deleting greeting messages.
  example: []
  syntax:
    content: >-
      [Cmd("GreetDel")]

      [Aliases("GreetDel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetDel(int timer = 30)
    parameters:
    - id: timer
      type: System.Int32
      description: The timer in seconds. Must be between 0 and 600.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetDel")>

      <Aliases("GreetDel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetDel(timer As Integer = 30) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.GreetDel(Integer)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel(Integer)
  name.vb: GreetDel(Integer)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg
  id: BoostMsg
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: BoostMsg()
  nameWithType: Administration.ServerGreetCommands.BoostMsg()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BoostMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 46
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Displays the current boost message.
  remarks: This command allows users to view the current boost message.
  example: []
  syntax:
    content: >-
      [Cmd("BoostMsg")]

      [Aliases("BoostMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task BoostMsg()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("BoostMsg")>

      <Aliases("BoostMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function BoostMsg() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost
  id: Boost
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: Boost()
  nameWithType: Administration.ServerGreetCommands.Boost()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Boost
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 60
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Enables or disables boost messages.
  remarks: This command allows users to enable or disable boost messages.
  example: []
  syntax:
    content: >-
      [Cmd("Boost")]

      [Aliases("Boost")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task Boost()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Boost")>

      <Aliases("Boost")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function Boost() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Boost
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Boost
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel(System.Int32)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel(System.Int32)
  id: BoostDel(System.Int32)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: BoostDel(int)
  nameWithType: Administration.ServerGreetCommands.BoostDel(int)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BoostDel
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 79
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the timer for deleting boost messages.
  remarks: This command allows users to set the timer for deleting boost messages.
  example: []
  syntax:
    content: >-
      [Cmd("BoostDel")]

      [Aliases("BoostDel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task BoostDel(int timer = 30)
    parameters:
    - id: timer
      type: System.Int32
      description: The timer in seconds. Must be between 0 and 600.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("BoostDel")>

      <Aliases("BoostDel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function BoostDel(timer As Integer = 30) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostDel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostDel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.BoostDel(Integer)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel(Integer)
  name.vb: BoostDel(Integer)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg(System.String)
  id: BoostMsg(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: BoostMsg(string?)
  nameWithType: Administration.ServerGreetCommands.BoostMsg(string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BoostMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 105
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the boost message for the server.
  remarks: This command allows users to set the boost message for the server.
  example: []
  syntax:
    content: >-
      [Cmd("BoostMsg")]

      [Aliases("BoostMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task BoostMsg(string? text)
    parameters:
    - id: text
      type: System.String
      description: The new boost message.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("BoostMsg")>

      <Aliases("BoostMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function BoostMsg(text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.BoostMsg(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg(String)
  name.vb: BoostMsg(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet
  id: Greet
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: Greet()
  nameWithType: Administration.ServerGreetCommands.Greet()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Greet
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 129
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Toggles greeting messages for the server.
  remarks: This command allows users to toggle greeting messages for the server.
  example: []
  syntax:
    content: >-
      [Cmd("Greet")]

      [Aliases("Greet")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task Greet()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Greet")>

      <Aliases("Greet")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function Greet() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Greet
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Greet
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(Discord.ITextChannel,System.String,System.String,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(Discord.ITextChannel,System.String,System.String,System.String)
  id: GreetHook(Discord.ITextChannel,System.String,System.String,System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetHook(ITextChannel?, string?, string?, string?)
  nameWithType: Administration.ServerGreetCommands.GreetHook(ITextChannel?, string?, string?, string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(Discord.ITextChannel?, string?, string?, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetHook
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 152
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets up a webhook for greeting messages with an optional image.
  remarks: This command allows users to set up a webhook for greeting messages with an optional image.
  example: []
  syntax:
    content: >-
      [Cmd("GreetHook")]

      [Aliases("GreetHook")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetHook(ITextChannel? chan, string? name, string? image = null, string? text = null)
    parameters:
    - id: chan
      type: Discord.ITextChannel
      description: The text channel to set up the webhook in.
    - id: name
      type: System.String
      description: The name of the webhook.
    - id: image
      type: System.String
      description: The URL of the image to include in the webhook message.
    - id: text
      type: System.String
      description: The text to include in the webhook message.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetHook")>

      <Aliases("GreetHook")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetHook(chan As ITextChannel, name As String, image As String = Nothing, text As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetHook
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetHook
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.GreetHook(ITextChannel, String, String, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(Discord.ITextChannel, String, String, String)
  name.vb: GreetHook(ITextChannel, String, String, String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(Discord.ITextChannel,System.String,System.String,System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(Discord.ITextChannel,System.String,System.String,System.String)
  id: LeaveHook(Discord.ITextChannel,System.String,System.String,System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: LeaveHook(ITextChannel?, string?, string?, string?)
  nameWithType: Administration.ServerGreetCommands.LeaveHook(ITextChannel?, string?, string?, string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(Discord.ITextChannel?, string?, string?, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LeaveHook
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 205
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets up a webhook for leave messages with an optional image.
  remarks: This command allows users to set up a webhook for leave messages with an optional image.
  example: []
  syntax:
    content: >-
      [Cmd("LeaveHook")]

      [Aliases("LeaveHook")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task LeaveHook(ITextChannel? chan, string? name, string? image = null, string? text = null)
    parameters:
    - id: chan
      type: Discord.ITextChannel
      description: The text channel to set up the webhook in.
    - id: name
      type: System.String
      description: The name of the webhook.
    - id: image
      type: System.String
      description: The URL of the image to include in the webhook message.
    - id: text
      type: System.String
      description: The text to include in the webhook message.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("LeaveHook")>

      <Aliases("LeaveHook")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function LeaveHook(chan As ITextChannel, name As String, image As String = Nothing, text As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: LeaveHook
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: LeaveHook
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.LeaveHook(ITextChannel, String, String, String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(Discord.ITextChannel, String, String, String)
  name.vb: LeaveHook(ITextChannel, String, String, String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(System.String)
  id: GreetHook(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetHook(string)
  nameWithType: Administration.ServerGreetCommands.GreetHook(string)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetHook
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 243
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets up a greeting message using the specified text.
  remarks: This command allows users to set up a greeting message using the specified text.
  example: []
  syntax:
    content: >-
      [Cmd("GreetHook")]

      [Aliases("GreetHook")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetHook(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to include in the greeting message.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetHook")>

      <Aliases("GreetHook")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetHook(text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetHook
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetHook
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.GreetHook(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook(String)
  name.vb: GreetHook(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(System.String)
  id: LeaveHook(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: LeaveHook(string)
  nameWithType: Administration.ServerGreetCommands.LeaveHook(string)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LeaveHook
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 254
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets up a leave message using the specified text.
  remarks: This command allows users to set up a leave message using the specified text.
  example: []
  syntax:
    content: >-
      [Cmd("LeaveHook")]

      [Aliases("LeaveHook")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task LeaveHook(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to include in the leave message.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("LeaveHook")>

      <Aliases("LeaveHook")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function LeaveHook(text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: LeaveHook
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: LeaveHook
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.LeaveHook(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook(String)
  name.vb: LeaveHook(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg
  id: GreetMsg
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetMsg()
  nameWithType: Administration.ServerGreetCommands.GreetMsg()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 264
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Displays the current greeting message.
  remarks: This command displays the current greeting message set for the guild.
  example: []
  syntax:
    content: >-
      [Cmd("GreetMsg")]

      [Aliases("GreetMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetMsg()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetMsg")>

      <Aliases("GreetMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetMsg() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg(System.String)
  id: GreetMsg(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetMsg(string?)
  nameWithType: Administration.ServerGreetCommands.GreetMsg(string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 279
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the greeting message to the specified text.
  remarks: This command allows users to set the greeting message to the specified text.
  example: []
  syntax:
    content: >-
      [Cmd("GreetMsg")]

      [Aliases("GreetMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetMsg(string? text)
    parameters:
    - id: text
      type: System.String
      description: The text to set as the greeting message.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetMsg")>

      <Aliases("GreetMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetMsg(text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.GreetMsg(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg(String)
  name.vb: GreetMsg(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm
  id: GreetDm
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetDm()
  nameWithType: Administration.ServerGreetCommands.GreetDm()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetDm
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 304
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Toggles the sending of greeting messages via direct message.
  remarks: This command allows users to toggle the sending of greeting messages via direct message.
  example: []
  syntax:
    content: >-
      [Cmd("GreetDm")]

      [Aliases("GreetDm")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetDm()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetDm")>

      <Aliases("GreetDm")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetDm() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDm
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDm
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg
  id: GreetDmMsg
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetDmMsg()
  nameWithType: Administration.ServerGreetCommands.GreetDmMsg()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetDmMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 329
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Displays the current direct message greeting message.
  remarks: This command displays the current direct message greeting message set for the guild.
  example: []
  syntax:
    content: >-
      [Cmd("GreetDmMsg")]

      [Aliases("GreetDmMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetDmMsg()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetDmMsg")>

      <Aliases("GreetDmMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetDmMsg() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg(System.String)
  id: GreetDmMsg(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetDmMsg(string?)
  nameWithType: Administration.ServerGreetCommands.GreetDmMsg(string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetDmMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 344
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the direct message greeting message to the specified text.
  remarks: This command allows users to set the direct message greeting message to the specified text.
  example: []
  syntax:
    content: >-
      [Cmd("GreetDmMsg")]

      [Aliases("GreetDmMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task GreetDmMsg(string? text = null)
    parameters:
    - id: text
      type: System.String
      description: The text to set as the direct message greeting message.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetDmMsg")>

      <Aliases("GreetDmMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function GreetDmMsg(text As String = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.GreetDmMsg(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg(String)
  name.vb: GreetDmMsg(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye
  id: Bye
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: Bye()
  nameWithType: Administration.ServerGreetCommands.Bye()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Bye
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 368
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Toggles the sending of a bye message.
  remarks: This command allows users to toggle the sending of a bye message.
  example: []
  syntax:
    content: >-
      [Cmd("Bye")]

      [Aliases("Bye")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task Bye()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("Bye")>

      <Aliases("Bye")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function Bye() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bye
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bye
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg
  id: ByeMsg
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: ByeMsg()
  nameWithType: Administration.ServerGreetCommands.ByeMsg()
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ByeMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 386
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Displays the current bye message.
  remarks: This command displays the current bye message set for the guild.
  example: []
  syntax:
    content: >-
      [Cmd("ByeMsg")]

      [Aliases("ByeMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task ByeMsg()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("ByeMsg")>

      <Aliases("ByeMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function ByeMsg() As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg(System.String)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg(System.String)
  id: ByeMsg(System.String)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: ByeMsg(string?)
  nameWithType: Administration.ServerGreetCommands.ByeMsg(string?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ByeMsg
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 401
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the bye message to the specified text.
  remarks: This command allows users to set the bye message to the specified text.
  example: []
  syntax:
    content: >-
      [Cmd("ByeMsg")]

      [Aliases("ByeMsg")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task ByeMsg(string? text)
    parameters:
    - id: text
      type: System.String
      description: The text to set as the bye message.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("ByeMsg")>

      <Aliases("ByeMsg")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function ByeMsg(text As String) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeMsg
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeMsg
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.ByeMsg(String)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg(String)
  name.vb: ByeMsg(String)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel(System.Int32)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel(System.Int32)
  id: ByeDel(System.Int32)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: ByeDel(int)
  nameWithType: Administration.ServerGreetCommands.ByeDel(int)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ByeDel
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 426
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sets the timer for deleting bye messages.
  remarks: This command allows users to set the timer for deleting bye messages.
  example: []
  syntax:
    content: >-
      [Cmd("ByeDel")]

      [Aliases("ByeDel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      public Task ByeDel(int timer = 30)
    parameters:
    - id: timer
      type: System.Int32
      description: The timer duration in seconds.
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("ByeDel")>

      <Aliases("ByeDel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      Public Function ByeDel(timer As Integer = 30) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeDel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeDel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  nameWithType.vb: Administration.ServerGreetCommands.ByeDel(Integer)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel(Integer)
  name.vb: ByeDel(Integer)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest(Discord.IGuildUser)
  id: ByeTest(Discord.IGuildUser)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: ByeTest(IGuildUser?)
  nameWithType: Administration.ServerGreetCommands.ByeTest(IGuildUser?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ByeTest
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 445
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sends a test bye message.
  remarks: This command allows users to send a test bye message.
  example: []
  syntax:
    content: >-
      [Cmd("ByeTest")]

      [Aliases("ByeTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      [Ratelimit(5)]

      public Task ByeTest(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to send the test bye message to.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("ByeTest")>

      <Aliases("ByeTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      <Ratelimit(5)>

      Public Function ByeTest(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ByeTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  nameWithType.vb: Administration.ServerGreetCommands.ByeTest(IGuildUser)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest(Discord.IGuildUser)
  name.vb: ByeTest(IGuildUser)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest(Discord.IGuildUser)
  id: BoostTest(Discord.IGuildUser)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: BoostTest(IGuildUser?)
  nameWithType: Administration.ServerGreetCommands.BoostTest(IGuildUser?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: BoostTest
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 466
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sends a test message for boosting.
  remarks: This command allows users to send a test message for boosting.
  example: []
  syntax:
    content: >-
      [Cmd("BoostTest")]

      [Aliases("BoostTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      [Ratelimit(5)]

      public Task BoostTest(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to send the test message to.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("BoostTest")>

      <Aliases("BoostTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      <Ratelimit(5)>

      Public Function BoostTest(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BoostTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  nameWithType.vb: Administration.ServerGreetCommands.BoostTest(IGuildUser)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest(Discord.IGuildUser)
  name.vb: BoostTest(IGuildUser)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest(Discord.IGuildUser)
  id: GreetTest(Discord.IGuildUser)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetTest(IGuildUser?)
  nameWithType: Administration.ServerGreetCommands.GreetTest(IGuildUser?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetTest
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 485
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sends a test greet message.
  remarks: This command allows users to send a test greet message.
  example: []
  syntax:
    content: >-
      [Cmd("GreetTest")]

      [Aliases("GreetTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      [Ratelimit(5)]

      public Task GreetTest(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to send the test greet message to.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetTest")>

      <Aliases("GreetTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      <Ratelimit(5)>

      Public Function GreetTest(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  nameWithType.vb: Administration.ServerGreetCommands.GreetTest(IGuildUser)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest(Discord.IGuildUser)
  name.vb: GreetTest(IGuildUser)
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest(Discord.IGuildUser)
  id: GreetDmTest(Discord.IGuildUser)
  parent: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
  langs:
  - csharp
  - vb
  name: GreetDmTest(IGuildUser?)
  nameWithType: Administration.ServerGreetCommands.GreetDmTest(IGuildUser?)
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GreetDmTest
    path: src/Mewdeko/Modules/Administration/ServerGreetCommands.cs
    startLine: 505
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Administration
  summary: Sends a test direct message greet.
  remarks: This command allows users to send a test direct message greet. Has a rate limit of 5 seconds to prevent being used for dm spam.
  example: []
  syntax:
    content: >-
      [Cmd("GreetDmTest")]

      [Aliases("GreetDmTest")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.ManageGuild)]

      [Ratelimit(5)]

      public Task GreetDmTest(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to send the test direct message greet to.
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: >-
      <Cmd("GreetDmTest")>

      <Aliases("GreetDmTest")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.ManageGuild)>

      <Ratelimit(5)>

      Public Function GreetDmTest(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmTest
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GreetDmTest
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "32"
  - type: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.RatelimitAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
  nameWithType.vb: Administration.ServerGreetCommands.GreetDmTest(IGuildUser)
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest(Discord.IGuildUser)
  name.vb: GreetDmTest(IGuildUser)
references:
- uid: Mewdeko.Modules.Administration
  commentId: N:Mewdeko.Modules.Administration
  href: Mewdeko.html
  name: Mewdeko.Modules.Administration
  nameWithType: Mewdeko.Modules.Administration
  fullName: Mewdeko.Modules.Administration
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Administration
    name: Administration
    href: Mewdeko.Modules.Administration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<GreetSettingsService>
  nameWithType: MewdekoModuleBase<GreetSettingsService>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Services.GreetSettingsService>
  nameWithType.vb: MewdekoModuleBase(Of GreetSettingsService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Services.GreetSettingsService)
  name.vb: MewdekoModuleBase(Of GreetSettingsService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Services.GreetSettingsService
    name: GreetSettingsService
    href: Mewdeko.Services.GreetSettingsService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.GreetSettingsService
    name: GreetSettingsService
    href: Mewdeko.Services.GreetSettingsService.html
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule{Mewdeko.Services.GreetSettingsService}
  commentId: T:Mewdeko.Common.MewdekoSubmodule{Mewdeko.Services.GreetSettingsService}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<GreetSettingsService>
  nameWithType: MewdekoSubmodule<GreetSettingsService>
  fullName: Mewdeko.Common.MewdekoSubmodule<Mewdeko.Services.GreetSettingsService>
  nameWithType.vb: MewdekoSubmodule(Of GreetSettingsService)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of Mewdeko.Services.GreetSettingsService)
  name.vb: MewdekoSubmodule(Of GreetSettingsService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - uid: Mewdeko.Services.GreetSettingsService
    name: GreetSettingsService
    href: Mewdeko.Services.GreetSettingsService.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Services.GreetSettingsService
    name: GreetSettingsService
    href: Mewdeko.Services.GreetSettingsService.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Services.GreetSettingsService}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<GreetSettingsService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Services.GreetSettingsService>.Service
  nameWithType.vb: MewdekoModuleBase(Of GreetSettingsService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Services.GreetSettingsService).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<ServerGreetCommands>(ServerGreetCommands, string)
  nameWithType: Extensions.ThrowIfNull<Administration.ServerGreetCommands>(Administration.ServerGreetCommands, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Administration.Administration.ServerGreetCommands>(Mewdeko.Modules.Administration.Administration.ServerGreetCommands, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Administration.ServerGreetCommands)(Administration.ServerGreetCommands, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Administration.Administration.ServerGreetCommands)(Mewdeko.Modules.Administration.Administration.ServerGreetCommands, String)
  name.vb: ThrowIfNull(Of ServerGreetCommands)(ServerGreetCommands, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Administration.ServerGreetCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
    name: ServerGreetCommands
    href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
    name: ServerGreetCommands
    href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Administration.Administration.ServerGreetCommands,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
    name: ServerGreetCommands
    href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands
    name: ServerGreetCommands
    href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule`1
  commentId: T:Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<TService>
  nameWithType: MewdekoSubmodule<TService>
  fullName: Mewdeko.Common.MewdekoSubmodule<TService>
  nameWithType.vb: MewdekoSubmodule(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of TService)
  name.vb: MewdekoSubmodule(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.#ctor
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands__ctor_System_Net_Http_IHttpClientFactory_Mewdeko_Services_GuildSettingsService_
  name: ServerGreetCommands
  nameWithType: Administration.ServerGreetCommands.ServerGreetCommands
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ServerGreetCommands
  nameWithType.vb: Administration.ServerGreetCommands.New
  fullName.vb: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.New
  name.vb: New
- uid: System.Net.Http.IHttpClientFactory
  commentId: T:System.Net.Http.IHttpClientFactory
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.ihttpclientfactory
  name: IHttpClientFactory
  nameWithType: IHttpClientFactory
  fullName: System.Net.Http.IHttpClientFactory
- uid: Mewdeko.Services.GuildSettingsService
  commentId: T:Mewdeko.Services.GuildSettingsService
  parent: Mewdeko.Services
  href: Mewdeko.Services.GuildSettingsService.html
  name: GuildSettingsService
  nameWithType: GuildSettingsService
  fullName: Mewdeko.Services.GuildSettingsService
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetDel_System_Int32_
  name: GreetDel
  nameWithType: Administration.ServerGreetCommands.GreetDel
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_BoostMsg
  name: BoostMsg
  nameWithType: Administration.ServerGreetCommands.BoostMsg
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostMsg
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_Boost
  name: Boost
  nameWithType: Administration.ServerGreetCommands.Boost
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Boost
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_BoostDel_System_Int32_
  name: BoostDel
  nameWithType: Administration.ServerGreetCommands.BoostDel
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostDel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_Greet
  name: Greet
  nameWithType: Administration.ServerGreetCommands.Greet
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Greet
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetHook_Discord_ITextChannel_System_String_System_String_System_String_
  name: GreetHook
  nameWithType: Administration.ServerGreetCommands.GreetHook
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetHook
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_LeaveHook_Discord_ITextChannel_System_String_System_String_System_String_
  name: LeaveHook
  nameWithType: Administration.ServerGreetCommands.LeaveHook
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.LeaveHook
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetMsg
  name: GreetMsg
  nameWithType: Administration.ServerGreetCommands.GreetMsg
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetMsg
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetDm
  name: GreetDm
  nameWithType: Administration.ServerGreetCommands.GreetDm
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDm
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetDmMsg
  name: GreetDmMsg
  nameWithType: Administration.ServerGreetCommands.GreetDmMsg
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmMsg
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_Bye
  name: Bye
  nameWithType: Administration.ServerGreetCommands.Bye
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.Bye
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_ByeMsg
  name: ByeMsg
  nameWithType: Administration.ServerGreetCommands.ByeMsg
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeMsg
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_ByeDel_System_Int32_
  name: ByeDel
  nameWithType: Administration.ServerGreetCommands.ByeDel
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeDel
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_ByeTest_Discord_IGuildUser_
  name: ByeTest
  nameWithType: Administration.ServerGreetCommands.ByeTest
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.ByeTest
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_BoostTest_Discord_IGuildUser_
  name: BoostTest
  nameWithType: Administration.ServerGreetCommands.BoostTest
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.BoostTest
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetTest_Discord_IGuildUser_
  name: GreetTest
  nameWithType: Administration.ServerGreetCommands.GreetTest
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetTest
- uid: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest*
  commentId: Overload:Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest
  href: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.html#Mewdeko_Modules_Administration_Administration_ServerGreetCommands_GreetDmTest_Discord_IGuildUser_
  name: GreetDmTest
  nameWithType: Administration.ServerGreetCommands.GreetDmTest
  fullName: Mewdeko.Modules.Administration.Administration.ServerGreetCommands.GreetDmTest
