### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Searches.Common.UserStats
  commentId: T:Mewdeko.Modules.Searches.Common.UserStats
  id: UserStats
  parent: Mewdeko.Modules.Searches.Common
  children:
  - Mewdeko.Modules.Searches.Common.UserStats.ACount
  - Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
  - Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
  - Mewdeko.Modules.Searches.Common.UserStats.CountryRank
  - Mewdeko.Modules.Searches.Common.UserStats.Id
  - Mewdeko.Modules.Searches.Common.UserStats.Level
  - Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
  - Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
  - Mewdeko.Modules.Searches.Common.UserStats.Playcount
  - Mewdeko.Modules.Searches.Common.UserStats.Playtime
  - Mewdeko.Modules.Searches.Common.UserStats.Pp
  - Mewdeko.Modules.Searches.Common.UserStats.Rank
  - Mewdeko.Modules.Searches.Common.UserStats.RankedScore
  - Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
  - Mewdeko.Modules.Searches.Common.UserStats.SCount
  - Mewdeko.Modules.Searches.Common.UserStats.ShCount
  - Mewdeko.Modules.Searches.Common.UserStats.TotalHits
  - Mewdeko.Modules.Searches.Common.UserStats.TotalScore
  - Mewdeko.Modules.Searches.Common.UserStats.XCount
  - Mewdeko.Modules.Searches.Common.UserStats.XhCount
  langs:
  - csharp
  - vb
  name: UserStats
  nameWithType: UserStats
  fullName: Mewdeko.Modules.Searches.Common.UserStats
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserStats
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Represents user statistics retrieved from the Gatari API.
  example: []
  syntax:
    content: public class UserStats
    content.vb: Public Class UserStats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Searches.Common.UserStats.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Searches.Common.UserStats.ACount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.ACount
  id: ACount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: ACount
  nameWithType: UserStats.ACount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ACount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ACount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of A ranks.
  example: []
  syntax:
    content: >-
      [JsonProperty("a_count")]

      public int ACount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("a_count")>

      Public Property ACount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.ACount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: a_count
- uid: Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
  id: AvgAccuracy
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: AvgAccuracy
  nameWithType: UserStats.AvgAccuracy
  fullName: Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AvgAccuracy
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 18
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the average accuracy.
  example: []
  syntax:
    content: >-
      [JsonProperty("avg_accuracy")]

      public double AvgAccuracy { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("avg_accuracy")>

      Public Property AvgAccuracy As Double
  overload: Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: avg_accuracy
- uid: Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
  id: AvgHitsPlay
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: AvgHitsPlay
  nameWithType: UserStats.AvgHitsPlay
  fullName: Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AvgHitsPlay
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the average hits per play.
  example: []
  syntax:
    content: >-
      [JsonProperty("avg_hits_play")]

      public double AvgHitsPlay { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("avg_hits_play")>

      Public Property AvgHitsPlay As Double
  overload: Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: avg_hits_play
- uid: Mewdeko.Modules.Searches.Common.UserStats.CountryRank
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.CountryRank
  id: CountryRank
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: CountryRank
  nameWithType: UserStats.CountryRank
  fullName: Mewdeko.Modules.Searches.Common.UserStats.CountryRank
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CountryRank
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 30
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the country rank.
  example: []
  syntax:
    content: >-
      [JsonProperty("country_rank")]

      public int CountryRank { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("country_rank")>

      Public Property CountryRank As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.CountryRank*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: country_rank
- uid: Mewdeko.Modules.Searches.Common.UserStats.Id
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Id
  id: Id
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UserStats.Id
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Id
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Id
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 36
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the user ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
- uid: Mewdeko.Modules.Searches.Common.UserStats.Level
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Level
  id: Level
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: UserStats.Level
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Level
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Level
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 42
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the user level.
  example: []
  syntax:
    content: >-
      [JsonProperty("level")]

      public int Level { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("level")>

      Public Property Level As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Level*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: level
- uid: Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
  id: LevelProgress
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: LevelProgress
  nameWithType: UserStats.LevelProgress
  fullName: Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: LevelProgress
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 48
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the level progress.
  example: []
  syntax:
    content: >-
      [JsonProperty("level_progress")]

      public int LevelProgress { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("level_progress")>

      Public Property LevelProgress As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.LevelProgress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: level_progress
- uid: Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
  id: MaxCombo
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: MaxCombo
  nameWithType: UserStats.MaxCombo
  fullName: Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MaxCombo
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 54
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the maximum combo achieved.
  example: []
  syntax:
    content: >-
      [JsonProperty("max_combo")]

      public int MaxCombo { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("max_combo")>

      Public Property MaxCombo As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.MaxCombo*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: max_combo
- uid: Mewdeko.Modules.Searches.Common.UserStats.Playcount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Playcount
  id: Playcount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Playcount
  nameWithType: UserStats.Playcount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Playcount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Playcount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 60
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the total play count.
  example: []
  syntax:
    content: >-
      [JsonProperty("playcount")]

      public int Playcount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("playcount")>

      Public Property Playcount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Playcount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: playcount
- uid: Mewdeko.Modules.Searches.Common.UserStats.Playtime
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Playtime
  id: Playtime
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Playtime
  nameWithType: UserStats.Playtime
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Playtime
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Playtime
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 66
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the total playtime.
  example: []
  syntax:
    content: >-
      [JsonProperty("playtime")]

      public int Playtime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("playtime")>

      Public Property Playtime As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Playtime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: playtime
- uid: Mewdeko.Modules.Searches.Common.UserStats.Pp
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Pp
  id: Pp
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Pp
  nameWithType: UserStats.Pp
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Pp
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Pp
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the performance points (PP).
  example: []
  syntax:
    content: >-
      [JsonProperty("pp")]

      public int Pp { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("pp")>

      Public Property Pp As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Pp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pp
- uid: Mewdeko.Modules.Searches.Common.UserStats.Rank
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.Rank
  id: Rank
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: UserStats.Rank
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Rank
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Rank
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 78
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the overall rank.
  example: []
  syntax:
    content: >-
      [JsonProperty("rank")]

      public int Rank { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("rank")>

      Public Property Rank As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.Rank*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rank
- uid: Mewdeko.Modules.Searches.Common.UserStats.RankedScore
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.RankedScore
  id: RankedScore
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: RankedScore
  nameWithType: UserStats.RankedScore
  fullName: Mewdeko.Modules.Searches.Common.UserStats.RankedScore
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RankedScore
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 84
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the ranked score.
  example: []
  syntax:
    content: >-
      [JsonProperty("ranked_score")]

      public int RankedScore { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("ranked_score")>

      Public Property RankedScore As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.RankedScore*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ranked_score
- uid: Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
  id: ReplaysWatched
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: ReplaysWatched
  nameWithType: UserStats.ReplaysWatched
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ReplaysWatched
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 90
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of replays watched.
  example: []
  syntax:
    content: >-
      [JsonProperty("replays_watched")]

      public int ReplaysWatched { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("replays_watched")>

      Public Property ReplaysWatched As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: replays_watched
- uid: Mewdeko.Modules.Searches.Common.UserStats.SCount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.SCount
  id: SCount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: SCount
  nameWithType: UserStats.SCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.SCount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SCount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 96
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of S ranks.
  example: []
  syntax:
    content: >-
      [JsonProperty("s_count")]

      public int SCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("s_count")>

      Public Property SCount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.SCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: s_count
- uid: Mewdeko.Modules.Searches.Common.UserStats.ShCount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.ShCount
  id: ShCount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: ShCount
  nameWithType: UserStats.ShCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ShCount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShCount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 102
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of SH ranks.
  example: []
  syntax:
    content: >-
      [JsonProperty("sh_count")]

      public int ShCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("sh_count")>

      Public Property ShCount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.ShCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sh_count
- uid: Mewdeko.Modules.Searches.Common.UserStats.TotalHits
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.TotalHits
  id: TotalHits
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: TotalHits
  nameWithType: UserStats.TotalHits
  fullName: Mewdeko.Modules.Searches.Common.UserStats.TotalHits
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TotalHits
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 108
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the total hits.
  example: []
  syntax:
    content: >-
      [JsonProperty("total_hits")]

      public int TotalHits { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("total_hits")>

      Public Property TotalHits As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.TotalHits*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: total_hits
- uid: Mewdeko.Modules.Searches.Common.UserStats.TotalScore
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.TotalScore
  id: TotalScore
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: TotalScore
  nameWithType: UserStats.TotalScore
  fullName: Mewdeko.Modules.Searches.Common.UserStats.TotalScore
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TotalScore
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 114
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the total score.
  example: []
  syntax:
    content: >-
      [JsonProperty("total_score")]

      public long TotalScore { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("total_score")>

      Public Property TotalScore As Long
  overload: Mewdeko.Modules.Searches.Common.UserStats.TotalScore*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: total_score
- uid: Mewdeko.Modules.Searches.Common.UserStats.XCount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.XCount
  id: XCount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: XCount
  nameWithType: UserStats.XCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.XCount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XCount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 120
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of X ranks.
  example: []
  syntax:
    content: >-
      [JsonProperty("x_count")]

      public int XCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("x_count")>

      Public Property XCount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.XCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: x_count
- uid: Mewdeko.Modules.Searches.Common.UserStats.XhCount
  commentId: P:Mewdeko.Modules.Searches.Common.UserStats.XhCount
  id: XhCount
  parent: Mewdeko.Modules.Searches.Common.UserStats
  langs:
  - csharp
  - vb
  name: XhCount
  nameWithType: UserStats.XhCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.XhCount
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: XhCount
    path: src/Mewdeko/Modules/Searches/Common/GatariUserStatsResponse.cs
    startLine: 126
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Searches.Common
  summary: Gets or sets the count of XH ranks.
  example: []
  syntax:
    content: >-
      [JsonProperty("xh_count")]

      public int XhCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("xh_count")>

      Public Property XhCount As Integer
  overload: Mewdeko.Modules.Searches.Common.UserStats.XhCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: xh_count
references:
- uid: Mewdeko.Modules.Searches.Common
  commentId: N:Mewdeko.Modules.Searches.Common
  href: Mewdeko.html
  name: Mewdeko.Modules.Searches.Common
  nameWithType: Mewdeko.Modules.Searches.Common
  fullName: Mewdeko.Modules.Searches.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Searches
    name: Searches
    href: Mewdeko.Modules.Searches.html
  - name: .
  - uid: Mewdeko.Modules.Searches.Common
    name: Common
    href: Mewdeko.Modules.Searches.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Searches
    name: Searches
    href: Mewdeko.Modules.Searches.html
  - name: .
  - uid: Mewdeko.Modules.Searches.Common
    name: Common
    href: Mewdeko.Modules.Searches.Common.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Searches.Common.UserStats.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserStats>(UserStats, string)
  nameWithType: Extensions.ThrowIfNull<UserStats>(UserStats, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Searches.Common.UserStats>(Mewdeko.Modules.Searches.Common.UserStats, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of UserStats)(UserStats, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Searches.Common.UserStats)(Mewdeko.Modules.Searches.Common.UserStats, String)
  name.vb: ThrowIfNull(Of UserStats)(UserStats, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Searches.Common.UserStats,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Searches.Common.UserStats
    name: UserStats
    href: Mewdeko.Modules.Searches.Common.UserStats.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Searches.Common.UserStats
    name: UserStats
    href: Mewdeko.Modules.Searches.Common.UserStats.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Searches.Common.UserStats,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Searches.Common.UserStats
    name: UserStats
    href: Mewdeko.Modules.Searches.Common.UserStats.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Searches.Common.UserStats
    name: UserStats
    href: Mewdeko.Modules.Searches.Common.UserStats.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Searches.Common.UserStats.ACount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.ACount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_ACount
  name: ACount
  nameWithType: UserStats.ACount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ACount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_AvgAccuracy
  name: AvgAccuracy
  nameWithType: UserStats.AvgAccuracy
  fullName: Mewdeko.Modules.Searches.Common.UserStats.AvgAccuracy
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_AvgHitsPlay
  name: AvgHitsPlay
  nameWithType: UserStats.AvgHitsPlay
  fullName: Mewdeko.Modules.Searches.Common.UserStats.AvgHitsPlay
- uid: Mewdeko.Modules.Searches.Common.UserStats.CountryRank*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.CountryRank
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_CountryRank
  name: CountryRank
  nameWithType: UserStats.CountryRank
  fullName: Mewdeko.Modules.Searches.Common.UserStats.CountryRank
- uid: Mewdeko.Modules.Searches.Common.UserStats.Id*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Id
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Id
  name: Id
  nameWithType: UserStats.Id
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Id
- uid: Mewdeko.Modules.Searches.Common.UserStats.Level*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Level
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Level
  name: Level
  nameWithType: UserStats.Level
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Level
- uid: Mewdeko.Modules.Searches.Common.UserStats.LevelProgress*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_LevelProgress
  name: LevelProgress
  nameWithType: UserStats.LevelProgress
  fullName: Mewdeko.Modules.Searches.Common.UserStats.LevelProgress
- uid: Mewdeko.Modules.Searches.Common.UserStats.MaxCombo*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_MaxCombo
  name: MaxCombo
  nameWithType: UserStats.MaxCombo
  fullName: Mewdeko.Modules.Searches.Common.UserStats.MaxCombo
- uid: Mewdeko.Modules.Searches.Common.UserStats.Playcount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Playcount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Playcount
  name: Playcount
  nameWithType: UserStats.Playcount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Playcount
- uid: Mewdeko.Modules.Searches.Common.UserStats.Playtime*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Playtime
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Playtime
  name: Playtime
  nameWithType: UserStats.Playtime
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Playtime
- uid: Mewdeko.Modules.Searches.Common.UserStats.Pp*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Pp
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Pp
  name: Pp
  nameWithType: UserStats.Pp
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Pp
- uid: Mewdeko.Modules.Searches.Common.UserStats.Rank*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.Rank
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_Rank
  name: Rank
  nameWithType: UserStats.Rank
  fullName: Mewdeko.Modules.Searches.Common.UserStats.Rank
- uid: Mewdeko.Modules.Searches.Common.UserStats.RankedScore*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.RankedScore
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_RankedScore
  name: RankedScore
  nameWithType: UserStats.RankedScore
  fullName: Mewdeko.Modules.Searches.Common.UserStats.RankedScore
- uid: Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_ReplaysWatched
  name: ReplaysWatched
  nameWithType: UserStats.ReplaysWatched
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ReplaysWatched
- uid: Mewdeko.Modules.Searches.Common.UserStats.SCount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.SCount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_SCount
  name: SCount
  nameWithType: UserStats.SCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.SCount
- uid: Mewdeko.Modules.Searches.Common.UserStats.ShCount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.ShCount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_ShCount
  name: ShCount
  nameWithType: UserStats.ShCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.ShCount
- uid: Mewdeko.Modules.Searches.Common.UserStats.TotalHits*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.TotalHits
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_TotalHits
  name: TotalHits
  nameWithType: UserStats.TotalHits
  fullName: Mewdeko.Modules.Searches.Common.UserStats.TotalHits
- uid: Mewdeko.Modules.Searches.Common.UserStats.TotalScore*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.TotalScore
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_TotalScore
  name: TotalScore
  nameWithType: UserStats.TotalScore
  fullName: Mewdeko.Modules.Searches.Common.UserStats.TotalScore
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Mewdeko.Modules.Searches.Common.UserStats.XCount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.XCount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_XCount
  name: XCount
  nameWithType: UserStats.XCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.XCount
- uid: Mewdeko.Modules.Searches.Common.UserStats.XhCount*
  commentId: Overload:Mewdeko.Modules.Searches.Common.UserStats.XhCount
  href: Mewdeko.Modules.Searches.Common.UserStats.html#Mewdeko_Modules_Searches_Common_UserStats_XhCount
  name: XhCount
  nameWithType: UserStats.XhCount
  fullName: Mewdeko.Modules.Searches.Common.UserStats.XhCount
