### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  id: TriviaGame
  parent: Mewdeko.Modules.Games.Common.Trivia
  children:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor(Mewdeko.Services.strings.IBotStrings,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.IDataCache,Discord.IGuild,Discord.ITextChannel,Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
  langs:
  - csharp
  - vb
  name: TriviaGame
  nameWithType: TriviaGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: TriviaGame
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 12
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Represents a trivia game.
  example: []
  syntax:
    content: public class TriviaGame
    content.vb: Public Class TriviaGame
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor(Mewdeko.Services.strings.IBotStrings,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.IDataCache,Discord.IGuild,Discord.ITextChannel,Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor(Mewdeko.Services.strings.IBotStrings,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.IDataCache,Discord.IGuild,Discord.ITextChannel,Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)
  id: '#ctor(Mewdeko.Services.strings.IBotStrings,Discord.WebSocket.DiscordSocketClient,Mewdeko.Services.IDataCache,Discord.IGuild,Discord.ITextChannel,Mewdeko.Modules.Games.Common.Trivia.TriviaOptions,System.String)'
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: TriviaGame(IBotStrings, DiscordSocketClient, IDataCache, IGuild, ITextChannel, TriviaOptions, string?)
  nameWithType: TriviaGame.TriviaGame(IBotStrings, DiscordSocketClient, IDataCache, IGuild, ITextChannel, TriviaOptions, string?)
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.TriviaGame(Mewdeko.Services.strings.IBotStrings, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.IDataCache, Discord.IGuild, Discord.ITextChannel, Mewdeko.Modules.Games.Common.Trivia.TriviaOptions, string?)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 35
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.Games.Common.Trivia.TriviaGame" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public TriviaGame(IBotStrings strings, DiscordSocketClient client, IDataCache cache, IGuild guild, ITextChannel channel, TriviaOptions options, string? quitCommand)
    parameters:
    - id: strings
      type: Mewdeko.Services.strings.IBotStrings
      description: Localization Strings
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The discord client
    - id: cache
      type: Mewdeko.Services.IDataCache
      description: Redis cache
    - id: guild
      type: Discord.IGuild
      description: The guild the game is running in
    - id: channel
      type: Discord.ITextChannel
      description: The channel the game is running in
    - id: options
      type: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
      description: Options when the game was started.
    - id: quitCommand
      type: System.String
      description: If the quit command was activated this round
    content.vb: Public Sub New(strings As IBotStrings, client As DiscordSocketClient, cache As IDataCache, guild As IGuild, channel As ITextChannel, options As TriviaOptions, quitCommand As String)
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor*
  nameWithType.vb: TriviaGame.New(IBotStrings, DiscordSocketClient, IDataCache, IGuild, ITextChannel, TriviaOptions, String)
  fullName.vb: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.New(Mewdeko.Services.strings.IBotStrings, Discord.WebSocket.DiscordSocketClient, Mewdeko.Services.IDataCache, Discord.IGuild, Discord.ITextChannel, Mewdeko.Modules.Games.Common.Trivia.TriviaOptions, String)
  name.vb: New(IBotStrings, DiscordSocketClient, IDataCache, IGuild, ITextChannel, TriviaOptions, String)
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
  id: Guild
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: TriviaGame.Guild
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Guild
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 52
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets the guild where the trivia game is taking place.
  example: []
  syntax:
    content: public IGuild Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: Public ReadOnly Property Guild As IGuild
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
  id: Channel
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: TriviaGame.Channel
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Channel
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 57
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets the text channel where the trivia game is being conducted.
  example: []
  syntax:
    content: public ITextChannel Channel { get; }
    parameters: []
    return:
      type: Discord.ITextChannel
    content.vb: Public ReadOnly Property Channel As ITextChannel
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
  id: CurrentQuestion
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: CurrentQuestion
  nameWithType: TriviaGame.CurrentQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: CurrentQuestion
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 62
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets the current trivia question.
  example: []
  syntax:
    content: public TriviaQuestion CurrentQuestion { get; }
    parameters: []
    return:
      type: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    content.vb: Public Property CurrentQuestion As TriviaQuestion
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
  id: OldQuestions
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: OldQuestions
  nameWithType: TriviaGame.OldQuestions
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OldQuestions
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 67
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets the set of old trivia questions asked during the game.
  example: []
  syntax:
    content: public HashSet<TriviaQuestion> OldQuestions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion}
    content.vb: Public ReadOnly Property OldQuestions As HashSet(Of TriviaQuestion)
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
  id: Users
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: Users
  nameWithType: TriviaGame.Users
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Users
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets the dictionary of users participating in the trivia game and their scores.
  example: []
  syntax:
    content: public ConcurrentDictionary<IGuildUser, int> Users { get; }
    parameters: []
    return:
      type: NonBlocking.ConcurrentDictionary{Discord.IGuildUser,System.Int32}
    content.vb: Public ReadOnly Property Users As ConcurrentDictionary(Of IGuildUser, Integer)
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
  id: GameActive
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: GameActive
  nameWithType: TriviaGame.GameActive
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GameActive
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 77
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets a value indicating whether the trivia game is active.
  example: []
  syntax:
    content: public bool GameActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property GameActive As Boolean
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
  commentId: P:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
  id: ShouldStopGame
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: ShouldStopGame
  nameWithType: TriviaGame.ShouldStopGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
  type: Property
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ShouldStopGame
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 82
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Gets or sets a value indicating whether the trivia game should be stopped.
  example: []
  syntax:
    content: public bool ShouldStopGame { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShouldStopGame As Boolean
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame
  id: StartGame
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: StartGame()
  nameWithType: TriviaGame.StartGame()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StartGame
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 90
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Starts the trivia game.
  example: []
  syntax:
    content: public Task StartGame()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartGame() As Task
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped
  id: EnsureStopped
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: EnsureStopped()
  nameWithType: TriviaGame.EnsureStopped()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: EnsureStopped
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 215
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Ensures the trivia game is stopped.
  example: []
  syntax:
    content: public Task EnsureStopped()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EnsureStopped() As Task
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame
  id: StopGame
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: StopGame()
  nameWithType: TriviaGame.StopGame()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StopGame
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 228
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Stops the trivia game.
  example: []
  syntax:
    content: public Task StopGame()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopGame() As Task
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame*
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard
  commentId: M:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard
  id: GetLeaderboard
  parent: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  langs:
  - csharp
  - vb
  name: GetLeaderboard()
  nameWithType: TriviaGame.GetLeaderboard()
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetLeaderboard
    path: src/Mewdeko/Modules/Games/Common/Trivia/TriviaGame.cs
    startLine: 323
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Games.Common.Trivia
  summary: Retrieves the leaderboard of the trivia game.
  example: []
  syntax:
    content: public string? GetLeaderboard()
    return:
      type: System.String
      description: The leaderboard string.
    content.vb: Public Function GetLeaderboard() As String
  overload: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard*
references:
- uid: Mewdeko.Modules.Games.Common.Trivia
  commentId: N:Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.html
  name: Mewdeko.Modules.Games.Common.Trivia
  nameWithType: Mewdeko.Modules.Games.Common.Trivia
  fullName: Mewdeko.Modules.Games.Common.Trivia
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Games
    name: Games
    href: Mewdeko.Modules.Games.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common
    name: Common
    href: Mewdeko.Modules.Games.Common.html
  - name: .
  - uid: Mewdeko.Modules.Games.Common.Trivia
    name: Trivia
    href: Mewdeko.Modules.Games.Common.Trivia.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<TriviaGame>(TriviaGame, string)
  nameWithType: Extensions.ThrowIfNull<TriviaGame>(TriviaGame, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Games.Common.Trivia.TriviaGame>(Mewdeko.Modules.Games.Common.Trivia.TriviaGame, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of TriviaGame)(TriviaGame, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Games.Common.Trivia.TriviaGame)(Mewdeko.Modules.Games.Common.Trivia.TriviaGame, String)
  name.vb: ThrowIfNull(Of TriviaGame)(TriviaGame, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaGame,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
    name: TriviaGame
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
    name: TriviaGame
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Games.Common.Trivia.TriviaGame,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
    name: TriviaGame
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
    name: TriviaGame
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaGame
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html
  name: TriviaGame
  nameWithType: TriviaGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.#ctor
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame__ctor_Mewdeko_Services_strings_IBotStrings_Discord_WebSocket_DiscordSocketClient_Mewdeko_Services_IDataCache_Discord_IGuild_Discord_ITextChannel_Mewdeko_Modules_Games_Common_Trivia_TriviaOptions_System_String_
  name: TriviaGame
  nameWithType: TriviaGame.TriviaGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.TriviaGame
  nameWithType.vb: TriviaGame.New
  fullName.vb: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.New
  name.vb: New
- uid: Mewdeko.Services.strings.IBotStrings
  commentId: T:Mewdeko.Services.strings.IBotStrings
  parent: Mewdeko.Services.strings
  href: Mewdeko.Services.strings.IBotStrings.html
  name: IBotStrings
  nameWithType: IBotStrings
  fullName: Mewdeko.Services.strings.IBotStrings
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Services.IDataCache
  commentId: T:Mewdeko.Services.IDataCache
  parent: Mewdeko.Services
  href: Mewdeko.Services.IDataCache.html
  name: IDataCache
  nameWithType: IDataCache
  fullName: Mewdeko.Services.IDataCache
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  isExternal: true
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
  parent: Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions.html
  name: TriviaOptions
  nameWithType: TriviaOptions
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaOptions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Services.strings
  commentId: N:Mewdeko.Services.strings
  href: Mewdeko.html
  name: Mewdeko.Services.strings
  nameWithType: Mewdeko.Services.strings
  fullName: Mewdeko.Services.strings
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.strings
    name: strings
    href: Mewdeko.Services.strings.html
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_Guild
  name: Guild
  nameWithType: TriviaGame.Guild
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Guild
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_Channel
  name: Channel
  nameWithType: TriviaGame.Channel
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Channel
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_CurrentQuestion
  name: CurrentQuestion
  nameWithType: TriviaGame.CurrentQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.CurrentQuestion
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  commentId: T:Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
  parent: Mewdeko.Modules.Games.Common.Trivia
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  name: TriviaQuestion
  nameWithType: TriviaQuestion
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_OldQuestions
  name: OldQuestions
  nameWithType: TriviaGame.OldQuestions
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.OldQuestions
- uid: System.Collections.Generic.HashSet{Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion}
  commentId: T:System.Collections.Generic.HashSet{Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<TriviaQuestion>
  nameWithType: HashSet<TriviaQuestion>
  fullName: System.Collections.Generic.HashSet<Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion>
  nameWithType.vb: HashSet(Of TriviaQuestion)
  fullName.vb: System.Collections.Generic.HashSet(Of Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion)
  name.vb: HashSet(Of TriviaQuestion)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion
    name: TriviaQuestion
    href: Mewdeko.Modules.Games.Common.Trivia.TriviaQuestion.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_Users
  name: Users
  nameWithType: TriviaGame.Users
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.Users
- uid: NonBlocking.ConcurrentDictionary{Discord.IGuildUser,System.Int32}
  commentId: T:NonBlocking.ConcurrentDictionary{Discord.IGuildUser,System.Int32}
  parent: NonBlocking
  definition: NonBlocking.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ConcurrentDictionary<IGuildUser, int>
  nameWithType: ConcurrentDictionary<IGuildUser, int>
  fullName: NonBlocking.ConcurrentDictionary<Discord.IGuildUser, int>
  nameWithType.vb: ConcurrentDictionary(Of IGuildUser, Integer)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of Discord.IGuildUser, Integer)
  name.vb: ConcurrentDictionary(Of IGuildUser, Integer)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: NonBlocking.ConcurrentDictionary`2
  commentId: T:NonBlocking.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: NonBlocking.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: NonBlocking.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: NonBlocking.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: NonBlocking
  commentId: N:NonBlocking
  isExternal: true
  name: NonBlocking
  nameWithType: NonBlocking
  fullName: NonBlocking
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_GameActive
  name: GameActive
  nameWithType: TriviaGame.GameActive
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GameActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_ShouldStopGame
  name: ShouldStopGame
  nameWithType: TriviaGame.ShouldStopGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.ShouldStopGame
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_StartGame
  name: StartGame
  nameWithType: TriviaGame.StartGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StartGame
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_EnsureStopped
  name: EnsureStopped
  nameWithType: TriviaGame.EnsureStopped
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.EnsureStopped
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_StopGame
  name: StopGame
  nameWithType: TriviaGame.StopGame
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.StopGame
- uid: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard*
  commentId: Overload:Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard
  href: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.html#Mewdeko_Modules_Games_Common_Trivia_TriviaGame_GetLeaderboard
  name: GetLeaderboard
  nameWithType: TriviaGame.GetLeaderboard
  fullName: Mewdeko.Modules.Games.Common.Trivia.TriviaGame.GetLeaderboard
