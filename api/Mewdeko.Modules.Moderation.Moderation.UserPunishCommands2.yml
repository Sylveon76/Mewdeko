### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  commentId: T:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  id: Moderation.UserPunishCommands2
  parent: Mewdeko.Modules.Moderation
  children:
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn(Discord.IGuildUser,System.String)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(Discord.IGuildUser,System.Int32)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(System.UInt64,System.Int32)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,Discord.IGuildUser)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,System.UInt64)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.UInt64)
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel(Discord.ITextChannel)
  langs:
  - csharp
  - vb
  name: Moderation.UserPunishCommands2
  nameWithType: Moderation.UserPunishCommands2
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: UserPunishCommands2
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Module for managing mini warnings.
  example: []
  syntax:
    content: >-
      [Group]

      public class Moderation.UserPunishCommands2 : MewdekoSubmodule<UserPunishService2>, IModuleBase
    content.vb: >-
      <Group>

      Public Class Moderation.UserPunishCommands2 Inherits MewdekoSubmodule(Of UserPunishService2) Implements IModuleBase
  inheritance:
  - System.Object
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  - Discord.Commands.ModuleBase
  - Mewdeko.Common.MewdekoModule
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  - Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  implements:
  - Discord.Commands.IModuleBase
  inheritedMembers:
  - Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}.Service
  - Mewdeko.Common.MewdekoModule.CultureInfo
  - Mewdeko.Common.MewdekoModule.Strings
  - Mewdeko.Common.MewdekoModule.Localization
  - Mewdeko.Common.MewdekoModule.ctx
  - Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  - Mewdeko.Common.MewdekoModule.GetText(System.String)
  - Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  - Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  - Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  - Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  - Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  - Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  attributes:
  - type: Discord.Commands.GroupAttribute
    ctor: Discord.Commands.GroupAttribute.#ctor
    arguments: []
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService)
  id: '#ctor(Mewdeko.Database.DbService,Fergun.Interactive.InteractiveService)'
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: UserPunishCommands2(DbService, InteractiveService)
  nameWithType: Moderation.UserPunishCommands2.UserPunishCommands2(DbService, InteractiveService)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.UserPunishCommands2(Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 19
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Module for managing mini warnings.
  example: []
  syntax:
    content: public UserPunishCommands2(DbService db, InteractiveService serv)
    parameters:
    - id: db
      type: Mewdeko.Database.DbService
      description: ''
    - id: serv
      type: Fergun.Interactive.InteractiveService
      description: ''
    content.vb: Public Sub New(db As DbService, serv As InteractiveService)
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor*
  nameWithType.vb: Moderation.UserPunishCommands2.New(DbService, InteractiveService)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.New(Mewdeko.Database.DbService, Fergun.Interactive.InteractiveService)
  name.vb: New(DbService, InteractiveService)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel(Discord.ITextChannel)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel(Discord.ITextChannel)
  id: SetMWarnChannel(Discord.ITextChannel)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: SetMWarnChannel(ITextChannel)
  nameWithType: Moderation.UserPunishCommands2.SetMWarnChannel(ITextChannel)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel(Discord.ITextChannel)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetMWarnChannel
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 37
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the mini warnlog channel.
  example: []
  syntax:
    content: >-
      [Cmd("SetMWarnChannel")]

      [Aliases("SetMWarnChannel")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [Priority(0)]

      public Task SetMWarnChannel(ITextChannel channel)
    parameters:
    - id: channel
      type: Discord.ITextChannel
      description: The channel to set
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("SetMWarnChannel")>

      <Aliases("SetMWarnChannel")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <Priority(0)>

      Public Function SetMWarnChannel(channel As ITextChannel) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetMWarnChannel
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SetMWarnChannel
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn(Discord.IGuildUser,System.String)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn(Discord.IGuildUser,System.String)
  id: MWarn(Discord.IGuildUser,System.String)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarn(IGuildUser, string?)
  nameWithType: Moderation.UserPunishCommands2.MWarn(IGuildUser, string?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn(Discord.IGuildUser, string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarn
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 72
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Mini Warns a user.
  example: []
  syntax:
    content: >-
      [Cmd("MWarn")]

      [Aliases("MWarn")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.MuteMembers)]

      public Task MWarn(IGuildUser user, string? reason = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to warn
    - id: reason
      type: System.String
      description: The reason for the warning
      attributes:
      - type: Discord.Commands.RemainderAttribute
        ctor: Discord.Commands.RemainderAttribute.#ctor
        arguments: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarn")>

      <Aliases("MWarn")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.MuteMembers)>

      Public Function MWarn(user As IGuildUser, reason As String = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarn
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarn
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4194304"
  nameWithType.vb: Moderation.UserPunishCommands2.MWarn(IGuildUser, String)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn(Discord.IGuildUser, String)
  name.vb: MWarn(IGuildUser, String)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  id: MWarnExpire(System.Int32,Mewdeko.Database.Models.WarnExpireAction)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnExpire(int, WarnExpireAction)
  nameWithType: Moderation.UserPunishCommands2.MWarnExpire(int, WarnExpireAction)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire(int, Mewdeko.Database.Models.WarnExpireAction)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnExpire
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 147
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the mini warn expire time.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnExpire")]

      [Aliases("MWarnExpire")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [Priority(2)]

      public Task MWarnExpire(int days, WarnExpireAction action = WarnExpireAction.Clear)
    parameters:
    - id: days
      type: System.Int32
      description: The number of days to set
    - id: action
      type: Mewdeko.Database.Models.WarnExpireAction
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnExpire")>

      <Aliases("MWarnExpire")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <Priority(2)>

      Public Function MWarnExpire(days As Integer, action As WarnExpireAction = WarnExpireAction.Clear) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnExpire
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnExpire
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnExpire(Integer, WarnExpireAction)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire(Integer, Mewdeko.Database.Models.WarnExpireAction)
  name.vb: MWarnExpire(Integer, WarnExpireAction)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,Discord.IGuildUser)
  id: MWarnlog(System.Int32,Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnlog(int, IGuildUser)
  nameWithType: Moderation.UserPunishCommands2.MWarnlog(int, IGuildUser)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(int, Discord.IGuildUser)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 181
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the mini warnlog for a user.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnlog")]

      [Aliases("MWarnlog")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.MuteMembers)]

      [Priority(2)]

      public Task MWarnlog(int page, IGuildUser user)
    parameters:
    - id: page
      type: System.Int32
      description: The page number
    - id: user
      type: Discord.IGuildUser
      description: The user to get the warnlog for
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("MWarnlog")>

      <Aliases("MWarnlog")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.MuteMembers)>

      <Priority(2)>

      Public Function MWarnlog(page As Integer, user As IGuildUser) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4194304"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnlog(Integer, IGuildUser)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Integer, Discord.IGuildUser)
  name.vb: MWarnlog(Integer, IGuildUser)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Discord.IGuildUser)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Discord.IGuildUser)
  id: MWarnlog(Discord.IGuildUser)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnlog(IGuildUser?)
  nameWithType: Moderation.UserPunishCommands2.MWarnlog(IGuildUser?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Discord.IGuildUser?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 190
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the mini warnlog for a user.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnlog")]

      [Aliases("MWarnlog")]

      [RequireContext(ContextType.Guild)]

      [Priority(3)]

      public Task MWarnlog(IGuildUser? user = null)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("MWarnlog")>

      <Aliases("MWarnlog")>

      <RequireContext(ContextType.Guild)>

      <Priority(3)>

      Public Function MWarnlog(user As IGuildUser = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnlog(IGuildUser)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Discord.IGuildUser)
  name.vb: MWarnlog(IGuildUser)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.Int32,System.UInt64)
  id: MWarnlog(System.Int32,System.UInt64)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnlog(int, ulong)
  nameWithType: Moderation.UserPunishCommands2.MWarnlog(int, ulong)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(int, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 206
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the mini warnlog for a user.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnlog")]

      [Aliases("MWarnlog")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.MuteMembers)]

      [Priority(0)]

      public Task MWarnlog(int page, ulong userId)
    parameters:
    - id: page
      type: System.Int32
      description: The page number
    - id: userId
      type: System.UInt64
      description: The user id to get the warnlog for
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("MWarnlog")>

      <Aliases("MWarnlog")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.MuteMembers)>

      <Priority(0)>

      Public Function MWarnlog(page As Integer, userId As ULong) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4194304"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnlog(Integer, ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(Integer, ULong)
  name.vb: MWarnlog(Integer, ULong)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.UInt64)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(System.UInt64)
  id: MWarnlog(System.UInt64)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnlog(ulong)
  nameWithType: Moderation.UserPunishCommands2.MWarnlog(ulong)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnlog
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 215
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the mini warnlog for a user.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnlog")]

      [Aliases("MWarnlog")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.MuteMembers)]

      [Priority(1)]

      public Task MWarnlog(ulong userId)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user id to get the warnlog for
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("MWarnlog")>

      <Aliases("MWarnlog")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.MuteMembers)>

      <Priority(1)>

      Public Function MWarnlog(userId As ULong) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlog
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4194304"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnlog(ULong)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog(ULong)
  name.vb: MWarnlog(ULong)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll
  id: MWarnlogAll
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnlogAll()
  nameWithType: Moderation.UserPunishCommands2.MWarnlogAll()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnlogAll
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 261
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Gets the mini warnlog for all users.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnlogAll")]

      [Aliases("MWarnlogAll")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.MuteMembers)]

      public Task MWarnlogAll()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnlogAll")>

      <Aliases("MWarnlogAll")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.MuteMembers)>

      Public Function MWarnlogAll() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlogAll
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnlogAll
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "4194304"
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(Discord.IGuildUser,System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(Discord.IGuildUser,System.Int32)
  id: MWarnclear(Discord.IGuildUser,System.Int32)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnclear(IGuildUser, int)
  nameWithType: Moderation.UserPunishCommands2.MWarnclear(IGuildUser, int)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(Discord.IGuildUser, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnclear
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 307
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Clears a user's mini warnings. If index is specified, clears only that warning.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnclear")]

      [Aliases("MWarnclear")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MWarnclear(IGuildUser user, int index = 0)
    parameters:
    - id: user
      type: Discord.IGuildUser
      description: The user to clear the warnings for
    - id: index
      type: System.Int32
      description: The index of the warning to clear
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: >-
      <Cmd("MWarnclear")>

      <Aliases("MWarnclear")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MWarnclear(user As IGuildUser, index As Integer = 0) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnclear
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnclear
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnclear(IGuildUser, Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(Discord.IGuildUser, Integer)
  name.vb: MWarnclear(IGuildUser, Integer)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(System.UInt64,System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(System.UInt64,System.Int32)
  id: MWarnclear(System.UInt64,System.Int32)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnclear(ulong, int)
  nameWithType: Moderation.UserPunishCommands2.MWarnclear(ulong, int)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(ulong, int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnclear
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 316
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Clears a user's mini warnings. If index is specified, clears only that warning.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnclear")]

      [Aliases("MWarnclear")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MWarnclear(ulong userId, int index = 0)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user id to clear the warnings for
    - id: index
      type: System.Int32
      description: The index of the warning to clear
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnclear")>

      <Aliases("MWarnclear")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MWarnclear(userId As ULong, index As Integer = 0) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnclear
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnclear
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnclear(ULong, Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear(ULong, Integer)
  name.vb: MWarnclear(ULong, Integer)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: MWarnPunish(System.Int32,Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole,Discord.IRole,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnPunish(int, AddRole, IRole, StoopidTime?)
  nameWithType: Moderation.UserPunishCommands2.MWarnPunish(int, Moderation.UserPunishCommands2.AddRole, IRole, StoopidTime?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(int, Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole, Discord.IRole, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 350
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the mini warn punishment.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnPunish")]

      [Aliases("MWarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      [Priority(1)]

      public Task MWarnPunish(int number, Moderation.UserPunishCommands2.AddRole _, IRole role, StoopidTime? time = null)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    - id: _
      type: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
      description: The addrole thing
    - id: role
      type: Discord.IRole
      description: The role to add (used only if addrole is specified)
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The time to do the punishment for
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnPunish")>

      <Aliases("MWarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      <Priority(1)>

      Public Function MWarnPunish(number As Integer, _ As Moderation.UserPunishCommands2.AddRole, role As IRole, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  - type: Discord.Commands.PriorityAttribute
    ctor: Discord.Commands.PriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnPunish(Integer, Moderation.UserPunishCommands2.AddRole, IRole, StoopidTime)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(Integer, Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole, Discord.IRole, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: MWarnPunish(Integer, AddRole, IRole, StoopidTime)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  id: MWarnPunish(System.Int32,Mewdeko.Database.Models.PunishmentAction,Mewdeko.Common.TypeReaders.Models.StoopidTime)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnPunish(int, PunishmentAction, StoopidTime?)
  nameWithType: Moderation.UserPunishCommands2.MWarnPunish(int, PunishmentAction, StoopidTime?)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(int, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 381
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Sets the mini warn punishment.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnPunish")]

      [Aliases("MWarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MWarnPunish(int number, PunishmentAction punish, StoopidTime? time = null)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    - id: punish
      type: Mewdeko.Database.Models.PunishmentAction
      description: The punishment to set
    - id: time
      type: Mewdeko.Common.TypeReaders.Models.StoopidTime
      description: The time to do the punishment for
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnPunish")>

      <Aliases("MWarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MWarnPunish(number As Integer, punish As PunishmentAction, time As StoopidTime = Nothing) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnPunish(Integer, PunishmentAction, StoopidTime)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(Integer, Mewdeko.Database.Models.PunishmentAction, Mewdeko.Common.TypeReaders.Models.StoopidTime)
  name.vb: MWarnPunish(Integer, PunishmentAction, StoopidTime)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32)
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(System.Int32)
  id: MWarnPunish(System.Int32)
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnPunish(int)
  nameWithType: Moderation.UserPunishCommands2.MWarnPunish(int)
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnPunish
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 413
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Removes a mini warn punishment.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnPunish")]

      [Aliases("MWarnPunish")]

      [RequireContext(ContextType.Guild)]

      [UserPerm(GuildPermission.Administrator)]

      public Task MWarnPunish(int number)
    parameters:
    - id: number
      type: System.Int32
      description: The number of warnings
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnPunish")>

      <Aliases("MWarnPunish")>

      <RequireContext(ContextType.Guild)>

      <UserPerm(GuildPermission.Administrator)>

      Public Function MWarnPunish(number As Integer) As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunish
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
  - type: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.UserPermAttribute.#ctor(Discord.GuildPermission)
    arguments:
    - type: Discord.GuildPermission
      value: "8"
  nameWithType.vb: Moderation.UserPunishCommands2.MWarnPunish(Integer)
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish(Integer)
  name.vb: MWarnPunish(Integer)
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList
  commentId: M:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList
  id: MWarnPunishList
  parent: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
  langs:
  - csharp
  - vb
  name: MWarnPunishList()
  nameWithType: Moderation.UserPunishCommands2.MWarnPunishList()
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: MWarnPunishList
    path: src/Mewdeko/Modules/Moderation/UserPunishCommands2.cs
    startLine: 426
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.Moderation
  summary: Lists mini warn punishments.
  example: []
  syntax:
    content: >-
      [Cmd("MWarnPunishList")]

      [Aliases("MWarnPunishList")]

      [RequireContext(ContextType.Guild)]

      public Task MWarnPunishList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Cmd("MWarnPunishList")>

      <Aliases("MWarnPunishList")>

      <RequireContext(ContextType.Guild)>

      Public Function MWarnPunishList() As Task
  overload: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList*
  attributes:
  - type: Mewdeko.Common.Attributes.TextCommands.Cmd
    ctor: Mewdeko.Common.Attributes.TextCommands.Cmd.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunishList
  - type: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute
    ctor: Mewdeko.Common.Attributes.TextCommands.AliasesAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MWarnPunishList
  - type: Discord.Commands.RequireContextAttribute
    ctor: Discord.Commands.RequireContextAttribute.#ctor(Discord.Commands.ContextType)
    arguments:
    - type: Discord.Commands.ContextType
      value: 1
references:
- uid: Mewdeko.Modules.Moderation
  commentId: N:Mewdeko.Modules.Moderation
  href: Mewdeko.html
  name: Mewdeko.Modules.Moderation
  nameWithType: Mewdeko.Modules.Moderation
  fullName: Mewdeko.Modules.Moderation
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  commentId: T:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  parent: Discord.Commands
  definition: Discord.Commands.ModuleBase`1
  name: ModuleBase<ICommandContext>
  nameWithType: ModuleBase<ICommandContext>
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>
  nameWithType.vb: ModuleBase(Of ICommandContext)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext)
  name.vb: ModuleBase(Of ICommandContext)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase
  commentId: T:Discord.Commands.ModuleBase
  parent: Discord.Commands
  isExternal: true
  name: ModuleBase
  nameWithType: ModuleBase
  fullName: Discord.Commands.ModuleBase
- uid: Mewdeko.Common.MewdekoModule
  commentId: T:Mewdeko.Common.MewdekoModule
  parent: Mewdeko.Common
  href: Mewdeko.Common.MewdekoModule.html
  name: MewdekoModule
  nameWithType: MewdekoModule
  fullName: Mewdeko.Common.MewdekoModule
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  commentId: T:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<UserPunishService2>
  nameWithType: MewdekoModuleBase<UserPunishService2>
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Moderation.Services.UserPunishService2>
  nameWithType.vb: MewdekoModuleBase(Of UserPunishService2)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Moderation.Services.UserPunishService2)
  name.vb: MewdekoModuleBase(Of UserPunishService2)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService2
    name: UserPunishService2
    href: Mewdeko.Modules.Moderation.Services.UserPunishService2.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService2
    name: UserPunishService2
    href: Mewdeko.Modules.Moderation.Services.UserPunishService2.html
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  commentId: T:Mewdeko.Common.MewdekoSubmodule{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  parent: Mewdeko.Common
  definition: Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<UserPunishService2>
  nameWithType: MewdekoSubmodule<UserPunishService2>
  fullName: Mewdeko.Common.MewdekoSubmodule<Mewdeko.Modules.Moderation.Services.UserPunishService2>
  nameWithType.vb: MewdekoSubmodule(Of UserPunishService2)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of Mewdeko.Modules.Moderation.Services.UserPunishService2)
  name.vb: MewdekoSubmodule(Of UserPunishService2)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService2
    name: UserPunishService2
    href: Mewdeko.Modules.Moderation.Services.UserPunishService2.html
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Services.UserPunishService2
    name: UserPunishService2
    href: Mewdeko.Modules.Moderation.Services.UserPunishService2.html
  - name: )
- uid: Discord.Commands.IModuleBase
  commentId: T:Discord.Commands.IModuleBase
  parent: Discord.Commands
  isExternal: true
  name: IModuleBase
  nameWithType: IModuleBase
  fullName: Discord.Commands.IModuleBase
- uid: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}.Service
  parent: Mewdeko.Common.MewdekoModuleBase{Mewdeko.Modules.Moderation.Services.UserPunishService2}
  definition: Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<UserPunishService2>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<Mewdeko.Modules.Moderation.Services.UserPunishService2>.Service
  nameWithType.vb: MewdekoModuleBase(Of UserPunishService2).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of Mewdeko.Modules.Moderation.Services.UserPunishService2).Service
- uid: Mewdeko.Common.MewdekoModule.CultureInfo
  commentId: P:Mewdeko.Common.MewdekoModule.CultureInfo
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CultureInfo
  name: CultureInfo
  nameWithType: MewdekoModule.CultureInfo
  fullName: Mewdeko.Common.MewdekoModule.CultureInfo
- uid: Mewdeko.Common.MewdekoModule.Strings
  commentId: P:Mewdeko.Common.MewdekoModule.Strings
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Strings
  name: Strings
  nameWithType: MewdekoModule.Strings
  fullName: Mewdeko.Common.MewdekoModule.Strings
- uid: Mewdeko.Common.MewdekoModule.Localization
  commentId: P:Mewdeko.Common.MewdekoModule.Localization
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_Localization
  name: Localization
  nameWithType: MewdekoModule.Localization
  fullName: Mewdeko.Common.MewdekoModule.Localization
- uid: Mewdeko.Common.MewdekoModule.ctx
  commentId: P:Mewdeko.Common.MewdekoModule.ctx
  parent: Mewdeko.Common.MewdekoModule
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ctx
  name: ctx
  nameWithType: MewdekoModule.ctx
  fullName: Mewdeko.Common.MewdekoModule.ctx
- uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  commentId: M:Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  name: BeforeExecute(CommandInfo)
  nameWithType: MewdekoModule.BeforeExecute(CommandInfo)
  fullName: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.BeforeExecute(Discord.Commands.CommandInfo)
    name: BeforeExecute
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_BeforeExecute_Discord_Commands_CommandInfo_
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  name: GetText(string)
  nameWithType: MewdekoModule.GetText(string)
  fullName: Mewdeko.Common.MewdekoModule.GetText(string)
  nameWithType.vb: MewdekoModule.GetText(String)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String)
  name.vb: GetText(String)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String)
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  name: GetText(string, params object[])
  nameWithType: MewdekoModule.GetText(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.GetText(string, params object[])
  nameWithType.vb: MewdekoModule.GetText(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.GetText(String, ParamArray Object())
  name.vb: GetText(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetText(System.String,System.Object[])
    name: GetText
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetText_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  name: ErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ErrorLocalizedAsync(System.String,System.Object[])
    name: ErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  name: ReplyErrorLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyErrorLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyErrorLocalizedAsync(System.String,System.Object[])
    name: ReplyErrorLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyErrorLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  name: ConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ConfirmLocalizedAsync(System.String,System.Object[])
    name: ConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  commentId: M:Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  name: ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType: MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  fullName: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(string, params object[])
  nameWithType.vb: MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  fullName.vb: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(String, ParamArray Object())
  name.vb: ReplyConfirmLocalizedAsync(String, ParamArray Object())
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.ReplyConfirmLocalizedAsync(System.String,System.Object[])
    name: ReplyConfirmLocalizedAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_ReplyConfirmLocalizedAsync_System_String_System_Object___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  name: PromptUserConfirmAsync(string, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(string, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(string, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(String, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(String, ULong)
  name.vb: PromptUserConfirmAsync(String, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(System.String,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_System_String_System_UInt64_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  name: CheckRoleHierarchy(IGuildUser, bool)
  nameWithType: MewdekoModule.CheckRoleHierarchy(IGuildUser, bool)
  fullName: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, bool)
  nameWithType.vb: MewdekoModule.CheckRoleHierarchy(IGuildUser, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser, Boolean)
  name.vb: CheckRoleHierarchy(IGuildUser, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.CheckRoleHierarchy(Discord.IGuildUser,System.Boolean)
    name: CheckRoleHierarchy
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_CheckRoleHierarchy_Discord_IGuildUser_System_Boolean_
  - name: (
  - uid: Discord.IGuildUser
    name: IGuildUser
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  name: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  nameWithType: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ulong)
  fullName: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ulong)
  nameWithType.vb: MewdekoModule.PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage, Discord.EmbedBuilder, ULong)
  name.vb: PromptUserConfirmAsync(IUserMessage, EmbedBuilder, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.PromptUserConfirmAsync(Discord.IUserMessage,Discord.EmbedBuilder,System.UInt64)
    name: PromptUserConfirmAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_PromptUserConfirmAsync_Discord_IUserMessage_Discord_EmbedBuilder_System_UInt64_
  - name: (
  - uid: Discord.IUserMessage
    name: IUserMessage
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  commentId: M:Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  name: GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType: MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  fullName: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ulong, ulong, ulong, bool)
  nameWithType.vb: MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  fullName.vb: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  name.vb: GetButtonInputAsync(ULong, ULong, ULong, Boolean)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.GetButtonInputAsync(System.UInt64,System.UInt64,System.UInt64,System.Boolean)
    name: GetButtonInputAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_GetButtonInputAsync_System_UInt64_System_UInt64_System_UInt64_System_Boolean_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  name: NextMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextMessageAsync(ULong, ULong)
  name.vb: NextMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextMessageAsync(System.UInt64,System.UInt64)
    name: NextMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  commentId: M:Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
  parent: Mewdeko.Common.MewdekoModule
  isExternal: true
  href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  name: NextFullMessageAsync(ulong, ulong)
  nameWithType: MewdekoModule.NextFullMessageAsync(ulong, ulong)
  fullName: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ulong, ulong)
  nameWithType.vb: MewdekoModule.NextFullMessageAsync(ULong, ULong)
  fullName.vb: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(ULong, ULong)
  name.vb: NextFullMessageAsync(ULong, ULong)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModule.NextFullMessageAsync(System.UInt64,System.UInt64)
    name: NextFullMessageAsync
    href: Mewdeko.Common.MewdekoModule.html#Mewdeko_Common_MewdekoModule_NextFullMessageAsync_System_UInt64_System_UInt64_
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: ','
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<ICommandContext>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of ICommandContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<ICommandContext>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of ICommandContext).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<ICommandContext>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of ICommandContext).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  commentId: P:Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}.Context
  parent: Discord.Commands.ModuleBase{Discord.Commands.ICommandContext}
  definition: Discord.Commands.ModuleBase`1.Context
  name: Context
  nameWithType: ModuleBase<ICommandContext>.Context
  fullName: Discord.Commands.ModuleBase<Discord.Commands.ICommandContext>.Context
  nameWithType.vb: ModuleBase(Of ICommandContext).Context
  fullName.vb: Discord.Commands.ModuleBase(Of Discord.Commands.ICommandContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<UserPunishCommands2>(UserPunishCommands2, string)
  nameWithType: Extensions.ThrowIfNull<Moderation.UserPunishCommands2>(Moderation.UserPunishCommands2, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2>(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Moderation.UserPunishCommands2)(Moderation.UserPunishCommands2, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2)(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2, String)
  name.vb: ThrowIfNull(Of UserPunishCommands2)(UserPunishCommands2, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.ModuleBase`1
  commentId: T:Discord.Commands.ModuleBase`1
  isExternal: true
  name: ModuleBase<T>
  nameWithType: ModuleBase<T>
  fullName: Discord.Commands.ModuleBase<T>
  nameWithType.vb: ModuleBase(Of T)
  fullName.vb: Discord.Commands.ModuleBase(Of T)
  name.vb: ModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1
    name: ModuleBase
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Discord.Commands
  commentId: N:Discord.Commands
  isExternal: true
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.Commands
    name: Commands
    isExternal: true
- uid: Mewdeko.Common
  commentId: N:Mewdeko.Common
  href: Mewdeko.html
  name: Mewdeko.Common
  nameWithType: Mewdeko.Common
  fullName: Mewdeko.Common
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
- uid: Mewdeko.Common.MewdekoModuleBase`1
  commentId: T:Mewdeko.Common.MewdekoModuleBase`1
  href: Mewdeko.Common.MewdekoModuleBase-1.html
  name: MewdekoModuleBase<TService>
  nameWithType: MewdekoModuleBase<TService>
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>
  nameWithType.vb: MewdekoModuleBase(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService)
  name.vb: MewdekoModuleBase(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoModuleBase`1
    name: MewdekoModuleBase
    href: Mewdeko.Common.MewdekoModuleBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoSubmodule`1
  commentId: T:Mewdeko.Common.MewdekoSubmodule`1
  href: Mewdeko.Common.MewdekoSubmodule-1.html
  name: MewdekoSubmodule<TService>
  nameWithType: MewdekoSubmodule<TService>
  fullName: Mewdeko.Common.MewdekoSubmodule<TService>
  nameWithType.vb: MewdekoSubmodule(Of TService)
  fullName.vb: Mewdeko.Common.MewdekoSubmodule(Of TService)
  name.vb: MewdekoSubmodule(Of TService)
  spec.csharp:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: <
  - name: TService
  - name: '>'
  spec.vb:
  - uid: Mewdeko.Common.MewdekoSubmodule`1
    name: MewdekoSubmodule
    href: Mewdeko.Common.MewdekoSubmodule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TService
  - name: )
- uid: Mewdeko.Common.MewdekoModuleBase`1.Service
  commentId: P:Mewdeko.Common.MewdekoModuleBase`1.Service
  href: Mewdeko.Common.MewdekoModuleBase-1.html#Mewdeko_Common_MewdekoModuleBase_1_Service
  name: Service
  nameWithType: MewdekoModuleBase<TService>.Service
  fullName: Mewdeko.Common.MewdekoModuleBase<TService>.Service
  nameWithType.vb: MewdekoModuleBase(Of TService).Service
  fullName.vb: Mewdeko.Common.MewdekoModuleBase(Of TService).Service
- uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  commentId: M:Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  nameWithType: ModuleBase<T>.ReplyAsync(string, bool, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker[], Embed[], MessageFlags)
  fullName: Discord.Commands.ModuleBase<T>.ReplyAsync(string, bool, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker[], Discord.Embed[], Discord.MessageFlags)
  nameWithType.vb: ModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  fullName.vb: Discord.Commands.ModuleBase(Of T).ReplyAsync(String, Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent, Discord.ISticker(), Discord.Embed(), Discord.MessageFlags)
  name.vb: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent, ISticker(), Embed(), MessageFlags)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent,Discord.ISticker[],Discord.Embed[],Discord.MessageFlags)
    name: ReplyAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.RequestOptions
    name: RequestOptions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageReference
    name: MessageReference
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.MessageComponent
    name: MessageComponent
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.ISticker
    name: ISticker
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.Embed
    name: Embed
    isExternal: true
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Discord.MessageFlags
    name: MessageFlags
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.BeforeExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.BeforeExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).BeforeExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).BeforeExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.BeforeExecuteAsync(Discord.Commands.CommandInfo)
    name: BeforeExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecuteAsync(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecuteAsync(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecuteAsync(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecuteAsync(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecuteAsync(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecuteAsync(Discord.Commands.CommandInfo)
    name: AfterExecuteAsync
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  commentId: M:Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
  isExternal: true
  name: AfterExecute(CommandInfo)
  nameWithType: ModuleBase<T>.AfterExecute(CommandInfo)
  fullName: Discord.Commands.ModuleBase<T>.AfterExecute(Discord.Commands.CommandInfo)
  nameWithType.vb: ModuleBase(Of T).AfterExecute(CommandInfo)
  fullName.vb: Discord.Commands.ModuleBase(Of T).AfterExecute(Discord.Commands.CommandInfo)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.AfterExecute(Discord.Commands.CommandInfo)
    name: AfterExecute
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  commentId: M:Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
  isExternal: true
  name: OnModuleBuilding(CommandService, ModuleBuilder)
  nameWithType: ModuleBase<T>.OnModuleBuilding(CommandService, ModuleBuilder)
  fullName: Discord.Commands.ModuleBase<T>.OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  nameWithType.vb: ModuleBase(Of T).OnModuleBuilding(CommandService, ModuleBuilder)
  fullName.vb: Discord.Commands.ModuleBase(Of T).OnModuleBuilding(Discord.Commands.CommandService, Discord.Commands.Builders.ModuleBuilder)
  spec.csharp:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
  spec.vb:
  - uid: Discord.Commands.ModuleBase`1.OnModuleBuilding(Discord.Commands.CommandService,Discord.Commands.Builders.ModuleBuilder)
    name: OnModuleBuilding
    isExternal: true
  - name: (
  - uid: Discord.Commands.CommandService
    name: CommandService
    isExternal: true
  - name: ','
  - name: " "
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    isExternal: true
  - name: )
- uid: Discord.Commands.ModuleBase`1.Context
  commentId: P:Discord.Commands.ModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: ModuleBase<T>.Context
  fullName: Discord.Commands.ModuleBase<T>.Context
  nameWithType.vb: ModuleBase(Of T).Context
  fullName.vb: Discord.Commands.ModuleBase(Of T).Context
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.#ctor
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2__ctor_Mewdeko_Database_DbService_Fergun_Interactive_InteractiveService_
  name: UserPunishCommands2
  nameWithType: Moderation.UserPunishCommands2.UserPunishCommands2
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.UserPunishCommands2
  nameWithType.vb: Moderation.UserPunishCommands2.New
  fullName.vb: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.New
  name.vb: New
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Fergun.Interactive.InteractiveService
  commentId: T:Fergun.Interactive.InteractiveService
  parent: Fergun.Interactive
  isExternal: true
  name: InteractiveService
  nameWithType: InteractiveService
  fullName: Fergun.Interactive.InteractiveService
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Fergun.Interactive
  commentId: N:Fergun.Interactive
  isExternal: true
  name: Fergun.Interactive
  nameWithType: Fergun.Interactive
  fullName: Fergun.Interactive
  spec.csharp:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
  spec.vb:
  - uid: Fergun
    name: Fergun
    isExternal: true
  - name: .
  - uid: Fergun.Interactive
    name: Interactive
    isExternal: true
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_SetMWarnChannel_Discord_ITextChannel_
  name: SetMWarnChannel
  nameWithType: Moderation.UserPunishCommands2.SetMWarnChannel
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.SetMWarnChannel
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  isExternal: true
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Discord
  commentId: N:Discord
  isExternal: true
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarn_Discord_IGuildUser_System_String_
  name: MWarn
  nameWithType: Moderation.UserPunishCommands2.MWarn
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarn
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  isExternal: true
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnExpire_System_Int32_Mewdeko_Database_Models_WarnExpireAction_
  name: MWarnExpire
  nameWithType: Moderation.UserPunishCommands2.MWarnExpire
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnExpire
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Database.Models.WarnExpireAction
  commentId: T:Mewdeko.Database.Models.WarnExpireAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.WarnExpireAction.html
  name: WarnExpireAction
  nameWithType: WarnExpireAction
  fullName: Mewdeko.Database.Models.WarnExpireAction
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnlog_System_Int32_Discord_IGuildUser_
  name: MWarnlog
  nameWithType: Moderation.UserPunishCommands2.MWarnlog
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlog
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnlogAll
  name: MWarnlogAll
  nameWithType: Moderation.UserPunishCommands2.MWarnlogAll
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnlogAll
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnclear_Discord_IGuildUser_System_Int32_
  name: MWarnclear
  nameWithType: Moderation.UserPunishCommands2.MWarnclear
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnclear
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnPunish_System_Int32_Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_AddRole_Discord_IRole_Mewdeko_Common_TypeReaders_Models_StoopidTime_
  name: MWarnPunish
  nameWithType: Moderation.UserPunishCommands2.MWarnPunish
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunish
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
  commentId: T:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
  parent: Mewdeko.Modules.Moderation
  href: Mewdeko.Modules.Moderation.Moderation.html
  name: Moderation.UserPunishCommands2.AddRole
  nameWithType: Moderation.UserPunishCommands2.AddRole
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
  spec.csharp:
  - uid: Mewdeko.Modules.Moderation.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
    name: AddRole
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole.html
  spec.vb:
  - uid: Mewdeko.Modules.Moderation.Moderation
    name: Moderation
    href: Mewdeko.Modules.Moderation.Moderation.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2
    name: UserPunishCommands2
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html
  - name: .
  - uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole
    name: AddRole
    href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.AddRole.html
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  isExternal: true
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Mewdeko.Common.TypeReaders.Models.StoopidTime
  commentId: T:Mewdeko.Common.TypeReaders.Models.StoopidTime
  parent: Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.Common.TypeReaders.Models.StoopidTime.html
  name: StoopidTime
  nameWithType: StoopidTime
  fullName: Mewdeko.Common.TypeReaders.Models.StoopidTime
- uid: Mewdeko.Common.TypeReaders.Models
  commentId: N:Mewdeko.Common.TypeReaders.Models
  href: Mewdeko.html
  name: Mewdeko.Common.TypeReaders.Models
  nameWithType: Mewdeko.Common.TypeReaders.Models
  fullName: Mewdeko.Common.TypeReaders.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders
    name: TypeReaders
    href: Mewdeko.Common.TypeReaders.html
  - name: .
  - uid: Mewdeko.Common.TypeReaders.Models
    name: Models
    href: Mewdeko.Common.TypeReaders.Models.html
- uid: Mewdeko.Database.Models.PunishmentAction
  commentId: T:Mewdeko.Database.Models.PunishmentAction
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.PunishmentAction.html
  name: PunishmentAction
  nameWithType: PunishmentAction
  fullName: Mewdeko.Database.Models.PunishmentAction
- uid: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList*
  commentId: Overload:Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList
  href: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.html#Mewdeko_Modules_Moderation_Moderation_UserPunishCommands2_MWarnPunishList
  name: MWarnPunishList
  nameWithType: Moderation.UserPunishCommands2.MWarnPunishList
  fullName: Mewdeko.Modules.Moderation.Moderation.UserPunishCommands2.MWarnPunishList
