### YamlMime:ManagedReference
items:
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  commentId: T:Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  id: StatusRolesService
  parent: Mewdeko.Modules.StatusRoles.Services
  children:
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IDataCache)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig(System.String,System.UInt64)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig(System.UInt64)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(Mewdeko.Database.Models.StatusRolesTable)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(System.Int32)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable,System.UInt64)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable,System.String)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved(Mewdeko.Database.Models.StatusRolesTable)
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded(Mewdeko.Database.Models.StatusRolesTable)
  langs:
  - csharp
  - vb
  name: StatusRolesService
  nameWithType: StatusRolesService
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  type: Class
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: StatusRolesService
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 9
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Service responsible for managing status-based roles.
  example: []
  syntax:
    content: 'public class StatusRolesService : INService, IReadyExecutor'
    content.vb: Public Class StatusRolesService Implements INService, IReadyExecutor
  inheritance:
  - System.Object
  implements:
  - Mewdeko.Services.INService
  - Mewdeko.Common.ModuleBehaviors.IReadyExecutor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Modules.StatusRoles.Services.StatusRolesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IDataCache)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IDataCache)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Mewdeko.Database.DbService,Mewdeko.Services.Impl.EventHandler,Mewdeko.Services.IDataCache)'
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: StatusRolesService(DiscordSocketClient, DbService, EventHandler, IDataCache)
  nameWithType: StatusRolesService.StatusRolesService(DiscordSocketClient, DbService, EventHandler, IDataCache)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.StatusRolesService(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Services.IDataCache)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 23
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Initializes a new instance of the <xref href="Mewdeko.Modules.StatusRoles.Services.StatusRolesService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public StatusRolesService(DiscordSocketClient client, DbService db, EventHandler eventHandler, IDataCache cache)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The Discord socket client.
    - id: db
      type: Mewdeko.Database.DbService
      description: The database service.
    - id: eventHandler
      type: Mewdeko.Services.Impl.EventHandler
      description: The event handler.
    - id: cache
      type: Mewdeko.Services.IDataCache
      description: The data cache service.
    content.vb: Public Sub New(client As DiscordSocketClient, db As DbService, eventHandler As EventHandler, cache As IDataCache)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor*
  nameWithType.vb: StatusRolesService.New(DiscordSocketClient, DbService, EventHandler, IDataCache)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.New(Discord.WebSocket.DiscordSocketClient, Mewdeko.Database.DbService, Mewdeko.Services.Impl.EventHandler, Mewdeko.Services.IDataCache)
  name.vb: New(DiscordSocketClient, DbService, EventHandler, IDataCache)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync
  id: OnReadyAsync
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: OnReadyAsync()
  nameWithType: StatusRolesService.OnReadyAsync()
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync()
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: OnReadyAsync
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 32
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Method to be executed when the bot is ready.
  example: []
  syntax:
    content: public Task OnReadyAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Function OnReadyAsync() As Task
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync*
  implements:
  - Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig(System.String,System.UInt64)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig(System.String,System.UInt64)
  id: AddStatusRoleConfig(System.String,System.UInt64)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: AddStatusRoleConfig(string, ulong)
  nameWithType: StatusRolesService.AddStatusRoleConfig(string, ulong)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig(string, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: AddStatusRoleConfig
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 206
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Adds a new status role configuration for a guild.
  example: []
  syntax:
    content: public Task<bool> AddStatusRoleConfig(string status, ulong guildId)
    parameters:
    - id: status
      type: System.String
      description: The status for which the role should be added.
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the configuration was successfully added; otherwise, false.
    content.vb: Public Function AddStatusRoleConfig(status As String, guildId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig*
  nameWithType.vb: StatusRolesService.AddStatusRoleConfig(String, ULong)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig(String, ULong)
  name.vb: AddStatusRoleConfig(String, ULong)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(System.Int32)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(System.Int32)
  id: RemoveStatusRoleConfig(System.Int32)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: RemoveStatusRoleConfig(int)
  nameWithType: StatusRolesService.RemoveStatusRoleConfig(int)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(int)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveStatusRoleConfig
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 226
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Removes a status role configuration by its index.
  example: []
  syntax:
    content: public Task RemoveStatusRoleConfig(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the status role configuration to remove.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: Public Function RemoveStatusRoleConfig(index As Integer) As Task
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig*
  nameWithType.vb: StatusRolesService.RemoveStatusRoleConfig(Integer)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(Integer)
  name.vb: RemoveStatusRoleConfig(Integer)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(Mewdeko.Database.Models.StatusRolesTable)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(Mewdeko.Database.Models.StatusRolesTable)
  id: RemoveStatusRoleConfig(Mewdeko.Database.Models.StatusRolesTable)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: RemoveStatusRoleConfig(StatusRolesTable)
  nameWithType: StatusRolesService.RemoveStatusRoleConfig(StatusRolesTable)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig(Mewdeko.Database.Models.StatusRolesTable)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: RemoveStatusRoleConfig
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 245
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Removes a status role configuration.
  example: []
  syntax:
    content: public Task RemoveStatusRoleConfig(StatusRolesTable status)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration to remove.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: Public Function RemoveStatusRoleConfig(status As StatusRolesTable) As Task
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig*
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig(System.UInt64)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig(System.UInt64)
  id: GetStatusRoleConfig(System.UInt64)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: GetStatusRoleConfig(ulong)
  nameWithType: StatusRolesService.GetStatusRoleConfig(ulong)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig(ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: GetStatusRoleConfig
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 268
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Retrieves the status role configurations for a guild.
  example: []
  syntax:
    content: public Task<HashSet<StatusRolesTable>?> GetStatusRoleConfig(ulong guildId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The ID of the guild.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.HashSet{Mewdeko.Database.Models.StatusRolesTable}}
      description: The set of status role configurations for the guild.
    content.vb: Public Function GetStatusRoleConfig(guildId As ULong) As Task(Of HashSet(Of StatusRolesTable))
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig*
  nameWithType.vb: StatusRolesService.GetStatusRoleConfig(ULong)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig(ULong)
  name.vb: GetStatusRoleConfig(ULong)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  id: SetAddRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: SetAddRoles(StatusRolesTable, string)
  nameWithType: StatusRolesService.SetAddRoles(StatusRolesTable, string)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles(Mewdeko.Database.Models.StatusRolesTable, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetAddRoles
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 282
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Sets the roles to be added when a specific status is detected.
  example: []
  syntax:
    content: public Task<bool> SetAddRoles(StatusRolesTable status, string toAdd)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    - id: toAdd
      type: System.String
      description: The IDs of the roles to add.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the roles were successfully set; otherwise, false.
    content.vb: Public Function SetAddRoles(status As StatusRolesTable, toAdd As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles*
  nameWithType.vb: StatusRolesService.SetAddRoles(StatusRolesTable, String)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles(Mewdeko.Database.Models.StatusRolesTable, String)
  name.vb: SetAddRoles(StatusRolesTable, String)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  id: SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable,System.String)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: SetRemoveRoles(StatusRolesTable, string)
  nameWithType: StatusRolesService.SetRemoveRoles(StatusRolesTable, string)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetRemoveRoles
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 301
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Sets the roles to be removed when a specific status is detected.
  example: []
  syntax:
    content: public Task<bool> SetRemoveRoles(StatusRolesTable status, string toAdd)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    - id: toAdd
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the roles were successfully set; otherwise, false.
    content.vb: Public Function SetRemoveRoles(status As StatusRolesTable, toAdd As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles*
  nameWithType.vb: StatusRolesService.SetRemoveRoles(StatusRolesTable, String)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles(Mewdeko.Database.Models.StatusRolesTable, String)
  name.vb: SetRemoveRoles(StatusRolesTable, String)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable,System.UInt64)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable,System.UInt64)
  id: SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable,System.UInt64)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: SetStatusChannel(StatusRolesTable, ulong)
  nameWithType: StatusRolesService.SetStatusChannel(StatusRolesTable, ulong)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable, ulong)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetStatusChannel
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 320
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Sets the channel where status-based messages should be sent.
  example: []
  syntax:
    content: public Task<bool> SetStatusChannel(StatusRolesTable status, ulong channelId)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    - id: channelId
      type: System.UInt64
      description: The ID of the channel.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the channel was successfully set; otherwise, false.
    content.vb: Public Function SetStatusChannel(status As StatusRolesTable, channelId As ULong) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel*
  nameWithType.vb: StatusRolesService.SetStatusChannel(StatusRolesTable, ULong)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel(Mewdeko.Database.Models.StatusRolesTable, ULong)
  name.vb: SetStatusChannel(StatusRolesTable, ULong)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable,System.String)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable,System.String)
  id: SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable,System.String)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: SetStatusEmbed(StatusRolesTable, string)
  nameWithType: StatusRolesService.SetStatusEmbed(StatusRolesTable, string)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable, string)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: SetStatusEmbed
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 339
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Sets the embed text for status-based messages.
  example: []
  syntax:
    content: public Task<bool> SetStatusEmbed(StatusRolesTable status, string embedText)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    - id: embedText
      type: System.String
      description: The embed text to set.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the embed text was successfully set; otherwise, false.
    content.vb: Public Function SetStatusEmbed(status As StatusRolesTable, embedText As String) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed*
  nameWithType.vb: StatusRolesService.SetStatusEmbed(StatusRolesTable, String)
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed(Mewdeko.Database.Models.StatusRolesTable, String)
  name.vb: SetStatusEmbed(StatusRolesTable, String)
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded(Mewdeko.Database.Models.StatusRolesTable)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded(Mewdeko.Database.Models.StatusRolesTable)
  id: ToggleRemoveAdded(Mewdeko.Database.Models.StatusRolesTable)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: ToggleRemoveAdded(StatusRolesTable)
  nameWithType: StatusRolesService.ToggleRemoveAdded(StatusRolesTable)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded(Mewdeko.Database.Models.StatusRolesTable)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleRemoveAdded
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 357
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Toggles whether to remove roles that were added based on status.
  example: []
  syntax:
    content: public Task<bool> ToggleRemoveAdded(StatusRolesTable status)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the toggle was successful; otherwise, false.
    content.vb: Public Function ToggleRemoveAdded(status As StatusRolesTable) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded*
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved(Mewdeko.Database.Models.StatusRolesTable)
  commentId: M:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved(Mewdeko.Database.Models.StatusRolesTable)
  id: ToggleAddRemoved(Mewdeko.Database.Models.StatusRolesTable)
  parent: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  langs:
  - csharp
  - vb
  name: ToggleAddRemoved(StatusRolesTable)
  nameWithType: StatusRolesService.ToggleAddRemoved(StatusRolesTable)
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved(Mewdeko.Database.Models.StatusRolesTable)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: ToggleAddRemoved
    path: src/Mewdeko/Modules/StatusRoles/Services/StatusRolesService.cs
    startLine: 375
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Modules.StatusRoles.Services
  summary: Toggles whether to add roles that were removed based on status.
  example: []
  syntax:
    content: public Task<bool> ToggleAddRemoved(StatusRolesTable status)
    parameters:
    - id: status
      type: Mewdeko.Database.Models.StatusRolesTable
      description: The status role configuration.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the toggle was successful; otherwise, false.
    content.vb: Public Function ToggleAddRemoved(status As StatusRolesTable) As Task(Of Boolean)
  overload: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved*
references:
- uid: Mewdeko.Modules.StatusRoles.Services
  commentId: N:Mewdeko.Modules.StatusRoles.Services
  href: Mewdeko.html
  name: Mewdeko.Modules.StatusRoles.Services
  nameWithType: Mewdeko.Modules.StatusRoles.Services
  fullName: Mewdeko.Modules.StatusRoles.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.StatusRoles
    name: StatusRoles
    href: Mewdeko.Modules.StatusRoles.html
  - name: .
  - uid: Mewdeko.Modules.StatusRoles.Services
    name: Services
    href: Mewdeko.Modules.StatusRoles.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Modules
    name: Modules
    href: Mewdeko.Modules.html
  - name: .
  - uid: Mewdeko.Modules.StatusRoles
    name: StatusRoles
    href: Mewdeko.Modules.StatusRoles.html
  - name: .
  - uid: Mewdeko.Modules.StatusRoles.Services
    name: Services
    href: Mewdeko.Modules.StatusRoles.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Mewdeko.Services.INService
  commentId: T:Mewdeko.Services.INService
  parent: Mewdeko.Services
  href: Mewdeko.Services.INService.html
  name: INService
  nameWithType: INService
  fullName: Mewdeko.Services.INService
- uid: Mewdeko.Common.ModuleBehaviors.IReadyExecutor
  commentId: T:Mewdeko.Common.ModuleBehaviors.IReadyExecutor
  parent: Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.html
  name: IReadyExecutor
  nameWithType: IReadyExecutor
  fullName: Mewdeko.Common.ModuleBehaviors.IReadyExecutor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<StatusRolesService>(StatusRolesService, string)
  nameWithType: Extensions.ThrowIfNull<StatusRolesService>(StatusRolesService, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Modules.StatusRoles.Services.StatusRolesService>(Mewdeko.Modules.StatusRoles.Services.StatusRolesService, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of StatusRolesService)(StatusRolesService, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Modules.StatusRoles.Services.StatusRolesService)(Mewdeko.Modules.StatusRoles.Services.StatusRolesService, String)
  name.vb: ThrowIfNull(Of StatusRolesService)(StatusRolesService, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.StatusRoles.Services.StatusRolesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
    name: StatusRolesService
    href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
    name: StatusRolesService
    href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Modules.StatusRoles.Services.StatusRolesService,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
    name: StatusRolesService
    href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html
  - name: )
  - name: (
  - uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
    name: StatusRolesService
    href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Services
  commentId: N:Mewdeko.Services
  href: Mewdeko.html
  name: Mewdeko.Services
  nameWithType: Mewdeko.Services
  fullName: Mewdeko.Services
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
- uid: Mewdeko.Common.ModuleBehaviors
  commentId: N:Mewdeko.Common.ModuleBehaviors
  href: Mewdeko.html
  name: Mewdeko.Common.ModuleBehaviors
  nameWithType: Mewdeko.Common.ModuleBehaviors
  fullName: Mewdeko.Common.ModuleBehaviors
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.ModuleBehaviors
    name: ModuleBehaviors
    href: Mewdeko.Common.ModuleBehaviors.html
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  commentId: T:Mewdeko.Modules.StatusRoles.Services.StatusRolesService
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html
  name: StatusRolesService
  nameWithType: StatusRolesService
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.#ctor
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService__ctor_Discord_WebSocket_DiscordSocketClient_Mewdeko_Database_DbService_Mewdeko_Services_Impl_EventHandler_Mewdeko_Services_IDataCache_
  name: StatusRolesService
  nameWithType: StatusRolesService.StatusRolesService
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.StatusRolesService
  nameWithType.vb: StatusRolesService.New
  fullName.vb: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.New
  name.vb: New
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  isExternal: true
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Mewdeko.Database.DbService
  commentId: T:Mewdeko.Database.DbService
  parent: Mewdeko.Database
  href: Mewdeko.Database.DbService.html
  name: DbService
  nameWithType: DbService
  fullName: Mewdeko.Database.DbService
- uid: Mewdeko.Services.Impl.EventHandler
  commentId: T:Mewdeko.Services.Impl.EventHandler
  parent: Mewdeko.Services.Impl
  href: Mewdeko.Services.Impl.EventHandler.html
  name: EventHandler
  nameWithType: EventHandler
  fullName: Mewdeko.Services.Impl.EventHandler
- uid: Mewdeko.Services.IDataCache
  commentId: T:Mewdeko.Services.IDataCache
  parent: Mewdeko.Services
  href: Mewdeko.Services.IDataCache.html
  name: IDataCache
  nameWithType: IDataCache
  fullName: Mewdeko.Services.IDataCache
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  isExternal: true
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
  spec.csharp:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
  spec.vb:
  - uid: Discord
    name: Discord
    isExternal: true
  - name: .
  - uid: Discord.WebSocket
    name: WebSocket
    isExternal: true
- uid: Mewdeko.Database
  commentId: N:Mewdeko.Database
  href: Mewdeko.html
  name: Mewdeko.Database
  nameWithType: Mewdeko.Database
  fullName: Mewdeko.Database
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
- uid: Mewdeko.Services.Impl
  commentId: N:Mewdeko.Services.Impl
  href: Mewdeko.html
  name: Mewdeko.Services.Impl
  nameWithType: Mewdeko.Services.Impl
  fullName: Mewdeko.Services.Impl
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Services
    name: Services
    href: Mewdeko.Services.html
  - name: .
  - uid: Mewdeko.Services.Impl
    name: Impl
    href: Mewdeko.Services.Impl.html
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_OnReadyAsync
  name: OnReadyAsync
  nameWithType: StatusRolesService.OnReadyAsync
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.OnReadyAsync
- uid: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync
  commentId: M:Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync
  parent: Mewdeko.Common.ModuleBehaviors.IReadyExecutor
  href: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.html#Mewdeko_Common_ModuleBehaviors_IReadyExecutor_OnReadyAsync
  name: OnReadyAsync()
  nameWithType: IReadyExecutor.OnReadyAsync()
  fullName: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync()
  spec.csharp:
  - uid: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync
    name: OnReadyAsync
    href: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.html#Mewdeko_Common_ModuleBehaviors_IReadyExecutor_OnReadyAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.OnReadyAsync
    name: OnReadyAsync
    href: Mewdeko.Common.ModuleBehaviors.IReadyExecutor.html#Mewdeko_Common_ModuleBehaviors_IReadyExecutor_OnReadyAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_AddStatusRoleConfig_System_String_System_UInt64_
  name: AddStatusRoleConfig
  nameWithType: StatusRolesService.AddStatusRoleConfig
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.AddStatusRoleConfig
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_RemoveStatusRoleConfig_System_Int32_
  name: RemoveStatusRoleConfig
  nameWithType: StatusRolesService.RemoveStatusRoleConfig
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.RemoveStatusRoleConfig
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Mewdeko.Database.Models.StatusRolesTable
  commentId: T:Mewdeko.Database.Models.StatusRolesTable
  parent: Mewdeko.Database.Models
  href: Mewdeko.Database.Models.StatusRolesTable.html
  name: StatusRolesTable
  nameWithType: StatusRolesTable
  fullName: Mewdeko.Database.Models.StatusRolesTable
- uid: Mewdeko.Database.Models
  commentId: N:Mewdeko.Database.Models
  href: Mewdeko.html
  name: Mewdeko.Database.Models
  nameWithType: Mewdeko.Database.Models
  fullName: Mewdeko.Database.Models
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Database
    name: Database
    href: Mewdeko.Database.html
  - name: .
  - uid: Mewdeko.Database.Models
    name: Models
    href: Mewdeko.Database.Models.html
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_GetStatusRoleConfig_System_UInt64_
  name: GetStatusRoleConfig
  nameWithType: StatusRolesService.GetStatusRoleConfig
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.GetStatusRoleConfig
- uid: System.Threading.Tasks.Task{System.Collections.Generic.HashSet{Mewdeko.Database.Models.StatusRolesTable}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.HashSet{Mewdeko.Database.Models.StatusRolesTable}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HashSet<StatusRolesTable>>
  nameWithType: Task<HashSet<StatusRolesTable>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.HashSet<Mewdeko.Database.Models.StatusRolesTable>>
  nameWithType.vb: Task(Of HashSet(Of StatusRolesTable))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.HashSet(Of Mewdeko.Database.Models.StatusRolesTable))
  name.vb: Task(Of HashSet(Of StatusRolesTable))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Database.Models.StatusRolesTable
    name: StatusRolesTable
  - name: )
  - name: )
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_SetAddRoles_Mewdeko_Database_Models_StatusRolesTable_System_String_
  name: SetAddRoles
  nameWithType: StatusRolesService.SetAddRoles
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetAddRoles
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_SetRemoveRoles_Mewdeko_Database_Models_StatusRolesTable_System_String_
  name: SetRemoveRoles
  nameWithType: StatusRolesService.SetRemoveRoles
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetRemoveRoles
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_SetStatusChannel_Mewdeko_Database_Models_StatusRolesTable_System_UInt64_
  name: SetStatusChannel
  nameWithType: StatusRolesService.SetStatusChannel
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusChannel
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_SetStatusEmbed_Mewdeko_Database_Models_StatusRolesTable_System_String_
  name: SetStatusEmbed
  nameWithType: StatusRolesService.SetStatusEmbed
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.SetStatusEmbed
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_ToggleRemoveAdded_Mewdeko_Database_Models_StatusRolesTable_
  name: ToggleRemoveAdded
  nameWithType: StatusRolesService.ToggleRemoveAdded
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleRemoveAdded
- uid: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved*
  commentId: Overload:Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved
  href: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.html#Mewdeko_Modules_StatusRoles_Services_StatusRolesService_ToggleAddRemoved_Mewdeko_Database_Models_StatusRolesTable_
  name: ToggleAddRemoved
  nameWithType: StatusRolesService.ToggleAddRemoved
  fullName: Mewdeko.Modules.StatusRoles.Services.StatusRolesService.ToggleAddRemoved
