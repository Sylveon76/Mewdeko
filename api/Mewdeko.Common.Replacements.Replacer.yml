### YamlMime:ManagedReference
items:
- uid: Mewdeko.Common.Replacements.Replacer
  commentId: T:Mewdeko.Common.Replacements.Replacer
  id: Replacer
  parent: Mewdeko.Common.Replacements
  children:
  - Mewdeko.Common.Replacements.Replacer.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}})
  - Mewdeko.Common.Replacements.Replacer.Replace(System.String)
  langs:
  - csharp
  - vb
  name: Replacer
  nameWithType: Replacer
  fullName: Mewdeko.Common.Replacements.Replacer
  type: Class
  source:
    remote:
      path: src/Mewdeko/Common/Replacements/Replacer.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Replacer
    path: src/Mewdeko/Common/Replacements/Replacer.cs
    startLine: 7
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Replacements
  summary: Class that replaces placeholders in text with their corresponding values.
  example: []
  syntax:
    content: public class Replacer
    content.vb: Public Class Replacer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Mewdeko.Common.Replacements.Replacer.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
- uid: Mewdeko.Common.Replacements.Replacer.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}})
  commentId: M:Mewdeko.Common.Replacements.Replacer.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}})'
  parent: Mewdeko.Common.Replacements.Replacer
  langs:
  - csharp
  - vb
  name: Replacer(IEnumerable<(string, Func<string>)>, IEnumerable<(Regex, Func<Match, string>)>)
  nameWithType: Replacer.Replacer(IEnumerable<(string, Func<string>)>, IEnumerable<(Regex, Func<Match, string>)>)
  fullName: Mewdeko.Common.Replacements.Replacer.Replacer(System.Collections.Generic.IEnumerable<(string, System.Func<string>)>, System.Collections.Generic.IEnumerable<(System.Text.RegularExpressions.Regex, System.Func<System.Text.RegularExpressions.Match, string>)>)
  type: Constructor
  source:
    remote:
      path: src/Mewdeko/Common/Replacements/Replacer.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: .ctor
    path: src/Mewdeko/Common/Replacements/Replacer.cs
    startLine: 24
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Replacements
  summary: Initializes a new instance of the Replacer class.
  example: []
  syntax:
    content: public Replacer(IEnumerable<(string, Func<string>)> replacements, IEnumerable<(Regex, Func<Match, string>)> regex)
    parameters:
    - id: replacements
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}}
      description: Collection of placeholder keys and their corresponding replacement functions.
    - id: regex
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}}
      description: Collection of regular expressions and their corresponding replacement functions.
    content.vb: Public Sub New(replacements As IEnumerable(Of (String, Func(Of String))), regex As IEnumerable(Of (Regex, Func(Of Match, String))))
  overload: Mewdeko.Common.Replacements.Replacer.#ctor*
  nameWithType.vb: Replacer.New(IEnumerable(Of (String, Func(Of String))), IEnumerable(Of (Regex, Func(Of Match, String))))
  fullName.vb: Mewdeko.Common.Replacements.Replacer.New(System.Collections.Generic.IEnumerable(Of (String, System.Func(Of String))), System.Collections.Generic.IEnumerable(Of (System.Text.RegularExpressions.Regex, System.Func(Of System.Text.RegularExpressions.Match, String))))
  name.vb: New(IEnumerable(Of (String, Func(Of String))), IEnumerable(Of (Regex, Func(Of Match, String))))
- uid: Mewdeko.Common.Replacements.Replacer.Replace(System.String)
  commentId: M:Mewdeko.Common.Replacements.Replacer.Replace(System.String)
  id: Replace(System.String)
  parent: Mewdeko.Common.Replacements.Replacer
  langs:
  - csharp
  - vb
  name: Replace(string?)
  nameWithType: Replacer.Replace(string?)
  fullName: Mewdeko.Common.Replacements.Replacer.Replace(string?)
  type: Method
  source:
    remote:
      path: src/Mewdeko/Common/Replacements/Replacer.cs
      branch: psqldeko
      repo: https://github.com/Sylveon76/Mewdeko.git
    id: Replace
    path: src/Mewdeko/Common/Replacements/Replacer.cs
    startLine: 36
  assemblies:
  - Mewdeko
  namespace: Mewdeko.Common.Replacements
  summary: Replaces placeholders in the input string with their corresponding values.
  example: []
  syntax:
    content: public string? Replace(string? input)
    parameters:
    - id: input
      type: System.String
      description: The input string.
    return:
      type: System.String
      description: The input string with placeholders replaced with their corresponding values.
    content.vb: Public Function Replace(input As String) As String
  overload: Mewdeko.Common.Replacements.Replacer.Replace*
  nameWithType.vb: Replacer.Replace(String)
  fullName.vb: Mewdeko.Common.Replacements.Replacer.Replace(String)
  name.vb: Replace(String)
references:
- uid: Mewdeko.Common.Replacements
  commentId: N:Mewdeko.Common.Replacements
  href: Mewdeko.html
  name: Mewdeko.Common.Replacements
  nameWithType: Mewdeko.Common.Replacements
  fullName: Mewdeko.Common.Replacements
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Replacements
    name: Replacements
    href: Mewdeko.Common.Replacements.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Common
    name: Common
    href: Mewdeko.Common.html
  - name: .
  - uid: Mewdeko.Common.Replacements
    name: Replacements
    href: Mewdeko.Common.Replacements.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Mewdeko.Common.Replacements.Replacer.Mewdeko.Extensions.Extensions.ThrowIfNull``1(System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  parent: Mewdeko.Extensions.Extensions
  definition: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<Replacer>(Replacer, string)
  nameWithType: Extensions.ThrowIfNull<Replacer>(Replacer, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<Mewdeko.Common.Replacements.Replacer>(Mewdeko.Common.Replacements.Replacer, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of Replacer)(Replacer, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of Mewdeko.Common.Replacements.Replacer)(Mewdeko.Common.Replacements.Replacer, String)
  name.vb: ThrowIfNull(Of Replacer)(Replacer, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.Replacements.Replacer,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - uid: Mewdeko.Common.Replacements.Replacer
    name: Replacer
    href: Mewdeko.Common.Replacements.Replacer.html
  - name: '>'
  - name: (
  - uid: Mewdeko.Common.Replacements.Replacer
    name: Replacer
    href: Mewdeko.Common.Replacements.Replacer.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(Mewdeko.Common.Replacements.Replacer,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - uid: Mewdeko.Common.Replacements.Replacer
    name: Replacer
    href: Mewdeko.Common.Replacements.Replacer.html
  - name: )
  - name: (
  - uid: Mewdeko.Common.Replacements.Replacer
    name: Replacer
    href: Mewdeko.Common.Replacements.Replacer.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  commentId: M:Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
  isExternal: true
  href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  name: ThrowIfNull<T>(T, string)
  nameWithType: Extensions.ThrowIfNull<T>(T, string)
  fullName: Mewdeko.Extensions.Extensions.ThrowIfNull<T>(T, string)
  nameWithType.vb: Extensions.ThrowIfNull(Of T)(T, String)
  fullName.vb: Mewdeko.Extensions.Extensions.ThrowIfNull(Of T)(T, String)
  name.vb: ThrowIfNull(Of T)(T, String)
  spec.csharp:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Mewdeko.Extensions.Extensions.ThrowIfNull``1(``0,System.String)
    name: ThrowIfNull
    href: Mewdeko.Extensions.Extensions.html#Mewdeko_Extensions_Extensions_ThrowIfNull__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Mewdeko.Extensions.Extensions
  commentId: T:Mewdeko.Extensions.Extensions
  parent: Mewdeko.Extensions
  href: Mewdeko.Extensions.Extensions.html
  name: Extensions
  nameWithType: Extensions
  fullName: Mewdeko.Extensions.Extensions
- uid: Mewdeko.Extensions
  commentId: N:Mewdeko.Extensions
  href: Mewdeko.html
  name: Mewdeko.Extensions
  nameWithType: Mewdeko.Extensions
  fullName: Mewdeko.Extensions
  spec.csharp:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
  spec.vb:
  - uid: Mewdeko
    name: Mewdeko
    href: Mewdeko.html
  - name: .
  - uid: Mewdeko.Extensions
    name: Extensions
    href: Mewdeko.Extensions.html
- uid: Mewdeko.Common.Replacements.Replacer.#ctor*
  commentId: Overload:Mewdeko.Common.Replacements.Replacer.#ctor
  href: Mewdeko.Common.Replacements.Replacer.html#Mewdeko_Common_Replacements_Replacer__ctor_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_Func_System_String____System_Collections_Generic_IEnumerable_System_ValueTuple_System_Text_RegularExpressions_Regex_System_Func_System_Text_RegularExpressions_Match_System_String____
  name: Replacer
  nameWithType: Replacer.Replacer
  fullName: Mewdeko.Common.Replacements.Replacer.Replacer
  nameWithType.vb: Replacer.New
  fullName.vb: Mewdeko.Common.Replacements.Replacer.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Func{System.String}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(string Name, Func<string> Func)>
  nameWithType: IEnumerable<(string Name, Func<string> Func)>
  fullName: System.Collections.Generic.IEnumerable<(string Name, System.Func<string> Func)>
  nameWithType.vb: IEnumerable(Of (Name As String, Func As Func(Of String)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Name As String, Func As System.Func(Of String)))
  name.vb: IEnumerable(Of (Name As String, Func As Func(Of String)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.Func{System.String}}.Name
    name: Name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.func-system.string--.name
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.String,System.Func{System.String}}.Func
    name: Func
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.func-system.string--.func
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.Func{System.String}}.Name
    name: Name
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.func-system.string--.name
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Func{System.String}}.Func
    name: Func
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.func-system.string--.func
  - name: " "
  - name: As
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Text.RegularExpressions.Regex,System.Func{System.Text.RegularExpressions.Match,System.String}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Regex, Func<Match, string>)>
  nameWithType: IEnumerable<(Regex, Func<Match, string>)>
  fullName: System.Collections.Generic.IEnumerable<(System.Text.RegularExpressions.Regex, System.Func<System.Text.RegularExpressions.Match, string>)>
  nameWithType.vb: IEnumerable(Of (Regex, Func(Of Match, String)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (System.Text.RegularExpressions.Regex, System.Func(Of System.Text.RegularExpressions.Match, String)))
  name.vb: IEnumerable(Of (Regex, Func(Of Match, String)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Text.RegularExpressions.Match
    name: Match
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.match
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.RegularExpressions.Match
    name: Match
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.match
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Mewdeko.Common.Replacements.Replacer.Replace*
  commentId: Overload:Mewdeko.Common.Replacements.Replacer.Replace
  href: Mewdeko.Common.Replacements.Replacer.html#Mewdeko_Common_Replacements_Replacer_Replace_System_String_
  name: Replace
  nameWithType: Replacer.Replace
  fullName: Mewdeko.Common.Replacements.Replacer.Replace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
